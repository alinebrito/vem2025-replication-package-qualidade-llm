[
  {
    "stat": {
      "question_id": 1,
      "question__article__live": true,
      "question__article__slug": "two-sum",
      "question__article__has_video_solution": true,
      "question__title": "Two Sum",
      "question__title_slug": "two-sum",
      "question__hide": false,
      "total_acs": 14327703,
      "total_submitted": 26747968,
      "frontend_question_id": 1,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/two-sum",
      "questionId": "1",
      "questionFrontendId": "1",
      "questionTitle": "Two Sum",
      "titleSlug": "two-sum",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code>&nbsp;and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n\n<p>You can return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:&nbsp;</strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>)</code><font face=\"monospace\">&nbsp;</font>time complexity?",
      "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        }
      ],
      "hints": [
        "A really brute force way would be to search for all possible pairs of numbers but that would be too slow. Again, it's best to try out brute force solutions for just for completeness. It is from these brute force solutions that you can come up with optimizations.",
        "So, if we fix one of the numbers, say <code>x</code>, we have to scan the entire array to find the next number <code>y</code> which is <code>value - x</code> where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "7",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "companyTagStats": null,
      "likes": 57813,
      "dislikes": 2035,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Number of K-Sum Pairs\", \"titleSlug\": \"max-number-of-k-sum-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs of Strings With Concatenation Equal to Target\", \"titleSlug\": \"number-of-pairs-of-strings-with-concatenation-equal-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All K-Distant Indices in an Array\", \"titleSlug\": \"find-all-k-distant-indices-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Excellent Pairs\", \"titleSlug\": \"number-of-excellent-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check Distances Between Same Letters\", \"titleSlug\": \"check-distances-between-same-letters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Positive Integer That Exists With Its Negative\", \"titleSlug\": \"largest-positive-integer-that-exists-with-its-negative\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Averages\", \"titleSlug\": \"number-of-distinct-averages\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Whose Sum is Less than Target\", \"titleSlug\": \"count-pairs-whose-sum-is-less-than-target\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485736,
      "commentCount": 1470,
      "topLevelCommentCount": 978
    },
    "classAndMethodDefinition": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:"
  },
  {
    "stat": {
      "question_id": 3,
      "question__article__live": true,
      "question__article__slug": "longest-substring-without-repeating-characters",
      "question__article__has_video_solution": true,
      "question__title": "Longest Substring Without Repeating Characters",
      "question__title_slug": "longest-substring-without-repeating-characters",
      "question__hide": false,
      "total_acs": 6223431,
      "total_submitted": 17614430,
      "frontend_question_id": 3,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
      "questionId": "3",
      "questionFrontendId": "3",
      "questionTitle": "Longest Substring Without Repeating Characters",
      "titleSlug": "longest-substring-without-repeating-characters",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, find the length of the <strong>longest</strong> <span data-keyword=\"substring-nonempty\"><strong>substring</strong></span> without repeating characters.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcabcbb&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is &quot;abc&quot;, with the length of 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bbbbb&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The answer is &quot;b&quot;, with the length of 1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;pwwkew&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is &quot;wke&quot;, with the length of 3.\nNotice that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of English letters, digits, symbols and spaces.</li>\n</ul>\n",
      "exampleTestcases": "\"abcabcbb\"\n\"bbbbb\"\n\"pwwkew\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [
        "Generate all possible substrings & check for each substring if it's valid and keep updating maxLen accordingly."
      ],
      "solution": {
        "id": "36",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 40065,
      "dislikes": 1920,
      "similarQuestions": "[{\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarrays with K Different Integers\", \"titleSlug\": \"subarrays-with-k-different-integers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Erasure Value\", \"titleSlug\": \"maximum-erasure-value\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Equal Count Substrings\", \"titleSlug\": \"number-of-equal-count-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Consecutive Cards to Pick Up\", \"titleSlug\": \"minimum-consecutive-cards-to-pick-up\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Nice Subarray\", \"titleSlug\": \"longest-nice-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Optimal Partition of String\", \"titleSlug\": \"optimal-partition-of-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Complete Subarrays in an Array\", \"titleSlug\": \"count-complete-subarrays-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Longest Special Substring That Occurs Thrice II\", \"titleSlug\": \"find-longest-special-substring-that-occurs-thrice-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Longest Special Substring That Occurs Thrice I\", \"titleSlug\": \"find-longest-special-substring-that-occurs-thrice-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485739,
      "commentCount": 687,
      "topLevelCommentCount": 385
    },
    "classAndMethodDefinition": "class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:"
  },
  {
    "stat": {
      "question_id": 20,
      "question__article__live": true,
      "question__article__slug": "valid-parentheses",
      "question__article__has_video_solution": true,
      "question__title": "Valid Parentheses",
      "question__title_slug": "valid-parentheses",
      "question__hide": false,
      "total_acs": 5006290,
      "total_submitted": 12230651,
      "frontend_question_id": 20,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-parentheses",
      "questionId": "20",
      "questionFrontendId": "20",
      "questionTitle": "Valid Parentheses",
      "titleSlug": "valid-parentheses",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> containing just the characters <code>&#39;(&#39;</code>, <code>&#39;)&#39;</code>, <code>&#39;{&#39;</code>, <code>&#39;}&#39;</code>, <code>&#39;[&#39;</code> and <code>&#39;]&#39;</code>, determine if the input string is valid.</p>\n\n<p>An input string is valid if:</p>\n\n<ol>\n\t<li>Open brackets must be closed by the same type of brackets.</li>\n\t<li>Open brackets must be closed in the correct order.</li>\n\t<li>Every close bracket has a corresponding open bracket of the same type.</li>\n</ol>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;()&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;()[]{}&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;(]&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;([])&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of parentheses only <code>&#39;()[]{}&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"()\"\n\"()[]{}\"\n\"(]\"\n\"([])\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [
        "Use a stack of characters.",
        "When you encounter an opening bracket, push it to the top of the stack.",
        "When you encounter a closing bracket, check if the top of the stack was the opening for it. If yes, pop it from the stack. Otherwise, return false."
      ],
      "solution": {
        "id": "570",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 24285,
      "dislikes": 1798,
      "similarQuestions": "[{\"title\": \"Generate Parentheses\", \"titleSlug\": \"generate-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Valid Parentheses\", \"titleSlug\": \"longest-valid-parentheses\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Remove Invalid Parentheses\", \"titleSlug\": \"remove-invalid-parentheses\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Check If Word Is Valid After Substitutions\", \"titleSlug\": \"check-if-word-is-valid-after-substitutions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check if a Parentheses String Can Be Valid\", \"titleSlug\": \"check-if-a-parentheses-string-can-be-valid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Move Pieces to Obtain a String\", \"titleSlug\": \"move-pieces-to-obtain-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485757,
      "commentCount": 608,
      "topLevelCommentCount": 397
    },
    "classAndMethodDefinition": "class Solution(object):\n    def isValid(self, s):"
  },
  {
    "stat": {
      "question_id": 7,
      "question__article__live": true,
      "question__article__slug": "reverse-integer",
      "question__article__has_video_solution": true,
      "question__title": "Reverse Integer",
      "question__title_slug": "reverse-integer",
      "question__hide": false,
      "total_acs": 3456871,
      "total_submitted": 11894209,
      "frontend_question_id": 7,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-integer",
      "questionId": "7",
      "questionFrontendId": "7",
      "questionTitle": "Reverse Integer",
      "titleSlug": "reverse-integer",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a signed 32-bit integer <code>x</code>, return <code>x</code><em> with its digits reversed</em>. If reversing <code>x</code> causes the value to go outside the signed 32-bit integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then return <code>0</code>.</p>\n\n<p><strong>Assume the environment does not allow you to store 64-bit integers (signed or unsigned).</strong></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 123\n<strong>Output:</strong> 321\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = -123\n<strong>Output:</strong> -321\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 120\n<strong>Output:</strong> 21\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= x &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "123\n-123\n120",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "485",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13240,
      "dislikes": 13586,
      "similarQuestions": "[{\"title\": \"String to Integer (atoi)\", \"titleSlug\": \"string-to-integer-atoi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Bits\", \"titleSlug\": \"reverse-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"A Number After a Double Reversal\", \"titleSlug\": \"a-number-after-a-double-reversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Number of Distinct Integers After Reverse Operations\", \"titleSlug\": \"count-number-of-distinct-integers-after-reverse-operations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485744,
      "commentCount": 600,
      "topLevelCommentCount": 394
    },
    "classAndMethodDefinition": "class Solution:\n    def reverse(self, x: int) -> int:"
  },
  {
    "stat": {
      "question_id": 2,
      "question__article__live": true,
      "question__article__slug": "add-two-numbers",
      "question__article__has_video_solution": true,
      "question__title": "Add Two Numbers",
      "question__title_slug": "add-two-numbers",
      "question__hide": false,
      "total_acs": 4905608,
      "total_submitted": 11173587,
      "frontend_question_id": 2,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/add-two-numbers",
      "questionId": "2",
      "questionFrontendId": "2",
      "questionTitle": "Add Two Numbers",
      "titleSlug": "add-two-numbers",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given two <strong>non-empty</strong> linked lists representing two non-negative integers. The digits are stored in <strong>reverse order</strong>, and each of their nodes contains a single digit. Add the two numbers and return the sum&nbsp;as a linked list.</p>\n\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg\" style=\"width: 483px; height: 342px;\" />\n<pre>\n<strong>Input:</strong> l1 = [2,4,3], l2 = [5,6,4]\n<strong>Output:</strong> [7,0,8]\n<strong>Explanation:</strong> 342 + 465 = 807.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> l1 = [0], l2 = [0]\n<strong>Output:</strong> [0]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n<strong>Output:</strong> [8,9,9,9,0,0,0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in each linked list is in the range <code>[1, 100]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n\t<li>It is guaranteed that the list represents a number that does not have leading zeros.</li>\n</ul>\n",
      "exampleTestcases": "[2,4,3]\n[5,6,4]\n[0]\n[0]\n[9,9,9,9,9,9,9]\n[9,9,9,9]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "30",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 31536,
      "dislikes": 6312,
      "similarQuestions": "[{\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Two Integers\", \"titleSlug\": \"sum-of-two-integers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Two Numbers II\", \"titleSlug\": \"add-two-numbers-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add to Array-Form of Integer\", \"titleSlug\": \"add-to-array-form-of-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Two Polynomials Represented as Linked Lists\", \"titleSlug\": \"add-two-polynomials-represented-as-linked-lists\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Double a Number Represented as a Linked List\", \"titleSlug\": \"double-a-number-represented-as-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485738,
      "commentCount": 1058,
      "topLevelCommentCount": 654
    },
    "classAndMethodDefinition": "class Solution:\n    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:"
  },
  {
    "stat": {
      "question_id": 15,
      "question__article__live": true,
      "question__article__slug": "3sum",
      "question__article__has_video_solution": true,
      "question__title": "3Sum",
      "question__title_slug": "3sum",
      "question__hide": false,
      "total_acs": 3849679,
      "total_submitted": 10930743,
      "frontend_question_id": 15,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/3sum",
      "questionId": "15",
      "questionFrontendId": "15",
      "questionTitle": "3Sum",
      "titleSlug": "3sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array nums, return all the triplets <code>[nums[i], nums[j], nums[k]]</code> such that <code>i != j</code>, <code>i != k</code>, and <code>j != k</code>, and <code>nums[i] + nums[j] + nums[k] == 0</code>.</p>\n\n<p>Notice that the solution set must not contain duplicate triplets.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,0,1,2,-1,-4]\n<strong>Output:</strong> [[-1,-1,2],[-1,0,1]]\n<strong>Explanation:</strong> \nnums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.\nnums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.\nnums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.\nThe distinct triplets are [-1,0,1] and [-1,-1,2].\nNotice that the order of the output and the order of the triplets does not matter.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,1]\n<strong>Output:</strong> []\n<strong>Explanation:</strong> The only possible triplet does not sum up to 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,0]\n<strong>Output:</strong> [[0,0,0]]\n<strong>Explanation:</strong> The only possible triplet sums up to 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;= 3000</code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[-1,0,1,2,-1,-4]\n[0,1,1]\n[0,0,0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "So, we essentially need to find three numbers x, y, and z such that they add up to the given value. If we fix one of the numbers say x, we are left with the two-sum problem at hand!",
        "For the two-sum problem, if we fix one of the numbers, say x, we have to scan the entire array to find the next number y, which is value - x where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought for two-sum is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "938",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 31188,
      "dislikes": 2905,
      "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"3Sum Closest\", \"titleSlug\": \"3sum-closest\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"3Sum Smaller\", \"titleSlug\": \"3sum-smaller\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Sum of Mountain Triplets I\", \"titleSlug\": \"minimum-sum-of-mountain-triplets-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Sum of Mountain Triplets II\", \"titleSlug\": \"minimum-sum-of-mountain-triplets-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485752,
      "commentCount": 721,
      "topLevelCommentCount": 434
    },
    "classAndMethodDefinition": "def threeSum(self, nums: List[int]) -> List[List[int]]:\n"
  },
  {
    "stat": {
      "question_id": 5,
      "question__article__live": true,
      "question__article__slug": "longest-palindromic-substring",
      "question__article__has_video_solution": true,
      "question__title": "Longest Palindromic Substring",
      "question__title_slug": "longest-palindromic-substring",
      "question__hide": false,
      "total_acs": 3269500,
      "total_submitted": 9522404,
      "frontend_question_id": 5,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-palindromic-substring",
      "questionId": "5",
      "questionFrontendId": "5",
      "questionTitle": "Longest Palindromic Substring",
      "titleSlug": "longest-palindromic-substring",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, return <em>the longest</em> <span data-keyword=\"palindromic-string\"><em>palindromic</em></span> <span data-keyword=\"substring-nonempty\"><em>substring</em></span> in <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;babad&quot;\n<strong>Output:</strong> &quot;bab&quot;\n<strong>Explanation:</strong> &quot;aba&quot; is also a valid answer.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cbbd&quot;\n<strong>Output:</strong> &quot;bb&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consist of only digits and English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"babad\"\n\"cbbd\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "How can we reuse a previously computed palindrome to compute a larger palindrome?",
        "If “aba” is a palindrome, is “xabax” a palindrome? Similarly is “xabay” a palindrome?",
        "Complexity based hint:</br>\r\nIf we use brute-force and check whether for every start and end position a substring is a palindrome we have O(n^2) start - end pairs and O(n) palindromic checks. Can we reduce the time for palindromic checks to O(1) by reusing some previous computation."
      ],
      "solution": {
        "id": "1938",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 29564,
      "dislikes": 1806,
      "similarQuestions": "[{\"title\": \"Shortest Palindrome\", \"titleSlug\": \"shortest-palindrome\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation\", \"titleSlug\": \"palindrome-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Palindrome Pairs\", \"titleSlug\": \"palindrome-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindromic Substrings\", \"titleSlug\": \"palindromic-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Non-overlapping Palindrome Substrings\", \"titleSlug\": \"maximum-number-of-non-overlapping-palindrome-substrings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485741,
      "commentCount": 548,
      "topLevelCommentCount": 332
    },
    "classAndMethodDefinition": "def longestPalindrome(self, s: str) -> str:\n        if len(s) <= 1:"
  },
  {
    "stat": {
      "question_id": 121,
      "question__article__live": true,
      "question__article__slug": "best-time-to-buy-and-sell-stock",
      "question__article__has_video_solution": true,
      "question__title": "Best Time to Buy and Sell Stock",
      "question__title_slug": "best-time-to-buy-and-sell-stock",
      "question__hide": false,
      "total_acs": 5132094,
      "total_submitted": 9492186,
      "frontend_question_id": 121,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
      "questionId": "121",
      "questionFrontendId": "121",
      "questionTitle": "Best Time to Buy and Sell Stock",
      "titleSlug": "best-time-to-buy-and-sell-stock",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p>\n\n<p>You want to maximize your profit by choosing a <strong>single day</strong> to buy one stock and choosing a <strong>different day in the future</strong> to sell that stock.</p>\n\n<p>Return <em>the maximum profit you can achieve from this transaction</em>. If you cannot achieve any profit, return <code>0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [7,1,5,3,6,4]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\nNote that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> In this case, no transactions are done and the max profit = 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= prices.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= prices[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[7,1,5,3,6,4]\n[7,6,4,3,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "51",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 31315,
      "dislikes": 1184,
      "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock IV\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock with Cooldown\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-with-cooldown\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sum of Beauty in the Array\", \"titleSlug\": \"sum-of-beauty-in-the-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Difference Between Increasing Elements\", \"titleSlug\": \"maximum-difference-between-increasing-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Profit From Trading Stocks\", \"titleSlug\": \"maximum-profit-from-trading-stocks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485858,
      "commentCount": 754,
      "topLevelCommentCount": 397
    },
    "classAndMethodDefinition": "class Solution:\n    def maxProfit(self,prices):"
  },
  {
    "stat": {
      "question_id": 8,
      "question__article__live": true,
      "question__article__slug": "string-to-integer",
      "question__article__has_video_solution": false,
      "question__title": "String to Integer (atoi)",
      "question__title_slug": "string-to-integer-atoi",
      "question__hide": false,
      "total_acs": 1656191,
      "total_submitted": 9296083,
      "frontend_question_id": 8,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/string-to-integer-atoi",
      "questionId": "8",
      "questionFrontendId": "8",
      "questionTitle": "String to Integer (atoi)",
      "titleSlug": "string-to-integer-atoi",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Implement the <code>myAtoi(string s)</code> function, which converts a string to a 32-bit signed integer.</p>\n\n<p>The algorithm for <code>myAtoi(string s)</code> is as follows:</p>\n\n<ol>\n\t<li><strong>Whitespace</strong>: Ignore any leading whitespace (<code>&quot; &quot;</code>).</li>\n\t<li><strong>Signedness</strong>: Determine the sign by checking if the next character is <code>&#39;-&#39;</code> or <code>&#39;+&#39;</code>, assuming positivity is neither present.</li>\n\t<li><strong>Conversion</strong>: Read the integer by skipping leading zeros&nbsp;until a non-digit character is encountered or the end of the string is reached. If no digits were read, then the result is 0.</li>\n\t<li><strong>Rounding</strong>: If the integer is out of the 32-bit signed integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then round the integer to remain in the range. Specifically, integers less than <code>-2<sup>31</sup></code> should be rounded to <code>-2<sup>31</sup></code>, and integers greater than <code>2<sup>31</sup> - 1</code> should be rounded to <code>2<sup>31</sup> - 1</code>.</li>\n</ol>\n\n<p>Return the integer as the final result.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;42&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">42</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<pre>\nThe underlined characters are what is read in and the caret is the current reader position.\nStep 1: &quot;42&quot; (no characters read because there is no leading whitespace)\n         ^\nStep 2: &quot;42&quot; (no characters read because there is neither a &#39;-&#39; nor &#39;+&#39;)\n         ^\nStep 3: &quot;<u>42</u>&quot; (&quot;42&quot; is read in)\n           ^\n</pre>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot; -042&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">-42</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<pre>\nStep 1: &quot;<u>   </u>-042&quot; (leading whitespace is read and ignored)\n            ^\nStep 2: &quot;   <u>-</u>042&quot; (&#39;-&#39; is read, so the result should be negative)\n             ^\nStep 3: &quot;   -<u>042</u>&quot; (&quot;042&quot; is read in, leading zeros ignored in the result)\n               ^\n</pre>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;1337c0d3&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1337</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<pre>\nStep 1: &quot;1337c0d3&quot; (no characters read because there is no leading whitespace)\n         ^\nStep 2: &quot;1337c0d3&quot; (no characters read because there is neither a &#39;-&#39; nor &#39;+&#39;)\n         ^\nStep 3: &quot;<u>1337</u>c0d3&quot; (&quot;1337&quot; is read in; reading stops because the next character is a non-digit)\n             ^\n</pre>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;0-1&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<pre>\nStep 1: &quot;0-1&quot; (no characters read because there is no leading whitespace)\n         ^\nStep 2: &quot;0-1&quot; (no characters read because there is neither a &#39;-&#39; nor &#39;+&#39;)\n         ^\nStep 3: &quot;<u>0</u>-1&quot; (&quot;0&quot; is read in; reading stops because the next character is a non-digit)\n          ^\n</pre>\n</div>\n\n<p><strong class=\"example\">Example 5:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;words and 987&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Reading stops at the first non-digit character &#39;w&#39;.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 200</code></li>\n\t<li><code>s</code> consists of English letters (lower-case and upper-case), digits (<code>0-9</code>), <code>&#39; &#39;</code>, <code>&#39;+&#39;</code>, <code>&#39;-&#39;</code>, and <code>&#39;.&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"42\"\n\"   -042\"\n\"1337c0d3\"\n\"0-1\"\n\"words and 987\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1290",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4683,
      "dislikes": 13887,
      "similarQuestions": "[{\"title\": \"Reverse Integer\", \"titleSlug\": \"reverse-integer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Number\", \"titleSlug\": \"valid-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Check if Numbers Are Ascending in a Sentence\", \"titleSlug\": \"check-if-numbers-are-ascending-in-a-sentence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485745,
      "commentCount": 904,
      "topLevelCommentCount": 540
    },
    "classAndMethodDefinition": "def myAtoi(self, str: str) -> int:\n        value, state, pos, sign = 0, 0, 0, 1"
  },
  {
    "stat": {
      "question_id": 9,
      "question__article__live": true,
      "question__article__slug": "palindrome-number",
      "question__article__has_video_solution": true,
      "question__title": "Palindrome Number",
      "question__title_slug": "palindrome-number",
      "question__hide": false,
      "total_acs": 5119018,
      "total_submitted": 8926504,
      "frontend_question_id": 9,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/palindrome-number",
      "questionId": "9",
      "questionFrontendId": "9",
      "questionTitle": "Palindrome Number",
      "titleSlug": "palindrome-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>x</code>, return <code>true</code><em> if </em><code>x</code><em> is a </em><span data-keyword=\"palindrome-integer\"><em><strong>palindrome</strong></em></span><em>, and </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 121\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 121 reads as 121 from left to right and from right to left.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = -121\n<strong>Output:</strong> false\n<strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 10\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup>&nbsp;&lt;= x &lt;= 2<sup>31</sup>&nbsp;- 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it without converting the integer to a string?",
      "exampleTestcases": "121\n-121\n10",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [
        "Beware of overflow when you reverse the integer."
      ],
      "solution": {
        "id": "233",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12873,
      "dislikes": 2752,
      "similarQuestions": "[{\"title\": \"Palindrome Linked List\", \"titleSlug\": \"palindrome-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Palindrome With Fixed Length\", \"titleSlug\": \"find-palindrome-with-fixed-length\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Strictly Palindromic Number\", \"titleSlug\": \"strictly-palindromic-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"  Count Symmetric Integers\", \"titleSlug\": \"count-symmetric-integers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Count of Good Integers\", \"titleSlug\": \"find-the-count-of-good-integers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Largest Palindrome Divisible by K\", \"titleSlug\": \"find-the-largest-palindrome-divisible-by-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485746,
      "commentCount": 603,
      "topLevelCommentCount": 426
    },
    "classAndMethodDefinition": "class Solution:\n    def isPalindrome(self, x: int) -> bool:"
  },
  {
    "stat": {
      "question_id": 26,
      "question__article__live": true,
      "question__article__slug": "remove-duplicates-from-sorted-array",
      "question__article__has_video_solution": false,
      "question__title": "Remove Duplicates from Sorted Array",
      "question__title_slug": "remove-duplicates-from-sorted-array",
      "question__hide": false,
      "total_acs": 4876845,
      "total_submitted": 8502918,
      "frontend_question_id": 26,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array",
      "questionId": "26",
      "questionFrontendId": "26",
      "questionTitle": "Remove Duplicates from Sorted Array",
      "titleSlug": "remove-duplicates-from-sorted-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> sorted in <strong>non-decreasing order</strong>, remove the duplicates <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a> such that each unique element appears only <strong>once</strong>. The <strong>relative order</strong> of the elements should be kept the <strong>same</strong>. Then return <em>the number of unique elements in </em><code>nums</code>.</p>\n\n<p>Consider the number of unique elements of <code>nums</code> to be <code>k</code>, to get accepted, you need to do the following things:</p>\n\n<ul>\n\t<li>Change the array <code>nums</code> such that the first <code>k</code> elements of <code>nums</code> contain the unique elements in the order they were present in <code>nums</code> initially. The remaining elements of <code>nums</code> are not important as well as the size of <code>nums</code>.</li>\n\t<li>Return <code>k</code>.</li>\n</ul>\n\n<p><strong>Custom Judge:</strong></p>\n\n<p>The judge will test your solution with the following code:</p>\n\n<pre>\nint[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\n\nint k = removeDuplicates(nums); // Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i &lt; k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n</pre>\n\n<p>If all assertions pass, then your solution will be <strong>accepted</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong> 2, nums = [1,2,_]\n<strong>Explanation:</strong> Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,1,1,1,2,2,3,3,4]\n<strong>Output:</strong> 5, nums = [0,1,2,3,4,_,_,_,_,_]\n<strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-100 &lt;= nums[i] &lt;= 100</code></li>\n\t<li><code>nums</code> is sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n",
      "exampleTestcases": "[1,1,2]\n[0,0,1,1,1,2,2,3,3,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [
        "In this problem, the key point to focus on is the input array being sorted. As far as duplicate elements are concerned, what is their positioning in the array when the given array is sorted? Look at the image below for the answer. If we know the position of one of the elements, do we also know the positioning of all the duplicate elements?\r\n\r\n<br>\r\n<img src=\"https://assets.leetcode.com/uploads/2019/10/20/hint_rem_dup.png\" width=\"500\"/>",
        "We need to modify the array in-place and the size of the final array would potentially be smaller than the size of the input array. So, we ought to use a two-pointer approach here. One, that would keep track of the current element in the original array and another one for just the unique elements.",
        "Essentially, once an element is encountered, you simply need to <b>bypass</b> its duplicates and move on to the next unique element."
      ],
      "solution": {
        "id": "1562",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 14975,
      "dislikes": 18882,
      "similarQuestions": "[{\"title\": \"Remove Element\", \"titleSlug\": \"remove-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove Duplicates from Sorted Array II\", \"titleSlug\": \"remove-duplicates-from-sorted-array-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Apply Operations to an Array\", \"titleSlug\": \"apply-operations-to-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Distances\", \"titleSlug\": \"sum-of-distances\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485763,
      "commentCount": 898,
      "topLevelCommentCount": 623
    },
    "classAndMethodDefinition": "class Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 14,
      "question__article__live": true,
      "question__article__slug": "longest-common-prefix",
      "question__article__has_video_solution": true,
      "question__title": "Longest Common Prefix",
      "question__title_slug": "longest-common-prefix",
      "question__hide": false,
      "total_acs": 3659465,
      "total_submitted": 8385753,
      "frontend_question_id": 14,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-common-prefix",
      "questionId": "14",
      "questionFrontendId": "14",
      "questionTitle": "Longest Common Prefix",
      "titleSlug": "longest-common-prefix",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Write a function to find the longest common prefix string amongst an array of strings.</p>\n\n<p>If there is no common prefix, return an empty string <code>&quot;&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]\n<strong>Output:</strong> &quot;fl&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> There is no common prefix among the input strings.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= strs.length &lt;= 200</code></li>\n\t<li><code>0 &lt;= strs[i].length &lt;= 200</code></li>\n\t<li><code>strs[i]</code> consists of only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"flower\",\"flow\",\"flight\"]\n[\"dog\",\"racecar\",\"car\"]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "46",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 17823,
      "dislikes": 4585,
      "similarQuestions": "[{\"title\": \"Smallest Missing Integer Greater Than Sequential Prefix Sum\", \"titleSlug\": \"smallest-missing-integer-greater-than-sequential-prefix-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Length of the Longest Common Prefix\", \"titleSlug\": \"find-the-length-of-the-longest-common-prefix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Common Suffix Queries\", \"titleSlug\": \"longest-common-suffix-queries\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485751,
      "commentCount": 508,
      "topLevelCommentCount": 333
    },
    "classAndMethodDefinition": "def longestCommonPrefix(self, v: List[str]) -> str:\n        ans=\"\""
  },
  {
    "stat": {
      "question_id": 53,
      "question__article__live": true,
      "question__article__slug": "maximum-subarray",
      "question__article__has_video_solution": true,
      "question__title": "Maximum Subarray",
      "question__title_slug": "maximum-subarray",
      "question__hide": false,
      "total_acs": 4182132,
      "total_submitted": 8184942,
      "frontend_question_id": 53,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-subarray",
      "questionId": "53",
      "questionFrontendId": "53",
      "questionTitle": "Maximum Subarray",
      "titleSlug": "maximum-subarray",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, find the <span data-keyword=\"subarray-nonempty\">subarray</span> with the largest sum, and return <em>its sum</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-2,1,-3,4,-1,2,1,-5,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The subarray [4,-1,2,1] has the largest sum 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The subarray [1] has the largest sum 1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,4,-1,7,8]\n<strong>Output:</strong> 23\n<strong>Explanation:</strong> The subarray [5,4,-1,7,8] has the largest sum 23.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution using the <strong>divide and conquer</strong> approach, which is more subtle.</p>\n",
      "exampleTestcases": "[-2,1,-3,4,-1,2,1,-5,4]\n[1]\n[5,4,-1,7,8]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1121",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 34273,
      "dislikes": 1452,
      "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Degree of an Array\", \"titleSlug\": \"degree-of-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longest Turbulent Subarray\", \"titleSlug\": \"longest-turbulent-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Score Of Spliced Array\", \"titleSlug\": \"maximum-score-of-spliced-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Absolute Sum of Any Subarray\", \"titleSlug\": \"maximum-absolute-sum-of-any-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Subarray Sum After One Operation\", \"titleSlug\": \"maximum-subarray-sum-after-one-operation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Substring With Largest Variance\", \"titleSlug\": \"substring-with-largest-variance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Value of a String in an Array\", \"titleSlug\": \"maximum-value-of-a-string-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Substring With Maximum Cost\", \"titleSlug\": \"find-the-substring-with-maximum-cost\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"K Items With the Maximum Sum\", \"titleSlug\": \"k-items-with-the-maximum-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Good Subarray Sum\", \"titleSlug\": \"maximum-good-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485790,
      "commentCount": 359,
      "topLevelCommentCount": 259
    },
    "classAndMethodDefinition": "class Solution:\n    def maxSubArray(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 98,
      "question__article__live": true,
      "question__article__slug": "validate-binary-search-tree",
      "question__article__has_video_solution": true,
      "question__title": "Validate Binary Search Tree",
      "question__title_slug": "validate-binary-search-tree",
      "question__hide": false,
      "total_acs": 2487189,
      "total_submitted": 7459619,
      "frontend_question_id": 98,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/validate-binary-search-tree",
      "questionId": "98",
      "questionFrontendId": "98",
      "questionTitle": "Validate Binary Search Tree",
      "titleSlug": "validate-binary-search-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, <em>determine if it is a valid binary search tree (BST)</em>.</p>\n\n<p>A <strong>valid BST</strong> is defined as follows:</p>\n\n<ul>\n\t<li>The left <span data-keyword=\"subtree\">subtree</span> of a node contains only nodes with keys <strong>less than</strong> the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys <strong>greater than</strong> the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/tree1.jpg\" style=\"width: 302px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/tree2.jpg\" style=\"width: 422px; height: 292px;\" />\n<pre>\n<strong>Input:</strong> root = [5,1,4,null,null,3,6]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The root node&#39;s value is 5 but its right child&#39;s value is 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[2,1,3]\n[5,1,4,null,null,3,6]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "639",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16938,
      "dislikes": 1383,
      "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Mode in Binary Search Tree\", \"titleSlug\": \"find-mode-in-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485835,
      "commentCount": 281,
      "topLevelCommentCount": 173
    },
    "classAndMethodDefinition": "class Solution:\n    def isValidBST(self, root: Optional[TreeNode]) -> bool:"
  },
  {
    "stat": {
      "question_id": 33,
      "question__article__live": true,
      "question__article__slug": "search-in-rotated-sorted-array",
      "question__article__has_video_solution": false,
      "question__title": "Search in Rotated Sorted Array",
      "question__title_slug": "search-in-rotated-sorted-array",
      "question__hide": false,
      "total_acs": 2975211,
      "total_submitted": 7186039,
      "frontend_question_id": 33,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
      "questionId": "33",
      "questionFrontendId": "33",
      "questionTitle": "Search in Rotated Sorted Array",
      "titleSlug": "search-in-rotated-sorted-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is an integer array <code>nums</code> sorted in ascending order (with <strong>distinct</strong> values).</p>\n\n<p>Prior to being passed to your function, <code>nums</code> is <strong>possibly rotated</strong> at an unknown pivot index <code>k</code> (<code>1 &lt;= k &lt; nums.length</code>) such that the resulting array is <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code> (<strong>0-indexed</strong>). For example, <code>[0,1,2,4,5,6,7]</code> might be rotated at pivot index <code>3</code> and become <code>[4,5,6,7,0,1,2]</code>.</p>\n\n<p>Given the array <code>nums</code> <strong>after</strong> the possible rotation and an integer <code>target</code>, return <em>the index of </em><code>target</code><em> if it is in </em><code>nums</code><em>, or </em><code>-1</code><em> if it is not in </em><code>nums</code>.</p>\n\n<p>You must write an algorithm with <code>O(log n)</code> runtime complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 0\n<strong>Output:</strong> 4\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 3\n<strong>Output:</strong> -1\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1], target = 0\n<strong>Output:</strong> -1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li>All values of <code>nums</code> are <strong>unique</strong>.</li>\n\t<li><code>nums</code> is an ascending array that is possibly rotated.</li>\n\t<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[4,5,6,7,0,1,2]\n0\n[4,5,6,7,0,1,2]\n3\n[1]\n0",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1990",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 26511,
      "dislikes": 1600,
      "similarQuestions": "[{\"title\": \"Search in Rotated Sorted Array II\", \"titleSlug\": \"search-in-rotated-sorted-array-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Minimum in Rotated Sorted Array\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Pour Water Between Buckets to Make Water Levels Equal\", \"titleSlug\": \"pour-water-between-buckets-to-make-water-levels-equal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485770,
      "commentCount": 381,
      "topLevelCommentCount": 241
    },
    "classAndMethodDefinition": "def search(self, nums, target):\n            if not nums:"
  },
  {
    "stat": {
      "question_id": 88,
      "question__article__live": true,
      "question__article__slug": "merge-sorted-arrays",
      "question__article__has_video_solution": true,
      "question__title": "Merge Sorted Array",
      "question__title_slug": "merge-sorted-array",
      "question__hide": false,
      "total_acs": 3560953,
      "total_submitted": 7006734,
      "frontend_question_id": 88,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/merge-sorted-array",
      "questionId": "88",
      "questionFrontendId": "88",
      "questionTitle": "Merge Sorted Array",
      "titleSlug": "merge-sorted-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given two integer arrays <code>nums1</code> and <code>nums2</code>, sorted in <strong>non-decreasing order</strong>, and two integers <code>m</code> and <code>n</code>, representing the number of elements in <code>nums1</code> and <code>nums2</code> respectively.</p>\n\n<p><strong>Merge</strong> <code>nums1</code> and <code>nums2</code> into a single array sorted in <strong>non-decreasing order</strong>.</p>\n\n<p>The final sorted array should not be returned by the function, but instead be <em>stored inside the array </em><code>nums1</code>. To accommodate this, <code>nums1</code> has a length of <code>m + n</code>, where the first <code>m</code> elements denote the elements that should be merged, and the last <code>n</code> elements are set to <code>0</code> and should be ignored. <code>nums2</code> has a length of <code>n</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3\n<strong>Output:</strong> [1,2,2,3,5,6]\n<strong>Explanation:</strong> The arrays we are merging are [1,2,3] and [2,5,6].\nThe result of the merge is [<u>1</u>,<u>2</u>,2,<u>3</u>,5,6] with the underlined elements coming from nums1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1], m = 1, nums2 = [], n = 0\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> The arrays we are merging are [1] and [].\nThe result of the merge is [1].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [0], m = 0, nums2 = [1], n = 1\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> The arrays we are merging are [] and [1].\nThe result of the merge is [1].\nNote that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>nums1.length == m + n</code></li>\n\t<li><code>nums2.length == n</code></li>\n\t<li><code>0 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>1 &lt;= m + n &lt;= 200</code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums1[i], nums2[j] &lt;= 10<sup>9</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up: </strong>Can you come up with an algorithm that runs in <code>O(m + n)</code> time?</p>\n",
      "exampleTestcases": "[1,2,3,0,0,0]\n3\n[2,5,6]\n3\n[1]\n1\n[]\n0\n[0]\n0\n[1]\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "You can easily solve this problem if you simply think about two elements at a time rather than two arrays. We know that each of the individual arrays is sorted. What we don't know is how they will intertwine. Can we take a local decision and arrive at an optimal solution?",
        "If you simply consider one element each at a time from the two arrays and make a decision and proceed accordingly, you will arrive at the optimal solution."
      ],
      "solution": {
        "id": "686",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 15255,
      "dislikes": 2013,
      "similarQuestions": "[{\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Squares of a Sorted Array\", \"titleSlug\": \"squares-of-a-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Interval List Intersections\", \"titleSlug\": \"interval-list-intersections\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Take K of Each Character From Left and Right\", \"titleSlug\": \"take-k-of-each-character-from-left-and-right\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485825,
      "commentCount": 782,
      "topLevelCommentCount": 556
    },
    "classAndMethodDefinition": "class Solution(object):\n    def merge(self, nums1, m, nums2, n):"
  },
  {
    "stat": {
      "question_id": 217,
      "question__article__live": true,
      "question__article__slug": "contains-duplicate",
      "question__article__has_video_solution": false,
      "question__title": "Contains Duplicate",
      "question__title_slug": "contains-duplicate",
      "question__hide": false,
      "total_acs": 4291573,
      "total_submitted": 6904095,
      "frontend_question_id": 217,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/contains-duplicate",
      "questionId": "217",
      "questionFrontendId": "217",
      "questionTitle": "Contains Duplicate",
      "titleSlug": "contains-duplicate",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <code>true</code> if any value appears <strong>at least twice</strong> in the array, and return <code>false</code> if every element is distinct.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,1,3,3,4,3,2,4,2]\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,1]\n[1,2,3,4]\n[1,1,1,3,3,4,3,2,4,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "23",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12124,
      "dislikes": 1304,
      "similarQuestions": "[{\"title\": \"Contains Duplicate II\", \"titleSlug\": \"contains-duplicate-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Contains Duplicate III\", \"titleSlug\": \"contains-duplicate-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Make Array Zero by Subtracting Equal Amounts\", \"titleSlug\": \"make-array-zero-by-subtracting-equal-amounts\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485954,
      "commentCount": 423,
      "topLevelCommentCount": 287
    },
    "classAndMethodDefinition": "class Solution:\n    def containsDuplicate(self, nums: List[int]) -> bool:"
  },
  {
    "stat": {
      "question_id": 21,
      "question__article__live": true,
      "question__article__slug": "merge-two-sorted-lists",
      "question__article__has_video_solution": true,
      "question__title": "Merge Two Sorted Lists",
      "question__title_slug": "merge-two-sorted-lists",
      "question__hide": false,
      "total_acs": 4474629,
      "total_submitted": 6871254,
      "frontend_question_id": 21,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/merge-two-sorted-lists",
      "questionId": "21",
      "questionFrontendId": "21",
      "questionTitle": "Merge Two Sorted Lists",
      "titleSlug": "merge-two-sorted-lists",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given the heads of two sorted linked lists <code>list1</code> and <code>list2</code>.</p>\n\n<p>Merge the two lists into one <strong>sorted</strong> list. The list should be made by splicing together the nodes of the first two lists.</p>\n\n<p>Return <em>the head of the merged linked list</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/merge_ex1.jpg\" style=\"width: 662px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> list1 = [1,2,4], list2 = [1,3,4]\n<strong>Output:</strong> [1,1,2,3,4,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> list1 = [], list2 = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> list1 = [], list2 = [0]\n<strong>Output:</strong> [0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in both lists is in the range <code>[0, 50]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n\t<li>Both <code>list1</code> and <code>list2</code> are sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,4]\n[1,3,4]\n[]\n[]\n[]\n[0]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "310",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 21994,
      "dislikes": 2146,
      "similarQuestions": "[{\"title\": \"Merge k Sorted Lists\", \"titleSlug\": \"merge-k-sorted-lists\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Merge Sorted Array\", \"titleSlug\": \"merge-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort List\", \"titleSlug\": \"sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Word Distance II\", \"titleSlug\": \"shortest-word-distance-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Two Polynomials Represented as Linked Lists\", \"titleSlug\": \"add-two-polynomials-represented-as-linked-lists\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Common Subsequence Between Sorted Arrays\", \"titleSlug\": \"longest-common-subsequence-between-sorted-arrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Merge Two 2D Arrays by Summing Values\", \"titleSlug\": \"merge-two-2d-arrays-by-summing-values\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485758,
      "commentCount": 515,
      "topLevelCommentCount": 309
    },
    "classAndMethodDefinition": "def mergeTwoLists1(self, l1, l2):\n        dummy = cur = ListNode(0)"
  },
  {
    "stat": {
      "question_id": 125,
      "question__article__live": true,
      "question__article__slug": "valid-palindrome",
      "question__article__has_video_solution": false,
      "question__title": "Valid Palindrome",
      "question__title_slug": "valid-palindrome",
      "question__hide": false,
      "total_acs": 3317800,
      "total_submitted": 6833013,
      "frontend_question_id": 125,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-palindrome",
      "questionId": "125",
      "questionFrontendId": "125",
      "questionTitle": "Valid Palindrome",
      "titleSlug": "valid-palindrome",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>A phrase is a <strong>palindrome</strong> if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.</p>\n\n<p>Given a string <code>s</code>, return <code>true</code><em> if it is a <strong>palindrome</strong>, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;A man, a plan, a canal: Panama&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> &quot;amanaplanacanalpanama&quot; is a palindrome.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;race a car&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> &quot;raceacar&quot; is not a palindrome.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot; &quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> s is an empty string &quot;&quot; after removing non-alphanumeric characters.\nSince an empty string reads the same forward and backward, it is a palindrome.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists only of printable ASCII characters.</li>\n</ul>\n",
      "exampleTestcases": "\"A man, a plan, a canal: Panama\"\n\"race a car\"\n\" \"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "909",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9507,
      "dislikes": 8402,
      "similarQuestions": "[{\"title\": \"Palindrome Linked List\", \"titleSlug\": \"palindrome-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Valid Palindrome II\", \"titleSlug\": \"valid-palindrome-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Product of the Length of Two Palindromic Subsequences\", \"titleSlug\": \"maximum-product-of-the-length-of-two-palindromic-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find First Palindromic String in the Array\", \"titleSlug\": \"find-first-palindromic-string-in-the-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Valid Palindrome IV\", \"titleSlug\": \"valid-palindrome-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Palindromes After Operations\", \"titleSlug\": \"maximum-palindromes-after-operations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485862,
      "commentCount": 423,
      "topLevelCommentCount": 272
    },
    "classAndMethodDefinition": "def isPalindrome(self, s):\n        l, r = 0, len(s)-1"
  },
  {
    "stat": {
      "question_id": 4,
      "question__article__live": true,
      "question__article__slug": "median-of-two-sorted-arrays",
      "question__article__has_video_solution": true,
      "question__title": "Median of Two Sorted Arrays",
      "question__title_slug": "median-of-two-sorted-arrays",
      "question__hide": false,
      "total_acs": 2814273,
      "total_submitted": 6824502,
      "frontend_question_id": 4,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/median-of-two-sorted-arrays",
      "questionId": "4",
      "questionFrontendId": "4",
      "questionTitle": "Median of Two Sorted Arrays",
      "titleSlug": "median-of-two-sorted-arrays",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given two sorted arrays <code>nums1</code> and <code>nums2</code> of size <code>m</code> and <code>n</code> respectively, return <strong>the median</strong> of the two sorted arrays.</p>\n\n<p>The overall run time complexity should be <code>O(log (m+n))</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,3], nums2 = [2]\n<strong>Output:</strong> 2.00000\n<strong>Explanation:</strong> merged array = [1,2,3] and median is 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2], nums2 = [3,4]\n<strong>Output:</strong> 2.50000\n<strong>Explanation:</strong> merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>nums1.length == m</code></li>\n\t<li><code>nums2.length == n</code></li>\n\t<li><code>0 &lt;= m &lt;= 1000</code></li>\n\t<li><code>0 &lt;= n &lt;= 1000</code></li>\n\t<li><code>1 &lt;= m + n &lt;= 2000</code></li>\n\t<li><code>-10<sup>6</sup> &lt;= nums1[i], nums2[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,3]\n[2]\n[1,2]\n[3,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1942",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 28595,
      "dislikes": 3197,
      "similarQuestions": "[{\"title\": \"Median of a Row Wise Sorted Matrix\", \"titleSlug\": \"median-of-a-row-wise-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485740,
      "commentCount": 738,
      "topLevelCommentCount": 489
    },
    "classAndMethodDefinition": "class Solution:\n    def findMedianSortedArrays(self, nums1, nums2):"
  },
  {
    "stat": {
      "question_id": 35,
      "question__article__live": true,
      "question__article__slug": "search-insert-position",
      "question__article__has_video_solution": true,
      "question__title": "Search Insert Position",
      "question__title_slug": "search-insert-position",
      "question__hide": false,
      "total_acs": 3138443,
      "total_submitted": 6682754,
      "frontend_question_id": 35,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/search-insert-position",
      "questionId": "35",
      "questionFrontendId": "35",
      "questionTitle": "Search Insert Position",
      "titleSlug": "search-insert-position",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p>\n\n<p>You must&nbsp;write an algorithm with&nbsp;<code>O(log n)</code> runtime complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,5,6], target = 5\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,5,6], target = 2\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,5,6], target = 7\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>nums</code> contains <strong>distinct</strong> values sorted in <strong>ascending</strong> order.</li>\n\t<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,5,6]\n5\n[1,3,5,6]\n2\n[1,3,5,6]\n7",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "885",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16343,
      "dislikes": 755,
      "similarQuestions": "[{\"title\": \"First Bad Version\", \"titleSlug\": \"first-bad-version\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Exceed Threshold Value I\", \"titleSlug\": \"minimum-operations-to-exceed-threshold-value-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485772,
      "commentCount": 285,
      "topLevelCommentCount": 197
    },
    "classAndMethodDefinition": "class Solution:\n    def searchInsert(self, nums: List[int], target: int) -> int:"
  },
  {
    "stat": {
      "question_id": 70,
      "question__article__live": true,
      "question__article__slug": "climbing-stairs",
      "question__article__has_video_solution": false,
      "question__title": "Climbing Stairs",
      "question__title_slug": "climbing-stairs",
      "question__hide": false,
      "total_acs": 3530736,
      "total_submitted": 6650724,
      "frontend_question_id": 70,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/climbing-stairs",
      "questionId": "70",
      "questionFrontendId": "70",
      "questionTitle": "Climbing Stairs",
      "titleSlug": "climbing-stairs",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are climbing a staircase. It takes <code>n</code> steps to reach the top.</p>\n\n<p>Each time you can either climb <code>1</code> or <code>2</code> steps. In how many distinct ways can you climb to the top?</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two ways to climb to the top.\n1. 1 step + 1 step\n2. 2 steps\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> There are three ways to climb to the top.\n1. 1 step + 1 step + 1 step\n2. 1 step + 2 steps\n3. 2 steps + 1 step\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 45</code></li>\n</ul>\n",
      "exampleTestcases": "2\n3",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Memoization",
          "slug": "memoization",
          "translatedName": null
        }
      ],
      "hints": [
        "To reach nth step, what could have been your previous steps? (Think about the step sizes)"
      ],
      "solution": {
        "id": "84",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 22105,
      "dislikes": 861,
      "similarQuestions": "[{\"title\": \"Min Cost Climbing Stairs\", \"titleSlug\": \"min-cost-climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Fibonacci Number\", \"titleSlug\": \"fibonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-th Tribonacci Number\", \"titleSlug\": \"n-th-tribonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Rounds to Complete All Tasks\", \"titleSlug\": \"minimum-rounds-to-complete-all-tasks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Ways to Place Houses\", \"titleSlug\": \"count-number-of-ways-to-place-houses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Ways to Reach a Position After Exactly k Steps\", \"titleSlug\": \"number-of-ways-to-reach-a-position-after-exactly-k-steps\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Ways To Build Good Strings\", \"titleSlug\": \"count-ways-to-build-good-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Frog Jump II\", \"titleSlug\": \"frog-jump-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Number of Ways to Reach the K-th Stair\", \"titleSlug\": \"find-number-of-ways-to-reach-the-k-th-stair\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"The Number of Ways to Make the Sum\", \"titleSlug\": \"the-number-of-ways-to-make-the-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485807,
      "commentCount": 555,
      "topLevelCommentCount": 340
    },
    "classAndMethodDefinition": "class Solution:\n    def climbStairs(self, n: int) -> int:"
  },
  {
    "stat": {
      "question_id": 13,
      "question__article__live": true,
      "question__article__slug": "roman-to-integer",
      "question__article__has_video_solution": true,
      "question__title": "Roman to Integer",
      "question__title_slug": "roman-to-integer",
      "question__hide": false,
      "total_acs": 3971412,
      "total_submitted": 6359882,
      "frontend_question_id": 13,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/roman-to-integer",
      "questionId": "13",
      "questionFrontendId": "13",
      "questionTitle": "Roman to Integer",
      "titleSlug": "roman-to-integer",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Roman numerals are represented by seven different symbols:&nbsp;<code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>\n\n<pre>\n<strong>Symbol</strong>       <strong>Value</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n\n<p>For example,&nbsp;<code>2</code> is written as <code>II</code>&nbsp;in Roman numeral, just two ones added together. <code>12</code> is written as&nbsp;<code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p>\n\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>\n\n<ul>\n\t<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.&nbsp;</li>\n\t<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.&nbsp;</li>\n\t<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>\n</ul>\n\n<p>Given a roman numeral, convert it to an integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;III&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> III = 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;LVIII&quot;\n<strong>Output:</strong> 58\n<strong>Explanation:</strong> L = 50, V= 5, III = 3.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;MCMXCIV&quot;\n<strong>Output:</strong> 1994\n<strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 15</code></li>\n\t<li><code>s</code> contains only&nbsp;the characters <code>(&#39;I&#39;, &#39;V&#39;, &#39;X&#39;, &#39;L&#39;, &#39;C&#39;, &#39;D&#39;, &#39;M&#39;)</code>.</li>\n\t<li>It is <strong>guaranteed</strong>&nbsp;that <code>s</code> is a valid roman numeral in the range <code>[1, 3999]</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"III\"\n\"LVIII\"\n\"MCMXCIV\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "Problem is simpler to solve by working the string from back to front and using a map."
      ],
      "solution": {
        "id": "889",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 14498,
      "dislikes": 968,
      "similarQuestions": "[{\"title\": \"Integer to Roman\", \"titleSlug\": \"integer-to-roman\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485750,
      "commentCount": 533,
      "topLevelCommentCount": 327
    },
    "classAndMethodDefinition": "class Solution:\n    def romanToInt(self, s: str) -> int:"
  },
  {
    "stat": {
      "question_id": 141,
      "question__article__live": true,
      "question__article__slug": "linked-list-cycle",
      "question__article__has_video_solution": true,
      "question__title": "Linked List Cycle",
      "question__title_slug": "linked-list-cycle",
      "question__hide": false,
      "total_acs": 3228806,
      "total_submitted": 6328859,
      "frontend_question_id": 141,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/linked-list-cycle",
      "questionId": "141",
      "questionFrontendId": "141",
      "questionTitle": "Linked List Cycle",
      "titleSlug": "linked-list-cycle",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given <code>head</code>, the head of a linked list, determine if the linked list has a cycle in it.</p>\n\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the&nbsp;<code>next</code>&nbsp;pointer. Internally, <code>pos</code>&nbsp;is used to denote the index of the node that&nbsp;tail&#39;s&nbsp;<code>next</code>&nbsp;pointer is connected to.&nbsp;<strong>Note that&nbsp;<code>pos</code>&nbsp;is not passed as a parameter</strong>.</p>\n\n<p>Return&nbsp;<code>true</code><em> if there is a cycle in the linked list</em>. Otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\" style=\"width: 300px; height: 97px; margin-top: 8px; margin-bottom: 8px;\" />\n<pre>\n<strong>Input:</strong> head = [3,2,0,-4], pos = 1\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png\" style=\"width: 141px; height: 74px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2], pos = 0\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There is a cycle in the linked list, where the tail connects to the 0th node.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png\" style=\"width: 45px; height: 45px;\" />\n<pre>\n<strong>Input:</strong> head = [1], pos = -1\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no cycle in the linked list.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li><code>pos</code> is <code>-1</code> or a <strong>valid index</strong> in the linked-list.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Can you solve it using <code>O(1)</code> (i.e. constant) memory?</p>\n",
      "exampleTestcases": "[3,2,0,-4]\n1\n[1,2]\n0\n[1]\n-1",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "21",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 15643,
      "dislikes": 1396,
      "similarQuestions": "[{\"title\": \"Linked List Cycle II\", \"titleSlug\": \"linked-list-cycle-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Happy Number\", \"titleSlug\": \"happy-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485878,
      "commentCount": 423,
      "topLevelCommentCount": 281
    },
    "classAndMethodDefinition": "def hasCycle(self, head):\n        try:"
  },
  {
    "stat": {
      "question_id": 19,
      "question__article__live": true,
      "question__article__slug": "remove-nth-node-from-end-of-list",
      "question__article__has_video_solution": true,
      "question__title": "Remove Nth Node From End of List",
      "question__title_slug": "remove-nth-node-from-end-of-list",
      "question__hide": false,
      "total_acs": 2936061,
      "total_submitted": 6313114,
      "frontend_question_id": 19,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list",
      "questionId": "19",
      "questionFrontendId": "19",
      "questionTitle": "Remove Nth Node From End of List",
      "titleSlug": "remove-nth-node-from-end-of-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a linked list, remove the <code>n<sup>th</sup></code> node from the end of the list and return its head.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/remove_ex1.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], n = 2\n<strong>Output:</strong> [1,2,3,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1], n = 1\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2], n = 1\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is <code>sz</code>.</li>\n\t<li><code>1 &lt;= sz &lt;= 30</code></li>\n\t<li><code>0 &lt;= Node.val &lt;= 100</code></li>\n\t<li><code>1 &lt;= n &lt;= sz</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you do this in one pass?</p>\n",
      "exampleTestcases": "[1,2,3,4,5]\n2\n[1]\n1\n[1,2]\n1",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [
        "Maintain two pointers and update one with a delay of n steps."
      ],
      "solution": {
        "id": "48",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 19019,
      "dislikes": 818,
      "similarQuestions": "[{\"title\": \"Swapping Nodes in a Linked List\", \"titleSlug\": \"swapping-nodes-in-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete N Nodes After M Nodes of a Linked List\", \"titleSlug\": \"delete-n-nodes-after-m-nodes-of-a-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Delete the Middle Node of a Linked List\", \"titleSlug\": \"delete-the-middle-node-of-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485756,
      "commentCount": 315,
      "topLevelCommentCount": 195
    },
    "classAndMethodDefinition": "def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:\n        fast, slow = head, head"
  },
  {
    "stat": {
      "question_id": 28,
      "question__article__live": true,
      "question__article__slug": "find-the-index-of-the-first-occurrence-in-a-string",
      "question__article__has_video_solution": true,
      "question__title": "Find the Index of the First Occurrence in a String",
      "question__title_slug": "find-the-index-of-the-first-occurrence-in-a-string",
      "question__hide": false,
      "total_acs": 2708445,
      "total_submitted": 6258765,
      "frontend_question_id": 28,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",
      "questionId": "28",
      "questionFrontendId": "28",
      "questionTitle": "Find the Index of the First Occurrence in a String",
      "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>needle</code> and <code>haystack</code>, return the index of the first occurrence of <code>needle</code> in <code>haystack</code>, or <code>-1</code> if <code>needle</code> is not part of <code>haystack</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> haystack = &quot;sadbutsad&quot;, needle = &quot;sad&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> &quot;sad&quot; occurs at index 0 and 6.\nThe first occurrence is at index 0, so we return 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> haystack = &quot;leetcode&quot;, needle = &quot;leeto&quot;\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> &quot;leeto&quot; did not occur in &quot;leetcode&quot;, so we return -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= haystack.length, needle.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>haystack</code> and <code>needle</code> consist of only lowercase English characters.</li>\n</ul>\n",
      "exampleTestcases": "\"sadbutsad\"\n\"sad\"\n\"leetcode\"\n\"leeto\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "String Matching",
          "slug": "string-matching",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1699",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5988,
      "dislikes": 430,
      "similarQuestions": "[{\"title\": \"Shortest Palindrome\", \"titleSlug\": \"shortest-palindrome\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Repeated Substring Pattern\", \"titleSlug\": \"repeated-substring-pattern\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485765,
      "commentCount": 386,
      "topLevelCommentCount": 264
    },
    "classAndMethodDefinition": "class Solution:\n    def strStr(self, haystack: str, needle: str) -> int:"
  },
  {
    "stat": {
      "question_id": 189,
      "question__article__live": true,
      "question__article__slug": "rotate-array",
      "question__article__has_video_solution": false,
      "question__title": "Rotate Array",
      "question__title_slug": "rotate-array",
      "question__hide": false,
      "total_acs": 2449795,
      "total_submitted": 5916713,
      "frontend_question_id": 189,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/rotate-array",
      "questionId": "189",
      "questionFrontendId": "189",
      "questionTitle": "Rotate Array",
      "titleSlug": "rotate-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, rotate the array to the right by <code>k</code> steps, where <code>k</code> is non-negative.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5,6,7], k = 3\n<strong>Output:</strong> [5,6,7,1,2,3,4]\n<strong>Explanation:</strong>\nrotate 1 steps to the right: [7,1,2,3,4,5,6]\nrotate 2 steps to the right: [6,7,1,2,3,4,5]\nrotate 3 steps to the right: [5,6,7,1,2,3,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,-100,3,99], k = 2\n<strong>Output:</strong> [3,99,-1,-100]\n<strong>Explanation:</strong> \nrotate 1 steps to the right: [99,-1,-100,3]\nrotate 2 steps to the right: [3,99,-1,-100]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Try to come up with as many solutions as you can. There are at least <strong>three</strong> different ways to solve this problem.</li>\n\t<li>Could you do it in-place with <code>O(1)</code> extra space?</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5,6,7]\n3\n[-1,-100,3,99]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [
        "The easiest solution would use additional memory and that is perfectly fine.",
        "The actual trick comes when trying to solve this problem without using any additional memory. This means you need to use the original array somehow to move the elements around. Now, we can place each element in its original location and shift all the elements around it to adjust as that would be too costly and most likely will time out on larger input arrays.",
        "One line of thought is based on reversing the array (or parts of it) to obtain the desired result. Think about how reversal might potentially help us out by using an example.",
        "The other line of thought is a tad bit complicated but essentially it builds on the idea of placing each element in its original position while keeping track of the element originally in that position. Basically, at every step, we place an element in its rightful position and keep track of the element already there or the one being overwritten in an additional variable. We can't do this in one linear pass and the idea here is based on <b>cyclic-dependencies</b> between elements."
      ],
      "solution": {
        "id": "59",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 18199,
      "dislikes": 1990,
      "similarQuestions": "[{\"title\": \"Rotate List\", \"titleSlug\": \"rotate-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Words in a String II\", \"titleSlug\": \"reverse-words-in-a-string-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Make K-Subarray Sums Equal\", \"titleSlug\": \"make-k-subarray-sums-equal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485926,
      "commentCount": 545,
      "topLevelCommentCount": 413
    },
    "classAndMethodDefinition": "def reverse (self, nums, i, j) : \n        li = i"
  },
  {
    "stat": {
      "question_id": 242,
      "question__article__live": true,
      "question__article__slug": "valid-anagram",
      "question__article__has_video_solution": true,
      "question__title": "Valid Anagram",
      "question__title_slug": "valid-anagram",
      "question__hide": false,
      "total_acs": 3853926,
      "total_submitted": 5911031,
      "frontend_question_id": 242,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-anagram",
      "questionId": "242",
      "questionFrontendId": "242",
      "questionTitle": "Valid Anagram",
      "titleSlug": "valid-anagram",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code> <em>if</em> <code>t</code> <em>is an anagram of</em> <code>s</code><em>, and</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"anagram\", t = \"nagaram\"\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"rat\", t = \"car\"\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, t.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> and <code>t</code> consist of lowercase English letters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> What if the inputs contain Unicode characters? How would you adapt your solution to such a case?</p>\n",
      "exampleTestcases": "\"anagram\"\n\"nagaram\"\n\"rat\"\n\"car\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "5",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12255,
      "dislikes": 408,
      "similarQuestions": "[{\"title\": \"Group Anagrams\", \"titleSlug\": \"group-anagrams\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation\", \"titleSlug\": \"palindrome-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find All Anagrams in a String\", \"titleSlug\": \"find-all-anagrams-in-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Resultant Array After Removing Anagrams\", \"titleSlug\": \"find-resultant-array-after-removing-anagrams\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485979,
      "commentCount": 320,
      "topLevelCommentCount": 204
    },
    "classAndMethodDefinition": "class Solution:\n    def isAnagram(self, s: str, t: str) -> bool:"
  },
  {
    "stat": {
      "question_id": 11,
      "question__article__live": true,
      "question__article__slug": "container-with-most-water",
      "question__article__has_video_solution": true,
      "question__title": "Container With Most Water",
      "question__title_slug": "container-with-most-water",
      "question__hide": false,
      "total_acs": 3258585,
      "total_submitted": 5816398,
      "frontend_question_id": 11,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/container-with-most-water",
      "questionId": "11",
      "questionFrontendId": "11",
      "questionTitle": "Container With Most Water",
      "titleSlug": "container-with-most-water",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>height</code> of length <code>n</code>. There are <code>n</code> vertical lines drawn such that the two endpoints of the <code>i<sup>th</sup></code> line are <code>(i, 0)</code> and <code>(i, height[i])</code>.</p>\n\n<p>Find two lines that together with the x-axis form a container, such that the container contains the most water.</p>\n\n<p>Return <em>the maximum amount of water a container can store</em>.</p>\n\n<p><strong>Notice</strong> that you may not slant the container.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/17/question_11.jpg\" style=\"width: 600px; height: 287px;\" />\n<pre>\n<strong>Input:</strong> height = [1,8,6,2,5,4,8,3,7]\n<strong>Output:</strong> 49\n<strong>Explanation:</strong> The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> height = [1,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == height.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= height[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,8,6,2,5,4,8,3,7]\n[1,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [
        "If you simulate the problem, it will be O(n^2) which is not efficient.",
        "Try to use two-pointers. Set one pointer to the left and one to the right of the array. Always move the pointer that points to the lower line.",
        "How can you calculate the amount of water at each step?"
      ],
      "solution": {
        "id": "55",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 29418,
      "dislikes": 1815,
      "similarQuestions": "[{\"title\": \"Trapping Rain Water\", \"titleSlug\": \"trapping-rain-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Tastiness of Candy Basket\", \"titleSlug\": \"maximum-tastiness-of-candy-basket\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber IV\", \"titleSlug\": \"house-robber-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485748,
      "commentCount": 515,
      "topLevelCommentCount": 342
    },
    "classAndMethodDefinition": "class Solution:\n    def maxArea(self, height: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 206,
      "question__article__live": true,
      "question__article__slug": "reverse-linked-list",
      "question__article__has_video_solution": true,
      "question__title": "Reverse Linked List",
      "question__title_slug": "reverse-linked-list",
      "question__hide": false,
      "total_acs": 4468642,
      "total_submitted": 5767409,
      "frontend_question_id": 206,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-linked-list",
      "questionId": "206",
      "questionFrontendId": "206",
      "questionTitle": "Reverse Linked List",
      "titleSlug": "reverse-linked-list",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a singly linked list, reverse the list, and return <em>the reversed list</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/rev1ex1.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5]\n<strong>Output:</strong> [5,4,3,2,1]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/rev1ex2.jpg\" style=\"width: 182px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2]\n<strong>Output:</strong> [2,1]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is the range <code>[0, 5000]</code>.</li>\n\t<li><code>-5000 &lt;= Node.val &lt;= 5000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> A linked list can be reversed either iteratively or recursively. Could you implement both?</p>\n",
      "exampleTestcases": "[1,2,3,4,5]\n[1,2]\n[]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "6",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 21749,
      "dislikes": 455,
      "similarQuestions": "[{\"title\": \"Reverse Linked List II\", \"titleSlug\": \"reverse-linked-list-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Upside Down\", \"titleSlug\": \"binary-tree-upside-down\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Linked List\", \"titleSlug\": \"palindrome-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Reverse Nodes in Even Length Groups\", \"titleSlug\": \"reverse-nodes-in-even-length-groups\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Twin Sum of a Linked List\", \"titleSlug\": \"maximum-twin-sum-of-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Remove Nodes From Linked List\", \"titleSlug\": \"remove-nodes-from-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insert Greatest Common Divisors in Linked List\", \"titleSlug\": \"insert-greatest-common-divisors-in-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485943,
      "commentCount": 373,
      "topLevelCommentCount": 223
    },
    "classAndMethodDefinition": "def reverseList(self, head):\n        # Initialize prev pointer as NULL..."
  },
  {
    "stat": {
      "question_id": 27,
      "question__article__live": true,
      "question__article__slug": "remove-element",
      "question__article__has_video_solution": true,
      "question__title": "Remove Element",
      "question__title_slug": "remove-element",
      "question__hide": false,
      "total_acs": 3281776,
      "total_submitted": 5659845,
      "frontend_question_id": 27,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-element",
      "questionId": "27",
      "questionFrontendId": "27",
      "questionTitle": "Remove Element",
      "titleSlug": "remove-element",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> and an integer <code>val</code>, remove all occurrences of <code>val</code> in <code>nums</code> <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a>. The order of the elements may be changed. Then return <em>the number of elements in </em><code>nums</code><em> which are not equal to </em><code>val</code>.</p>\n\n<p>Consider the number of elements in <code>nums</code> which are not equal to <code>val</code> be <code>k</code>, to get accepted, you need to do the following things:</p>\n\n<ul>\n\t<li>Change the array <code>nums</code> such that the first <code>k</code> elements of <code>nums</code> contain the elements which are not equal to <code>val</code>. The remaining elements of <code>nums</code> are not important as well as the size of <code>nums</code>.</li>\n\t<li>Return <code>k</code>.</li>\n</ul>\n\n<p><strong>Custom Judge:</strong></p>\n\n<p>The judge will test your solution with the following code:</p>\n\n<pre>\nint[] nums = [...]; // Input array\nint val = ...; // Value to remove\nint[] expectedNums = [...]; // The expected answer with correct length.\n                            // It is sorted with no values equaling val.\n\nint k = removeElement(nums, val); // Calls your implementation\n\nassert k == expectedNums.length;\nsort(nums, 0, k); // Sort the first k elements of nums\nfor (int i = 0; i &lt; actualLength; i++) {\n    assert nums[i] == expectedNums[i];\n}\n</pre>\n\n<p>If all assertions pass, then your solution will be <strong>accepted</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,2,3], val = 3\n<strong>Output:</strong> 2, nums = [2,2,_,_]\n<strong>Explanation:</strong> Your function should return k = 2, with the first two elements of nums being 2.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,2,2,3,0,4,2], val = 2\n<strong>Output:</strong> 5, nums = [0,1,4,0,3,_,_,_]\n<strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4.\nNote that the five elements can be returned in any order.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 50</code></li>\n\t<li><code>0 &lt;= val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[3,2,2,3]\n3\n[0,1,2,2,3,0,4,2]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [
        "The problem statement clearly asks us to modify the array in-place and it also says that the element beyond the new length of the array can be anything. Given an element, we need to remove all the occurrences of it from the array. We don't technically need to <b>remove</b> that element per-say, right?",
        "We can move all the occurrences of this element to the end of the array. Use two pointers!\r\n<br><img src=\"https://assets.leetcode.com/uploads/2019/10/20/hint_remove_element.png\" width=\"500\"/>",
        "Yet another direction of thought is to consider the elements to be removed as non-existent. In a single pass, if we keep copying the visible elements in-place, that should also solve this problem for us."
      ],
      "solution": {
        "id": "22",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2772,
      "dislikes": 3848,
      "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted Array\", \"titleSlug\": \"remove-duplicates-from-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove Linked List Elements\", \"titleSlug\": \"remove-linked-list-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Move Zeroes\", \"titleSlug\": \"move-zeroes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485764,
      "commentCount": 738,
      "topLevelCommentCount": 507
    },
    "classAndMethodDefinition": "def removeElement(self, nums: List[int], val: int) -> int:\\r\n        index = 0\\r"
  },
  {
    "stat": {
      "question_id": 55,
      "question__article__live": true,
      "question__article__slug": "jump-game",
      "question__article__has_video_solution": false,
      "question__title": "Jump Game",
      "question__title_slug": "jump-game",
      "question__hide": false,
      "total_acs": 2102662,
      "total_submitted": 5428375,
      "frontend_question_id": 55,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/jump-game",
      "questionId": "55",
      "questionFrontendId": "55",
      "questionTitle": "Jump Game",
      "titleSlug": "jump-game",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code>. You are initially positioned at the array&#39;s <strong>first index</strong>, and each element in the array represents your maximum jump length at that position.</p>\n\n<p>Return <code>true</code><em> if you can reach the last index, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1,0,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[2,3,1,1,4]\n[3,2,1,0,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "35",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 19560,
      "dislikes": 1263,
      "similarQuestions": "[{\"title\": \"Jump Game II\", \"titleSlug\": \"jump-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Jump Game III\", \"titleSlug\": \"jump-game-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Jump Game VII\", \"titleSlug\": \"jump-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Jump Game VIII\", \"titleSlug\": \"jump-game-viii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Visited Cells in a Grid\", \"titleSlug\": \"minimum-number-of-visited-cells-in-a-grid\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Largest Element in an Array after Merge Operations\", \"titleSlug\": \"largest-element-in-an-array-after-merge-operations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485792,
      "commentCount": 405,
      "topLevelCommentCount": 221
    },
    "classAndMethodDefinition": "def canJump(self, nums):\n        m = 0"
  },
  {
    "stat": {
      "question_id": 69,
      "question__article__live": true,
      "question__article__slug": "sqrtx",
      "question__article__has_video_solution": true,
      "question__title": "Sqrt(x)",
      "question__title_slug": "sqrtx",
      "question__hide": false,
      "total_acs": 2131534,
      "total_submitted": 5427246,
      "frontend_question_id": 69,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sqrtx",
      "questionId": "69",
      "questionFrontendId": "69",
      "questionTitle": "Sqrt(x)",
      "titleSlug": "sqrtx",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a non-negative integer <code>x</code>, return <em>the square root of </em><code>x</code><em> rounded down to the nearest integer</em>. The returned integer should be <strong>non-negative</strong> as well.</p>\n\n<p>You <strong>must not use</strong> any built-in exponent function or operator.</p>\n\n<ul>\n\t<li>For example, do not use <code>pow(x, 0.5)</code> in c++ or <code>x ** 0.5</code> in python.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The square root of 4 is 2, so we return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 8\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= x &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "4\n8",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [
        "Try exploring all integers. (Credits: @annujoshi)",
        "Use the sorted property of integers to reduced the search space. (Credits: @annujoshi)"
      ],
      "solution": {
        "id": "757",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8280,
      "dislikes": 4518,
      "similarQuestions": "[{\"title\": \"Pow(x, n)\", \"titleSlug\": \"powx-n\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Perfect Square\", \"titleSlug\": \"valid-perfect-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485806,
      "commentCount": 351,
      "topLevelCommentCount": 223
    },
    "classAndMethodDefinition": "class Solution:\n    def mySqrt(self, x: int) -> int:"
  },
  {
    "stat": {
      "question_id": 56,
      "question__article__live": true,
      "question__article__slug": "merge-intervals",
      "question__article__has_video_solution": true,
      "question__title": "Merge Intervals",
      "question__title_slug": "merge-intervals",
      "question__hide": false,
      "total_acs": 2591883,
      "total_submitted": 5415181,
      "frontend_question_id": 56,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/merge-intervals",
      "questionId": "56",
      "questionFrontendId": "56",
      "questionTitle": "Merge Intervals",
      "titleSlug": "merge-intervals",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array&nbsp;of <code>intervals</code>&nbsp;where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>, merge all overlapping intervals, and return <em>an array of the non-overlapping intervals that cover all the intervals in the input</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,3],[2,6],[8,10],[15,18]]\n<strong>Output:</strong> [[1,6],[8,10],[15,18]]\n<strong>Explanation:</strong> Since intervals [1,3] and [2,6] overlap, merge them into [1,6].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,4],[4,5]]\n<strong>Output:</strong> [[1,5]]\n<strong>Explanation:</strong> Intervals [1,4] and [4,5] are considered overlapping.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,3],[2,6],[8,10],[15,18]]\n[[1,4],[4,5]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "294",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "companyTagStats": null,
      "likes": 22368,
      "dislikes": 789,
      "similarQuestions": "[{\"title\": \"Insert Interval\", \"titleSlug\": \"insert-interval\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Meeting Rooms\", \"titleSlug\": \"meeting-rooms\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Teemo Attacking\", \"titleSlug\": \"teemo-attacking\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Bold Tag in String\", \"titleSlug\": \"add-bold-tag-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Employee Free Time\", \"titleSlug\": \"employee-free-time\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Partition Labels\", \"titleSlug\": \"partition-labels\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Interval List Intersections\", \"titleSlug\": \"interval-list-intersections\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Amount of New Area Painted Each Day\", \"titleSlug\": \"amount-of-new-area-painted-each-day\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Substring of One Repeating Character\", \"titleSlug\": \"longest-substring-of-one-repeating-character\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Integers in Intervals\", \"titleSlug\": \"count-integers-in-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Divide Intervals Into Minimum Number of Groups\", \"titleSlug\": \"divide-intervals-into-minimum-number-of-groups\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Determine if Two Events Have Conflict\", \"titleSlug\": \"determine-if-two-events-have-conflict\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Ways to Group Overlapping Ranges\", \"titleSlug\": \"count-ways-to-group-overlapping-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Points That Intersect With Cars\", \"titleSlug\": \"points-that-intersect-with-cars\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Days Without Meetings\", \"titleSlug\": \"count-days-without-meetings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485793,
      "commentCount": 183,
      "topLevelCommentCount": 123
    },
    "classAndMethodDefinition": "def merge(self, intervals):\n        out = []"
  },
  {
    "stat": {
      "question_id": 66,
      "question__article__live": true,
      "question__article__slug": "plus-one",
      "question__article__has_video_solution": false,
      "question__title": "Plus One",
      "question__title_slug": "plus-one",
      "question__hide": false,
      "total_acs": 2431504,
      "total_submitted": 5284098,
      "frontend_question_id": 66,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/plus-one",
      "questionId": "66",
      "questionFrontendId": "66",
      "questionTitle": "Plus One",
      "titleSlug": "plus-one",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given a <strong>large integer</strong> represented as an integer array <code>digits</code>, where each <code>digits[i]</code> is the <code>i<sup>th</sup></code> digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading <code>0</code>&#39;s.</p>\n\n<p>Increment the large integer by one and return <em>the resulting array of digits</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [1,2,3]\n<strong>Output:</strong> [1,2,4]\n<strong>Explanation:</strong> The array represents the integer 123.\nIncrementing by one gives 123 + 1 = 124.\nThus, the result should be [1,2,4].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [4,3,2,1]\n<strong>Output:</strong> [4,3,2,2]\n<strong>Explanation:</strong> The array represents the integer 4321.\nIncrementing by one gives 4321 + 1 = 4322.\nThus, the result should be [4,3,2,2].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [9]\n<strong>Output:</strong> [1,0]\n<strong>Explanation:</strong> The array represents the integer 9.\nIncrementing by one gives 9 + 1 = 10.\nThus, the result should be [1,0].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= digits.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= digits[i] &lt;= 9</code></li>\n\t<li><code>digits</code> does not contain any leading <code>0</code>&#39;s.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[4,3,2,1]\n[9]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "890",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9480,
      "dislikes": 5411,
      "similarQuestions": "[{\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Plus One Linked List\", \"titleSlug\": \"plus-one-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add to Array-Form of Integer\", \"titleSlug\": \"add-to-array-form-of-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Reduce an Integer to 0\", \"titleSlug\": \"minimum-operations-to-reduce-an-integer-to-0\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485803,
      "commentCount": 334,
      "topLevelCommentCount": 236
    },
    "classAndMethodDefinition": "def plusOne(digits):\n        num = 0"
  },
  {
    "stat": {
      "question_id": 283,
      "question__article__live": true,
      "question__article__slug": "move-zeroes",
      "question__article__has_video_solution": true,
      "question__title": "Move Zeroes",
      "question__title_slug": "move-zeroes",
      "question__hide": false,
      "total_acs": 3270908,
      "total_submitted": 5272268,
      "frontend_question_id": 283,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/move-zeroes",
      "questionId": "283",
      "questionFrontendId": "283",
      "questionTitle": "Move Zeroes",
      "titleSlug": "move-zeroes",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, move all <code>0</code>&#39;s to the end of it while maintaining the relative order of the non-zero elements.</p>\n\n<p><strong>Note</strong> that you must do this in-place without making a copy of the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,0,3,12]\n<strong>Output:</strong> [1,3,12,0,0]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [0]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you minimize the total number of operations done?",
      "exampleTestcases": "[0,1,0,3,12]\n[0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [
        "<b>In-place</b> means we should not be allocating any space for extra array. But we are allowed to modify the existing array. However, as a first step, try coming up with a solution that makes use of additional space. For this problem as well, first apply the idea discussed using an additional array and the in-place solution will pop up eventually.",
        "A <b>two-pointer</b> approach could be helpful here. The idea would be to have one pointer for iterating the array and another pointer that just works on the non-zero elements of the array."
      ],
      "solution": {
        "id": "52",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16890,
      "dislikes": 473,
      "similarQuestions": "[{\"title\": \"Remove Element\", \"titleSlug\": \"remove-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Apply Operations to an Array\", \"titleSlug\": \"apply-operations-to-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486020,
      "commentCount": 298,
      "topLevelCommentCount": 186
    },
    "classAndMethodDefinition": "def moveZeroes(self, nums: list) -> None:\n        slow = 0"
  },
  {
    "stat": {
      "question_id": 50,
      "question__article__live": true,
      "question__article__slug": "powx-n",
      "question__article__has_video_solution": false,
      "question__title": "Pow(x, n)",
      "question__title_slug": "powx-n",
      "question__hide": false,
      "total_acs": 1808097,
      "total_submitted": 5104306,
      "frontend_question_id": 50,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/powx-n",
      "questionId": "50",
      "questionFrontendId": "50",
      "questionTitle": "Pow(x, n)",
      "titleSlug": "powx-n",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Implement <a href=\"http://www.cplusplus.com/reference/valarray/pow/\" target=\"_blank\">pow(x, n)</a>, which calculates <code>x</code> raised to the power <code>n</code> (i.e., <code>x<sup>n</sup></code>).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 2.00000, n = 10\n<strong>Output:</strong> 1024.00000\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 2.10000, n = 3\n<strong>Output:</strong> 9.26100\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 2.00000, n = -2\n<strong>Output:</strong> 0.25000\n<strong>Explanation:</strong> 2<sup>-2</sup> = 1/2<sup>2</sup> = 1/4 = 0.25\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-100.0 &lt; x &lt; 100.0</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup>-1</code></li>\n\t<li><code>n</code> is an integer.</li>\n\t<li>Either <code>x</code> is not zero or <code>n &gt; 0</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sup>n</sup> &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "2.00000\n10\n2.10000\n3\n2.00000\n-2",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1922",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9886,
      "dislikes": 9617,
      "similarQuestions": "[{\"title\": \"Sqrt(x)\", \"titleSlug\": \"sqrtx\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Super Pow\", \"titleSlug\": \"super-pow\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Collisions of Monkeys on a Polygon\", \"titleSlug\": \"count-collisions-of-monkeys-on-a-polygon\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485787,
      "commentCount": 511,
      "topLevelCommentCount": 322
    },
    "classAndMethodDefinition": "def myPow(self, x, n):\n            return x ** n"
  },
  {
    "stat": {
      "question_id": 169,
      "question__article__live": true,
      "question__article__slug": "majority-element",
      "question__article__has_video_solution": false,
      "question__title": "Majority Element",
      "question__title_slug": "majority-element",
      "question__hide": false,
      "total_acs": 3265258,
      "total_submitted": 5011284,
      "frontend_question_id": 169,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/majority-element",
      "questionId": "169",
      "questionFrontendId": "169",
      "questionTitle": "Majority Element",
      "titleSlug": "majority-element",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code> of size <code>n</code>, return <em>the majority element</em>.</p>\n\n<p>The majority element is the element that appears more than <code>&lfloor;n / 2&rfloor;</code> times. You may assume that the majority element always exists in the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,3]\n<strong>Output:</strong> 3\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,1,1,1,2,2]\n<strong>Output:</strong> 2\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:</strong> Could you solve the problem in linear time and in <code>O(1)</code> space?",
      "exampleTestcases": "[3,2,3]\n[2,2,1,1,1,2,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "293",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 19432,
      "dislikes": 646,
      "similarQuestions": "[{\"title\": \"Majority Element II\", \"titleSlug\": \"majority-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check If a Number Is Majority Element in a Sorted Array\", \"titleSlug\": \"check-if-a-number-is-majority-element-in-a-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Most Frequent Even Element\", \"titleSlug\": \"most-frequent-even-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Index of a Valid Split\", \"titleSlug\": \"minimum-index-of-a-valid-split\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Exceed Threshold Value I\", \"titleSlug\": \"minimum-operations-to-exceed-threshold-value-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485906,
      "commentCount": 446,
      "topLevelCommentCount": 271
    },
    "classAndMethodDefinition": "class Solution:\n    def majorityElement(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 34,
      "question__article__live": true,
      "question__article__slug": "find-first-and-last-position-of-element-in-sorted-array",
      "question__article__has_video_solution": false,
      "question__title": "Find First and Last Position of Element in Sorted Array",
      "question__title_slug": "find-first-and-last-position-of-element-in-sorted-array",
      "question__hide": false,
      "total_acs": 2207946,
      "total_submitted": 4899512,
      "frontend_question_id": 34,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
      "questionId": "34",
      "questionFrontendId": "34",
      "questionTitle": "Find First and Last Position of Element in Sorted Array",
      "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code> sorted in non-decreasing order, find the starting and ending position of a given <code>target</code> value.</p>\n\n<p>If <code>target</code> is not found in the array, return <code>[-1, -1]</code>.</p>\n\n<p>You must&nbsp;write an algorithm with&nbsp;<code>O(log n)</code> runtime complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 8\n<strong>Output:</strong> [3,4]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 6\n<strong>Output:</strong> [-1,-1]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [], target = 0\n<strong>Output:</strong> [-1,-1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup>&nbsp;&lt;= nums[i]&nbsp;&lt;= 10<sup>9</sup></code></li>\n\t<li><code>nums</code> is a non-decreasing array.</li>\n\t<li><code>-10<sup>9</sup>&nbsp;&lt;= target&nbsp;&lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[5,7,7,8,8,10]\n8\n[5,7,7,8,8,10]\n6\n[]\n0",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1123",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 20671,
      "dislikes": 532,
      "similarQuestions": "[{\"title\": \"First Bad Version\", \"titleSlug\": \"first-bad-version\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Plates Between Candles\", \"titleSlug\": \"plates-between-candles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Target Indices After Sorting Array\", \"titleSlug\": \"find-target-indices-after-sorting-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485771,
      "commentCount": 318,
      "topLevelCommentCount": 202
    },
    "classAndMethodDefinition": "def searchRange(self, nums: List[int], target: int) -> List[int]:\n        "
  },
  {
    "stat": {
      "question_id": 200,
      "question__article__live": true,
      "question__article__slug": "number-of-islands",
      "question__article__has_video_solution": true,
      "question__title": "Number of Islands",
      "question__title_slug": "number-of-islands",
      "question__hide": false,
      "total_acs": 2909035,
      "total_submitted": 4827298,
      "frontend_question_id": 200,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-islands",
      "questionId": "200",
      "questionFrontendId": "200",
      "questionTitle": "Number of Islands",
      "titleSlug": "number-of-islands",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> 2D binary grid <code>grid</code> which represents a map of <code>&#39;1&#39;</code>s (land) and <code>&#39;0&#39;</code>s (water), return <em>the number of islands</em>.</p>\n\n<p>An <strong>island</strong> is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [\n  [&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;]\n]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;]\n]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 300</code></li>\n\t<li><code>grid[i][j]</code> is <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[\"1\",\"1\",\"1\",\"1\",\"0\"],[\"1\",\"1\",\"0\",\"1\",\"0\"],[\"1\",\"1\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"0\",\"0\"]]\n[[\"1\",\"1\",\"0\",\"0\",\"0\"],[\"1\",\"1\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"1\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"1\",\"1\"]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "342",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 22930,
      "dislikes": 524,
      "similarQuestions": "[{\"title\": \"Surrounded Regions\", \"titleSlug\": \"surrounded-regions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Islands II\", \"titleSlug\": \"number-of-islands-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Connected Components in an Undirected Graph\", \"titleSlug\": \"number-of-connected-components-in-an-undirected-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Battleships in a Board\", \"titleSlug\": \"battleships-in-a-board\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Islands\", \"titleSlug\": \"number-of-distinct-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Area of Island\", \"titleSlug\": \"max-area-of-island\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Sub Islands\", \"titleSlug\": \"count-sub-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All Groups of Farmland\", \"titleSlug\": \"find-all-groups-of-farmland\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Unreachable Pairs of Nodes in an Undirected Graph\", \"titleSlug\": \"count-unreachable-pairs-of-nodes-in-an-undirected-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Fish in a Grid\", \"titleSlug\": \"maximum-number-of-fish-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485937,
      "commentCount": 346,
      "topLevelCommentCount": 210
    },
    "classAndMethodDefinition": "def numIslands(self, grid):\n        if not grid:"
  },
  {
    "stat": {
      "question_id": 198,
      "question__article__live": true,
      "question__article__slug": "house-robber",
      "question__article__has_video_solution": false,
      "question__title": "House Robber",
      "question__title_slug": "house-robber",
      "question__hide": false,
      "total_acs": 2403576,
      "total_submitted": 4673376,
      "frontend_question_id": 198,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/house-robber",
      "questionId": "198",
      "questionFrontendId": "198",
      "questionTitle": "House Robber",
      "titleSlug": "house-robber",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and <b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p>\n\n<p>Given an integer array <code>nums</code> representing the amount of money of each house, return <em>the maximum amount of money you can rob tonight <b>without alerting the police</b></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,9,3,1]\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).\nTotal amount you can rob = 2 + 9 + 1 = 12.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 400</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,1]\n[2,7,9,3,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1119",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 21234,
      "dislikes": 433,
      "similarQuestions": "[{\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House\", \"titleSlug\": \"paint-house\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint Fence\", \"titleSlug\": \"paint-fence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber III\", \"titleSlug\": \"house-robber-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-negative Integers without Consecutive Ones\", \"titleSlug\": \"non-negative-integers-without-consecutive-ones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Coin Path\", \"titleSlug\": \"coin-path\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Delete and Earn\", \"titleSlug\": \"delete-and-earn\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Solving Questions With Brainpower\", \"titleSlug\": \"solving-questions-with-brainpower\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Ways to Place Houses\", \"titleSlug\": \"count-number-of-ways-to-place-houses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber IV\", \"titleSlug\": \"house-robber-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Mice and Cheese\", \"titleSlug\": \"mice-and-cheese\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Largest Element in an Array after Merge Operations\", \"titleSlug\": \"largest-element-in-an-array-after-merge-operations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485935,
      "commentCount": 345,
      "topLevelCommentCount": 220
    },
    "classAndMethodDefinition": "class Solution(object):\n    def rob(self, nums):"
  },
  {
    "stat": {
      "question_id": 792,
      "question__article__live": true,
      "question__article__slug": "binary-search",
      "question__article__has_video_solution": false,
      "question__title": "Binary Search",
      "question__title_slug": "binary-search",
      "question__hide": false,
      "total_acs": 2625161,
      "total_submitted": 4505247,
      "frontend_question_id": 704,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-search",
      "questionId": "792",
      "questionFrontendId": "704",
      "questionTitle": "Binary Search",
      "titleSlug": "binary-search",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code> which is sorted in ascending order, and an integer <code>target</code>, write a function to search <code>target</code> in <code>nums</code>. If <code>target</code> exists, then return its index. Otherwise, return <code>-1</code>.</p>\n\n<p>You must write an algorithm with <code>O(log n)</code> runtime complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,0,3,5,9,12], target = 9\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> 9 exists in nums and its index is 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,0,3,5,9,12], target = 2\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 2 does not exist in nums so return -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt; nums[i], target &lt; 10<sup>4</sup></code></li>\n\t<li>All the integers in <code>nums</code> are <strong>unique</strong>.</li>\n\t<li><code>nums</code> is sorted in ascending order.</li>\n</ul>\n",
      "exampleTestcases": "[-1,0,3,5,9,12]\n9\n[-1,0,3,5,9,12]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1608",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11930,
      "dislikes": 254,
      "similarQuestions": "[{\"title\": \"Search in a Sorted Array of Unknown Size\", \"titleSlug\": \"search-in-a-sorted-array-of-unknown-size\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Count of Positive Integer and Negative Integer\", \"titleSlug\": \"maximum-count-of-positive-integer-and-negative-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486504,
      "commentCount": 184,
      "topLevelCommentCount": 120
    },
    "classAndMethodDefinition": "def search(self, nums, target):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 29,
      "question__article__live": true,
      "question__article__slug": "divide-integers",
      "question__article__has_video_solution": false,
      "question__title": "Divide Two Integers",
      "question__title_slug": "divide-two-integers",
      "question__hide": false,
      "total_acs": 797393,
      "total_submitted": 4499102,
      "frontend_question_id": 29,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/divide-two-integers",
      "questionId": "29",
      "questionFrontendId": "29",
      "questionTitle": "Divide Two Integers",
      "titleSlug": "divide-two-integers",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two integers <code>dividend</code> and <code>divisor</code>, divide two integers <strong>without</strong> using multiplication, division, and mod operator.</p>\n\n<p>The integer division should truncate toward zero, which means losing its fractional part. For example, <code>8.345</code> would be truncated to <code>8</code>, and <code>-2.7335</code> would be truncated to <code>-2</code>.</p>\n\n<p>Return <em>the <strong>quotient</strong> after dividing </em><code>dividend</code><em> by </em><code>divisor</code>.</p>\n\n<p><strong>Note: </strong>Assume we are dealing with an environment that could only store integers within the <strong>32-bit</strong> signed integer range: <code>[&minus;2<sup>31</sup>, 2<sup>31</sup> &minus; 1]</code>. For this problem, if the quotient is <strong>strictly greater than</strong> <code>2<sup>31</sup> - 1</code>, then return <code>2<sup>31</sup> - 1</code>, and if the quotient is <strong>strictly less than</strong> <code>-2<sup>31</sup></code>, then return <code>-2<sup>31</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> dividend = 10, divisor = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 10/3 = 3.33333.. which is truncated to 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> dividend = 7, divisor = -3\n<strong>Output:</strong> -2\n<strong>Explanation:</strong> 7/-3 = -2.33333.. which is truncated to -2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= dividend, divisor &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>divisor != 0</code></li>\n</ul>\n",
      "exampleTestcases": "10\n3\n7\n-3",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "891",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5229,
      "dislikes": 14858,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485766,
      "commentCount": 316,
      "topLevelCommentCount": 242
    },
    "classAndMethodDefinition": "def divide(self, dividend, divisor):\n        positive = (dividend < 0) is (divisor < 0)"
  },
  {
    "stat": {
      "question_id": 49,
      "question__article__live": true,
      "question__article__slug": "group-anagrams",
      "question__article__has_video_solution": true,
      "question__title": "Group Anagrams",
      "question__title_slug": "group-anagrams",
      "question__hide": false,
      "total_acs": 3116106,
      "total_submitted": 4497955,
      "frontend_question_id": 49,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/group-anagrams",
      "questionId": "49",
      "questionFrontendId": "49",
      "questionTitle": "Group Anagrams",
      "titleSlug": "group-anagrams",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of strings <code>strs</code>, group <strong>the anagrams</strong> together. You can return the answer in <strong>any order</strong>.</p>\n\n<p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\n<strong>Output:</strong> [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> strs = [\"\"]\n<strong>Output:</strong> [[\"\"]]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> strs = [\"a\"]\n<strong>Output:</strong> [[\"a\"]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= strs.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= strs[i].length &lt;= 100</code></li>\n\t<li><code>strs[i]</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\n[\"\"]\n[\"a\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "236",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 19415,
      "dislikes": 635,
      "similarQuestions": "[{\"title\": \"Valid Anagram\", \"titleSlug\": \"valid-anagram\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Group Shifted Strings\", \"titleSlug\": \"group-shifted-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Resultant Array After Removing Anagrams\", \"titleSlug\": \"find-resultant-array-after-removing-anagrams\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Anagrams\", \"titleSlug\": \"count-anagrams\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485786,
      "commentCount": 347,
      "topLevelCommentCount": 212
    },
    "classAndMethodDefinition": "class Solution:\n    def groupAnagrams(self, strs):"
  },
  {
    "stat": {
      "question_id": 104,
      "question__article__live": true,
      "question__article__slug": "maximum-depth-of-binary-tree",
      "question__article__has_video_solution": true,
      "question__title": "Maximum Depth of Binary Tree",
      "question__title_slug": "maximum-depth-of-binary-tree",
      "question__hide": false,
      "total_acs": 3348652,
      "total_submitted": 4405901,
      "frontend_question_id": 104,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-depth-of-binary-tree",
      "questionId": "104",
      "questionFrontendId": "104",
      "questionTitle": "Maximum Depth of Binary Tree",
      "titleSlug": "maximum-depth-of-binary-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>its maximum depth</em>.</p>\n\n<p>A binary tree&#39;s <strong>maximum depth</strong>&nbsp;is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/tmp-tree.jpg\" style=\"width: 400px; height: 277px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,2]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,null,null,15,7]\n[1,null,2]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "575",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12944,
      "dislikes": 235,
      "similarQuestions": "[{\"title\": \"Balanced Binary Tree\", \"titleSlug\": \"balanced-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Depth of Binary Tree\", \"titleSlug\": \"minimum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Depth of N-ary Tree\", \"titleSlug\": \"maximum-depth-of-n-ary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Time Needed to Inform All Employees\", \"titleSlug\": \"time-needed-to-inform-all-employees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Amount of Time for Binary Tree to Be Infected\", \"titleSlug\": \"amount-of-time-for-binary-tree-to-be-infected\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Height of Binary Tree After Subtree Removal Queries\", \"titleSlug\": \"height-of-binary-tree-after-subtree-removal-queries\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485841,
      "commentCount": 186,
      "topLevelCommentCount": 135
    },
    "classAndMethodDefinition": "def maxDepth(self, root: Optional[TreeNode]) -> int:\n        def dfs(root, depth):"
  },
  {
    "stat": {
      "question_id": 238,
      "question__article__live": true,
      "question__article__slug": "product-of-array-except-self",
      "question__article__has_video_solution": true,
      "question__title": "Product of Array Except Self",
      "question__title_slug": "product-of-array-except-self",
      "question__hide": false,
      "total_acs": 2907241,
      "total_submitted": 4363473,
      "frontend_question_id": 238,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/product-of-array-except-self",
      "questionId": "238",
      "questionFrontendId": "238",
      "questionTitle": "Product of Array Except Self",
      "titleSlug": "product-of-array-except-self",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <em>an array</em> <code>answer</code> <em>such that</em> <code>answer[i]</code> <em>is equal to the product of all the elements of</em> <code>nums</code> <em>except</em> <code>nums[i]</code>.</p>\n\n<p>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</p>\n\n<p>You must write an algorithm that runs in&nbsp;<code>O(n)</code>&nbsp;time and without using the division operation.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> [24,12,8,6]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [-1,1,0,-3,3]\n<strong>Output:</strong> [0,0,9,0,0]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-30 &lt;= nums[i] &lt;= 30</code></li>\n\t<li>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong>&nbsp;Can you solve the problem in <code>O(1)</code>&nbsp;extra&nbsp;space complexity? (The output array <strong>does not</strong> count as extra space for space complexity analysis.)</p>\n",
      "exampleTestcases": "[1,2,3,4]\n[-1,1,0,-3,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [
        "Think how you can efficiently utilize prefix and suffix products to calculate the product of all elements except self for each index. Can you pre-compute the prefix and suffix products in linear time to avoid redundant calculations?",
        "Can you minimize additional space usage by reusing memory or modifying the input array to store intermediate results?"
      ],
      "solution": {
        "id": "727",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 22807,
      "dislikes": 1436,
      "similarQuestions": "[{\"title\": \"Trapping Rain Water\", \"titleSlug\": \"trapping-rain-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House II\", \"titleSlug\": \"paint-house-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Difference in Sums After Removal of Elements\", \"titleSlug\": \"minimum-difference-in-sums-after-removal-of-elements\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Construct Product Matrix\", \"titleSlug\": \"construct-product-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485975,
      "commentCount": 570,
      "topLevelCommentCount": 331
    },
    "classAndMethodDefinition": "class Solution:\n    def productExceptSelf(self, nums: List[int]) -> List[int]:"
  },
  {
    "stat": {
      "question_id": 322,
      "question__article__live": true,
      "question__article__slug": "coin-change",
      "question__article__has_video_solution": true,
      "question__title": "Coin Change",
      "question__title_slug": "coin-change",
      "question__hide": false,
      "total_acs": 1937517,
      "total_submitted": 4334845,
      "frontend_question_id": 322,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/coin-change",
      "questionId": "322",
      "questionFrontendId": "322",
      "questionTitle": "Coin Change",
      "titleSlug": "coin-change",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>coins</code> representing coins of different denominations and an integer <code>amount</code> representing a total amount of money.</p>\n\n<p>Return <em>the fewest number of coins that you need to make up that amount</em>. If that amount of money cannot be made up by any combination of the coins, return <code>-1</code>.</p>\n\n<p>You may assume that you have an infinite number of each kind of coin.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [1,2,5], amount = 11\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 11 = 5 + 5 + 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [2], amount = 3\n<strong>Output:</strong> -1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [1], amount = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= coins.length &lt;= 12</code></li>\n\t<li><code>1 &lt;= coins[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>0 &lt;= amount &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,5]\n11\n[2]\n3\n[1]\n0",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "49",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 19057,
      "dislikes": 460,
      "similarQuestions": "[{\"title\": \"Minimum Cost For Tickets\", \"titleSlug\": \"minimum-cost-for-tickets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Value of K Coins From Piles\", \"titleSlug\": \"maximum-value-of-k-coins-from-piles\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Operations to Convert Time\", \"titleSlug\": \"minimum-number-of-operations-to-convert-time\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost to Split an Array\", \"titleSlug\": \"minimum-cost-to-split-an-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count of Sub-Multisets With Bounded Sum\", \"titleSlug\": \"count-of-sub-multisets-with-bounded-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Length of the Longest Subsequence That Sums to Target\", \"titleSlug\": \"length-of-the-longest-subsequence-that-sums-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Coins to be Added\", \"titleSlug\": \"minimum-number-of-coins-to-be-added\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Most Expensive Item That Can Not Be Bought\", \"titleSlug\": \"most-expensive-item-that-can-not-be-bought\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486059,
      "commentCount": 186,
      "topLevelCommentCount": 113
    },
    "classAndMethodDefinition": "class Solution:\n    def coinChange(self, coins: List[int], amount: int) -> int:"
  },
  {
    "stat": {
      "question_id": 128,
      "question__article__live": true,
      "question__article__slug": "longest-consecutive-sequence",
      "question__article__has_video_solution": false,
      "question__title": "Longest Consecutive Sequence",
      "question__title_slug": "longest-consecutive-sequence",
      "question__hide": false,
      "total_acs": 1989466,
      "total_submitted": 4198020,
      "frontend_question_id": 128,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-consecutive-sequence",
      "questionId": "128",
      "questionFrontendId": "128",
      "questionTitle": "Longest Consecutive Sequence",
      "titleSlug": "longest-consecutive-sequence",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an unsorted array of integers <code>nums</code>, return <em>the length of the longest consecutive elements sequence.</em></p>\n\n<p>You must write an algorithm that runs in&nbsp;<code>O(n)</code>&nbsp;time.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [100,4,200,1,3,2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest consecutive elements sequence is <code>[1, 2, 3, 4]</code>. Therefore its length is 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,3,7,2,5,8,4,6,0,1]\n<strong>Output:</strong> 9\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[100,4,200,1,3,2]\n[0,3,7,2,5,8,4,6,0,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "280",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 20234,
      "dislikes": 1039,
      "similarQuestions": "[{\"title\": \"Binary Tree Longest Consecutive Sequence\", \"titleSlug\": \"binary-tree-longest-consecutive-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Three Consecutive Integers That Sum to a Given Number\", \"titleSlug\": \"find-three-consecutive-integers-that-sum-to-a-given-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Consecutive Floors Without Special Floors\", \"titleSlug\": \"maximum-consecutive-floors-without-special-floors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Length of the Longest Alphabetical Continuous Substring\", \"titleSlug\": \"length-of-the-longest-alphabetical-continuous-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Maximum Number of Elements in Subset\", \"titleSlug\": \"find-the-maximum-number-of-elements-in-subset\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485865,
      "commentCount": 425,
      "topLevelCommentCount": 231
    },
    "classAndMethodDefinition": "class Solution:\n    def longestConsecutive(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 58,
      "question__article__live": true,
      "question__article__slug": "length-of-last-word",
      "question__article__has_video_solution": false,
      "question__title": "Length of Last Word",
      "question__title_slug": "length-of-last-word",
      "question__hide": false,
      "total_acs": 2210135,
      "total_submitted": 4139619,
      "frontend_question_id": 58,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/length-of-last-word",
      "questionId": "58",
      "questionFrontendId": "58",
      "questionTitle": "Length of Last Word",
      "titleSlug": "length-of-last-word",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> consisting of words and spaces, return <em>the length of the <strong>last</strong> word in the string.</em></p>\n\n<p>A <strong>word</strong> is a maximal <span data-keyword=\"substring-nonempty\">substring</span> consisting of non-space characters only.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Hello World&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The last word is &quot;World&quot; with length 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;   fly me   to   the moon  &quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The last word is &quot;moon&quot; with length 4.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;luffy is still joyboy&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The last word is &quot;joyboy&quot; with length 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of only English letters and spaces <code>&#39; &#39;</code>.</li>\n\t<li>There will be at least one word in <code>s</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"Hello World\"\n\"   fly me   to   the moon  \"\n\"luffy is still joyboy\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "933",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5300,
      "dislikes": 292,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485795,
      "commentCount": 413,
      "topLevelCommentCount": 316
    },
    "classAndMethodDefinition": "class Solution:\n    def lengthOfLastWord(self, s: str) -> int:"
  },
  {
    "stat": {
      "question_id": 136,
      "question__article__live": true,
      "question__article__slug": "single-number",
      "question__article__has_video_solution": false,
      "question__title": "Single Number",
      "question__title_slug": "single-number",
      "question__hide": false,
      "total_acs": 3035133,
      "total_submitted": 4106066,
      "frontend_question_id": 136,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/single-number",
      "questionId": "136",
      "questionFrontendId": "136",
      "questionTitle": "Single Number",
      "titleSlug": "single-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a <strong>non-empty</strong>&nbsp;array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p>\n\n<p>You must&nbsp;implement a solution with a linear runtime complexity and use&nbsp;only constant&nbsp;extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,1]\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [4,1,2,1,2]\n<strong>Output:</strong> 4\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-3 * 10<sup>4</sup> &lt;= nums[i] &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li>Each element in the array appears twice except for one element which appears only once.</li>\n</ul>\n",
      "exampleTestcases": "[2,2,1]\n[4,1,2,1,2]\n[1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [
        "Think about the XOR (^) operator's property."
      ],
      "solution": {
        "id": "234",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16614,
      "dislikes": 736,
      "similarQuestions": "[{\"title\": \"Single Number II\", \"titleSlug\": \"single-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Single Number III\", \"titleSlug\": \"single-number-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Difference\", \"titleSlug\": \"find-the-difference\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the XOR of Numbers Which Appear Twice\", \"titleSlug\": \"find-the-xor-of-numbers-which-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485873,
      "commentCount": 226,
      "topLevelCommentCount": 156
    },
    "classAndMethodDefinition": "class Solution:\n  def singleNumber(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 79,
      "question__article__live": true,
      "question__article__slug": "word-search",
      "question__article__has_video_solution": false,
      "question__title": "Word Search",
      "question__title_slug": "word-search",
      "question__hide": false,
      "total_acs": 1784276,
      "total_submitted": 4102527,
      "frontend_question_id": 79,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/word-search",
      "questionId": "79",
      "questionFrontendId": "79",
      "questionTitle": "Word Search",
      "titleSlug": "word-search",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> grid of characters <code>board</code> and a string <code>word</code>, return <code>true</code> <em>if</em> <code>word</code> <em>exists in the grid</em>.</p>\n\n<p>The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/word2.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;E&quot;],[&quot;S&quot;,&quot;F&quot;,&quot;C&quot;,&quot;S&quot;],[&quot;A&quot;,&quot;D&quot;,&quot;E&quot;,&quot;E&quot;]], word = &quot;ABCCED&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/word-1.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;E&quot;],[&quot;S&quot;,&quot;F&quot;,&quot;C&quot;,&quot;S&quot;],[&quot;A&quot;,&quot;D&quot;,&quot;E&quot;,&quot;E&quot;]], word = &quot;SEE&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/15/word3.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;E&quot;],[&quot;S&quot;,&quot;F&quot;,&quot;C&quot;,&quot;S&quot;],[&quot;A&quot;,&quot;D&quot;,&quot;E&quot;,&quot;E&quot;]], word = &quot;ABCB&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == board.length</code></li>\n\t<li><code>n = board[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 6</code></li>\n\t<li><code>1 &lt;= word.length &lt;= 15</code></li>\n\t<li><code>board</code> and <code>word</code> consists of only lowercase and uppercase English letters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you use search pruning to make your solution faster with a larger <code>board</code>?</p>\n",
      "exampleTestcases": "[[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]]\n\"ABCCED\"\n[[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]]\n\"SEE\"\n[[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]]\n\"ABCB\"",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "859",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16002,
      "dislikes": 677,
      "similarQuestions": "[{\"title\": \"Word Search II\", \"titleSlug\": \"word-search-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485816,
      "commentCount": 382,
      "topLevelCommentCount": 225
    },
    "classAndMethodDefinition": "def exist(self, board, word):\n        if not board:"
  },
  {
    "stat": {
      "question_id": 146,
      "question__article__live": true,
      "question__article__slug": "lru-cache",
      "question__article__has_video_solution": false,
      "question__title": "LRU Cache",
      "question__title_slug": "lru-cache",
      "question__hide": false,
      "total_acs": 1744436,
      "total_submitted": 4045220,
      "frontend_question_id": 146,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/lru-cache",
      "questionId": "146",
      "questionFrontendId": "146",
      "questionTitle": "LRU Cache",
      "titleSlug": "lru-cache",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Design a data structure that follows the constraints of a <strong><a href=\"https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\" target=\"_blank\">Least Recently Used (LRU) cache</a></strong>.</p>\n\n<p>Implement the <code>LRUCache</code> class:</p>\n\n<ul>\n\t<li><code>LRUCache(int capacity)</code> Initialize the LRU cache with <strong>positive</strong> size <code>capacity</code>.</li>\n\t<li><code>int get(int key)</code> Return the value of the <code>key</code> if the key exists, otherwise return <code>-1</code>.</li>\n\t<li><code>void put(int key, int value)</code> Update the value of the <code>key</code> if the <code>key</code> exists. Otherwise, add the <code>key-value</code> pair to the cache. If the number of keys exceeds the <code>capacity</code> from this operation, <strong>evict</strong> the least recently used key.</li>\n</ul>\n\n<p>The functions <code>get</code> and <code>put</code> must each run in <code>O(1)</code> average time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;LRUCache&quot;, &quot;put&quot;, &quot;put&quot;, &quot;get&quot;, &quot;put&quot;, &quot;get&quot;, &quot;put&quot;, &quot;get&quot;, &quot;get&quot;, &quot;get&quot;]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n<strong>Output</strong>\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n<strong>Explanation</strong>\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // cache is {1=1}\nlRUCache.put(2, 2); // cache is {1=1, 2=2}\nlRUCache.get(1);    // return 1\nlRUCache.put(3, 3); // LRU key was 2, evicts key 2, cache is {1=1, 3=3}\nlRUCache.get(2);    // returns -1 (not found)\nlRUCache.put(4, 4); // LRU key was 1, evicts key 1, cache is {4=4, 3=3}\nlRUCache.get(1);    // return -1 (not found)\nlRUCache.get(3);    // return 3\nlRUCache.get(4);    // return 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= capacity &lt;= 3000</code></li>\n\t<li><code>0 &lt;= key &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= value &lt;= 10<sup>5</sup></code></li>\n\t<li>At most <code>2 * 10<sup>5</sup></code> calls will be made to <code>get</code> and <code>put</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"LRUCache\",\"put\",\"put\",\"get\",\"put\",\"get\",\"put\",\"get\",\"get\",\"get\"]\n[[2],[1,1],[2,2],[1],[3,3],[2],[4,4],[1],[3],[4]]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1928",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 20867,
      "dislikes": 1053,
      "similarQuestions": "[{\"title\": \"LFU Cache\", \"titleSlug\": \"lfu-cache\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Design In-Memory File System\", \"titleSlug\": \"design-in-memory-file-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Design Compressed String Iterator\", \"titleSlug\": \"design-compressed-string-iterator\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Design Most Recently Used Queue\", \"titleSlug\": \"design-most-recently-used-queue\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485883,
      "commentCount": 305,
      "topLevelCommentCount": 212
    },
    "classAndMethodDefinition": "from collections import OrderedDict\n"
  },
  {
    "stat": {
      "question_id": 152,
      "question__article__live": true,
      "question__article__slug": "maximum-product-subarray",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Product Subarray",
      "question__title_slug": "maximum-product-subarray",
      "question__hide": false,
      "total_acs": 1363567,
      "total_submitted": 4030612,
      "frontend_question_id": 152,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-product-subarray",
      "questionId": "152",
      "questionFrontendId": "152",
      "questionTitle": "Maximum Product Subarray",
      "titleSlug": "maximum-product-subarray",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, find a <span data-keyword=\"subarray-nonempty\">subarray</span> that has the largest product, and return <em>the product</em>.</p>\n\n<p>The test cases are generated so that the answer will fit in a <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,-2,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> [2,3] has the largest product 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-2,0,-1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The result cannot be 2, because [-2,-1] is not a subarray.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n\t<li>The product of any subarray of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</li>\n</ul>\n",
      "exampleTestcases": "[2,3,-2,4]\n[-2,0,-1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "977",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 18651,
      "dislikes": 715,
      "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Product of Array Except Self\", \"titleSlug\": \"product-of-array-except-self\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Product of Three Numbers\", \"titleSlug\": \"maximum-product-of-three-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Product Less Than K\", \"titleSlug\": \"subarray-product-less-than-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485889,
      "commentCount": 352,
      "topLevelCommentCount": 201
    },
    "classAndMethodDefinition": "from math import inf\n"
  },
  {
    "stat": {
      "question_id": 23,
      "question__article__live": true,
      "question__article__slug": "merge-k-sorted-list",
      "question__article__has_video_solution": true,
      "question__title": "Merge k Sorted Lists",
      "question__title_slug": "merge-k-sorted-lists",
      "question__hide": false,
      "total_acs": 2122520,
      "total_submitted": 3935481,
      "frontend_question_id": 23,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/merge-k-sorted-lists",
      "questionId": "23",
      "questionFrontendId": "23",
      "questionTitle": "Merge k Sorted Lists",
      "titleSlug": "merge-k-sorted-lists",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given an array of <code>k</code> linked-lists <code>lists</code>, each linked-list is sorted in ascending order.</p>\n\n<p><em>Merge all the linked-lists into one sorted linked-list and return it.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> lists = [[1,4,5],[1,3,4],[2,6]]\n<strong>Output:</strong> [1,1,2,3,4,4,5,6]\n<strong>Explanation:</strong> The linked-lists are:\n[\n  1-&gt;4-&gt;5,\n  1-&gt;3-&gt;4,\n  2-&gt;6\n]\nmerging them into one sorted list:\n1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> lists = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> lists = [[]]\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>k == lists.length</code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= lists[i].length &lt;= 500</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= lists[i][j] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>lists[i]</code> is sorted in <strong>ascending order</strong>.</li>\n\t<li>The sum of <code>lists[i].length</code> will not exceed <code>10<sup>4</sup></code>.</li>\n</ul>\n",
      "exampleTestcases": "[[1,4,5],[1,3,4],[2,6]]\n[]\n[[]]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "237",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 19592,
      "dislikes": 722,
      "similarQuestions": "[{\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Subarrays With Maximum Bitwise OR\", \"titleSlug\": \"smallest-subarrays-with-maximum-bitwise-or\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485760,
      "commentCount": 300,
      "topLevelCommentCount": 180
    },
    "classAndMethodDefinition": "def mergeKLists(self, lists):\n        if not lists:"
  },
  {
    "stat": {
      "question_id": 278,
      "question__article__live": true,
      "question__article__slug": "first-bad-version",
      "question__article__has_video_solution": true,
      "question__title": "First Bad Version",
      "question__title_slug": "first-bad-version",
      "question__hide": false,
      "total_acs": 1749130,
      "total_submitted": 3903957,
      "frontend_question_id": 278,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/first-bad-version",
      "questionId": "278",
      "questionFrontendId": "278",
      "questionTitle": "First Bad Version",
      "titleSlug": "first-bad-version",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.</p>\n\n<p>Suppose you have <code>n</code> versions <code>[1, 2, ..., n]</code> and you want to find out the first bad one, which causes all the following ones to be bad.</p>\n\n<p>You are given an API <code>bool isBadVersion(version)</code> which returns whether <code>version</code> is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, bad = 4\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\ncall isBadVersion(3) -&gt; false\ncall isBadVersion(5)&nbsp;-&gt; true\ncall isBadVersion(4)&nbsp;-&gt; true\nThen 4 is the first bad version.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, bad = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= bad &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "5\n4\n1\n1",
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Interactive",
          "slug": "interactive",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "8",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8406,
      "dislikes": 3315,
      "similarQuestions": "[{\"title\": \"Find First and Last Position of Element in Sorted Array\", \"titleSlug\": \"find-first-and-last-position-of-element-in-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Search Insert Position\", \"titleSlug\": \"search-insert-position\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower\", \"titleSlug\": \"guess-number-higher-or-lower\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486015,
      "commentCount": 261,
      "topLevelCommentCount": 170
    },
    "classAndMethodDefinition": "def firstBadVersion(self, n):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 153,
      "question__article__live": true,
      "question__article__slug": "find-minimum-in-rotated-sorted-array",
      "question__article__has_video_solution": false,
      "question__title": "Find Minimum in Rotated Sorted Array",
      "question__title_slug": "find-minimum-in-rotated-sorted-array",
      "question__hide": false,
      "total_acs": 1983161,
      "total_submitted": 3874294,
      "frontend_question_id": 153,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array",
      "questionId": "153",
      "questionFrontendId": "153",
      "questionTitle": "Find Minimum in Rotated Sorted Array",
      "titleSlug": "find-minimum-in-rotated-sorted-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Suppose an array of length <code>n</code> sorted in ascending order is <strong>rotated</strong> between <code>1</code> and <code>n</code> times. For example, the array <code>nums = [0,1,2,4,5,6,7]</code> might become:</p>\n\n<ul>\n\t<li><code>[4,5,6,7,0,1,2]</code> if it was rotated <code>4</code> times.</li>\n\t<li><code>[0,1,2,4,5,6,7]</code> if it was rotated <code>7</code> times.</li>\n</ul>\n\n<p>Notice that <strong>rotating</strong> an array <code>[a[0], a[1], a[2], ..., a[n-1]]</code> 1 time results in the array <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code>.</p>\n\n<p>Given the sorted rotated array <code>nums</code> of <strong>unique</strong> elements, return <em>the minimum element of this array</em>.</p>\n\n<p>You must write an algorithm that runs in&nbsp;<code>O(log n) time.</code></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,4,5,1,2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The original array was [1,2,3,4,5] rotated 3 times.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,5,6,7,0,1,2]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [11,13,15,17]\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> The original array was [11,13,15,17] and it was rotated 4 times. \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5000</code></li>\n\t<li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li>\n\t<li>All the integers of <code>nums</code> are <strong>unique</strong>.</li>\n\t<li><code>nums</code> is sorted and rotated between <code>1</code> and <code>n</code> times.</li>\n</ul>\n",
      "exampleTestcases": "[3,4,5,1,2]\n[4,5,6,7,0,1,2]\n[11,13,15,17]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [
        "Array was originally in ascending order. Now that the array is rotated, there would be a point in the array where there is a small deflection from the increasing sequence. eg. The array would be something like [4, 5, 6, 7, 0, 1, 2].",
        "You can divide the search space into two and see which direction to go.\r\nCan you think of an algorithm which has O(logN) search complexity?",
        "<ol>\r\n<li>All the elements to the left of inflection point > first element of the array.</li>\r\n<li>All the elements to the right of inflection point < first element of the array.</li>\r\n<ol>"
      ],
      "solution": {
        "id": "549",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13374,
      "dislikes": 595,
      "similarQuestions": "[{\"title\": \"Search in Rotated Sorted Array\", \"titleSlug\": \"search-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Minimum in Rotated Sorted Array II\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485890,
      "commentCount": 250,
      "topLevelCommentCount": 143
    },
    "classAndMethodDefinition": "class Solution:\n    def findMin(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 151,
      "question__article__live": true,
      "question__article__slug": "reverse-words-in-a-string",
      "question__article__has_video_solution": false,
      "question__title": "Reverse Words in a String",
      "question__title_slug": "reverse-words-in-a-string",
      "question__hide": false,
      "total_acs": 1755724,
      "total_submitted": 3841187,
      "frontend_question_id": 151,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-words-in-a-string",
      "questionId": "151",
      "questionFrontendId": "151",
      "questionTitle": "Reverse Words in a String",
      "titleSlug": "reverse-words-in-a-string",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an input string <code>s</code>, reverse the order of the <strong>words</strong>.</p>\n\n<p>A <strong>word</strong> is defined as a sequence of non-space characters. The <strong>words</strong> in <code>s</code> will be separated by at least one space.</p>\n\n<p>Return <em>a string of the words in reverse order concatenated by a single space.</em></p>\n\n<p><b>Note</b> that <code>s</code> may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;the sky is blue&quot;\n<strong>Output:</strong> &quot;blue is sky the&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;  hello world  &quot;\n<strong>Output:</strong> &quot;world hello&quot;\n<strong>Explanation:</strong> Your reversed string should not contain leading or trailing spaces.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a good   example&quot;\n<strong>Output:</strong> &quot;example good a&quot;\n<strong>Explanation:</strong> You need to reduce multiple spaces between two words to a single space in the reversed string.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> contains English letters (upper-case and lower-case), digits, and spaces <code>&#39; &#39;</code>.</li>\n\t<li>There is <strong>at least one</strong> word in <code>s</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><b data-stringify-type=\"bold\">Follow-up:&nbsp;</b>If the string data type is mutable in your language, can&nbsp;you solve it&nbsp;<b data-stringify-type=\"bold\">in-place</b>&nbsp;with&nbsp;<code data-stringify-type=\"code\">O(1)</code>&nbsp;extra space?</p>\n",
      "exampleTestcases": "\"the sky is blue\"\n\"  hello world  \"\n\"a good   example\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "828",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8592,
      "dislikes": 5213,
      "similarQuestions": "[{\"title\": \"Reverse Words in a String II\", \"titleSlug\": \"reverse-words-in-a-string-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485888,
      "commentCount": 316,
      "topLevelCommentCount": 182
    },
    "classAndMethodDefinition": "def reverseWords(self, s):\n        return \" \".join(s.strip().split()[::-1])"
  },
  {
    "stat": {
      "question_id": 74,
      "question__article__live": true,
      "question__article__slug": "search-in-2d-matrix",
      "question__article__has_video_solution": false,
      "question__title": "Search a 2D Matrix",
      "question__title_slug": "search-a-2d-matrix",
      "question__hide": false,
      "total_acs": 1950355,
      "total_submitted": 3831418,
      "frontend_question_id": 74,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/search-a-2d-matrix",
      "questionId": "74",
      "questionFrontendId": "74",
      "questionTitle": "Search a 2D Matrix",
      "titleSlug": "search-a-2d-matrix",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>m x n</code> integer matrix <code>matrix</code> with the following two properties:</p>\n\n<ul>\n\t<li>Each row is sorted in non-decreasing order.</li>\n\t<li>The first integer of each row is greater than the last integer of the previous row.</li>\n</ul>\n\n<p>Given an integer <code>target</code>, return <code>true</code> <em>if</em> <code>target</code> <em>is in</em> <code>matrix</code> <em>or</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>You must write a solution in <code>O(log(m * n))</code> time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/mat.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/mat2.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= matrix[i][j], target &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,3,5,7],[10,11,16,20],[23,30,34,60]]\n3\n[[1,3,5,7],[10,11,16,20],[23,30,34,60]]\n13",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "717",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 15917,
      "dislikes": 424,
      "similarQuestions": "[{\"title\": \"Search a 2D Matrix II\", \"titleSlug\": \"search-a-2d-matrix-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Split Message Based on Limit\", \"titleSlug\": \"split-message-based-on-limit\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485811,
      "commentCount": 294,
      "topLevelCommentCount": 189
    },
    "classAndMethodDefinition": "def searchMatrix(self, matrix, target):\n            if not matrix or target is None:"
  },
  {
    "stat": {
      "question_id": 234,
      "question__article__live": true,
      "question__article__slug": "palindrome-linked-list",
      "question__article__has_video_solution": true,
      "question__title": "Palindrome Linked List",
      "question__title_slug": "palindrome-linked-list",
      "question__hide": false,
      "total_acs": 2065478,
      "total_submitted": 3824672,
      "frontend_question_id": 234,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/palindrome-linked-list",
      "questionId": "234",
      "questionFrontendId": "234",
      "questionTitle": "Palindrome Linked List",
      "titleSlug": "palindrome-linked-list",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a singly linked list, return <code>true</code><em> if it is a </em><span data-keyword=\"palindrome-sequence\"><em>palindrome</em></span><em> or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/03/pal1linked-list.jpg\" style=\"width: 422px; height: 62px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,2,1]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/03/pal2linked-list.jpg\" style=\"width: 182px; height: 62px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[1, 10<sup>5</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you do it in <code>O(n)</code> time and <code>O(1)</code> space?",
      "exampleTestcases": "[1,2,2,1]\n[1,2]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "825",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16603,
      "dislikes": 888,
      "similarQuestions": "[{\"title\": \"Palindrome Number\", \"titleSlug\": \"palindrome-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Valid Palindrome\", \"titleSlug\": \"valid-palindrome\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Reverse Linked List\", \"titleSlug\": \"reverse-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Twin Sum of a Linked List\", \"titleSlug\": \"maximum-twin-sum-of-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485971,
      "commentCount": 419,
      "topLevelCommentCount": 230
    },
    "classAndMethodDefinition": "def isPalindrome(self, head):\n        rev = None"
  },
  {
    "stat": {
      "question_id": 139,
      "question__article__live": true,
      "question__article__slug": "word-break",
      "question__article__has_video_solution": true,
      "question__title": "Word Break",
      "question__title_slug": "word-break",
      "question__hide": false,
      "total_acs": 1778363,
      "total_submitted": 3770406,
      "frontend_question_id": 139,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/word-break",
      "questionId": "139",
      "questionFrontendId": "139",
      "questionTitle": "Word Break",
      "titleSlug": "word-break",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> and a dictionary of strings <code>wordDict</code>, return <code>true</code> if <code>s</code> can be segmented into a space-separated sequence of one or more dictionary words.</p>\n\n<p><strong>Note</strong> that the same word in the dictionary may be reused multiple times in the segmentation.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leetcode&quot;, wordDict = [&quot;leet&quot;,&quot;code&quot;]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Return true because &quot;leetcode&quot; can be segmented as &quot;leet code&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;applepenapple&quot;, wordDict = [&quot;apple&quot;,&quot;pen&quot;]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Return true because &quot;applepenapple&quot; can be segmented as &quot;apple pen apple&quot;.\nNote that you are allowed to reuse a dictionary word.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;catsandog&quot;, wordDict = [&quot;cats&quot;,&quot;dog&quot;,&quot;sand&quot;,&quot;and&quot;,&quot;cat&quot;]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= wordDict.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= wordDict[i].length &lt;= 20</code></li>\n\t<li><code>s</code> and <code>wordDict[i]</code> consist of only lowercase English letters.</li>\n\t<li>All the strings of <code>wordDict</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "\"leetcode\"\n[\"leet\",\"code\"]\n\"applepenapple\"\n[\"apple\",\"pen\"]\n\"catsandog\"\n[\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        },
        {
          "name": "Memoization",
          "slug": "memoization",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1950",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 17294,
      "dislikes": 800,
      "similarQuestions": "[{\"title\": \"Word Break II\", \"titleSlug\": \"word-break-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Extra Characters in a String\", \"titleSlug\": \"extra-characters-in-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485876,
      "commentCount": 272,
      "topLevelCommentCount": 156
    },
    "classAndMethodDefinition": "class Solution:\n    def wordBreak(self, s: str, wordDict: List[str]) -> bool:"
  },
  {
    "stat": {
      "question_id": 100,
      "question__article__live": true,
      "question__article__slug": "same-tree",
      "question__article__has_video_solution": true,
      "question__title": "Same Tree",
      "question__title_slug": "same-tree",
      "question__hide": false,
      "total_acs": 2345840,
      "total_submitted": 3715324,
      "frontend_question_id": 100,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/same-tree",
      "questionId": "100",
      "questionFrontendId": "100",
      "questionTitle": "Same Tree",
      "titleSlug": "same-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the roots of two binary trees <code>p</code> and <code>q</code>, write a function to check if they are the same or not.</p>\n\n<p>Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/20/ex1.jpg\" style=\"width: 622px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> p = [1,2,3], q = [1,2,3]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/20/ex2.jpg\" style=\"width: 382px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> p = [1,2], q = [1,null,2]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/20/ex3.jpg\" style=\"width: 622px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> p = [1,2,1], q = [1,1,2]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in both trees is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[1,2,3]\n[1,2]\n[1,null,2]\n[1,2,1]\n[1,1,2]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "706",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11654,
      "dislikes": 243,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485837,
      "commentCount": 235,
      "topLevelCommentCount": 160
    },
    "classAndMethodDefinition": "class Solution:\n    def isSameTree(self, p, q):"
  },
  {
    "stat": {
      "question_id": 91,
      "question__article__live": true,
      "question__article__slug": "decode-ways",
      "question__article__has_video_solution": true,
      "question__title": "Decode Ways",
      "question__title_slug": "decode-ways",
      "question__hide": false,
      "total_acs": 1308684,
      "total_submitted": 3699684,
      "frontend_question_id": 91,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/decode-ways",
      "questionId": "91",
      "questionFrontendId": "91",
      "questionTitle": "Decode Ways",
      "titleSlug": "decode-ways",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You have intercepted a secret message encoded as a string of numbers. The message is <strong>decoded</strong> via the following mapping:</p>\n\n<p><code>&quot;1&quot; -&gt; &#39;A&#39;<br />\n&quot;2&quot; -&gt; &#39;B&#39;<br />\n...<br />\n&quot;25&quot; -&gt; &#39;Y&#39;<br />\n&quot;26&quot; -&gt; &#39;Z&#39;</code></p>\n\n<p>However, while decoding the message, you realize that there are many different ways you can decode the message because some codes are contained in other codes (<code>&quot;2&quot;</code> and <code>&quot;5&quot;</code> vs <code>&quot;25&quot;</code>).</p>\n\n<p>For example, <code>&quot;11106&quot;</code> can be decoded into:</p>\n\n<ul>\n\t<li><code>&quot;AAJF&quot;</code> with the grouping <code>(1, 1, 10, 6)</code></li>\n\t<li><code>&quot;KJF&quot;</code> with the grouping <code>(11, 10, 6)</code></li>\n\t<li>The grouping <code>(1, 11, 06)</code> is invalid because <code>&quot;06&quot;</code> is not a valid code (only <code>&quot;6&quot;</code> is valid).</li>\n</ul>\n\n<p>Note: there may be strings that are impossible to decode.<br />\n<br />\nGiven a string s containing only digits, return the <strong>number of ways</strong> to <strong>decode</strong> it. If the entire string cannot be decoded in any valid way, return <code>0</code>.</p>\n\n<p>The test cases are generated so that the answer fits in a <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;12&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">2</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>&quot;12&quot; could be decoded as &quot;AB&quot; (1 2) or &quot;L&quot; (12).</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;226&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">3</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>&quot;226&quot; could be decoded as &quot;BZ&quot; (2 26), &quot;VF&quot; (22 6), or &quot;BBF&quot; (2 2 6).</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;06&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>&quot;06&quot; cannot be mapped to &quot;F&quot; because of the leading zero (&quot;6&quot; is different from &quot;06&quot;). In this case, the string is not a valid encoding, so return 0.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> contains only digits and may contain leading zero(s).</li>\n</ul>\n",
      "exampleTestcases": "\"12\"\n\"226\"\n\"06\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "887",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11992,
      "dislikes": 4528,
      "similarQuestions": "[{\"title\": \"Decode Ways II\", \"titleSlug\": \"decode-ways-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Ways to Separate Numbers\", \"titleSlug\": \"number-of-ways-to-separate-numbers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Number of Texts\", \"titleSlug\": \"count-number-of-texts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485828,
      "commentCount": 341,
      "topLevelCommentCount": 221
    },
    "classAndMethodDefinition": "def numDecodings(s): \n\\tif not s:"
  },
  {
    "stat": {
      "question_id": 101,
      "question__article__live": true,
      "question__article__slug": "symmetric-tree",
      "question__article__has_video_solution": true,
      "question__title": "Symmetric Tree",
      "question__title_slug": "symmetric-tree",
      "question__hide": false,
      "total_acs": 2122456,
      "total_submitted": 3697675,
      "frontend_question_id": 101,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/symmetric-tree",
      "questionId": "101",
      "questionFrontendId": "101",
      "questionTitle": "Symmetric Tree",
      "titleSlug": "symmetric-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, <em>check whether it is a mirror of itself</em> (i.e., symmetric around its center).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/symtree1.jpg\" style=\"width: 354px; height: 291px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,2,3,4,4,3]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/symtree2.jpg\" style=\"width: 308px; height: 258px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,2,null,3,null,3]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 1000]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it both recursively and iteratively?",
      "exampleTestcases": "[1,2,2,3,4,4,3]\n[1,2,2,null,3,null,3]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "42",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 15403,
      "dislikes": 387,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485838,
      "commentCount": 234,
      "topLevelCommentCount": 154
    },
    "classAndMethodDefinition": "class Solution(object):\n    def isMirror(self, left, right):"
  },
  {
    "stat": {
      "question_id": 215,
      "question__article__live": true,
      "question__article__slug": "kth-largest-element-in-an-array",
      "question__article__has_video_solution": true,
      "question__title": "Kth Largest Element in an Array",
      "question__title_slug": "kth-largest-element-in-an-array",
      "question__hide": false,
      "total_acs": 2475749,
      "total_submitted": 3692171,
      "frontend_question_id": 215,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/kth-largest-element-in-an-array",
      "questionId": "215",
      "questionFrontendId": "215",
      "questionTitle": "Kth Largest Element in an Array",
      "titleSlug": "kth-largest-element-in-an-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the</em> <code>k<sup>th</sup></code> <em>largest element in the array</em>.</p>\n\n<p>Note that it is the <code>k<sup>th</sup></code> largest element in the sorted order, not the <code>k<sup>th</sup></code> distinct element.</p>\n\n<p>Can you solve it without sorting?</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,1,5,6,4], k = 2\n<strong>Output:</strong> 5\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,3,1,2,4,5,5,6], k = 4\n<strong>Output:</strong> 4\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,2,1,5,6,4]\n2\n[3,2,3,1,2,4,5,5,6]\n4",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Quickselect",
          "slug": "quickselect",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1949",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 17191,
      "dislikes": 890,
      "similarQuestions": "[{\"title\": \"Wiggle Sort II\", \"titleSlug\": \"wiggle-sort-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Third Maximum Number\", \"titleSlug\": \"third-maximum-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Element in a Stream\", \"titleSlug\": \"kth-largest-element-in-a-stream\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"K Closest Points to Origin\", \"titleSlug\": \"k-closest-points-to-origin\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Kth Largest Integer in the Array\", \"titleSlug\": \"find-the-kth-largest-integer-in-the-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Subsequence of Length K With the Largest Sum\", \"titleSlug\": \"find-subsequence-of-length-k-with-the-largest-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"K Highest Ranked Items Within a Price Range\", \"titleSlug\": \"k-highest-ranked-items-within-a-price-range\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485952,
      "commentCount": 337,
      "topLevelCommentCount": 222
    },
    "classAndMethodDefinition": "def findKthLargest(self, nums, k):\n        return sorted(nums, reverse=True)[k-1]"
  },
  {
    "stat": {
      "question_id": 42,
      "question__article__live": true,
      "question__article__slug": "trapping-rain-water",
      "question__article__has_video_solution": false,
      "question__title": "Trapping Rain Water",
      "question__title_slug": "trapping-rain-water",
      "question__hide": false,
      "total_acs": 2298763,
      "total_submitted": 3652008,
      "frontend_question_id": 42,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/trapping-rain-water",
      "questionId": "42",
      "questionFrontendId": "42",
      "questionTitle": "Trapping Rain Water",
      "titleSlug": "trapping-rain-water",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given <code>n</code> non-negative integers representing an elevation map where the width of each bar is <code>1</code>, compute how much water it can trap after raining.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/rainwatertrap.png\" style=\"width: 412px; height: 161px;\" />\n<pre>\n<strong>Input:</strong> height = [0,1,0,2,1,0,1,3,2,1,2,1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> height = [4,2,0,3,2,5]\n<strong>Output:</strong> 9\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == height.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= height[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[0,1,0,2,1,0,1,3,2,1,2,1]\n[4,2,0,3,2,5]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "150",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 32322,
      "dislikes": 531,
      "similarQuestions": "[{\"title\": \"Container With Most Water\", \"titleSlug\": \"container-with-most-water\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Product of Array Except Self\", \"titleSlug\": \"product-of-array-except-self\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Trapping Rain Water II\", \"titleSlug\": \"trapping-rain-water-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Pour Water\", \"titleSlug\": \"pour-water\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Value of an Ordered Triplet II\", \"titleSlug\": \"maximum-value-of-an-ordered-triplet-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485779,
      "commentCount": 439,
      "topLevelCommentCount": 287
    },
    "classAndMethodDefinition": "class Solution:\n    def sumBackets(self, height: list[int], left, right):"
  },
  {
    "stat": {
      "question_id": 347,
      "question__article__live": true,
      "question__article__slug": "top-k-frequent-elements",
      "question__article__has_video_solution": true,
      "question__title": "Top K Frequent Elements",
      "question__title_slug": "top-k-frequent-elements",
      "question__hide": false,
      "total_acs": 2296022,
      "total_submitted": 3632894,
      "frontend_question_id": 347,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/top-k-frequent-elements",
      "questionId": "347",
      "questionFrontendId": "347",
      "questionTitle": "Top K Frequent Elements",
      "titleSlug": "top-k-frequent-elements",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the</em> <code>k</code> <em>most frequent elements</em>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,1,2,2,3], k = 2\n<strong>Output:</strong> [1,2]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1], k = 1\n<strong>Output:</strong> [1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>k</code> is in the range <code>[1, the number of unique elements in the array]</code>.</li>\n\t<li>It is <strong>guaranteed</strong> that the answer is <strong>unique</strong>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Your algorithm&#39;s time complexity must be better than <code>O(n log n)</code>, where n is the array&#39;s size.</p>\n",
      "exampleTestcases": "[1,1,1,2,2,3]\n2\n[1]\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        },
        {
          "name": "Quickselect",
          "slug": "quickselect",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "951",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 17461,
      "dislikes": 670,
      "similarQuestions": "[{\"title\": \"Word Frequency\", \"titleSlug\": \"word-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sort Characters By Frequency\", \"titleSlug\": \"sort-characters-by-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Split Array into Consecutive Subsequences\", \"titleSlug\": \"split-array-into-consecutive-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Words\", \"titleSlug\": \"top-k-frequent-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"K Closest Points to Origin\", \"titleSlug\": \"k-closest-points-to-origin\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sort Features by Popularity\", \"titleSlug\": \"sort-features-by-popularity\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sender With Largest Word Count\", \"titleSlug\": \"sender-with-largest-word-count\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Most Frequent Even Element\", \"titleSlug\": \"most-frequent-even-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Linked List Frequency\", \"titleSlug\": \"linked-list-frequency\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486084,
      "commentCount": 267,
      "topLevelCommentCount": 175
    },
    "classAndMethodDefinition": "def topKFrequent(self, nums, k):\n        hs = {}"
  },
  {
    "stat": {
      "question_id": 31,
      "question__article__live": true,
      "question__article__slug": "next-permutation",
      "question__article__has_video_solution": true,
      "question__title": "Next Permutation",
      "question__title_slug": "next-permutation",
      "question__hide": false,
      "total_acs": 1475076,
      "total_submitted": 3604444,
      "frontend_question_id": 31,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/next-permutation",
      "questionId": "31",
      "questionFrontendId": "31",
      "questionTitle": "Next Permutation",
      "titleSlug": "next-permutation",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A <strong>permutation</strong> of an array of integers is an arrangement of its members into a sequence or linear order.</p>\n\n<ul>\n\t<li>For example, for <code>arr = [1,2,3]</code>, the following are all the permutations of <code>arr</code>: <code>[1,2,3], [1,3,2], [2, 1, 3], [2, 3, 1], [3,1,2], [3,2,1]</code>.</li>\n</ul>\n\n<p>The <strong>next permutation</strong> of an array of integers is the next lexicographically greater permutation of its integer. More formally, if all the permutations of the array are sorted in one container according to their lexicographical order, then the <strong>next permutation</strong> of that array is the permutation that follows it in the sorted container. If such arrangement is not possible, the array must be rearranged as the lowest possible order (i.e., sorted in ascending order).</p>\n\n<ul>\n\t<li>For example, the next permutation of <code>arr = [1,2,3]</code> is <code>[1,3,2]</code>.</li>\n\t<li>Similarly, the next permutation of <code>arr = [2,3,1]</code> is <code>[3,1,2]</code>.</li>\n\t<li>While the next permutation of <code>arr = [3,2,1]</code> is <code>[1,2,3]</code> because <code>[3,2,1]</code> does not have a lexicographical larger rearrangement.</li>\n</ul>\n\n<p>Given an array of integers <code>nums</code>, <em>find the next permutation of</em> <code>nums</code>.</p>\n\n<p>The replacement must be <strong><a href=\"http://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in place</a></strong> and use only constant extra memory.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [1,3,2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1]\n<strong>Output:</strong> [1,2,3]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,5]\n<strong>Output:</strong> [1,5,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[3,2,1]\n[1,1,5]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "58",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 18592,
      "dislikes": 4726,
      "similarQuestions": "[{\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations II\", \"titleSlug\": \"permutations-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutation Sequence\", \"titleSlug\": \"permutation-sequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation II\", \"titleSlug\": \"palindrome-permutation-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Adjacent Swaps to Reach the Kth Smallest Number\", \"titleSlug\": \"minimum-adjacent-swaps-to-reach-the-kth-smallest-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485768,
      "commentCount": 317,
      "topLevelCommentCount": 213
    },
    "classAndMethodDefinition": "def nextPermutation(self, nums):\n        i = j = len(nums)-1"
  },
  {
    "stat": {
      "question_id": 268,
      "question__article__live": true,
      "question__article__slug": "missing-number",
      "question__article__has_video_solution": true,
      "question__title": "Missing Number",
      "question__title_slug": "missing-number",
      "question__hide": false,
      "total_acs": 2447073,
      "total_submitted": 3602959,
      "frontend_question_id": 268,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/missing-number",
      "questionId": "268",
      "questionFrontendId": "268",
      "questionTitle": "Missing Number",
      "titleSlug": "missing-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code> containing <code>n</code> distinct numbers in the range <code>[0, n]</code>, return <em>the only number in the range that is missing from the array.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,0,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [9,6,4,2,3,5,7,0,1]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= n</code></li>\n\t<li>All the numbers of <code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you implement a solution using only <code>O(1)</code> extra space complexity and <code>O(n)</code> runtime complexity?</p>\n",
      "exampleTestcases": "[3,0,1]\n[0,1]\n[9,6,4,2,3,5,7,0,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "288",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12263,
      "dislikes": 3345,
      "similarQuestions": "[{\"title\": \"First Missing Positive\", \"titleSlug\": \"first-missing-positive\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Couples Holding Hands\", \"titleSlug\": \"couples-holding-hands\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Unique Binary String\", \"titleSlug\": \"find-unique-binary-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486005,
      "commentCount": 309,
      "topLevelCommentCount": 227
    },
    "classAndMethodDefinition": "class Solution:\n    def missingNumber(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 207,
      "question__article__live": true,
      "question__article__slug": "course-schedule",
      "question__article__has_video_solution": false,
      "question__title": "Course Schedule",
      "question__title_slug": "course-schedule",
      "question__hide": false,
      "total_acs": 1695763,
      "total_submitted": 3579302,
      "frontend_question_id": 207,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/course-schedule",
      "questionId": "207",
      "questionFrontendId": "207",
      "questionTitle": "Course Schedule",
      "titleSlug": "course-schedule",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are a total of <code>numCourses</code> courses you have to take, labeled from <code>0</code> to <code>numCourses - 1</code>. You are given an array <code>prerequisites</code> where <code>prerequisites[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that you <strong>must</strong> take course <code>b<sub>i</sub></code> first if you want to take course <code>a<sub>i</sub></code>.</p>\n\n<ul>\n\t<li>For example, the pair <code>[0, 1]</code>, indicates that to take course <code>0</code> you have to first take course <code>1</code>.</li>\n</ul>\n\n<p>Return <code>true</code> if you can finish all courses. Otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 2, prerequisites = [[1,0]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There are a total of 2 courses to take. \nTo take course 1 you should have finished course 0. So it is possible.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 2, prerequisites = [[1,0],[0,1]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There are a total of 2 courses to take. \nTo take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= numCourses &lt;= 2000</code></li>\n\t<li><code>0 &lt;= prerequisites.length &lt;= 5000</code></li>\n\t<li><code>prerequisites[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; numCourses</code></li>\n\t<li>All the pairs prerequisites[i] are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "2\n[[1,0]]\n2\n[[1,0],[0,1]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort",
          "translatedName": null
        }
      ],
      "hints": [
        "This problem is equivalent to finding if a cycle exists in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.",
        "<a href=\"https://www.cs.princeton.edu/~wayne/kleinberg-tardos/pdf/03Graphs.pdf\" target=\"_blank\">Topological Sort via DFS</a> - A great tutorial explaining the basic concepts of Topological Sort.",
        "Topological sort could also be done via <a href=\"http://en.wikipedia.org/wiki/Topological_sorting#Algorithms\" target=\"_blank\">BFS</a>."
      ],
      "solution": {
        "id": "1921",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16323,
      "dislikes": 733,
      "similarQuestions": "[{\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Graph Valid Tree\", \"titleSlug\": \"graph-valid-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Height Trees\", \"titleSlug\": \"minimum-height-trees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule III\", \"titleSlug\": \"course-schedule-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Build a Matrix With Conditions\", \"titleSlug\": \"build-a-matrix-with-conditions\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485944,
      "commentCount": 295,
      "topLevelCommentCount": 178
    },
    "classAndMethodDefinition": "def canFinish(self, numCourses, prerequisites):\n        graph = [[] for _ in xrange(numCourses)]"
  },
  {
    "stat": {
      "question_id": 167,
      "question__article__live": true,
      "question__article__slug": "two-sum-ii-input-array-is-sorted",
      "question__article__has_video_solution": false,
      "question__title": "Two Sum II - Input Array Is Sorted",
      "question__title_slug": "two-sum-ii-input-array-is-sorted",
      "question__hide": false,
      "total_acs": 2214430,
      "total_submitted": 3573407,
      "frontend_question_id": 167,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted",
      "questionId": "167",
      "questionFrontendId": "167",
      "questionTitle": "Two Sum II - Input Array Is Sorted",
      "titleSlug": "two-sum-ii-input-array-is-sorted",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a <strong>1-indexed</strong> array of integers <code>numbers</code> that is already <strong><em>sorted in non-decreasing order</em></strong>, find two numbers such that they add up to a specific <code>target</code> number. Let these two numbers be <code>numbers[index<sub>1</sub>]</code> and <code>numbers[index<sub>2</sub>]</code> where <code>1 &lt;= index<sub>1</sub> &lt; index<sub>2</sub> &lt;= numbers.length</code>.</p>\n\n<p>Return<em> the indices of the two numbers, </em><code>index<sub>1</sub></code><em> and </em><code>index<sub>2</sub></code><em>, <strong>added by one</strong> as an integer array </em><code>[index<sub>1</sub>, index<sub>2</sub>]</code><em> of length 2.</em></p>\n\n<p>The tests are generated such that there is <strong>exactly one solution</strong>. You <strong>may not</strong> use the same element twice.</p>\n\n<p>Your solution must use only constant extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> numbers = [<u>2</u>,<u>7</u>,11,15], target = 9\n<strong>Output:</strong> [1,2]\n<strong>Explanation:</strong> The sum of 2 and 7 is 9. Therefore, index<sub>1</sub> = 1, index<sub>2</sub> = 2. We return [1, 2].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> numbers = [<u>2</u>,3,<u>4</u>], target = 6\n<strong>Output:</strong> [1,3]\n<strong>Explanation:</strong> The sum of 2 and 4 is 6. Therefore index<sub>1</sub> = 1, index<sub>2</sub> = 3. We return [1, 3].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> numbers = [<u>-1</u>,<u>0</u>], target = -1\n<strong>Output:</strong> [1,2]\n<strong>Explanation:</strong> The sum of -1 and 0 is -1. Therefore index<sub>1</sub> = 1, index<sub>2</sub> = 2. We return [1, 2].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= numbers.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-1000 &lt;= numbers[i] &lt;= 1000</code></li>\n\t<li><code>numbers</code> is sorted in <strong>non-decreasing order</strong>.</li>\n\t<li><code>-1000 &lt;= target &lt;= 1000</code></li>\n\t<li>The tests are generated such that there is <strong>exactly one solution</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[2,7,11,15]\n9\n[2,3,4]\n6\n[-1,0]\n-1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "20",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11835,
      "dislikes": 1426,
      "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485904,
      "commentCount": 286,
      "topLevelCommentCount": 189
    },
    "classAndMethodDefinition": "def twoSum1(self, numbers, target):\n        l, r = 0, len(numbers)-1"
  },
  {
    "stat": {
      "question_id": 10,
      "question__article__live": true,
      "question__article__slug": "regular-expression-matching",
      "question__article__has_video_solution": false,
      "question__title": "Regular Expression Matching",
      "question__title_slug": "regular-expression-matching",
      "question__hide": false,
      "total_acs": 1010258,
      "total_submitted": 3565178,
      "frontend_question_id": 10,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/regular-expression-matching",
      "questionId": "10",
      "questionFrontendId": "10",
      "questionTitle": "Regular Expression Matching",
      "titleSlug": "regular-expression-matching",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an input string <code>s</code>&nbsp;and a pattern <code>p</code>, implement regular expression matching with support for <code>&#39;.&#39;</code> and <code>&#39;*&#39;</code> where:</p>\n\n<ul>\n\t<li><code>&#39;.&#39;</code> Matches any single character.​​​​</li>\n\t<li><code>&#39;*&#39;</code> Matches zero or more of the preceding element.</li>\n</ul>\n\n<p>The matching should cover the <strong>entire</strong> input string (not partial).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> &quot;a&quot; does not match the entire string &quot;aa&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;a*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> &#39;*&#39; means zero or more of the preceding element, &#39;a&#39;. Therefore, by repeating &#39;a&#39; once, it becomes &quot;aa&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ab&quot;, p = &quot;.*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> &quot;.*&quot; means &quot;zero or more (*) of any character (.)&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length&nbsp;&lt;= 20</code></li>\n\t<li><code>1 &lt;= p.length&nbsp;&lt;= 20</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n\t<li><code>p</code> contains only lowercase English letters, <code>&#39;.&#39;</code>, and&nbsp;<code>&#39;*&#39;</code>.</li>\n\t<li>It is guaranteed for each appearance of the character <code>&#39;*&#39;</code>, there will be a previous valid character to match.</li>\n</ul>\n",
      "exampleTestcases": "\"aa\"\n\"a\"\n\"aa\"\n\"a*\"\n\"ab\"\n\".*\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "238",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12236,
      "dislikes": 2182,
      "similarQuestions": "[{\"title\": \"Wildcard Matching\", \"titleSlug\": \"wildcard-matching\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485747,
      "commentCount": 543,
      "topLevelCommentCount": 352
    },
    "classAndMethodDefinition": "class Solution:\n    def isMatch(self, s: str, p: str) -> bool:"
  },
  {
    "stat": {
      "question_id": 75,
      "question__article__live": true,
      "question__article__slug": "sort-colors",
      "question__article__has_video_solution": false,
      "question__title": "Sort Colors",
      "question__title_slug": "sort-colors",
      "question__hide": false,
      "total_acs": 2310021,
      "total_submitted": 3565032,
      "frontend_question_id": 75,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sort-colors",
      "questionId": "75",
      "questionFrontendId": "75",
      "questionTitle": "Sort Colors",
      "titleSlug": "sort-colors",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code> with <code>n</code> objects colored red, white, or blue, sort them <strong><a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a> </strong>so that objects of the same color are adjacent, with the colors in the order red, white, and blue.</p>\n\n<p>We will use the integers <code>0</code>, <code>1</code>, and <code>2</code> to represent the color red, white, and blue, respectively.</p>\n\n<p>You must solve this problem without using the library&#39;s sort function.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,0,2,1,1,0]\n<strong>Output:</strong> [0,0,1,1,2,2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,0,1]\n<strong>Output:</strong> [0,1,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 300</code></li>\n\t<li><code>nums[i]</code> is either <code>0</code>, <code>1</code>, or <code>2</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong>&nbsp;Could you come up with a one-pass algorithm using only&nbsp;constant extra space?</p>\n",
      "exampleTestcases": "[2,0,2,1,1,0]\n[2,0,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "A rather straight forward solution is a two-pass algorithm using counting sort.",
        "Iterate the array counting number of 0's, 1's, and 2's.",
        "Overwrite array with the total number of 0's, then 1's and followed by 2's."
      ],
      "solution": {
        "id": "716",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 18718,
      "dislikes": 661,
      "similarQuestions": "[{\"title\": \"Sort List\", \"titleSlug\": \"sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort\", \"titleSlug\": \"wiggle-sort\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort II\", \"titleSlug\": \"wiggle-sort-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485812,
      "commentCount": 441,
      "topLevelCommentCount": 294
    },
    "classAndMethodDefinition": "def sortColors(self, nums):\n        red, white, blue = 0, 0, len(nums)-1"
  },
  {
    "stat": {
      "question_id": 344,
      "question__article__live": true,
      "question__article__slug": "reverse-string",
      "question__article__has_video_solution": true,
      "question__title": "Reverse String",
      "question__title_slug": "reverse-string",
      "question__hide": false,
      "total_acs": 2807676,
      "total_submitted": 3556488,
      "frontend_question_id": 344,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-string",
      "questionId": "344",
      "questionFrontendId": "344",
      "questionTitle": "Reverse String",
      "titleSlug": "reverse-string",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Write a function that reverses a string. The input string is given as an array of characters <code>s</code>.</p>\n\n<p>You must do this by modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a> with <code>O(1)</code> extra memory.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n<strong>Output:</strong> [\"o\",\"l\",\"l\",\"e\",\"h\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n<strong>Output:</strong> [\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is a <a href=\"https://en.wikipedia.org/wiki/ASCII#Printable_characters\" target=\"_blank\">printable ascii character</a>.</li>\n</ul>\n",
      "exampleTestcases": "[\"h\",\"e\",\"l\",\"l\",\"o\"]\n[\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "The entire logic for reversing a string is based on using the opposite directional two-pointer approach!"
      ],
      "solution": {
        "id": "781",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8693,
      "dislikes": 1182,
      "similarQuestions": "[{\"title\": \"Reverse Vowels of a String\", \"titleSlug\": \"reverse-vowels-of-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Reverse String II\", \"titleSlug\": \"reverse-string-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486081,
      "commentCount": 326,
      "topLevelCommentCount": 224
    },
    "classAndMethodDefinition": "def reverseString(self, s):\n        l = len(s)"
  },
  {
    "stat": {
      "question_id": 17,
      "question__article__live": true,
      "question__article__slug": "letter-combinations-of-a-phone-number",
      "question__article__has_video_solution": false,
      "question__title": "Letter Combinations of a Phone Number",
      "question__title_slug": "letter-combinations-of-a-phone-number",
      "question__hide": false,
      "total_acs": 2171883,
      "total_submitted": 3529856,
      "frontend_question_id": 17,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number",
      "questionId": "17",
      "questionFrontendId": "17",
      "questionTitle": "Letter Combinations of a Phone Number",
      "titleSlug": "letter-combinations-of-a-phone-number",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string containing digits from <code>2-9</code> inclusive, return all possible letter combinations that the number could represent. Return the answer in <strong>any order</strong>.</p>\n\n<p>A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/1200px-telephone-keypad2svg.png\" style=\"width: 300px; height: 243px;\" />\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = &quot;23&quot;\n<strong>Output:</strong> [&quot;ad&quot;,&quot;ae&quot;,&quot;af&quot;,&quot;bd&quot;,&quot;be&quot;,&quot;bf&quot;,&quot;cd&quot;,&quot;ce&quot;,&quot;cf&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = &quot;&quot;\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = &quot;2&quot;\n<strong>Output:</strong> [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= digits.length &lt;= 4</code></li>\n\t<li><code>digits[i]</code> is a digit in the range <code>[&#39;2&#39;, &#39;9&#39;]</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"23\"\n\"\"\n\"2\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1118",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 18770,
      "dislikes": 1013,
      "similarQuestions": "[{\"title\": \"Generate Parentheses\", \"titleSlug\": \"generate-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Watch\", \"titleSlug\": \"binary-watch\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Number of Texts\", \"titleSlug\": \"count-number-of-texts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Pushes to Type Word I\", \"titleSlug\": \"minimum-number-of-pushes-to-type-word-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Pushes to Type Word II\", \"titleSlug\": \"minimum-number-of-pushes-to-type-word-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485754,
      "commentCount": 305,
      "topLevelCommentCount": 195
    },
    "classAndMethodDefinition": "def subsets(self, nums):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 102,
      "question__article__live": true,
      "question__article__slug": "binary-tree-level-order-traversal",
      "question__article__has_video_solution": false,
      "question__title": "Binary Tree Level Order Traversal",
      "question__title_slug": "binary-tree-level-order-traversal",
      "question__hide": false,
      "total_acs": 2403334,
      "total_submitted": 3517366,
      "frontend_question_id": 102,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-tree-level-order-traversal",
      "questionId": "102",
      "questionFrontendId": "102",
      "questionTitle": "Binary Tree Level Order Traversal",
      "titleSlug": "binary-tree-level-order-traversal",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>the level order traversal of its nodes&#39; values</em>. (i.e., from left to right, level by level).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [[3],[9,20],[15,7]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,null,null,15,7]\n[1]\n[]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "708",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 15455,
      "dislikes": 319,
      "similarQuestions": "[{\"title\": \"Binary Tree Zigzag Level Order Traversal\", \"titleSlug\": \"binary-tree-zigzag-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Level Order Traversal II\", \"titleSlug\": \"binary-tree-level-order-traversal-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Depth of Binary Tree\", \"titleSlug\": \"minimum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Vertical Order Traversal\", \"titleSlug\": \"binary-tree-vertical-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Average of Levels in Binary Tree\", \"titleSlug\": \"average-of-levels-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Level Order Traversal\", \"titleSlug\": \"n-ary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cousins in Binary Tree\", \"titleSlug\": \"cousins-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Operations to Sort a Binary Tree by Level\", \"titleSlug\": \"minimum-number-of-operations-to-sort-a-binary-tree-by-level\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Divide Nodes Into the Maximum Number of Groups\", \"titleSlug\": \"divide-nodes-into-the-maximum-number-of-groups\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485839,
      "commentCount": 163,
      "topLevelCommentCount": 93
    },
    "classAndMethodDefinition": "from collections import deque\nclass Solution:"
  },
  {
    "stat": {
      "question_id": 94,
      "question__article__live": true,
      "question__article__slug": "binary-tree-inorder-traversal",
      "question__article__has_video_solution": false,
      "question__title": "Binary Tree Inorder Traversal",
      "question__title_slug": "binary-tree-inorder-traversal",
      "question__hide": false,
      "total_acs": 2700577,
      "total_submitted": 3509987,
      "frontend_question_id": 94,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-tree-inorder-traversal",
      "questionId": "94",
      "questionFrontendId": "94",
      "questionTitle": "Binary Tree Inorder Traversal",
      "titleSlug": "binary-tree-inorder-traversal",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>the inorder traversal of its nodes&#39; values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,null,2,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1,3,2]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/screenshot-2024-08-29-202743.png\" style=\"width: 200px; height: 264px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,2,3,4,5,null,8,null,null,6,7,9]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[4,2,6,5,7,1,3,9,8]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/tree_2.png\" style=\"width: 350px; height: 286px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = []</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1]</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?",
      "exampleTestcases": "[1,null,2,3]\n[1,2,3,4,5,null,8,null,null,6,7,9]\n[]\n[1]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "231",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13577,
      "dislikes": 803,
      "similarQuestions": "[{\"title\": \"Validate Binary Search Tree\", \"titleSlug\": \"validate-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Preorder Traversal\", \"titleSlug\": \"binary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Postorder Traversal\", \"titleSlug\": \"binary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Element in a BST\", \"titleSlug\": \"kth-smallest-element-in-a-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Closest Binary Search Tree Value II\", \"titleSlug\": \"closest-binary-search-tree-value-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Inorder Successor in BST\", \"titleSlug\": \"inorder-successor-in-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Convert Binary Search Tree to Sorted Doubly Linked List\", \"titleSlug\": \"convert-binary-search-tree-to-sorted-doubly-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Distance Between BST Nodes\", \"titleSlug\": \"minimum-distance-between-bst-nodes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485831,
      "commentCount": 259,
      "topLevelCommentCount": 169
    },
    "classAndMethodDefinition": "def preorder(root):\n  return [root.val] + preorder(root.left) + preorder(root.right) if root else []"
  },
  {
    "stat": {
      "question_id": 45,
      "question__article__live": true,
      "question__article__slug": "jump-game-ii",
      "question__article__has_video_solution": false,
      "question__title": "Jump Game II",
      "question__title_slug": "jump-game-ii",
      "question__hide": false,
      "total_acs": 1377180,
      "total_submitted": 3385259,
      "frontend_question_id": 45,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/jump-game-ii",
      "questionId": "45",
      "questionFrontendId": "45",
      "questionTitle": "Jump Game II",
      "titleSlug": "jump-game-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a <strong>0-indexed</strong> array of integers <code>nums</code> of length <code>n</code>. You are initially positioned at <code>nums[0]</code>.</p>\n\n<p>Each element <code>nums[i]</code> represents the maximum length of a forward jump from index <code>i</code>. In other words, if you are at <code>nums[i]</code>, you can jump to any <code>nums[i + j]</code> where:</p>\n\n<ul>\n\t<li><code>0 &lt;= j &lt;= nums[i]</code> and</li>\n\t<li><code>i + j &lt; n</code></li>\n</ul>\n\n<p>Return <em>the minimum number of jumps to reach </em><code>nums[n - 1]</code>. The test cases are generated such that you can reach <code>nums[n - 1]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,0,1,4]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li>It&#39;s guaranteed that you can reach <code>nums[n - 1]</code>.</li>\n</ul>\n",
      "exampleTestcases": "[2,3,1,1,4]\n[2,3,0,1,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1690",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 14715,
      "dislikes": 592,
      "similarQuestions": "[{\"title\": \"Jump Game\", \"titleSlug\": \"jump-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Jump Game III\", \"titleSlug\": \"jump-game-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Jump Game VII\", \"titleSlug\": \"jump-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Jump Game VIII\", \"titleSlug\": \"jump-game-viii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Visited Cells in a Grid\", \"titleSlug\": \"minimum-number-of-visited-cells-in-a-grid\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Jumps to Reach the Last Index\", \"titleSlug\": \"maximum-number-of-jumps-to-reach-the-last-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Visit Array Positions to Maximize Score\", \"titleSlug\": \"visit-array-positions-to-maximize-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485782,
      "commentCount": 247,
      "topLevelCommentCount": 142
    },
    "classAndMethodDefinition": "def jump(self, nums):\n            n, start, end, step = len(nums), 0, 0, 0"
  },
  {
    "stat": {
      "question_id": 392,
      "question__article__live": true,
      "question__article__slug": "is-subsequence",
      "question__article__has_video_solution": false,
      "question__title": "Is Subsequence",
      "question__title_slug": "is-subsequence",
      "question__hide": false,
      "total_acs": 1608176,
      "total_submitted": 3344561,
      "frontend_question_id": 392,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/is-subsequence",
      "questionId": "392",
      "questionFrontendId": "392",
      "questionTitle": "Is Subsequence",
      "titleSlug": "is-subsequence",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code><em> if </em><code>s</code><em> is a <strong>subsequence</strong> of </em><code>t</code><em>, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>A <strong>subsequence</strong> of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., <code>&quot;ace&quot;</code> is a subsequence of <code>&quot;<u>a</u>b<u>c</u>d<u>e</u>&quot;</code> while <code>&quot;aec&quot;</code> is not).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"abc\", t = \"ahbgdc\"\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"axc\", t = \"ahbgdc\"\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= t.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> and <code>t</code> consist only of lowercase English letters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Suppose there are lots of incoming <code>s</code>, say <code>s<sub>1</sub>, s<sub>2</sub>, ..., s<sub>k</sub></code> where <code>k &gt;= 10<sup>9</sup></code>, and you want to check one by one to see if <code>t</code> has its subsequence. In this scenario, how would you change your code?",
      "exampleTestcases": "\"abc\"\n\"ahbgdc\"\n\"axc\"\n\"ahbgdc\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "950",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9711,
      "dislikes": 541,
      "similarQuestions": "[{\"title\": \"Number of Matching Subsequences\", \"titleSlug\": \"number-of-matching-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Way to Form String\", \"titleSlug\": \"shortest-way-to-form-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Append Characters to String to Make Subsequence\", \"titleSlug\": \"append-characters-to-string-to-make-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Make String a Subsequence Using Cyclic Increments\", \"titleSlug\": \"make-string-a-subsequence-using-cyclic-increments\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486129,
      "commentCount": 270,
      "topLevelCommentCount": 171
    },
    "classAndMethodDefinition": "def isSubsequence(self, s: str, t: str) -> bool:\n        if len(s) > len(t):return False"
  },
  {
    "stat": {
      "question_id": 76,
      "question__article__live": true,
      "question__article__slug": "minimum-window-substring",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Window Substring",
      "question__title_slug": "minimum-window-substring",
      "question__hide": false,
      "total_acs": 1455026,
      "total_submitted": 3337557,
      "frontend_question_id": 76,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-window-substring",
      "questionId": "76",
      "questionFrontendId": "76",
      "questionTitle": "Minimum Window Substring",
      "titleSlug": "minimum-window-substring",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>s</code> and <code>t</code> of lengths <code>m</code> and <code>n</code> respectively, return <em>the <strong>minimum window</strong></em> <span data-keyword=\"substring-nonempty\"><strong><em>substring</em></strong></span><em> of </em><code>s</code><em> such that every character in </em><code>t</code><em> (<strong>including duplicates</strong>) is included in the window</em>. If there is no such substring, return <em>the empty string </em><code>&quot;&quot;</code>.</p>\n\n<p>The testcases will be generated such that the answer is <strong>unique</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ADOBECODEBANC&quot;, t = &quot;ABC&quot;\n<strong>Output:</strong> &quot;BANC&quot;\n<strong>Explanation:</strong> The minimum window substring &quot;BANC&quot; includes &#39;A&#39;, &#39;B&#39;, and &#39;C&#39; from string t.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a&quot;, t = &quot;a&quot;\n<strong>Output:</strong> &quot;a&quot;\n<strong>Explanation:</strong> The entire string s is the minimum window.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a&quot;, t = &quot;aa&quot;\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> Both &#39;a&#39;s from t must be included in the window.\nSince the largest window of s only has one &#39;a&#39;, return empty string.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == s.length</code></li>\n\t<li><code>n == t.length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> and <code>t</code> consist of uppercase and lowercase English letters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you find an algorithm that runs in <code>O(m + n)</code> time?</p>\n",
      "exampleTestcases": "\"ADOBECODEBANC\"\n\"ABC\"\n\"a\"\n\"a\"\n\"a\"\n\"aa\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [
        "Use two pointers to create a window of letters in s, which would have all the characters from t.",
        "Expand the right pointer until all the characters of t are covered.",
        "Once all the characters are covered, move the left pointer and ensure that all the characters are still covered to minimize the subarray size.",
        "Continue expanding the right and left pointers until you reach the end of s."
      ],
      "solution": {
        "id": "541",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 18021,
      "dislikes": 744,
      "similarQuestions": "[{\"title\": \"Substring with Concatenation of All Words\", \"titleSlug\": \"substring-with-concatenation-of-all-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Size Subarray Sum\", \"titleSlug\": \"minimum-size-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sliding Window Maximum\", \"titleSlug\": \"sliding-window-maximum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Permutation in String\", \"titleSlug\": \"permutation-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Range Covering Elements from K Lists\", \"titleSlug\": \"smallest-range-covering-elements-from-k-lists\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Window Subsequence\", \"titleSlug\": \"minimum-window-subsequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485813,
      "commentCount": 320,
      "topLevelCommentCount": 200
    },
    "classAndMethodDefinition": "class Solution:\n    def minWindow(self, s: str, t: str) -> str:"
  },
  {
    "stat": {
      "question_id": 155,
      "question__article__live": true,
      "question__article__slug": "min-stack",
      "question__article__has_video_solution": false,
      "question__title": "Min Stack",
      "question__title_slug": "min-stack",
      "question__hide": false,
      "total_acs": 1814544,
      "total_submitted": 3306929,
      "frontend_question_id": 155,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/min-stack",
      "questionId": "155",
      "questionFrontendId": "155",
      "questionTitle": "Min Stack",
      "titleSlug": "min-stack",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.</p>\n\n<p>Implement the <code>MinStack</code> class:</p>\n\n<ul>\n\t<li><code>MinStack()</code> initializes the stack object.</li>\n\t<li><code>void push(int val)</code> pushes the element <code>val</code> onto the stack.</li>\n\t<li><code>void pop()</code> removes the element on the top of the stack.</li>\n\t<li><code>int top()</code> gets the top element of the stack.</li>\n\t<li><code>int getMin()</code> retrieves the minimum element in the stack.</li>\n</ul>\n\n<p>You must implement a solution with <code>O(1)</code> time complexity for each function.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MinStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;getMin&quot;,&quot;pop&quot;,&quot;top&quot;,&quot;getMin&quot;]\n[[],[-2],[0],[-3],[],[],[],[]]\n\n<strong>Output</strong>\n[null,null,null,null,-3,null,0,-2]\n\n<strong>Explanation</strong>\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin(); // return -3\nminStack.pop();\nminStack.top();    // return 0\nminStack.getMin(); // return -2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= val &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>Methods <code>pop</code>, <code>top</code> and <code>getMin</code> operations will always be called on <strong>non-empty</strong> stacks.</li>\n\t<li>At most <code>3 * 10<sup>4</sup></code> calls will be made to <code>push</code>, <code>pop</code>, <code>top</code>, and <code>getMin</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        }
      ],
      "hints": [
        "Consider each node in the stack having a minimum value. (Credits to @aakarshmadhavan)"
      ],
      "solution": {
        "id": "876",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 14276,
      "dislikes": 884,
      "similarQuestions": "[{\"title\": \"Sliding Window Maximum\", \"titleSlug\": \"sliding-window-maximum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Max Stack\", \"titleSlug\": \"max-stack\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485892,
      "commentCount": 241,
      "topLevelCommentCount": 131
    },
    "classAndMethodDefinition": "class MinStack:\n"
  },
  {
    "stat": {
      "question_id": 162,
      "question__article__live": true,
      "question__article__slug": "find-peak-element",
      "question__article__has_video_solution": true,
      "question__title": "Find Peak Element",
      "question__title_slug": "find-peak-element",
      "question__hide": false,
      "total_acs": 1516286,
      "total_submitted": 3296705,
      "frontend_question_id": 162,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-peak-element",
      "questionId": "162",
      "questionFrontendId": "162",
      "questionTitle": "Find Peak Element",
      "titleSlug": "find-peak-element",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A peak element is an element that is strictly greater than its neighbors.</p>\n\n<p>Given a <strong>0-indexed</strong> integer array <code>nums</code>, find a peak element, and return its index. If the array contains multiple peaks, return the index to <strong>any of the peaks</strong>.</p>\n\n<p>You may imagine that <code>nums[-1] = nums[n] = -&infin;</code>. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.</p>\n\n<p>You must write an algorithm that runs in <code>O(log n)</code> time.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 3 is a peak element and your function should return the index number 2.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1,3,5,6,4]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>nums[i] != nums[i + 1]</code> for all valid <code>i</code>.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,1]\n[1,2,1,3,5,6,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "149",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12218,
      "dislikes": 4709,
      "similarQuestions": "[{\"title\": \"Peak Index in a Mountain Array\", \"titleSlug\": \"peak-index-in-a-mountain-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find a Peak Element II\", \"titleSlug\": \"find-a-peak-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Pour Water Between Buckets to Make Water Levels Equal\", \"titleSlug\": \"pour-water-between-buckets-to-make-water-levels-equal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Hills and Valleys in an Array\", \"titleSlug\": \"count-hills-and-valleys-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Peaks\", \"titleSlug\": \"find-the-peaks\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485899,
      "commentCount": 352,
      "topLevelCommentCount": 223
    },
    "classAndMethodDefinition": "def findPeakElement(self, nums):\n        left = 0"
  },
  {
    "stat": {
      "question_id": 124,
      "question__article__live": true,
      "question__article__slug": "binary-tree-maximum-path-sum",
      "question__article__has_video_solution": false,
      "question__title": "Binary Tree Maximum Path Sum",
      "question__title_slug": "binary-tree-maximum-path-sum",
      "question__hide": false,
      "total_acs": 1328727,
      "total_submitted": 3293494,
      "frontend_question_id": 124,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
      "questionId": "124",
      "questionFrontendId": "124",
      "questionTitle": "Binary Tree Maximum Path Sum",
      "titleSlug": "binary-tree-maximum-path-sum",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>A <strong>path</strong> in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence <strong>at most once</strong>. Note that the path does not need to pass through the root.</p>\n\n<p>The <strong>path sum</strong> of a path is the sum of the node&#39;s values in the path.</p>\n\n<p>Given the <code>root</code> of a binary tree, return <em>the maximum <strong>path sum</strong> of any <strong>non-empty</strong> path</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/exx1.jpg\" style=\"width: 322px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The optimal path is 2 -&gt; 1 -&gt; 3 with a path sum of 2 + 1 + 3 = 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/exx2.jpg\" />\n<pre>\n<strong>Input:</strong> root = [-10,9,20,null,null,15,7]\n<strong>Output:</strong> 42\n<strong>Explanation:</strong> The optimal path is 15 -&gt; 20 -&gt; 7 with a path sum of 15 + 20 + 7 = 42.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 3 * 10<sup>4</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[-10,9,20,null,null,15,7]",
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1617",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16797,
      "dislikes": 740,
      "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum Root to Leaf Numbers\", \"titleSlug\": \"sum-root-to-leaf-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Univalue Path\", \"titleSlug\": \"longest-univalue-path\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Time Needed to Inform All Employees\", \"titleSlug\": \"time-needed-to-inform-all-employees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Difference Between Maximum and Minimum Price Sum\", \"titleSlug\": \"difference-between-maximum-and-minimum-price-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485861,
      "commentCount": 261,
      "topLevelCommentCount": 166
    },
    "classAndMethodDefinition": "def maxPathSum(self, root: TreeNode) -> int:\n3. \\t\\tmax_path = float(\"-inf\") # placeholder to be updated"
  },
  {
    "stat": {
      "question_id": 300,
      "question__article__live": true,
      "question__article__slug": "longest-increasing-subsequence",
      "question__article__has_video_solution": false,
      "question__title": "Longest Increasing Subsequence",
      "question__title_slug": "longest-increasing-subsequence",
      "question__hide": false,
      "total_acs": 1819521,
      "total_submitted": 3239971,
      "frontend_question_id": 300,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-increasing-subsequence",
      "questionId": "300",
      "questionFrontendId": "300",
      "questionTitle": "Longest Increasing Subsequence",
      "titleSlug": "longest-increasing-subsequence",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <em>the length of the longest <strong>strictly increasing </strong></em><span data-keyword=\"subsequence-array\"><em><strong>subsequence</strong></em></span>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,9,2,5,3,7,101,18]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest increasing subsequence is [2,3,7,101], therefore the length is 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,0,3,2,3]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [7,7,7,7,7,7,7]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2500</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><b>Follow up:</b>&nbsp;Can you come up with an algorithm that runs in&nbsp;<code>O(n log(n))</code> time complexity?</p>\n",
      "exampleTestcases": "[10,9,2,5,3,7,101,18]\n[0,1,0,3,2,3]\n[7,7,7,7,7,7,7]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1149",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 20997,
      "dislikes": 451,
      "similarQuestions": "[{\"title\": \"Increasing Triplet Subsequence\", \"titleSlug\": \"increasing-triplet-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Russian Doll Envelopes\", \"titleSlug\": \"russian-doll-envelopes\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Length of Pair Chain\", \"titleSlug\": \"maximum-length-of-pair-chain\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Longest Increasing Subsequence\", \"titleSlug\": \"number-of-longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum ASCII Delete Sum for Two Strings\", \"titleSlug\": \"minimum-ascii-delete-sum-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Removals to Make Mountain Array\", \"titleSlug\": \"minimum-number-of-removals-to-make-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Longest Valid Obstacle Course at Each Position\", \"titleSlug\": \"find-the-longest-valid-obstacle-course-at-each-position\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Make the Array K-Increasing\", \"titleSlug\": \"minimum-operations-to-make-the-array-k-increasing\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Ideal Subsequence\", \"titleSlug\": \"longest-ideal-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Books You Can Take\", \"titleSlug\": \"maximum-number-of-books-you-can-take\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Increasing Subsequence II\", \"titleSlug\": \"longest-increasing-subsequence-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Maximum Length of a Good Subsequence II\", \"titleSlug\": \"find-the-maximum-length-of-a-good-subsequence-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Maximum Length of a Good Subsequence I\", \"titleSlug\": \"find-the-maximum-length-of-a-good-subsequence-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Maximum Length of Valid Subsequence I\", \"titleSlug\": \"find-the-maximum-length-of-valid-subsequence-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Maximum Length of Valid Subsequence II\", \"titleSlug\": \"find-the-maximum-length-of-valid-subsequence-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486037,
      "commentCount": 326,
      "topLevelCommentCount": 173
    },
    "classAndMethodDefinition": "def lengthOfLIS(self, nums):\n        tails = [0] * len(nums)"
  },
  {
    "stat": {
      "question_id": 41,
      "question__article__live": true,
      "question__article__slug": "first-missing-positive",
      "question__article__has_video_solution": false,
      "question__title": "First Missing Positive",
      "question__title_slug": "first-missing-positive",
      "question__hide": false,
      "total_acs": 1279990,
      "total_submitted": 3208782,
      "frontend_question_id": 41,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/first-missing-positive",
      "questionId": "41",
      "questionFrontendId": "41",
      "questionTitle": "First Missing Positive",
      "titleSlug": "first-missing-positive",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an unsorted integer array <code>nums</code>. Return the <em>smallest positive integer</em> that is <em>not present</em> in <code>nums</code>.</p>\n\n<p>You must implement an algorithm that runs in <code>O(n)</code> time and uses <code>O(1)</code> auxiliary space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,0]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The numbers in the range [1,2] are all in the array.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,4,-1,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 1 is in the array but 2 is missing.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [7,8,9,11,12]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The smallest positive integer 1 is missing.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,0]\n[3,4,-1,1]\n[7,8,9,11,12]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        }
      ],
      "hints": [
        "Think about how you would solve the problem in non-constant space.  Can you apply that logic to the existing space?",
        "We don't care about duplicates or non-positive integers",
        "Remember that O(2n) = O(n)"
      ],
      "solution": {
        "id": "2275",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16932,
      "dislikes": 1868,
      "similarQuestions": "[{\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All Numbers Disappeared in an Array\", \"titleSlug\": \"find-all-numbers-disappeared-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Couples Holding Hands\", \"titleSlug\": \"couples-holding-hands\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Smallest Number in Infinite Set\", \"titleSlug\": \"smallest-number-in-infinite-set\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Integers to Choose From a Range I\", \"titleSlug\": \"maximum-number-of-integers-to-choose-from-a-range-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Missing Non-negative Integer After Operations\", \"titleSlug\": \"smallest-missing-non-negative-integer-after-operations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Integers to Choose From a Range II\", \"titleSlug\": \"maximum-number-of-integers-to-choose-from-a-range-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Missing Integer Greater Than Sequential Prefix Sum\", \"titleSlug\": \"smallest-missing-integer-greater-than-sequential-prefix-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485778,
      "commentCount": 442,
      "topLevelCommentCount": 271
    },
    "classAndMethodDefinition": "class Solution:\n    def firstMissingPositive(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 205,
      "question__article__live": true,
      "question__article__slug": "isomorphic-strings",
      "question__article__has_video_solution": false,
      "question__title": "Isomorphic Strings",
      "question__title_slug": "isomorphic-strings",
      "question__hide": false,
      "total_acs": 1463711,
      "total_submitted": 3207536,
      "frontend_question_id": 205,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/isomorphic-strings",
      "questionId": "205",
      "questionFrontendId": "205",
      "questionTitle": "Isomorphic Strings",
      "titleSlug": "isomorphic-strings",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>s</code> and <code>t</code>, <em>determine if they are isomorphic</em>.</p>\n\n<p>Two strings <code>s</code> and <code>t</code> are isomorphic if the characters in <code>s</code> can be replaced to get <code>t</code>.</p>\n\n<p>All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;egg&quot;, t = &quot;add&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The strings <code>s</code> and <code>t</code> can be made identical by:</p>\n\n<ul>\n\t<li>Mapping <code>&#39;e&#39;</code> to <code>&#39;a&#39;</code>.</li>\n\t<li>Mapping <code>&#39;g&#39;</code> to <code>&#39;d&#39;</code>.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;foo&quot;, t = &quot;bar&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The strings <code>s</code> and <code>t</code> can not be made identical as <code>&#39;o&#39;</code> needs to be mapped to both <code>&#39;a&#39;</code> and <code>&#39;r&#39;</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;paper&quot;, t = &quot;title&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>t.length == s.length</code></li>\n\t<li><code>s</code> and <code>t</code> consist of any valid ascii character.</li>\n</ul>\n",
      "exampleTestcases": "\"egg\"\n\"add\"\n\"foo\"\n\"bar\"\n\"paper\"\n\"title\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1147",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9114,
      "dislikes": 2116,
      "similarQuestions": "[{\"title\": \"Word Pattern\", \"titleSlug\": \"word-pattern\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485942,
      "commentCount": 536,
      "topLevelCommentCount": 322
    },
    "classAndMethodDefinition": "def isIsomorphic(self, s, t):\n        s2t, t2s = {}, {}"
  },
  {
    "stat": {
      "question_id": 560,
      "question__article__live": true,
      "question__article__slug": "subarray-sum-equals-k",
      "question__article__has_video_solution": true,
      "question__title": "Subarray Sum Equals K",
      "question__title_slug": "subarray-sum-equals-k",
      "question__hide": false,
      "total_acs": 1368778,
      "total_submitted": 3108967,
      "frontend_question_id": 560,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/subarray-sum-equals-k",
      "questionId": "560",
      "questionFrontendId": "560",
      "questionTitle": "Subarray Sum Equals K",
      "titleSlug": "subarray-sum-equals-k",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code> and an integer <code>k</code>, return <em>the total number of subarrays whose sum equals to</em> <code>k</code>.</p>\n\n<p>A subarray is a contiguous <strong>non-empty</strong> sequence of elements within an array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,1], k = 2\n<strong>Output:</strong> 2\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3], k = 3\n<strong>Output:</strong> 2\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li><code>-10<sup>7</sup> &lt;= k &lt;= 10<sup>7</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,1]\n2\n[1,2,3]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [
        "Will Brute force work here? Try to optimize it.",
        "Can we optimize it by using some extra space?",
        "What about storing sum frequencies in a hash table? Will it be useful?",
        "sum(i,j)=sum(0,j)-sum(0,i), where sum(i,j) represents the sum of all the elements from index i to j-1.\r\n\r\nCan we use this property to optimize it."
      ],
      "solution": {
        "id": "119",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 21801,
      "dislikes": 673,
      "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Continuous Subarray Sum\", \"titleSlug\": \"continuous-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Product Less Than K\", \"titleSlug\": \"subarray-product-less-than-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Pivot Index\", \"titleSlug\": \"find-pivot-index\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sums Divisible by K\", \"titleSlug\": \"subarray-sums-divisible-by-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Reduce X to Zero\", \"titleSlug\": \"minimum-operations-to-reduce-x-to-zero\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"K Radius Subarray Averages\", \"titleSlug\": \"k-radius-subarray-averages\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Sum Score of Array\", \"titleSlug\": \"maximum-sum-score-of-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486287,
      "commentCount": 291,
      "topLevelCommentCount": 167
    },
    "classAndMethodDefinition": "def subarraySum(self, nums, k):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 122,
      "question__article__live": true,
      "question__article__slug": "best-time-to-buy-and-sell-stock-ii",
      "question__article__has_video_solution": true,
      "question__title": "Best Time to Buy and Sell Stock II",
      "question__title_slug": "best-time-to-buy-and-sell-stock-ii",
      "question__hide": false,
      "total_acs": 2083415,
      "total_submitted": 3086726,
      "frontend_question_id": 122,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",
      "questionId": "122",
      "questionFrontendId": "122",
      "questionTitle": "Best Time to Buy and Sell Stock II",
      "titleSlug": "best-time-to-buy-and-sell-stock-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p>\n\n<p>On each day, you may decide to buy and/or sell the stock. You can only hold <strong>at most one</strong> share of the stock at any time. However, you can buy it then immediately sell it on the <strong>same day</strong>.</p>\n\n<p>Find and return <em>the <strong>maximum</strong> profit you can achieve</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [7,1,5,3,6,4]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\nThen buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\nTotal profit is 4 + 3 = 7.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [1,2,3,4,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nTotal profit is 4.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= prices.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= prices[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[7,1,5,3,6,4]\n[1,2,3,4,5]\n[7,6,4,3,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "53",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13747,
      "dislikes": 2714,
      "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock IV\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock with Cooldown\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-with-cooldown\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock with Transaction Fee\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-with-transaction-fee\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Profit From Trading Stocks\", \"titleSlug\": \"maximum-profit-from-trading-stocks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485859,
      "commentCount": 329,
      "topLevelCommentCount": 226
    },
    "classAndMethodDefinition": "class Solution:\n    def maxProfit(self, prices: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 83,
      "question__article__live": true,
      "question__article__slug": "remove-duplicates-from-sorted-list",
      "question__article__has_video_solution": true,
      "question__title": "Remove Duplicates from Sorted List",
      "question__title_slug": "remove-duplicates-from-sorted-list",
      "question__hide": false,
      "total_acs": 1635405,
      "total_submitted": 3069688,
      "frontend_question_id": 83,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list",
      "questionId": "83",
      "questionFrontendId": "83",
      "questionTitle": "Remove Duplicates from Sorted List",
      "titleSlug": "remove-duplicates-from-sorted-list",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a sorted linked list, <em>delete all duplicates such that each element appears only once</em>. Return <em>the linked list <strong>sorted</strong> as well</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/list1.jpg\" style=\"width: 302px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> head = [1,1,2]\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/list2.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,1,2,3,3]\n<strong>Output:</strong> [1,2,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[0, 300]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n\t<li>The list is guaranteed to be <strong>sorted</strong> in ascending order.</li>\n</ul>\n",
      "exampleTestcases": "[1,1,2]\n[1,1,2,3,3]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "43",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8767,
      "dislikes": 311,
      "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted List II\", \"titleSlug\": \"remove-duplicates-from-sorted-list-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Remove Duplicates From an Unsorted Linked List\", \"titleSlug\": \"remove-duplicates-from-an-unsorted-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485820,
      "commentCount": 143,
      "topLevelCommentCount": 82
    },
    "classAndMethodDefinition": "def deleteDuplicates(self, head):\n        cur = head"
  },
  {
    "stat": {
      "question_id": 54,
      "question__article__live": true,
      "question__article__slug": "spiral-matrix",
      "question__article__has_video_solution": false,
      "question__title": "Spiral Matrix",
      "question__title_slug": "spiral-matrix",
      "question__hide": false,
      "total_acs": 1560417,
      "total_submitted": 3059841,
      "frontend_question_id": 54,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/spiral-matrix",
      "questionId": "54",
      "questionFrontendId": "54",
      "questionTitle": "Spiral Matrix",
      "titleSlug": "spiral-matrix",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> <code>matrix</code>, return <em>all elements of the</em> <code>matrix</code> <em>in spiral order</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/spiral1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [1,2,3,6,9,8,7,4,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/spiral.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\n<strong>Output:</strong> [1,2,3,4,8,12,11,10,9,5,6,7]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 10</code></li>\n\t<li><code>-100 &lt;= matrix[i][j] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2,3],[4,5,6],[7,8,9]]\n[[1,2,3,4],[5,6,7,8],[9,10,11,12]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "Well for some problems, the best way really is to come up with some algorithms for simulation. Basically, you need to simulate what the problem asks us to do.",
        "We go boundary by boundary and move inwards. That is the essential operation. First row, last column, last row, first column, and then we move inwards by 1 and repeat. That's all. That is all the simulation that we need.",
        "Think about when you want to switch the progress on one of the indexes. If you progress on i out of [i, j], you'll shift in the same column. Similarly, by changing values for j, you'd be shifting in the same row.\r\nAlso, keep track of the end of a boundary so that you can move inwards and then keep repeating. It's always best to simulate edge cases like a single column or a single row to see if anything breaks or not."
      ],
      "solution": {
        "id": "1160",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 15008,
      "dislikes": 1336,
      "similarQuestions": "[{\"title\": \"Spiral Matrix II\", \"titleSlug\": \"spiral-matrix-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Spiral Matrix III\", \"titleSlug\": \"spiral-matrix-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Spiral Matrix IV\", \"titleSlug\": \"spiral-matrix-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485791,
      "commentCount": 240,
      "topLevelCommentCount": 149
    },
    "classAndMethodDefinition": "def spiralOrder(self, matrix):\n        return matrix and list(matrix.pop(0)) + self.spiralOrder(zip(*matrix)[::-1])"
  },
  {
    "stat": {
      "question_id": 605,
      "question__article__live": true,
      "question__article__slug": "can-place-flowers",
      "question__article__has_video_solution": false,
      "question__title": "Can Place Flowers",
      "question__title_slug": "can-place-flowers",
      "question__hide": false,
      "total_acs": 884030,
      "total_submitted": 3054096,
      "frontend_question_id": 605,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/can-place-flowers",
      "questionId": "605",
      "questionFrontendId": "605",
      "questionTitle": "Can Place Flowers",
      "titleSlug": "can-place-flowers",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in <strong>adjacent</strong> plots.</p>\n\n<p>Given an integer array <code>flowerbed</code> containing <code>0</code>&#39;s and <code>1</code>&#39;s, where <code>0</code> means empty and <code>1</code> means not empty, and an integer <code>n</code>, return <code>true</code>&nbsp;<em>if</em> <code>n</code> <em>new flowers can be planted in the</em> <code>flowerbed</code> <em>without violating the no-adjacent-flowers rule and</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> flowerbed = [1,0,0,0,1], n = 1\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> flowerbed = [1,0,0,0,1], n = 2\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= flowerbed.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>flowerbed[i]</code> is <code>0</code> or <code>1</code>.</li>\n\t<li>There are no two adjacent flowers in <code>flowerbed</code>.</li>\n\t<li><code>0 &lt;= n &lt;= flowerbed.length</code></li>\n</ul>\n",
      "exampleTestcases": "[1,0,0,0,1]\n1\n[1,0,0,0,1]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "154",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6612,
      "dislikes": 1192,
      "similarQuestions": "[{\"title\": \"Teemo Attacking\", \"titleSlug\": \"teemo-attacking\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Asteroid Collision\", \"titleSlug\": \"asteroid-collision\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486330,
      "commentCount": 407,
      "topLevelCommentCount": 281
    },
    "classAndMethodDefinition": "def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:\n        if n == 0:"
  },
  {
    "stat": {
      "question_id": 62,
      "question__article__live": true,
      "question__article__slug": "unique-paths",
      "question__article__has_video_solution": false,
      "question__title": "Unique Paths",
      "question__title_slug": "unique-paths",
      "question__hide": false,
      "total_acs": 1974872,
      "total_submitted": 3050416,
      "frontend_question_id": 62,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/unique-paths",
      "questionId": "62",
      "questionFrontendId": "62",
      "questionTitle": "Unique Paths",
      "titleSlug": "unique-paths",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is a robot on an <code>m x n</code> grid. The robot is initially located at the <strong>top-left corner</strong> (i.e., <code>grid[0][0]</code>). The robot tries to move to the <strong>bottom-right corner</strong> (i.e., <code>grid[m - 1][n - 1]</code>). The robot can only move either down or right at any point in time.</p>\n\n<p>Given the two integers <code>m</code> and <code>n</code>, return <em>the number of possible unique paths that the robot can take to reach the bottom-right corner</em>.</p>\n\n<p>The test cases are generated so that the answer will be less than or equal to <code>2 * 10<sup>9</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png\" style=\"width: 400px; height: 183px;\" />\n<pre>\n<strong>Input:</strong> m = 3, n = 7\n<strong>Output:</strong> 28\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> m = 3, n = 2\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right\n3. Down -&gt; Right -&gt; Down\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "3\n7\n3\n2",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "867",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16764,
      "dislikes": 451,
      "similarQuestions": "[{\"title\": \"Unique Paths II\", \"titleSlug\": \"unique-paths-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Sum\", \"titleSlug\": \"minimum-path-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Dungeon Game\", \"titleSlug\": \"dungeon-game\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Cost in a Grid\", \"titleSlug\": \"minimum-path-cost-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost Homecoming of a Robot in a Grid\", \"titleSlug\": \"minimum-cost-homecoming-of-a-robot-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Ways to Reach a Position After Exactly k Steps\", \"titleSlug\": \"number-of-ways-to-reach-a-position-after-exactly-k-steps\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paths in Matrix Whose Sum Is Divisible by K\", \"titleSlug\": \"paths-in-matrix-whose-sum-is-divisible-by-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485799,
      "commentCount": 220,
      "topLevelCommentCount": 141
    },
    "classAndMethodDefinition": "def uniquePaths(self, m: int, n: int) -> int:\n        return math.comb(m+n-2, m-1)"
  },
  {
    "stat": {
      "question_id": 110,
      "question__article__live": true,
      "question__article__slug": "balanced-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Balanced Binary Tree",
      "question__title_slug": "balanced-binary-tree",
      "question__hide": false,
      "total_acs": 1621832,
      "total_submitted": 3047386,
      "frontend_question_id": 110,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/balanced-binary-tree",
      "questionId": "110",
      "questionFrontendId": "110",
      "questionTitle": "Balanced Binary Tree",
      "titleSlug": "balanced-binary-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a binary tree, determine if it is <span data-keyword=\"height-balanced\"><strong>height-balanced</strong></span>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg\" style=\"width: 342px; height: 221px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg\" style=\"width: 452px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,2,3,3,null,null,4,4]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,null,null,15,7]\n[1,2,2,3,3,null,null,4,4]\n[]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "790",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10828,
      "dislikes": 707,
      "similarQuestions": "[{\"title\": \"Maximum Depth of Binary Tree\", \"titleSlug\": \"maximum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485847,
      "commentCount": 159,
      "topLevelCommentCount": 103
    },
    "classAndMethodDefinition": "def isBalanced(self, root):\n        return (self.Height(root) >= 0)"
  },
  {
    "stat": {
      "question_id": 112,
      "question__article__live": true,
      "question__article__slug": "path-sum",
      "question__article__has_video_solution": false,
      "question__title": "Path Sum",
      "question__title_slug": "path-sum",
      "question__hide": false,
      "total_acs": 1554167,
      "total_submitted": 3034163,
      "frontend_question_id": 112,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/path-sum",
      "questionId": "112",
      "questionFrontendId": "112",
      "questionTitle": "Path Sum",
      "titleSlug": "path-sum",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree and an integer <code>targetSum</code>, return <code>true</code> if the tree has a <strong>root-to-leaf</strong> path such that adding up all the values along the path equals <code>targetSum</code>.</p>\n\n<p>A <strong>leaf</strong> is a node with no children.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum1.jpg\" style=\"width: 500px; height: 356px;\" />\n<pre>\n<strong>Input:</strong> root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The root-to-leaf path with the target sum is shown.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3], targetSum = 5\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There two root-to-leaf paths in the tree:\n(1 --&gt; 2): The sum is 3.\n(1 --&gt; 3): The sum is 4.\nThere is no root-to-leaf path with sum = 5.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [], targetSum = 0\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Since the tree is empty, there are no root-to-leaf paths.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= targetSum &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[5,4,8,11,null,13,4,7,2,null,null,null,1]\n22\n[1,2,3]\n5\n[]\n0",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "616",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9760,
      "dislikes": 1120,
      "similarQuestions": "[{\"title\": \"Path Sum II\", \"titleSlug\": \"path-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Sum Root to Leaf Numbers\", \"titleSlug\": \"sum-root-to-leaf-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum III\", \"titleSlug\": \"path-sum-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485849,
      "commentCount": 128,
      "topLevelCommentCount": 84
    },
    "classAndMethodDefinition": "def __init__(self, x):\n    #         self.val = x"
  },
  {
    "stat": {
      "question_id": 287,
      "question__article__live": true,
      "question__article__slug": "find-the-duplicate-number",
      "question__article__has_video_solution": false,
      "question__title": "Find the Duplicate Number",
      "question__title_slug": "find-the-duplicate-number",
      "question__hide": false,
      "total_acs": 1863202,
      "total_submitted": 3030945,
      "frontend_question_id": 287,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-the-duplicate-number",
      "questionId": "287",
      "questionFrontendId": "287",
      "questionTitle": "Find the Duplicate Number",
      "titleSlug": "find-the-duplicate-number",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code> containing&nbsp;<code>n + 1</code> integers where each integer is in the range <code>[1, n]</code> inclusive.</p>\n\n<p>There is only <strong>one repeated number</strong> in <code>nums</code>, return <em>this&nbsp;repeated&nbsp;number</em>.</p>\n\n<p>You must solve the problem <strong>without</strong> modifying the array <code>nums</code>&nbsp;and uses only constant extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,4,2,2]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,3,4,2]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3,3,3,3]\n<strong>Output:</strong> 3</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>nums.length == n + 1</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= n</code></li>\n\t<li>All the integers in <code>nums</code> appear only <strong>once</strong> except for <strong>precisely one integer</strong> which appears <strong>two or more</strong> times.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><b>Follow up:</b></p>\n\n<ul>\n\t<li>How can we prove that at least one duplicate number must exist in <code>nums</code>?</li>\n\t<li>Can you solve the problem in linear runtime complexity?</li>\n</ul>\n",
      "exampleTestcases": "[1,3,4,2,2]\n[3,1,3,4,2]\n[3,3,3,3,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "338",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 23432,
      "dislikes": 4734,
      "similarQuestions": "[{\"title\": \"First Missing Positive\", \"titleSlug\": \"first-missing-positive\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Linked List Cycle II\", \"titleSlug\": \"linked-list-cycle-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Set Mismatch\", \"titleSlug\": \"set-mismatch\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486024,
      "commentCount": 567,
      "topLevelCommentCount": 303
    },
    "classAndMethodDefinition": "def findDuplicate(self, nums: List[int]) -> int:\n        seen = set()"
  },
  {
    "stat": {
      "question_id": 231,
      "question__article__live": true,
      "question__article__slug": "power-of-two",
      "question__article__has_video_solution": false,
      "question__title": "Power of Two",
      "question__title_slug": "power-of-two",
      "question__hide": false,
      "total_acs": 1424101,
      "total_submitted": 2970743,
      "frontend_question_id": 231,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/power-of-two",
      "questionId": "231",
      "questionFrontendId": "231",
      "questionTitle": "Power of Two",
      "titleSlug": "power-of-two",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em><code>true</code> if it is a power of two. Otherwise, return <code>false</code></em>.</p>\n\n<p>An integer <code>n</code> is a power of two, if there exists an integer <code>x</code> such that <code>n == 2<sup>x</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> true\n<strong>Explanation: </strong>2<sup>0</sup> = 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 16\n<strong>Output:</strong> true\n<strong>Explanation: </strong>2<sup>4</sup> = 16\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it without loops/recursion?",
      "exampleTestcases": "1\n16\n3",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "760",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6873,
      "dislikes": 438,
      "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Three\", \"titleSlug\": \"power-of-three\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Four\", \"titleSlug\": \"power-of-four\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485968,
      "commentCount": 238,
      "topLevelCommentCount": 175
    },
    "classAndMethodDefinition": "class Solution:\n    def isPowerOfTwo(self, n: int) -> bool:"
  },
  {
    "stat": {
      "question_id": 6,
      "question__article__live": true,
      "question__article__slug": "zigzag-conversion",
      "question__article__has_video_solution": true,
      "question__title": "Zigzag Conversion",
      "question__title_slug": "zigzag-conversion",
      "question__hide": false,
      "total_acs": 1450538,
      "total_submitted": 2954872,
      "frontend_question_id": 6,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/zigzag-conversion",
      "questionId": "6",
      "questionFrontendId": "6",
      "questionTitle": "Zigzag Conversion",
      "titleSlug": "zigzag-conversion",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>The string <code>&quot;PAYPALISHIRING&quot;</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>\n\n<pre>\nP   A   H   N\nA P L S I I G\nY   I   R\n</pre>\n\n<p>And then read line by line: <code>&quot;PAHNAPLSIIGYIR&quot;</code></p>\n\n<p>Write the code that will take a string and make this conversion given a number of rows:</p>\n\n<pre>\nstring convert(string s, int numRows);\n</pre>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;PAYPALISHIRING&quot;, numRows = 3\n<strong>Output:</strong> &quot;PAHNAPLSIIGYIR&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;PAYPALISHIRING&quot;, numRows = 4\n<strong>Output:</strong> &quot;PINALSIGYAHRPI&quot;\n<strong>Explanation:</strong>\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;A&quot;, numRows = 1\n<strong>Output:</strong> &quot;A&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consists of English letters (lower-case and upper-case), <code>&#39;,&#39;</code> and <code>&#39;.&#39;</code>.</li>\n\t<li><code>1 &lt;= numRows &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "\"PAYPALISHIRING\"\n3\n\"PAYPALISHIRING\"\n4\n\"A\"\n1",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1627",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7788,
      "dislikes": 14809,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485742,
      "commentCount": 420,
      "topLevelCommentCount": 297
    },
    "classAndMethodDefinition": "class Solution:\n    def convert(self, s: str, numRows: int) -> str:"
  },
  {
    "stat": {
      "question_id": 39,
      "question__article__live": true,
      "question__article__slug": "combination-sum",
      "question__article__has_video_solution": true,
      "question__title": "Combination Sum",
      "question__title_slug": "combination-sum",
      "question__hide": false,
      "total_acs": 2108969,
      "total_submitted": 2906411,
      "frontend_question_id": 39,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/combination-sum",
      "questionId": "39",
      "questionFrontendId": "39",
      "questionTitle": "Combination Sum",
      "titleSlug": "combination-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of <strong>distinct</strong> integers <code>candidates</code> and a target integer <code>target</code>, return <em>a list of all <strong>unique combinations</strong> of </em><code>candidates</code><em> where the chosen numbers sum to </em><code>target</code><em>.</em> You may return the combinations in <strong>any order</strong>.</p>\n\n<p>The <strong>same</strong> number may be chosen from <code>candidates</code> an <strong>unlimited number of times</strong>. Two combinations are unique if the <span data-keyword=\"frequency-array\">frequency</span> of at least one of the chosen numbers is different.</p>\n\n<p>The test cases are generated such that the number of unique combinations that sum up to <code>target</code> is less than <code>150</code> combinations for the given input.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [2,3,6,7], target = 7\n<strong>Output:</strong> [[2,2,3],[7]]\n<strong>Explanation:</strong>\n2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.\n7 is a candidate, and 7 = 7.\nThese are the only two combinations.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [2,3,5], target = 8\n<strong>Output:</strong> [[2,2,2,2],[2,3,3],[3,5]]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [2], target = 1\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= candidates.length &lt;= 30</code></li>\n\t<li><code>2 &lt;= candidates[i] &lt;= 40</code></li>\n\t<li>All elements of <code>candidates</code> are <strong>distinct</strong>.</li>\n\t<li><code>1 &lt;= target &lt;= 40</code></li>\n</ul>\n",
      "exampleTestcases": "[2,3,6,7]\n7\n[2,3,5]\n8\n[2]\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1004",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 18997,
      "dislikes": 429,
      "similarQuestions": "[{\"title\": \"Letter Combinations of a Phone Number\", \"titleSlug\": \"letter-combinations-of-a-phone-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum II\", \"titleSlug\": \"combination-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combinations\", \"titleSlug\": \"combinations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum III\", \"titleSlug\": \"combination-sum-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Factor Combinations\", \"titleSlug\": \"factor-combinations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum IV\", \"titleSlug\": \"combination-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"The Number of Ways to Make the Sum\", \"titleSlug\": \"the-number-of-ways-to-make-the-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485776,
      "commentCount": 160,
      "topLevelCommentCount": 98
    },
    "classAndMethodDefinition": "def combinationSum(self, candidates, target):\n        ret = []"
  },
  {
    "stat": {
      "question_id": 67,
      "question__article__live": true,
      "question__article__slug": "add-binary",
      "question__article__has_video_solution": false,
      "question__title": "Add Binary",
      "question__title_slug": "add-binary",
      "question__hide": false,
      "total_acs": 1569673,
      "total_submitted": 2895015,
      "frontend_question_id": 67,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/add-binary",
      "questionId": "67",
      "questionFrontendId": "67",
      "questionTitle": "Add Binary",
      "titleSlug": "add-binary",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two binary strings <code>a</code> and <code>b</code>, return <em>their sum as a binary string</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> a = \"11\", b = \"1\"\n<strong>Output:</strong> \"100\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> a = \"1010\", b = \"1011\"\n<strong>Output:</strong> \"10101\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= a.length, b.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>a</code> and <code>b</code> consist&nbsp;only of <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code> characters.</li>\n\t<li>Each string does not contain leading zeros except for the zero itself.</li>\n</ul>\n",
      "exampleTestcases": "\"11\"\n\"1\"\n\"1010\"\n\"1011\"",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "805",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9493,
      "dislikes": 988,
      "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add to Array-Form of Integer\", \"titleSlug\": \"add-to-array-form-of-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485804,
      "commentCount": 264,
      "topLevelCommentCount": 160
    },
    "classAndMethodDefinition": "class Solution:\n  def addBinary(self, a: str, b: str) -> str:"
  },
  {
    "stat": {
      "question_id": 160,
      "question__article__live": true,
      "question__article__slug": "intersection-of-two-linked-lists",
      "question__article__has_video_solution": true,
      "question__title": "Intersection of Two Linked Lists",
      "question__title_slug": "intersection-of-two-linked-lists",
      "question__hide": false,
      "total_acs": 1685196,
      "total_submitted": 2872734,
      "frontend_question_id": 160,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/intersection-of-two-linked-lists",
      "questionId": "160",
      "questionFrontendId": "160",
      "questionTitle": "Intersection of Two Linked Lists",
      "titleSlug": "intersection-of-two-linked-lists",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the heads of two singly linked-lists <code>headA</code> and <code>headB</code>, return <em>the node at which the two lists intersect</em>. If the two linked lists have no intersection at all, return <code>null</code>.</p>\n\n<p>For example, the following two linked lists begin to intersect at node <code>c1</code>:</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_statement.png\" style=\"width: 500px; height: 162px;\" />\n<p>The test cases are generated such that there are no cycles anywhere in the entire linked structure.</p>\n\n<p><strong>Note</strong> that the linked lists must <strong>retain their original structure</strong> after the function returns.</p>\n\n<p><strong>Custom Judge:</strong></p>\n\n<p>The inputs to the <strong>judge</strong> are given as follows (your program is <strong>not</strong> given these inputs):</p>\n\n<ul>\n\t<li><code>intersectVal</code> - The value of the node where the intersection occurs. This is <code>0</code> if there is no intersected node.</li>\n\t<li><code>listA</code> - The first linked list.</li>\n\t<li><code>listB</code> - The second linked list.</li>\n\t<li><code>skipA</code> - The number of nodes to skip ahead in <code>listA</code> (starting from the head) to get to the intersected node.</li>\n\t<li><code>skipB</code> - The number of nodes to skip ahead in <code>listB</code> (starting from the head) to get to the intersected node.</li>\n</ul>\n\n<p>The judge will then create the linked structure based on these inputs and pass the two heads, <code>headA</code> and <code>headB</code> to your program. If you correctly return the intersected node, then your solution will be <strong>accepted</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_1_1.png\" style=\"width: 500px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n<strong>Output:</strong> Intersected at &#39;8&#39;\n<strong>Explanation:</strong> The intersected node&#39;s value is 8 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [4,1,8,4,5]. From the head of B, it reads as [5,6,1,8,4,5]. There are 2 nodes before the intersected node in A; There are 3 nodes before the intersected node in B.\n- Note that the intersected node&#39;s value is not 1 because the nodes with value 1 in A and B (2<sup>nd</sup> node in A and 3<sup>rd</sup> node in B) are different node references. In other words, they point to two different locations in memory, while the nodes with value 8 in A and B (3<sup>rd</sup> node in A and 4<sup>th</sup> node in B) point to the same location in memory.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_2.png\" style=\"width: 500px; height: 194px;\" />\n<pre>\n<strong>Input:</strong> intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n<strong>Output:</strong> Intersected at &#39;2&#39;\n<strong>Explanation:</strong> The intersected node&#39;s value is 2 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [1,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes before the intersected node in A; There are 1 node before the intersected node in B.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_3.png\" style=\"width: 300px; height: 189px;\" />\n<pre>\n<strong>Input:</strong> intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n<strong>Output:</strong> No intersection\n<strong>Explanation:</strong> From the head of A, it reads as [2,6,4]. From the head of B, it reads as [1,5]. Since the two lists do not intersect, intersectVal must be 0, while skipA and skipB can be arbitrary values.\nExplanation: The two lists do not intersect, so return null.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes of <code>listA</code> is in the <code>m</code>.</li>\n\t<li>The number of nodes of <code>listB</code> is in the <code>n</code>.</li>\n\t<li><code>1 &lt;= m, n &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= skipA &lt;&nbsp;m</code></li>\n\t<li><code>0 &lt;= skipB &lt;&nbsp;n</code></li>\n\t<li><code>intersectVal</code> is <code>0</code> if <code>listA</code> and <code>listB</code> do not intersect.</li>\n\t<li><code>intersectVal == listA[skipA] == listB[skipB]</code> if <code>listA</code> and <code>listB</code> intersect.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you write a solution that runs in <code>O(m + n)</code> time and use only <code>O(1)</code> memory?",
      "exampleTestcases": "8\n[4,1,8,4,5]\n[5,6,1,8,4,5]\n2\n3\n2\n[1,9,1,2,4]\n[3,2,4]\n3\n1\n0\n[2,6,4]\n[1,5]\n3\n2",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "18",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 15083,
      "dislikes": 1367,
      "similarQuestions": "[{\"title\": \"Minimum Index Sum of Two Lists\", \"titleSlug\": \"minimum-index-sum-of-two-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485897,
      "commentCount": 201,
      "topLevelCommentCount": 130
    },
    "classAndMethodDefinition": "def getIntersectionNode(self, headA, headB):\n            if headA is None or headB is None:"
  },
  {
    "stat": {
      "question_id": 57,
      "question__article__live": true,
      "question__article__slug": "insert-interval",
      "question__article__has_video_solution": false,
      "question__title": "Insert Interval",
      "question__title_slug": "insert-interval",
      "question__hide": false,
      "total_acs": 1205000,
      "total_submitted": 2863391,
      "frontend_question_id": 57,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/insert-interval",
      "questionId": "57",
      "questionFrontendId": "57",
      "questionTitle": "Insert Interval",
      "titleSlug": "insert-interval",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of non-overlapping intervals <code>intervals</code> where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code> represent the start and the end of the <code>i<sup>th</sup></code> interval and <code>intervals</code> is sorted in ascending order by <code>start<sub>i</sub></code>. You are also given an interval <code>newInterval = [start, end]</code> that represents the start and end of another interval.</p>\n\n<p>Insert <code>newInterval</code> into <code>intervals</code> such that <code>intervals</code> is still sorted in ascending order by <code>start<sub>i</sub></code> and <code>intervals</code> still does not have any overlapping intervals (merge overlapping intervals if necessary).</p>\n\n<p>Return <code>intervals</code><em> after the insertion</em>.</p>\n\n<p><strong>Note</strong> that you don&#39;t need to modify <code>intervals</code> in-place. You can make a new array and return it.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,3],[6,9]], newInterval = [2,5]\n<strong>Output:</strong> [[1,5],[6,9]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\n<strong>Output:</strong> [[1,2],[3,10],[12,16]]\n<strong>Explanation:</strong> Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>5</sup></code></li>\n\t<li><code>intervals</code> is sorted by <code>start<sub>i</sub></code> in <strong>ascending</strong> order.</li>\n\t<li><code>newInterval.length == 2</code></li>\n\t<li><code>0 &lt;= start &lt;= end &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,3],[6,9]]\n[2,5]\n[[1,2],[3,5],[6,7],[8,10],[12,16]]\n[4,8]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [
        "Intervals Array is sorted. Can you use Binary Search to find the correct position to insert the new Interval.?",
        "Can you try merging the overlapping intervals while inserting the new interval?",
        "This can be done by comparing the end of the last interval with the start of the new interval and vice versa."
      ],
      "solution": {
        "id": "2269",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10482,
      "dislikes": 824,
      "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Integers in Intervals\", \"titleSlug\": \"count-integers-in-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485794,
      "commentCount": 347,
      "topLevelCommentCount": 247
    },
    "classAndMethodDefinition": "def insert(self, intervals, newInterval):\n        s, e = newInterval.start, newInterval.end"
  },
  {
    "stat": {
      "question_id": 387,
      "question__article__live": true,
      "question__article__slug": "first-unique-character-in-a-string",
      "question__article__has_video_solution": true,
      "question__title": "First Unique Character in a String",
      "question__title_slug": "first-unique-character-in-a-string",
      "question__hide": false,
      "total_acs": 1788218,
      "total_submitted": 2861307,
      "frontend_question_id": 387,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/first-unique-character-in-a-string",
      "questionId": "387",
      "questionFrontendId": "387",
      "questionTitle": "First Unique Character in a String",
      "titleSlug": "first-unique-character-in-a-string",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, <em>find the first non-repeating character in it and return its index</em>. If it does not exist, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"leetcode\"\n<strong>Output:</strong> 0\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"loveleetcode\"\n<strong>Output:</strong> 2\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"aabb\"\n<strong>Output:</strong> -1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"leetcode\"\n\"loveleetcode\"\n\"aabb\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "638",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9008,
      "dislikes": 298,
      "similarQuestions": "[{\"title\": \"Sort Characters By Frequency\", \"titleSlug\": \"sort-characters-by-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486124,
      "commentCount": 173,
      "topLevelCommentCount": 93
    },
    "classAndMethodDefinition": "class Solution:\n    def firstUniqChar(self, s: str) -> int:"
  },
  {
    "stat": {
      "question_id": 226,
      "question__article__live": true,
      "question__article__slug": "invert-binary-tree",
      "question__article__has_video_solution": true,
      "question__title": "Invert Binary Tree",
      "question__title_slug": "invert-binary-tree",
      "question__hide": false,
      "total_acs": 2220975,
      "total_submitted": 2858227,
      "frontend_question_id": 226,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/invert-binary-tree",
      "questionId": "226",
      "questionFrontendId": "226",
      "questionTitle": "Invert Binary Tree",
      "titleSlug": "invert-binary-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, invert the tree, and return <em>its root</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/14/invert1-tree.jpg\" style=\"width: 500px; height: 165px;\" />\n<pre>\n<strong>Input:</strong> root = [4,2,7,1,3,6,9]\n<strong>Output:</strong> [4,7,2,9,6,3,1]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/14/invert2-tree.jpg\" style=\"width: 500px; height: 120px;\" />\n<pre>\n<strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> [2,3,1]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[4,2,7,1,3,6,9]\n[2,1,3]\n[]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "37",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 14041,
      "dislikes": 229,
      "similarQuestions": "[{\"title\": \"Reverse Odd Levels of Binary Tree\", \"titleSlug\": \"reverse-odd-levels-of-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485963,
      "commentCount": 172,
      "topLevelCommentCount": 127
    },
    "classAndMethodDefinition": "class Solution:\n    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:"
  },
  {
    "stat": {
      "question_id": 18,
      "question__article__live": true,
      "question__article__slug": "4sum",
      "question__article__has_video_solution": false,
      "question__title": "4Sum",
      "question__title_slug": "4sum",
      "question__hide": false,
      "total_acs": 1043637,
      "total_submitted": 2848018,
      "frontend_question_id": 18,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/4sum",
      "questionId": "18",
      "questionFrontendId": "18",
      "questionTitle": "4Sum",
      "titleSlug": "4sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code> of <code>n</code> integers, return <em>an array of all the <strong>unique</strong> quadruplets</em> <code>[nums[a], nums[b], nums[c], nums[d]]</code> such that:</p>\n\n<ul>\n\t<li><code>0 &lt;= a, b, c, d&nbsp;&lt; n</code></li>\n\t<li><code>a</code>, <code>b</code>, <code>c</code>, and <code>d</code> are <strong>distinct</strong>.</li>\n\t<li><code>nums[a] + nums[b] + nums[c] + nums[d] == target</code></li>\n</ul>\n\n<p>You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,0,-1,0,-2,2], target = 0\n<strong>Output:</strong> [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,2,2,2], target = 8\n<strong>Output:</strong> [[2,2,2,2]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 200</code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,0,-1,0,-2,2]\n0\n[2,2,2,2,2]\n8",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "959",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11425,
      "dislikes": 1408,
      "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum II\", \"titleSlug\": \"4sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Special Quadruplets\", \"titleSlug\": \"count-special-quadruplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485755,
      "commentCount": 305,
      "topLevelCommentCount": 195
    },
    "classAndMethodDefinition": "def fourSum(self, nums, target):\n        nums.sort()"
  },
  {
    "stat": {
      "question_id": 127,
      "question__article__live": true,
      "question__article__slug": "word-ladder",
      "question__article__has_video_solution": true,
      "question__title": "Word Ladder",
      "question__title_slug": "word-ladder",
      "question__hide": false,
      "total_acs": 1139587,
      "total_submitted": 2833354,
      "frontend_question_id": 127,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/word-ladder",
      "questionId": "127",
      "questionFrontendId": "127",
      "questionTitle": "Word Ladder",
      "titleSlug": "word-ladder",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>A <strong>transformation sequence</strong> from word <code>beginWord</code> to word <code>endWord</code> using a dictionary <code>wordList</code> is a sequence of words <code>beginWord -&gt; s<sub>1</sub> -&gt; s<sub>2</sub> -&gt; ... -&gt; s<sub>k</sub></code> such that:</p>\n\n<ul>\n\t<li>Every adjacent pair of words differs by a single letter.</li>\n\t<li>Every <code>s<sub>i</sub></code> for <code>1 &lt;= i &lt;= k</code> is in <code>wordList</code>. Note that <code>beginWord</code> does not need to be in <code>wordList</code>.</li>\n\t<li><code>s<sub>k</sub> == endWord</code></li>\n</ul>\n\n<p>Given two words, <code>beginWord</code> and <code>endWord</code>, and a dictionary <code>wordList</code>, return <em>the <strong>number of words</strong> in the <strong>shortest transformation sequence</strong> from</em> <code>beginWord</code> <em>to</em> <code>endWord</code><em>, or </em><code>0</code><em> if no such sequence exists.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> beginWord = &quot;hit&quot;, endWord = &quot;cog&quot;, wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> One shortest transformation sequence is &quot;hit&quot; -&gt; &quot;hot&quot; -&gt; &quot;dot&quot; -&gt; &quot;dog&quot; -&gt; cog&quot;, which is 5 words long.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> beginWord = &quot;hit&quot;, endWord = &quot;cog&quot;, wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The endWord &quot;cog&quot; is not in wordList, therefore there is no valid transformation sequence.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= beginWord.length &lt;= 10</code></li>\n\t<li><code>endWord.length == beginWord.length</code></li>\n\t<li><code>1 &lt;= wordList.length &lt;= 5000</code></li>\n\t<li><code>wordList[i].length == beginWord.length</code></li>\n\t<li><code>beginWord</code>, <code>endWord</code>, and <code>wordList[i]</code> consist of lowercase English letters.</li>\n\t<li><code>beginWord != endWord</code></li>\n\t<li>All the words in <code>wordList</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "\"hit\"\n\"cog\"\n[\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\"hit\"\n\"cog\"\n[\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "699",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12154,
      "dislikes": 1884,
      "similarQuestions": "[{\"title\": \"Word Ladder II\", \"titleSlug\": \"word-ladder-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Genetic Mutation\", \"titleSlug\": \"minimum-genetic-mutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Words Within Two Edits of Dictionary\", \"titleSlug\": \"words-within-two-edits-of-dictionary\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485864,
      "commentCount": 206,
      "topLevelCommentCount": 145
    },
    "classAndMethodDefinition": "def ladderLength(self, beginWord, endWord, wordList):\n            "
  },
  {
    "stat": {
      "question_id": 46,
      "question__article__live": true,
      "question__article__slug": "permutations",
      "question__article__has_video_solution": false,
      "question__title": "Permutations",
      "question__title_slug": "permutations",
      "question__hide": false,
      "total_acs": 2221800,
      "total_submitted": 2808199,
      "frontend_question_id": 46,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/permutations",
      "questionId": "46",
      "questionFrontendId": "46",
      "questionTitle": "Permutations",
      "titleSlug": "permutations",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code> of distinct integers, return <em>all the possible permutations</em>. You can return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1]\n<strong>Output:</strong> [[0,1],[1,0]]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 6</code></li>\n\t<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n\t<li>All the integers of <code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[0,1]\n[1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1945",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 19192,
      "dislikes": 330,
      "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations II\", \"titleSlug\": \"permutations-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutation Sequence\", \"titleSlug\": \"permutation-sequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Combinations\", \"titleSlug\": \"combinations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485783,
      "commentCount": 168,
      "topLevelCommentCount": 104
    },
    "classAndMethodDefinition": "def permute(self, nums):\n        res = []"
  },
  {
    "stat": {
      "question_id": 16,
      "question__article__live": true,
      "question__article__slug": "3sum-closest",
      "question__article__has_video_solution": true,
      "question__title": "3Sum Closest",
      "question__title_slug": "3sum-closest",
      "question__hide": false,
      "total_acs": 1289415,
      "total_submitted": 2801905,
      "frontend_question_id": 16,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/3sum-closest",
      "questionId": "16",
      "questionFrontendId": "16",
      "questionTitle": "3Sum Closest",
      "titleSlug": "3sum-closest",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> of length <code>n</code> and an integer <code>target</code>, find three integers in <code>nums</code> such that the sum is closest to <code>target</code>.</p>\n\n<p>Return <em>the sum of the three integers</em>.</p>\n\n<p>You may assume that each input would have exactly one solution.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,2,1,-4], target = 1\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,0], target = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The sum that is closest to the target is 0. (0 + 0 + 0 = 0).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;= 500</code></li>\n\t<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[-1,2,1,-4]\n1\n[0,0,0]\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "948",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10521,
      "dislikes": 572,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"3Sum Smaller\", \"titleSlug\": \"3sum-smaller\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485753,
      "commentCount": 171,
      "topLevelCommentCount": 95
    },
    "classAndMethodDefinition": "def threeSumClosest(self, num, target):\n            num.sort()"
  },
  {
    "stat": {
      "question_id": 236,
      "question__article__live": true,
      "question__article__slug": "lowest-common-ancestor-of-a-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Lowest Common Ancestor of a Binary Tree",
      "question__title_slug": "lowest-common-ancestor-of-a-binary-tree",
      "question__hide": false,
      "total_acs": 1765440,
      "total_submitted": 2773980,
      "frontend_question_id": 236,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",
      "questionId": "236",
      "questionFrontendId": "236",
      "questionTitle": "Lowest Common Ancestor of a Binary Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/Lowest_common_ancestor\" target=\"_blank\">definition of LCA on Wikipedia</a>: &ldquo;The lowest common ancestor is defined between two nodes <code>p</code> and <code>q</code> as the lowest node in <code>T</code> that has both <code>p</code> and <code>q</code> as descendants (where we allow <b>a node to be a descendant of itself</b>).&rdquo;</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/14/binarytree.png\" style=\"width: 200px; height: 190px;\" />\n<pre>\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The LCA of nodes 5 and 1 is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/14/binarytree.png\" style=\"width: 200px; height: 190px;\" />\n<pre>\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2], p = 1, q = 2\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 10<sup>5</sup>]</code>.</li>\n\t<li><code>-10<sup>9</sup> &lt;= Node.val &lt;= 10<sup>9</sup></code></li>\n\t<li>All <code>Node.val</code> are <strong>unique</strong>.</li>\n\t<li><code>p != q</code></li>\n\t<li><code>p</code> and <code>q</code> will exist in the tree.</li>\n</ul>\n",
      "exampleTestcases": "[3,5,1,6,2,0,8,null,null,7,4]\n5\n1\n[3,5,1,6,2,0,8,null,null,7,4]\n5\n4\n[1,2]\n1\n2",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "615",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 16710,
      "dislikes": 423,
      "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Search Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Common Region\", \"titleSlug\": \"smallest-common-region\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Players With Zero or One Losses\", \"titleSlug\": \"find-players-with-zero-or-one-losses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree II\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree III\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree IV\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Step-By-Step Directions From a Binary Tree Node to Another\", \"titleSlug\": \"step-by-step-directions-from-a-binary-tree-node-to-another\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cycle Length Queries in a Tree\", \"titleSlug\": \"cycle-length-queries-in-a-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485973,
      "commentCount": 134,
      "topLevelCommentCount": 84
    },
    "classAndMethodDefinition": "def lowestCommonAncestor(self, root, p, q):\n        if root in (None, p, q): return root"
  },
  {
    "stat": {
      "question_id": 202,
      "question__article__live": true,
      "question__article__slug": "happy-number",
      "question__article__has_video_solution": false,
      "question__title": "Happy Number",
      "question__title_slug": "happy-number",
      "question__hide": false,
      "total_acs": 1571792,
      "total_submitted": 2771841,
      "frontend_question_id": 202,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/happy-number",
      "questionId": "202",
      "questionFrontendId": "202",
      "questionTitle": "Happy Number",
      "titleSlug": "happy-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Write an algorithm to determine if a number <code>n</code> is happy.</p>\n\n<p>A <strong>happy number</strong> is a number defined by the following process:</p>\n\n<ul>\n\t<li>Starting with any positive integer, replace the number by the sum of the squares of its digits.</li>\n\t<li>Repeat the process until the number equals 1 (where it will stay), or it <strong>loops endlessly in a cycle</strong> which does not include 1.</li>\n\t<li>Those numbers for which this process <strong>ends in 1</strong> are happy.</li>\n</ul>\n\n<p>Return <code>true</code> <em>if</em> <code>n</code> <em>is a happy number, and</em> <code>false</code> <em>if not</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 19\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\n1<sup>2</sup> + 9<sup>2</sup> = 82\n8<sup>2</sup> + 2<sup>2</sup> = 68\n6<sup>2</sup> + 8<sup>2</sup> = 100\n1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "19\n2",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "813",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10457,
      "dislikes": 1477,
      "similarQuestions": "[{\"title\": \"Linked List Cycle\", \"titleSlug\": \"linked-list-cycle\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Digits\", \"titleSlug\": \"add-digits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number\", \"titleSlug\": \"ugly-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Digits of String After Convert\", \"titleSlug\": \"sum-of-digits-of-string-after-convert\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Addition to Make Integer Beautiful\", \"titleSlug\": \"minimum-addition-to-make-integer-beautiful\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Value After Replacing With Sum of Prime Factors\", \"titleSlug\": \"smallest-value-after-replacing-with-sum-of-prime-factors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count the Digits That Divide a Number\", \"titleSlug\": \"count-the-digits-that-divide-a-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485939,
      "commentCount": 310,
      "topLevelCommentCount": 184
    },
    "classAndMethodDefinition": "def isHappy(self, n):\n        mem = set()"
  },
  {
    "stat": {
      "question_id": 73,
      "question__article__live": true,
      "question__article__slug": "set-matrix-zeroes",
      "question__article__has_video_solution": false,
      "question__title": "Set Matrix Zeroes",
      "question__title_slug": "set-matrix-zeroes",
      "question__hide": false,
      "total_acs": 1579101,
      "total_submitted": 2761390,
      "frontend_question_id": 73,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/set-matrix-zeroes",
      "questionId": "73",
      "questionFrontendId": "73",
      "questionTitle": "Set Matrix Zeroes",
      "titleSlug": "set-matrix-zeroes",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> integer matrix <code>matrix</code>, if an element is <code>0</code>, set its entire row and column to <code>0</code>&#39;s.</p>\n\n<p>You must do it <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in place</a>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg\" style=\"width: 450px; height: 169px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,1,1],[1,0,1],[1,1,1]]\n<strong>Output:</strong> [[1,0,1],[0,0,0],[1,0,1]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg\" style=\"width: 450px; height: 137px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\n<strong>Output:</strong> [[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[0].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= matrix[i][j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>A straightforward solution using <code>O(mn)</code> space is probably a bad idea.</li>\n\t<li>A simple improvement uses <code>O(m + n)</code> space, but still not the best solution.</li>\n\t<li>Could you devise a constant space solution?</li>\n</ul>\n",
      "exampleTestcases": "[[1,1,1],[1,0,1],[1,1,1]]\n[[0,1,2,0],[3,4,5,2],[1,3,1,5]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "If any cell of the matrix has a zero we can record its row and column number using additional memory.\r\nBut if you don't want to use extra memory then you can manipulate the array instead. i.e. simulating exactly what the question says.",
        "Setting cell values to zero on the fly while iterating might lead to discrepancies. What if you use some other integer value as your marker?\r\nThere is still a better approach for this problem with 0(1) space.",
        "We could have used 2 sets to keep a record of rows/columns which need to be set to zero. But for an O(1) space solution, you can use one of the rows and and one of the columns to keep track of this information.",
        "We can use the first cell of every row and column as a flag. This flag would determine whether a row or column has been set to zero."
      ],
      "solution": {
        "id": "578",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 14674,
      "dislikes": 750,
      "similarQuestions": "[{\"title\": \"Game of Life\", \"titleSlug\": \"game-of-life\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Laser Beams in a Bank\", \"titleSlug\": \"number-of-laser-beams-in-a-bank\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Remove Adjacent Ones in Matrix\", \"titleSlug\": \"minimum-operations-to-remove-adjacent-ones-in-matrix\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Remove All Ones With Row and Column Flips II\", \"titleSlug\": \"remove-all-ones-with-row-and-column-flips-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485810,
      "commentCount": 178,
      "topLevelCommentCount": 106
    },
    "classAndMethodDefinition": "def setZeroes(self, matrix: List[List[int]]) -> None:\n        # input validation"
  },
  {
    "stat": {
      "question_id": 61,
      "question__article__live": true,
      "question__article__slug": "rotate-list",
      "question__article__has_video_solution": false,
      "question__title": "Rotate List",
      "question__title_slug": "rotate-list",
      "question__hide": false,
      "total_acs": 1054203,
      "total_submitted": 2737201,
      "frontend_question_id": 61,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/rotate-list",
      "questionId": "61",
      "questionFrontendId": "61",
      "questionTitle": "Rotate List",
      "titleSlug": "rotate-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a linked&nbsp;list, rotate the list to the right by <code>k</code> places.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/rotate1.jpg\" style=\"width: 450px; height: 191px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], k = 2\n<strong>Output:</strong> [4,5,1,2,3]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/roate2.jpg\" style=\"width: 305px; height: 350px;\" />\n<pre>\n<strong>Input:</strong> head = [0,1,2], k = 4\n<strong>Output:</strong> [2,0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[0, 500]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n\t<li><code>0 &lt;= k &lt;= 2 * 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5]\n2\n[0,1,2]\n4",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "700",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9792,
      "dislikes": 1458,
      "similarQuestions": "[{\"title\": \"Rotate Array\", \"titleSlug\": \"rotate-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Split Linked List in Parts\", \"titleSlug\": \"split-linked-list-in-parts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485798,
      "commentCount": 124,
      "topLevelCommentCount": 70
    },
    "classAndMethodDefinition": "def __init__(self, x):\n#         self.val = x"
  },
  {
    "stat": {
      "question_id": 1013,
      "question__article__live": true,
      "question__article__slug": "fibonacci-number",
      "question__article__has_video_solution": false,
      "question__title": "Fibonacci Number",
      "question__title_slug": "fibonacci-number",
      "question__hide": false,
      "total_acs": 1961605,
      "total_submitted": 2736810,
      "frontend_question_id": 509,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/fibonacci-number",
      "questionId": "1013",
      "questionFrontendId": "509",
      "questionTitle": "Fibonacci Number",
      "titleSlug": "fibonacci-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>The <b>Fibonacci numbers</b>, commonly denoted <code>F(n)</code> form a sequence, called the <b>Fibonacci sequence</b>, such that each number is the sum of the two preceding ones, starting from <code>0</code> and <code>1</code>. That is,</p>\n\n<pre>\nF(0) = 0, F(1) = 1\nF(n) = F(n - 1) + F(n - 2), for n &gt; 1.\n</pre>\n\n<p>Given <code>n</code>, calculate <code>F(n)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> F(2) = F(1) + F(0) = 1 + 0 = 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> F(3) = F(2) + F(1) = 1 + 1 = 2.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> F(4) = F(3) + F(2) = 2 + 1 = 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 30</code></li>\n</ul>\n",
      "exampleTestcases": "2\n3\n4",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        },
        {
          "name": "Memoization",
          "slug": "memoization",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "762",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8235,
      "dislikes": 365,
      "similarQuestions": "[{\"title\": \"Climbing Stairs\", \"titleSlug\": \"climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Split Array into Fibonacci Sequence\", \"titleSlug\": \"split-array-into-fibonacci-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Length of Longest Fibonacci Subsequence\", \"titleSlug\": \"length-of-longest-fibonacci-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-th Tribonacci Number\", \"titleSlug\": \"n-th-tribonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486716,
      "commentCount": 146,
      "topLevelCommentCount": 95
    },
    "classAndMethodDefinition": "class Solution:\n    fib_nums = ["
  },
  {
    "stat": {
      "question_id": 36,
      "question__article__live": true,
      "question__article__slug": "valid-sudoku",
      "question__article__has_video_solution": false,
      "question__title": "Valid Sudoku",
      "question__title_slug": "valid-sudoku",
      "question__hide": false,
      "total_acs": 1647926,
      "total_submitted": 2725684,
      "frontend_question_id": 36,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-sudoku",
      "questionId": "36",
      "questionFrontendId": "36",
      "questionTitle": "Valid Sudoku",
      "titleSlug": "valid-sudoku",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Determine if a&nbsp;<code>9 x 9</code> Sudoku board&nbsp;is valid.&nbsp;Only the filled cells need to be validated&nbsp;<strong>according to the following rules</strong>:</p>\n\n<ol>\n\t<li>Each row&nbsp;must contain the&nbsp;digits&nbsp;<code>1-9</code> without repetition.</li>\n\t<li>Each column must contain the digits&nbsp;<code>1-9</code>&nbsp;without repetition.</li>\n\t<li>Each of the nine&nbsp;<code>3 x 3</code> sub-boxes of the grid must contain the digits&nbsp;<code>1-9</code>&nbsp;without repetition.</li>\n</ol>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A Sudoku board (partially filled) could be valid but is not necessarily solvable.</li>\n\t<li>Only the filled cells need to be validated according to the mentioned&nbsp;rules.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\" style=\"height:250px; width:250px\" />\n<pre>\n<strong>Input:</strong> board = \n[[&quot;5&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]\n,[&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]\n,[&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;]\n,[&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;]\n,[&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;]\n,[&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;]\n,[&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;]\n,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;]\n,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> board = \n[[&quot;8&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]\n,[&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]\n,[&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;]\n,[&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;]\n,[&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;]\n,[&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;]\n,[&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;]\n,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;]\n,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Same as Example 1, except with the <strong>5</strong> in the top left corner being modified to <strong>8</strong>. Since there are two 8&#39;s in the top left 3x3 sub-box, it is invalid.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>board.length == 9</code></li>\n\t<li><code>board[i].length == 9</code></li>\n\t<li><code>board[i][j]</code> is a digit <code>1-9</code> or <code>&#39;.&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n[[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1156",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10813,
      "dislikes": 1142,
      "similarQuestions": "[{\"title\": \"Sudoku Solver\", \"titleSlug\": \"sudoku-solver\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Check if Every Row and Column Contains All Numbers\", \"titleSlug\": \"check-if-every-row-and-column-contains-all-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485773,
      "commentCount": 271,
      "topLevelCommentCount": 148
    },
    "classAndMethodDefinition": "def isValidSudoku(self, board):\n        return (self.is_row_valid(board) and"
  },
  {
    "stat": {
      "question_id": 204,
      "question__article__live": true,
      "question__article__slug": "count-primes",
      "question__article__has_video_solution": false,
      "question__title": "Count Primes",
      "question__title_slug": "count-primes",
      "question__hide": false,
      "total_acs": 920688,
      "total_submitted": 2713161,
      "frontend_question_id": 204,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/count-primes",
      "questionId": "204",
      "questionFrontendId": "204",
      "questionTitle": "Count Primes",
      "titleSlug": "count-primes",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em>the number of prime numbers that are strictly less than</em> <code>n</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> There are 4 prime numbers less than 10, they are 2, 3, 5, 7.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 5 * 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "10\n0\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Enumeration",
          "slug": "enumeration",
          "translatedName": null
        },
        {
          "name": "Number Theory",
          "slug": "number-theory",
          "translatedName": null
        }
      ],
      "hints": [
        "Checking all the integers in the range [1, n - 1] is not efficient. Think about a better approach.",
        "Since most of the numbers are not primes, we need a fast approach to exclude the non-prime integers.",
        "Use Sieve of Eratosthenes."
      ],
      "solution": {
        "id": "1130",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8024,
      "dislikes": 1462,
      "similarQuestions": "[{\"title\": \"Ugly Number\", \"titleSlug\": \"ugly-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Perfect Squares\", \"titleSlug\": \"perfect-squares\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Common Factors\", \"titleSlug\": \"number-of-common-factors\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Prime Pairs With Target Sum\", \"titleSlug\": \"prime-pairs-with-target-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Count of Numbers Which Are Not Special\", \"titleSlug\": \"find-the-count-of-numbers-which-are-not-special\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485941,
      "commentCount": 104,
      "topLevelCommentCount": 79
    },
    "classAndMethodDefinition": "def countPrimes(self, n: int) -> int:\n        seen, ans = [0] * n, 0"
  },
  {
    "stat": {
      "question_id": 543,
      "question__article__live": true,
      "question__article__slug": "diameter-of-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Diameter of Binary Tree",
      "question__title_slug": "diameter-of-binary-tree",
      "question__hide": false,
      "total_acs": 1638565,
      "total_submitted": 2671928,
      "frontend_question_id": 543,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/diameter-of-binary-tree",
      "questionId": "543",
      "questionFrontendId": "543",
      "questionTitle": "Diameter of Binary Tree",
      "titleSlug": "diameter-of-binary-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>the length of the <strong>diameter</strong> of the tree</em>.</p>\n\n<p>The <strong>diameter</strong> of a binary tree is the <strong>length</strong> of the longest path between any two nodes in a tree. This path may or may not pass through the <code>root</code>.</p>\n\n<p>The <strong>length</strong> of a path between two nodes is represented by the number of edges between them.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/06/diamtree.jpg\" style=\"width: 292px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 3 is the length of the path [4,2,1,3] or [5,2,1,3].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5]\n[1,2]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1115",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13979,
      "dislikes": 1044,
      "similarQuestions": "[{\"title\": \"Diameter of N-Ary Tree\", \"titleSlug\": \"diameter-of-n-ary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Path With Different Adjacent Characters\", \"titleSlug\": \"longest-path-with-different-adjacent-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486272,
      "commentCount": 336,
      "topLevelCommentCount": 224
    },
    "classAndMethodDefinition": "def depth(node: Optional[TreeNode]) -> int:\n    \"\"\""
  },
  {
    "stat": {
      "question_id": 1019,
      "question__article__live": true,
      "question__article__slug": "squares-of-a-sorted-array",
      "question__article__has_video_solution": true,
      "question__title": "Squares of a Sorted Array",
      "question__title_slug": "squares-of-a-sorted-array",
      "question__hide": false,
      "total_acs": 1940807,
      "total_submitted": 2660556,
      "frontend_question_id": 977,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/squares-of-a-sorted-array",
      "questionId": "1019",
      "questionFrontendId": "977",
      "questionTitle": "Squares of a Sorted Array",
      "titleSlug": "squares-of-a-sorted-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> sorted in <strong>non-decreasing</strong> order, return <em>an array of <strong>the squares of each number</strong> sorted in non-decreasing order</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-4,-1,0,3,10]\n<strong>Output:</strong> [0,1,9,16,100]\n<strong>Explanation:</strong> After squaring, the array becomes [16,1,0,9,100].\nAfter sorting, it becomes [0,1,9,16,100].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-7,-3,2,3,11]\n<strong>Output:</strong> [4,9,9,49,121]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code><span>1 &lt;= nums.length &lt;= </span>10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>nums</code> is sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Squaring each element and sorting the new array is very trivial, could you find an <code>O(n)</code> solution using a different approach?",
      "exampleTestcases": "[-4,-1,0,3,10]\n[-7,-3,2,3,11]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "671",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9366,
      "dislikes": 239,
      "similarQuestions": "[{\"title\": \"Merge Sorted Array\", \"titleSlug\": \"merge-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort Transformed Array\", \"titleSlug\": \"sort-transformed-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486721,
      "commentCount": 175,
      "topLevelCommentCount": 111
    },
    "classAndMethodDefinition": "def sortedSquares(self, A: List[int]) -> List[int]:\n        for i in range(len(A)):"
  },
  {
    "stat": {
      "question_id": 78,
      "question__article__live": true,
      "question__article__slug": "subsets",
      "question__article__has_video_solution": true,
      "question__title": "Subsets",
      "question__title_slug": "subsets",
      "question__hide": false,
      "total_acs": 2100748,
      "total_submitted": 2656251,
      "frontend_question_id": 78,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/subsets",
      "questionId": "78",
      "questionFrontendId": "78",
      "questionTitle": "Subsets",
      "titleSlug": "subsets",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> of <strong>unique</strong> elements, return <em>all possible</em> <span data-keyword=\"subset\"><em>subsets</em></span> <em>(the power set)</em>.</p>\n\n<p>The solution set <strong>must not</strong> contain duplicate subsets. Return the solution in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [[],[0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10</code></li>\n\t<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n\t<li>All the numbers of&nbsp;<code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "847",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 17395,
      "dislikes": 284,
      "similarQuestions": "[{\"title\": \"Subsets II\", \"titleSlug\": \"subsets-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Generalized Abbreviation\", \"titleSlug\": \"generalized-abbreviation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Letter Case Permutation\", \"titleSlug\": \"letter-case-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Array Given Subset Sums\", \"titleSlug\": \"find-array-given-subset-sums\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Number of Maximum Bitwise-OR Subsets\", \"titleSlug\": \"count-number-of-maximum-bitwise-or-subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485815,
      "commentCount": 243,
      "topLevelCommentCount": 150
    },
    "classAndMethodDefinition": "def subsets(self, nums):\n        ret = []"
  },
  {
    "stat": {
      "question_id": 142,
      "question__article__live": true,
      "question__article__slug": "linked-list-cycle-ii",
      "question__article__has_video_solution": false,
      "question__title": "Linked List Cycle II",
      "question__title_slug": "linked-list-cycle-ii",
      "question__hide": false,
      "total_acs": 1390130,
      "total_submitted": 2651582,
      "frontend_question_id": 142,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/linked-list-cycle-ii",
      "questionId": "142",
      "questionFrontendId": "142",
      "questionTitle": "Linked List Cycle II",
      "titleSlug": "linked-list-cycle-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a linked list, return <em>the node where the cycle begins. If there is no cycle, return </em><code>null</code>.</p>\n\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the <code>next</code> pointer. Internally, <code>pos</code> is used to denote the index of the node that tail&#39;s <code>next</code> pointer is connected to (<strong>0-indexed</strong>). It is <code>-1</code> if there is no cycle. <strong>Note that</strong> <code>pos</code> <strong>is not passed as a parameter</strong>.</p>\n\n<p><strong>Do not modify</strong> the linked list.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\" style=\"height: 145px; width: 450px;\" />\n<pre>\n<strong>Input:</strong> head = [3,2,0,-4], pos = 1\n<strong>Output:</strong> tail connects to node index 1\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the second node.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png\" style=\"height: 105px; width: 201px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2], pos = 0\n<strong>Output:</strong> tail connects to node index 0\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the first node.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png\" style=\"height: 65px; width: 65px;\" />\n<pre>\n<strong>Input:</strong> head = [1], pos = -1\n<strong>Output:</strong> no cycle\n<strong>Explanation:</strong> There is no cycle in the linked list.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li><code>pos</code> is <code>-1</code> or a <strong>valid index</strong> in the linked-list.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Can you solve it using <code>O(1)</code> (i.e. constant) memory?</p>\n",
      "exampleTestcases": "[3,2,0,-4]\n1\n[1,2]\n0\n[1]\n-1",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1954",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13677,
      "dislikes": 973,
      "similarQuestions": "[{\"title\": \"Linked List Cycle\", \"titleSlug\": \"linked-list-cycle\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485879,
      "commentCount": 234,
      "topLevelCommentCount": 151
    },
    "classAndMethodDefinition": "def detectCycle(self, head):\n        slow = fast = head"
  },
  {
    "stat": {
      "question_id": 908,
      "question__article__live": true,
      "question__article__slug": "middle-of-the-linked-list",
      "question__article__has_video_solution": true,
      "question__title": "Middle of the Linked List",
      "question__title_slug": "middle-of-the-linked-list",
      "question__hide": false,
      "total_acs": 2075356,
      "total_submitted": 2620104,
      "frontend_question_id": 876,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/middle-of-the-linked-list",
      "questionId": "908",
      "questionFrontendId": "876",
      "questionTitle": "Middle of the Linked List",
      "titleSlug": "middle-of-the-linked-list",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a singly linked list, return <em>the middle node of the linked list</em>.</p>\n\n<p>If there are two middle nodes, return <strong>the second middle</strong> node.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/07/23/lc-midlist1.jpg\" style=\"width: 544px; height: 65px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5]\n<strong>Output:</strong> [3,4,5]\n<strong>Explanation:</strong> The middle node of the list is node 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/07/23/lc-midlist2.jpg\" style=\"width: 664px; height: 65px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5,6]\n<strong>Output:</strong> [4,5,6]\n<strong>Explanation:</strong> Since the list has two middle nodes with values 3 and 4, we return the second one.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[1, 100]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5]\n[1,2,3,4,5,6]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "520",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11754,
      "dislikes": 379,
      "similarQuestions": "[{\"title\": \"Delete the Middle Node of a Linked List\", \"titleSlug\": \"delete-the-middle-node-of-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Twin Sum of a Linked List\", \"titleSlug\": \"maximum-twin-sum-of-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486615,
      "commentCount": 263,
      "topLevelCommentCount": 150
    },
    "classAndMethodDefinition": "def middleNode(self, head):\n        # While slow moves one step forward, fast moves two steps forward."
  },
  {
    "stat": {
      "question_id": 22,
      "question__article__live": true,
      "question__article__slug": "generate-parentheses",
      "question__article__has_video_solution": true,
      "question__title": "Generate Parentheses",
      "question__title_slug": "generate-parentheses",
      "question__hide": false,
      "total_acs": 1969994,
      "total_submitted": 2613557,
      "frontend_question_id": 22,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/generate-parentheses",
      "questionId": "22",
      "questionFrontendId": "22",
      "questionTitle": "Generate Parentheses",
      "titleSlug": "generate-parentheses",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given <code>n</code> pairs of parentheses, write a function to <em>generate all combinations of well-formed parentheses</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [\"()\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n",
      "exampleTestcases": "3\n1",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1870",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 21278,
      "dislikes": 969,
      "similarQuestions": "[{\"title\": \"Letter Combinations of a Phone Number\", \"titleSlug\": \"letter-combinations-of-a-phone-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Check if a Parentheses String Can Be Valid\", \"titleSlug\": \"check-if-a-parentheses-string-can-be-valid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485759,
      "commentCount": 240,
      "topLevelCommentCount": 121
    },
    "classAndMethodDefinition": "def generateParenthesis(self, n: int) -> List[str]:\n\\tdef dfs(left, right, s):"
  },
  {
    "stat": {
      "question_id": 111,
      "question__article__live": true,
      "question__article__slug": "minimum-depth-of-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Depth of Binary Tree",
      "question__title_slug": "minimum-depth-of-binary-tree",
      "question__hide": false,
      "total_acs": 1262745,
      "total_submitted": 2587219,
      "frontend_question_id": 111,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-depth-of-binary-tree",
      "questionId": "111",
      "questionFrontendId": "111",
      "questionTitle": "Minimum Depth of Binary Tree",
      "titleSlug": "minimum-depth-of-binary-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a binary tree, find its minimum depth.</p>\n\n<p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p>\n\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/12/ex_depth.jpg\" style=\"width: 432px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [2,null,3,null,4,null,5,null,6]\n<strong>Output:</strong> 5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>5</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,null,null,15,7]\n[2,null,3,null,4,null,5,null,6]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1927",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7324,
      "dislikes": 1313,
      "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Depth of Binary Tree\", \"titleSlug\": \"maximum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485848,
      "commentCount": 156,
      "topLevelCommentCount": 89
    },
    "classAndMethodDefinition": "def minDepth1(self, root):\n        if not root:"
  },
  {
    "stat": {
      "question_id": 48,
      "question__article__live": true,
      "question__article__slug": "rotate-image",
      "question__article__has_video_solution": false,
      "question__title": "Rotate Image",
      "question__title_slug": "rotate-image",
      "question__hide": false,
      "total_acs": 1883119,
      "total_submitted": 2488463,
      "frontend_question_id": 48,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/rotate-image",
      "questionId": "48",
      "questionFrontendId": "48",
      "questionTitle": "Rotate Image",
      "titleSlug": "rotate-image",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>n x n</code> 2D <code>matrix</code> representing an image, rotate the image by <strong>90</strong> degrees (clockwise).</p>\n\n<p>You have to rotate the image <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a>, which means you have to modify the input 2D matrix directly. <strong>DO NOT</strong> allocate another 2D matrix and do the rotation.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/mat1.jpg\" style=\"width: 500px; height: 188px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [[7,4,1],[8,5,2],[9,6,3]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/mat2.jpg\" style=\"width: 500px; height: 201px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]\n<strong>Output:</strong> [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == matrix.length == matrix[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>-1000 &lt;= matrix[i][j] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2,3],[4,5,6],[7,8,9]]\n[[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "637",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 17766,
      "dislikes": 825,
      "similarQuestions": "[{\"title\": \"Determine Whether Matrix Can Be Obtained By Rotation\", \"titleSlug\": \"determine-whether-matrix-can-be-obtained-by-rotation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485785,
      "commentCount": 223,
      "topLevelCommentCount": 158
    },
    "classAndMethodDefinition": "def rotate(self, A):\n            A[:] = zip(*A[::-1])"
  },
  {
    "stat": {
      "question_id": 144,
      "question__article__live": true,
      "question__article__slug": "binary-tree-preorder-traversal",
      "question__article__has_video_solution": false,
      "question__title": "Binary Tree Preorder Traversal",
      "question__title_slug": "binary-tree-preorder-traversal",
      "question__hide": false,
      "total_acs": 1736930,
      "total_submitted": 2459066,
      "frontend_question_id": 144,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-tree-preorder-traversal",
      "questionId": "144",
      "questionFrontendId": "144",
      "questionTitle": "Binary Tree Preorder Traversal",
      "titleSlug": "binary-tree-preorder-traversal",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>the preorder traversal of its nodes&#39; values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,null,2,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1,2,3]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/screenshot-2024-08-29-202743.png\" style=\"width: 200px; height: 264px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,2,3,4,5,null,8,null,null,6,7,9]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1,2,4,5,6,7,3,8,9]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/tree_2.png\" style=\"width: 350px; height: 286px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = []</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1]</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>\n",
      "exampleTestcases": "[1,null,2,3]\n[1,2,3,4,5,null,8,null,null,6,7,9]\n[]\n[1]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1645",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8044,
      "dislikes": 211,
      "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Verify Preorder Sequence in Binary Search Tree\", \"titleSlug\": \"verify-preorder-sequence-in-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Preorder Traversal\", \"titleSlug\": \"n-ary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Sum in a Binary Tree\", \"titleSlug\": \"kth-largest-sum-in-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485881,
      "commentCount": 121,
      "topLevelCommentCount": 75
    },
    "classAndMethodDefinition": "def preorderTraversal(self, root):\n        ret = []"
  },
  {
    "stat": {
      "question_id": 235,
      "question__article__live": true,
      "question__article__slug": "lowest-common-ancestor-of-a-binary-search-tree",
      "question__article__has_video_solution": false,
      "question__title": "Lowest Common Ancestor of a Binary Search Tree",
      "question__title_slug": "lowest-common-ancestor-of-a-binary-search-tree",
      "question__hide": false,
      "total_acs": 1608513,
      "total_submitted": 2441167,
      "frontend_question_id": 235,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",
      "questionId": "235",
      "questionFrontendId": "235",
      "questionTitle": "Lowest Common Ancestor of a Binary Search Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST.</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/Lowest_common_ancestor\" target=\"_blank\">definition of LCA on Wikipedia</a>: &ldquo;The lowest common ancestor is defined between two nodes <code>p</code> and <code>q</code> as the lowest node in <code>T</code> that has both <code>p</code> and <code>q</code> as descendants (where we allow <strong>a node to be a descendant of itself</strong>).&rdquo;</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/14/binarysearchtree_improved.png\" style=\"width: 200px; height: 190px;\" />\n<pre>\n<strong>Input:</strong> root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The LCA of nodes 2 and 8 is 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/14/binarysearchtree_improved.png\" style=\"width: 200px; height: 190px;\" />\n<pre>\n<strong>Input:</strong> root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [2,1], p = 2, q = 1\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 10<sup>5</sup>]</code>.</li>\n\t<li><code>-10<sup>9</sup> &lt;= Node.val &lt;= 10<sup>9</sup></code></li>\n\t<li>All <code>Node.val</code> are <strong>unique</strong>.</li>\n\t<li><code>p != q</code></li>\n\t<li><code>p</code> and <code>q</code> will exist in the BST.</li>\n</ul>\n",
      "exampleTestcases": "[6,2,8,0,4,7,9,null,null,3,5]\n2\n8\n[6,2,8,0,4,7,9,null,null,3,5]\n2\n4\n[2,1]\n2\n1",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "644",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11220,
      "dislikes": 323,
      "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Common Region\", \"titleSlug\": \"smallest-common-region\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree II\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree III\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Lowest Common Ancestor of a Binary Tree IV\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485972,
      "commentCount": 142,
      "topLevelCommentCount": 69
    },
    "classAndMethodDefinition": "def lowestCommonAncestor(self, root, p, q):\n            if not root or not p or not q:"
  },
  {
    "stat": {
      "question_id": 350,
      "question__article__live": true,
      "question__article__slug": "intersection-of-two-arrays-ii",
      "question__article__has_video_solution": false,
      "question__title": "Intersection of Two Arrays II",
      "question__title_slug": "intersection-of-two-arrays-ii",
      "question__hide": false,
      "total_acs": 1419165,
      "total_submitted": 2420247,
      "frontend_question_id": 350,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/intersection-of-two-arrays-ii",
      "questionId": "350",
      "questionFrontendId": "350",
      "questionTitle": "Intersection of Two Arrays II",
      "titleSlug": "intersection-of-two-arrays-ii",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two integer arrays <code>nums1</code> and <code>nums2</code>, return <em>an array of their intersection</em>. Each element in the result must appear as many times as it shows in both arrays and you may return the result in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,2,1], nums2 = [2,2]\n<strong>Output:</strong> [2,2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [4,9,5], nums2 = [9,4,9,8,4]\n<strong>Output:</strong> [4,9]\n<strong>Explanation:</strong> [9,4] is also accepted.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums1[i], nums2[i] &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>What if the given array is already sorted? How would you optimize your algorithm?</li>\n\t<li>What if <code>nums1</code>&#39;s size is small compared to <code>nums2</code>&#39;s size? Which algorithm is better?</li>\n\t<li>What if elements of <code>nums2</code> are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?</li>\n</ul>\n",
      "exampleTestcases": "[1,2,2,1]\n[2,2]\n[4,9,5]\n[9,4,9,8,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "802",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7704,
      "dislikes": 976,
      "similarQuestions": "[{\"title\": \"Intersection of Two Arrays\", \"titleSlug\": \"intersection-of-two-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Common Characters\", \"titleSlug\": \"find-common-characters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Difference of Two Arrays\", \"titleSlug\": \"find-the-difference-of-two-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Choose Numbers From Two Arrays in Range\", \"titleSlug\": \"choose-numbers-from-two-arrays-in-range\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Intersection of Multiple Arrays\", \"titleSlug\": \"intersection-of-multiple-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Common Value\", \"titleSlug\": \"minimum-common-value\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486087,
      "commentCount": 221,
      "topLevelCommentCount": 137
    },
    "classAndMethodDefinition": "def intersect(self, nums1, nums2):\n"
  },
  {
    "stat": {
      "question_id": 209,
      "question__article__live": true,
      "question__article__slug": "minimum-size-subarray-sum",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Size Subarray Sum",
      "question__title_slug": "minimum-size-subarray-sum",
      "question__hide": false,
      "total_acs": 1149358,
      "total_submitted": 2407939,
      "frontend_question_id": 209,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-size-subarray-sum",
      "questionId": "209",
      "questionFrontendId": "209",
      "questionTitle": "Minimum Size Subarray Sum",
      "titleSlug": "minimum-size-subarray-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of positive integers <code>nums</code> and a positive integer <code>target</code>, return <em>the <strong>minimal length</strong> of a </em><span data-keyword=\"subarray-nonempty\"><em>subarray</em></span><em> whose sum is greater than or equal to</em> <code>target</code>. If there is no such subarray, return <code>0</code> instead.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = 7, nums = [2,3,1,2,4,3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The subarray [4,3] has the minimal length under the problem constraint.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = 4, nums = [1,4,4]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = 11, nums = [1,1,1,1,1,1,1,1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution of which the time complexity is <code>O(n log(n))</code>.",
      "exampleTestcases": "7\n[2,3,1,2,4,3]\n4\n[1,4,4]\n11\n[1,1,1,1,1,1,1,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1915",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12714,
      "dislikes": 443,
      "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Length of Repeated Subarray\", \"titleSlug\": \"maximum-length-of-repeated-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Reduce X to Zero\", \"titleSlug\": \"minimum-operations-to-reduce-x-to-zero\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"K Radius Subarray Averages\", \"titleSlug\": \"k-radius-subarray-averages\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Product After K Increments\", \"titleSlug\": \"maximum-product-after-k-increments\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Subarray With OR at Least K I\", \"titleSlug\": \"shortest-subarray-with-or-at-least-k-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485946,
      "commentCount": 323,
      "topLevelCommentCount": 175
    },
    "classAndMethodDefinition": "def minSubArrayLen(s, nums):\n\\tres = maxsize"
  },
  {
    "stat": {
      "question_id": 63,
      "question__article__live": true,
      "question__article__slug": "unique-paths-ii",
      "question__article__has_video_solution": false,
      "question__title": "Unique Paths II",
      "question__title_slug": "unique-paths-ii",
      "question__hide": false,
      "total_acs": 1013501,
      "total_submitted": 2406725,
      "frontend_question_id": 63,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/unique-paths-ii",
      "questionId": "63",
      "questionFrontendId": "63",
      "questionTitle": "Unique Paths II",
      "titleSlug": "unique-paths-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>m x n</code> integer array <code>grid</code>. There is a robot initially located at the <b>top-left corner</b> (i.e., <code>grid[0][0]</code>). The robot tries to move to the <strong>bottom-right corner</strong> (i.e., <code>grid[m - 1][n - 1]</code>). The robot can only move either down or right at any point in time.</p>\n\n<p>An obstacle and space are marked as <code>1</code> or <code>0</code> respectively in <code>grid</code>. A path that the robot takes cannot include <strong>any</strong> square that is an obstacle.</p>\n\n<p>Return <em>the number of possible unique paths that the robot can take to reach the bottom-right corner</em>.</p>\n\n<p>The testcases are generated so that the answer will be less than or equal to <code>2 * 10<sup>9</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/robot1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -&gt; Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right -&gt; Right\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/robot2.jpg\" style=\"width: 162px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> obstacleGrid = [[0,1],[0,0]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == obstacleGrid.length</code></li>\n\t<li><code>n == obstacleGrid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n\t<li><code>obstacleGrid[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[0,0,0],[0,1,0],[0,0,0]]\n[[0,1],[0,0]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "Use dynamic programming since, from each cell, you can move to the right or down.",
        "assume dp[i][j] is the number of unique paths to reach (i, j). dp[i][j] = dp[i][j -1] + dp[i - 1][j]. Be careful when you encounter an obstacle. set its value in dp to 0."
      ],
      "solution": {
        "id": "597",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8815,
      "dislikes": 513,
      "similarQuestions": "[{\"title\": \"Unique Paths\", \"titleSlug\": \"unique-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Paths III\", \"titleSlug\": \"unique-paths-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Cost in a Grid\", \"titleSlug\": \"minimum-path-cost-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paths in Matrix Whose Sum Is Divisible by K\", \"titleSlug\": \"paths-in-matrix-whose-sum-is-divisible-by-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485800,
      "commentCount": 158,
      "topLevelCommentCount": 103
    },
    "classAndMethodDefinition": "def uniquePathsWithObstacles1(self, obstacleGrid):\n        if not obstacleGrid:"
  },
  {
    "stat": {
      "question_id": 203,
      "question__article__live": true,
      "question__article__slug": "remove-linked-list-elements",
      "question__article__has_video_solution": false,
      "question__title": "Remove Linked List Elements",
      "question__title_slug": "remove-linked-list-elements",
      "question__hide": false,
      "total_acs": 1195281,
      "total_submitted": 2403479,
      "frontend_question_id": 203,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-linked-list-elements",
      "questionId": "203",
      "questionFrontendId": "203",
      "questionTitle": "Remove Linked List Elements",
      "titleSlug": "remove-linked-list-elements",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a linked list and an integer <code>val</code>, remove all the nodes of the linked list that has <code>Node.val == val</code>, and return <em>the new head</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg\" style=\"width: 500px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,6,3,4,5,6], val = 6\n<strong>Output:</strong> [1,2,3,4,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [], val = 1\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [7,7,7,7], val = 7\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 50</code></li>\n\t<li><code>0 &lt;= val &lt;= 50</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,6,3,4,5,6]\n6\n[]\n1\n[7,7,7,7]\n7",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "773",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8361,
      "dislikes": 251,
      "similarQuestions": "[{\"title\": \"Remove Element\", \"titleSlug\": \"remove-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Delete Node in a Linked List\", \"titleSlug\": \"delete-node-in-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete the Middle Node of a Linked List\", \"titleSlug\": \"delete-the-middle-node-of-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Nodes From Linked List Present in Array\", \"titleSlug\": \"delete-nodes-from-linked-list-present-in-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Convert Doubly Linked List to Array I\", \"titleSlug\": \"convert-doubly-linked-list-to-array-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485940,
      "commentCount": 83,
      "topLevelCommentCount": 58
    },
    "classAndMethodDefinition": "def removeElements(self, head, val):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 118,
      "question__article__live": true,
      "question__article__slug": "pascals-triangle",
      "question__article__has_video_solution": true,
      "question__title": "Pascal's Triangle",
      "question__title_slug": "pascals-triangle",
      "question__hide": false,
      "total_acs": 1797126,
      "total_submitted": 2389032,
      "frontend_question_id": 118,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/pascals-triangle",
      "questionId": "118",
      "questionFrontendId": "118",
      "questionTitle": "Pascal's Triangle",
      "titleSlug": "pascals-triangle",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>numRows</code>, return the first numRows of <strong>Pascal&#39;s triangle</strong>.</p>\n\n<p>In <strong>Pascal&#39;s triangle</strong>, each number is the sum of the two numbers directly above it as shown:</p>\n<img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif\" style=\"height:240px; width:260px\" />\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> numRows = 5\n<strong>Output:</strong> [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> numRows = 1\n<strong>Output:</strong> [[1]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= numRows &lt;= 30</code></li>\n</ul>\n",
      "exampleTestcases": "5\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "340",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13002,
      "dislikes": 462,
      "similarQuestions": "[{\"title\": \"Pascal's Triangle II\", \"titleSlug\": \"pascals-triangle-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485855,
      "commentCount": 265,
      "topLevelCommentCount": 142
    },
    "classAndMethodDefinition": "class Solution:\n    def generate(self, numRows: int) -> List[List[int]]:"
  },
  {
    "stat": {
      "question_id": 239,
      "question__article__live": true,
      "question__article__slug": "sliding-window-maximum",
      "question__article__has_video_solution": false,
      "question__title": "Sliding Window Maximum",
      "question__title_slug": "sliding-window-maximum",
      "question__hide": false,
      "total_acs": 1104928,
      "total_submitted": 2361113,
      "frontend_question_id": 239,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sliding-window-maximum",
      "questionId": "239",
      "questionFrontendId": "239",
      "questionTitle": "Sliding Window Maximum",
      "titleSlug": "sliding-window-maximum",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given an array of integers&nbsp;<code>nums</code>, there is a sliding window of size <code>k</code> which is moving from the very left of the array to the very right. You can only see the <code>k</code> numbers in the window. Each time the sliding window moves right by one position.</p>\n\n<p>Return <em>the max sliding window</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,-1,-3,5,3,6,7], k = 3\n<strong>Output:</strong> [3,3,5,5,6,7]\n<strong>Explanation:</strong> \nWindow position                Max\n---------------               -----\n[1  3  -1] -3  5  3  6  7       <strong>3</strong>\n 1 [3  -1  -3] 5  3  6  7       <strong>3</strong>\n 1  3 [-1  -3  5] 3  6  7      <strong> 5</strong>\n 1  3  -1 [-3  5  3] 6  7       <strong>5</strong>\n 1  3  -1  -3 [5  3  6] 7       <strong>6</strong>\n 1  3  -1  -3  5 [3  6  7]      <strong>7</strong>\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1], k = 1\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= nums.length</code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,-1,-3,5,3,6,7]\n3\n[1]\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue",
          "translatedName": null
        }
      ],
      "hints": [
        "How about using a data structure such as deque (double-ended queue)?",
        "The queue size need not be the same as the window’s size.",
        "Remove redundant elements and the queue should store only elements that need to be considered."
      ],
      "solution": {
        "id": "1984",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 18353,
      "dislikes": 696,
      "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Min Stack\", \"titleSlug\": \"min-stack\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House II\", \"titleSlug\": \"paint-house-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Jump Game VI\", \"titleSlug\": \"jump-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Robots Within Budget\", \"titleSlug\": \"maximum-number-of-robots-within-budget\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Tastiness of Candy Basket\", \"titleSlug\": \"maximum-tastiness-of-candy-basket\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximal Score After Applying K Operations\", \"titleSlug\": \"maximal-score-after-applying-k-operations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485976,
      "commentCount": 284,
      "topLevelCommentCount": 184
    },
    "classAndMethodDefinition": "def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        from collections import deque"
  },
  {
    "stat": {
      "question_id": 138,
      "question__article__live": true,
      "question__article__slug": "copy-list-with-random-pointer",
      "question__article__has_video_solution": false,
      "question__title": "Copy List with Random Pointer",
      "question__title_slug": "copy-list-with-random-pointer",
      "question__hide": false,
      "total_acs": 1339228,
      "total_submitted": 2332311,
      "frontend_question_id": 138,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/copy-list-with-random-pointer",
      "questionId": "138",
      "questionFrontendId": "138",
      "questionTitle": "Copy List with Random Pointer",
      "titleSlug": "copy-list-with-random-pointer",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A linked list of length <code>n</code> is given such that each node contains an additional random pointer, which could point to any node in the list, or <code>null</code>.</p>\n\n<p>Construct a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\"><strong>deep copy</strong></a> of the list. The deep copy should consist of exactly <code>n</code> <strong>brand new</strong> nodes, where each new node has its value set to the value of its corresponding original node. Both the <code>next</code> and <code>random</code> pointer of the new nodes should point to new nodes in the copied list such that the pointers in the original list and copied list represent the same list state. <strong>None of the pointers in the new list should point to nodes in the original list</strong>.</p>\n\n<p>For example, if there are two nodes <code>X</code> and <code>Y</code> in the original list, where <code>X.random --&gt; Y</code>, then for the corresponding two nodes <code>x</code> and <code>y</code> in the copied list, <code>x.random --&gt; y</code>.</p>\n\n<p>Return <em>the head of the copied linked list</em>.</p>\n\n<p>The linked list is represented in the input/output as a list of <code>n</code> nodes. Each node is represented as a pair of <code>[val, random_index]</code> where:</p>\n\n<ul>\n\t<li><code>val</code>: an integer representing <code>Node.val</code></li>\n\t<li><code>random_index</code>: the index of the node (range from <code>0</code> to <code>n-1</code>) that the <code>random</code> pointer points to, or <code>null</code> if it does not point to any node.</li>\n</ul>\n\n<p>Your code will <strong>only</strong> be given the <code>head</code> of the original linked list.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/e1.png\" style=\"width: 700px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> head = [[7,null],[13,0],[11,4],[10,2],[1,0]]\n<strong>Output:</strong> [[7,null],[13,0],[11,4],[10,2],[1,0]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/e2.png\" style=\"width: 700px; height: 114px;\" />\n<pre>\n<strong>Input:</strong> head = [[1,1],[2,1]]\n<strong>Output:</strong> [[1,1],[2,1]]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/e3.png\" style=\"width: 700px; height: 122px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> head = [[3,null],[3,0],[3,null]]\n<strong>Output:</strong> [[3,null],[3,0],[3,null]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 1000</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li><code>Node.random</code> is <code>null</code> or is pointing to some node in the linked list.</li>\n</ul>\n",
      "exampleTestcases": "[[7,null],[13,0],[11,4],[10,2],[1,0]]\n[[1,1],[2,1]]\n[[3,null],[3,0],[3,null]]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        }
      ],
      "hints": [
        "Just iterate the linked list and create copies of the nodes on the go. Since a node can be referenced from multiple nodes due to the random pointers, ensure you are not making multiple copies of the same node.",
        "You may want to use extra space to keep old_node ---> new_node mapping to prevent creating multiple copies of the same node.",
        "We can avoid using extra space for old_node ---> new_node mapping by tweaking the original linked list. Simply interweave the nodes of the old and copied list. For example:\r\nOld List: A --> B --> C --> D\r\nInterWeaved List: A --> A' --> B --> B' --> C --> C' --> D --> D'",
        "The interweaving is done using next</b> pointers and we can make use of interweaved structure to get the correct reference nodes for random</b> pointers."
      ],
      "solution": {
        "id": "556",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13989,
      "dislikes": 1493,
      "similarQuestions": "[{\"title\": \"Clone Graph\", \"titleSlug\": \"clone-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone Binary Tree With Random Pointer\", \"titleSlug\": \"clone-binary-tree-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone N-ary Tree\", \"titleSlug\": \"clone-n-ary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485875,
      "commentCount": 241,
      "topLevelCommentCount": 154
    },
    "classAndMethodDefinition": "def copyRandomList1(self, head):\n        if not head:"
  },
  {
    "stat": {
      "question_id": 199,
      "question__article__live": true,
      "question__article__slug": "binary-tree-right-side-view",
      "question__article__has_video_solution": true,
      "question__title": "Binary Tree Right Side View",
      "question__title_slug": "binary-tree-right-side-view",
      "question__hide": false,
      "total_acs": 1447408,
      "total_submitted": 2270671,
      "frontend_question_id": 199,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-tree-right-side-view",
      "questionId": "199",
      "questionFrontendId": "199",
      "questionTitle": "Binary Tree Right Side View",
      "titleSlug": "binary-tree-right-side-view",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, imagine yourself standing on the <strong>right side</strong> of it, return <em>the values of the nodes you can see ordered from top to bottom</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/14/tree.jpg\" style=\"width: 401px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,null,5,null,4]\n<strong>Output:</strong> [1,3,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,3]\n<strong>Output:</strong> [1,3]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,null,5,null,4]\n[1,null,3]\n[]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "954",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12107,
      "dislikes": 982,
      "similarQuestions": "[{\"title\": \"Populating Next Right Pointers in Each Node\", \"titleSlug\": \"populating-next-right-pointers-in-each-node\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Boundary of Binary Tree\", \"titleSlug\": \"boundary-of-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485936,
      "commentCount": 227,
      "topLevelCommentCount": 152
    },
    "classAndMethodDefinition": "def rightSideView(self, root):\n        if not root:"
  },
  {
    "stat": {
      "question_id": 133,
      "question__article__live": true,
      "question__article__slug": "clone-graph",
      "question__article__has_video_solution": false,
      "question__title": "Clone Graph",
      "question__title_slug": "clone-graph",
      "question__hide": false,
      "total_acs": 1326520,
      "total_submitted": 2255462,
      "frontend_question_id": 133,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/clone-graph",
      "questionId": "133",
      "questionFrontendId": "133",
      "questionTitle": "Clone Graph",
      "titleSlug": "clone-graph",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a reference of a node in a <strong><a href=\"https://en.wikipedia.org/wiki/Connectivity_(graph_theory)#Connected_graph\" target=\"_blank\">connected</a></strong> undirected graph.</p>\n\n<p>Return a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\"><strong>deep copy</strong></a> (clone) of the graph.</p>\n\n<p>Each node in the graph contains a value (<code>int</code>) and a list (<code>List[Node]</code>) of its neighbors.</p>\n\n<pre>\nclass Node {\n    public int val;\n    public List&lt;Node&gt; neighbors;\n}\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Test case format:</strong></p>\n\n<p>For simplicity, each node&#39;s value is the same as the node&#39;s index (1-indexed). For example, the first node with <code>val == 1</code>, the second node with <code>val == 2</code>, and so on. The graph is represented in the test case using an adjacency list.</p>\n\n<p><b>An adjacency list</b> is a collection of unordered <b>lists</b> used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.</p>\n\n<p>The given node will always be the first node with <code>val = 1</code>. You must return the <strong>copy of the given node</strong> as a reference to the cloned graph.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/04/133_clone_graph_question.png\" style=\"width: 454px; height: 500px;\" />\n<pre>\n<strong>Input:</strong> adjList = [[2,4],[1,3],[2,4],[1,3]]\n<strong>Output:</strong> [[2,4],[1,3],[2,4],[1,3]]\n<strong>Explanation:</strong> There are 4 nodes in the graph.\n1st node (val = 1)&#39;s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n2nd node (val = 2)&#39;s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n3rd node (val = 3)&#39;s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n4th node (val = 4)&#39;s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/07/graph.png\" style=\"width: 163px; height: 148px;\" />\n<pre>\n<strong>Input:</strong> adjList = [[]]\n<strong>Output:</strong> [[]]\n<strong>Explanation:</strong> Note that the input contains one empty list. The graph consists of only one node with val = 1 and it does not have any neighbors.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> adjList = []\n<strong>Output:</strong> []\n<strong>Explanation:</strong> This an empty graph, it does not have any nodes.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the graph is in the range <code>[0, 100]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 100</code></li>\n\t<li><code>Node.val</code> is unique for each node.</li>\n\t<li>There are no repeated edges and no self-loops in the graph.</li>\n\t<li>The Graph is connected and all nodes can be visited starting from the given node.</li>\n</ul>\n",
      "exampleTestcases": "[[2,4],[1,3],[2,4],[1,3]]\n[[]]\n[]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "814",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9577,
      "dislikes": 3863,
      "similarQuestions": "[{\"title\": \"Copy List with Random Pointer\", \"titleSlug\": \"copy-list-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone Binary Tree With Random Pointer\", \"titleSlug\": \"clone-binary-tree-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Clone N-ary Tree\", \"titleSlug\": \"clone-n-ary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485870,
      "commentCount": 205,
      "topLevelCommentCount": 150
    },
    "classAndMethodDefinition": "def cloneGraph1(self, node):\n        if not node:"
  },
  {
    "stat": {
      "question_id": 32,
      "question__article__live": true,
      "question__article__slug": "longest-valid-parentheses",
      "question__article__has_video_solution": false,
      "question__title": "Longest Valid Parentheses",
      "question__title_slug": "longest-valid-parentheses",
      "question__hide": false,
      "total_acs": 780920,
      "total_submitted": 2253286,
      "frontend_question_id": 32,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-valid-parentheses",
      "questionId": "32",
      "questionFrontendId": "32",
      "questionTitle": "Longest Valid Parentheses",
      "titleSlug": "longest-valid-parentheses",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given a string containing just the characters <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code>, return <em>the length of the longest valid (well-formed) parentheses </em><span data-keyword=\"substring-nonempty\"><em>substring</em></span>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(()&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The longest valid parentheses substring is &quot;()&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;)()())&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest valid parentheses substring is &quot;()()&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>s[i]</code> is <code>&#39;(&#39;</code>, or <code>&#39;)&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"(()\"\n\")()())\"\n\"\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "74",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12413,
      "dislikes": 412,
      "similarQuestions": "[{\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485769,
      "commentCount": 131,
      "topLevelCommentCount": 64
    },
    "classAndMethodDefinition": "class Solution:\n    def longestValidParentheses(self, s: str) -> int:"
  },
  {
    "stat": {
      "question_id": 219,
      "question__article__live": true,
      "question__article__slug": "contains-duplicate-ii",
      "question__article__has_video_solution": false,
      "question__title": "Contains Duplicate II",
      "question__title_slug": "contains-duplicate-ii",
      "question__hide": false,
      "total_acs": 1036443,
      "total_submitted": 2240559,
      "frontend_question_id": 219,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/contains-duplicate-ii",
      "questionId": "219",
      "questionFrontendId": "219",
      "questionTitle": "Contains Duplicate II",
      "titleSlug": "contains-duplicate-ii",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <code>true</code> <em>if there are two <strong>distinct indices</strong> </em><code>i</code><em> and </em><code>j</code><em> in the array such that </em><code>nums[i] == nums[j]</code><em> and </em><code>abs(i - j) &lt;= k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1], k = 3\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,0,1,1], k = 1\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1,2,3], k = 2\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,1]\n3\n[1,0,1,1]\n1\n[1,2,3,1,2,3]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "24",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6207,
      "dislikes": 3112,
      "similarQuestions": "[{\"title\": \"Contains Duplicate\", \"titleSlug\": \"contains-duplicate\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Contains Duplicate III\", \"titleSlug\": \"contains-duplicate-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485956,
      "commentCount": 332,
      "topLevelCommentCount": 192
    },
    "classAndMethodDefinition": "def containsNearbyDuplicate(self, nums, k):\n        dic = {}"
  },
  {
    "stat": {
      "question_id": 24,
      "question__article__live": true,
      "question__article__slug": "swap-nodes-in-pairs",
      "question__article__has_video_solution": false,
      "question__title": "Swap Nodes in Pairs",
      "question__title_slug": "swap-nodes-in-pairs",
      "question__hide": false,
      "total_acs": 1437161,
      "total_submitted": 2206617,
      "frontend_question_id": 24,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/swap-nodes-in-pairs",
      "questionId": "24",
      "questionFrontendId": "24",
      "questionTitle": "Swap Nodes in Pairs",
      "titleSlug": "swap-nodes-in-pairs",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a&nbsp;linked list, swap every two adjacent nodes and return its head. You must solve the problem without&nbsp;modifying the values in the list&#39;s nodes (i.e., only nodes themselves may be changed.)</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/swap_ex1.jpg\" style=\"width: 422px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4]\n<strong>Output:</strong> [2,1,4,3]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the&nbsp;list&nbsp;is in the range <code>[0, 100]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4]\n[]\n[1]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "831",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12017,
      "dislikes": 452,
      "similarQuestions": "[{\"title\": \"Reverse Nodes in k-Group\", \"titleSlug\": \"reverse-nodes-in-k-group\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Swapping Nodes in a Linked List\", \"titleSlug\": \"swapping-nodes-in-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485761,
      "commentCount": 149,
      "topLevelCommentCount": 86
    },
    "classAndMethodDefinition": "def swapPairs(self, head):\n        pre, pre.next = self, head"
  },
  {
    "stat": {
      "question_id": 210,
      "question__article__live": true,
      "question__article__slug": "course-schedule-ii",
      "question__article__has_video_solution": true,
      "question__title": "Course Schedule II",
      "question__title_slug": "course-schedule-ii",
      "question__hide": false,
      "total_acs": 1122893,
      "total_submitted": 2187444,
      "frontend_question_id": 210,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/course-schedule-ii",
      "questionId": "210",
      "questionFrontendId": "210",
      "questionTitle": "Course Schedule II",
      "titleSlug": "course-schedule-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are a total of <code>numCourses</code> courses you have to take, labeled from <code>0</code> to <code>numCourses - 1</code>. You are given an array <code>prerequisites</code> where <code>prerequisites[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that you <strong>must</strong> take course <code>b<sub>i</sub></code> first if you want to take course <code>a<sub>i</sub></code>.</p>\n\n<ul>\n\t<li>For example, the pair <code>[0, 1]</code>, indicates that to take course <code>0</code> you have to first take course <code>1</code>.</li>\n</ul>\n\n<p>Return <em>the ordering of courses you should take to finish all courses</em>. If there are many valid answers, return <strong>any</strong> of them. If it is impossible to finish all courses, return <strong>an empty array</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 2, prerequisites = [[1,0]]\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is [0,1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]\n<strong>Output:</strong> [0,2,1,3]\n<strong>Explanation:</strong> There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0.\nSo one correct course order is [0,1,2,3]. Another correct ordering is [0,2,1,3].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> numCourses = 1, prerequisites = []\n<strong>Output:</strong> [0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= numCourses &lt;= 2000</code></li>\n\t<li><code>0 &lt;= prerequisites.length &lt;= numCourses * (numCourses - 1)</code></li>\n\t<li><code>prerequisites[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; numCourses</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>All the pairs <code>[a<sub>i</sub>, b<sub>i</sub>]</code> are <strong>distinct</strong>.</li>\n</ul>\n",
      "exampleTestcases": "2\n[[1,0]]\n4\n[[1,0],[2,0],[3,1],[3,2]]\n1\n[]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort",
          "translatedName": null
        }
      ],
      "hints": [
        "This problem is equivalent to finding the topological order in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.",
        "<a href=\"https://www.youtube.com/watch?v=ozso3xxkVGU\" target=\"_blank\">Topological Sort via DFS</a> - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.",
        "Topological sort could also be done via <a href=\"http://en.wikipedia.org/wiki/Topological_sorting#Algorithms\" target=\"_blank\">BFS</a>."
      ],
      "solution": {
        "id": "645",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10851,
      "dislikes": 349,
      "similarQuestions": "[{\"title\": \"Course Schedule\", \"titleSlug\": \"course-schedule\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Alien Dictionary\", \"titleSlug\": \"alien-dictionary\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Height Trees\", \"titleSlug\": \"minimum-height-trees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sequence Reconstruction\", \"titleSlug\": \"sequence-reconstruction\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule III\", \"titleSlug\": \"course-schedule-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Parallel Courses\", \"titleSlug\": \"parallel-courses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All Possible Recipes from Given Supplies\", \"titleSlug\": \"find-all-possible-recipes-from-given-supplies\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Build a Matrix With Conditions\", \"titleSlug\": \"build-a-matrix-with-conditions\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Sort Array by Moving Items to Empty Space\", \"titleSlug\": \"sort-array-by-moving-items-to-empty-space\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485947,
      "commentCount": 94,
      "topLevelCommentCount": 62
    },
    "classAndMethodDefinition": "def findOrder(self, numCourses, prerequisites):\n            # use DFS to parse the course structure"
  },
  {
    "stat": {
      "question_id": 1603,
      "question__article__live": true,
      "question__article__slug": "running-sum-of-1d-array",
      "question__article__has_video_solution": true,
      "question__title": "Running Sum of 1d Array",
      "question__title_slug": "running-sum-of-1d-array",
      "question__hide": false,
      "total_acs": 1894202,
      "total_submitted": 2181058,
      "frontend_question_id": 1480,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/running-sum-of-1d-array",
      "questionId": "1603",
      "questionFrontendId": "1480",
      "questionTitle": "Running Sum of 1d Array",
      "titleSlug": "running-sum-of-1d-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code>. We define a running sum of an array as&nbsp;<code>runningSum[i] = sum(nums[0]&hellip;nums[i])</code>.</p>\n\n<p>Return the running sum of <code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> [1,3,6,10]\n<strong>Explanation:</strong> Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,1,1]\n<strong>Output:</strong> [1,2,3,4,5]\n<strong>Explanation:</strong> Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,2,10,1]\n<strong>Output:</strong> [3,4,6,16,17]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>-10^6&nbsp;&lt;= nums[i] &lt;=&nbsp;10^6</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4]\n[1,1,1,1,1]\n[3,1,2,10,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [
        "Think about how we can calculate the i-th number in the running sum from the (i-1)-th number."
      ],
      "solution": {
        "id": "1124",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7908,
      "dislikes": 347,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487279,
      "commentCount": 181,
      "topLevelCommentCount": 123
    },
    "classAndMethodDefinition": "class Solution(object):\n    def runningSum(self, nums):"
  },
  {
    "stat": {
      "question_id": 150,
      "question__article__live": true,
      "question__article__slug": "evaluate-reverse-polish-notation",
      "question__article__has_video_solution": false,
      "question__title": "Evaluate Reverse Polish Notation",
      "question__title_slug": "evaluate-reverse-polish-notation",
      "question__hide": false,
      "total_acs": 1141408,
      "total_submitted": 2173246,
      "frontend_question_id": 150,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/evaluate-reverse-polish-notation",
      "questionId": "150",
      "questionFrontendId": "150",
      "questionTitle": "Evaluate Reverse Polish Notation",
      "titleSlug": "evaluate-reverse-polish-notation",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of strings <code>tokens</code> that represents an arithmetic expression in a <a href=\"http://en.wikipedia.org/wiki/Reverse_Polish_notation\" target=\"_blank\">Reverse Polish Notation</a>.</p>\n\n<p>Evaluate the expression. Return <em>an integer that represents the value of the expression</em>.</p>\n\n<p><strong>Note</strong> that:</p>\n\n<ul>\n\t<li>The valid operators are <code>&#39;+&#39;</code>, <code>&#39;-&#39;</code>, <code>&#39;*&#39;</code>, and <code>&#39;/&#39;</code>.</li>\n\t<li>Each operand may be an integer or another expression.</li>\n\t<li>The division between two integers always <strong>truncates toward zero</strong>.</li>\n\t<li>There will not be any division by zero.</li>\n\t<li>The input represents a valid arithmetic expression in a reverse polish notation.</li>\n\t<li>The answer and all the intermediate calculations can be represented in a <strong>32-bit</strong> integer.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> tokens = [&quot;2&quot;,&quot;1&quot;,&quot;+&quot;,&quot;3&quot;,&quot;*&quot;]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> ((2 + 1) * 3) = 9\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> tokens = [&quot;4&quot;,&quot;13&quot;,&quot;5&quot;,&quot;/&quot;,&quot;+&quot;]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> (4 + (13 / 5)) = 6\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> tokens = [&quot;10&quot;,&quot;6&quot;,&quot;9&quot;,&quot;3&quot;,&quot;+&quot;,&quot;-11&quot;,&quot;*&quot;,&quot;/&quot;,&quot;*&quot;,&quot;17&quot;,&quot;+&quot;,&quot;5&quot;,&quot;+&quot;]\n<strong>Output:</strong> 22\n<strong>Explanation:</strong> ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= tokens.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>tokens[i]</code> is either an operator: <code>&quot;+&quot;</code>, <code>&quot;-&quot;</code>, <code>&quot;*&quot;</code>, or <code>&quot;/&quot;</code>, or an integer in the range <code>[-200, 200]</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"2\",\"1\",\"+\",\"3\",\"*\"]\n[\"4\",\"13\",\"5\",\"/\",\"+\"]\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "871",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7729,
      "dislikes": 1098,
      "similarQuestions": "[{\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485887,
      "commentCount": 425,
      "topLevelCommentCount": 281
    },
    "classAndMethodDefinition": "def evalRPN(self, tokens):\n        stack = []"
  },
  {
    "stat": {
      "question_id": 191,
      "question__article__live": true,
      "question__article__slug": "number-of-1-bits",
      "question__article__has_video_solution": false,
      "question__title": "Number of 1 Bits",
      "question__title_slug": "number-of-1-bits",
      "question__hide": false,
      "total_acs": 1566075,
      "total_submitted": 2168128,
      "frontend_question_id": 191,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-1-bits",
      "questionId": "191",
      "questionFrontendId": "191",
      "questionTitle": "Number of 1 Bits",
      "titleSlug": "number-of-1-bits",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Write a function that takes the binary representation of a positive integer and returns the number of <span data-keyword=\"set-bit\">set bits</span> it has (also known as the <a href=\"http://en.wikipedia.org/wiki/Hamming_weight\" target=\"_blank\">Hamming weight</a>).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">n = 11</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">3</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The input binary string <strong>1011</strong> has a total of three set bits.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">n = 128</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The input binary string <strong>10000000</strong> has a total of one set bit.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">n = 2147483645</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">30</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The input binary string <strong>1111111111111111111111111111101</strong> has a total of thirty set bits.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> If this function is called many times, how would you optimize it?",
      "exampleTestcases": "11\n128\n2147483645",
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "44",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6555,
      "dislikes": 1341,
      "similarQuestions": "[{\"title\": \"Reverse Bits\", \"titleSlug\": \"reverse-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Two\", \"titleSlug\": \"power-of-two\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Counting Bits\", \"titleSlug\": \"counting-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Watch\", \"titleSlug\": \"binary-watch\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Hamming Distance\", \"titleSlug\": \"hamming-distance\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Number with Alternating Bits\", \"titleSlug\": \"binary-number-with-alternating-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Prime Number of Set Bits in Binary Representation\", \"titleSlug\": \"prime-number-of-set-bits-in-binary-representation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485928,
      "commentCount": 243,
      "topLevelCommentCount": 161
    },
    "classAndMethodDefinition": "def using_inbuilt_counter(self, n):\n        counter = collections.Counter(bin(n)[2:])"
  },
  {
    "stat": {
      "question_id": 485,
      "question__article__live": true,
      "question__article__slug": "max-consecutive-ones",
      "question__article__has_video_solution": false,
      "question__title": "Max Consecutive Ones",
      "question__title_slug": "max-consecutive-ones",
      "question__hide": false,
      "total_acs": 1306014,
      "total_submitted": 2165652,
      "frontend_question_id": 485,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/max-consecutive-ones",
      "questionId": "485",
      "questionFrontendId": "485",
      "questionTitle": "Max Consecutive Ones",
      "titleSlug": "max-consecutive-ones",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a binary array <code>nums</code>, return <em>the maximum number of consecutive </em><code>1</code><em>&#39;s in the array</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,0,1,1,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,0,1,1,0,1]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\n</ul>\n",
      "exampleTestcases": "[1,1,0,1,1,1]\n[1,0,1,1,0,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [
        "You need to think about two things as far as any window is concerned. One is the starting point for the window. How do you detect that a new window of 1s has started? The next part is detecting the ending point for this window.\r\n\r\nHow do you detect the ending point for an existing window? If you figure these two things out, you will be able to detect the windows of consecutive ones. All that remains afterward is to find the longest such window and return the size."
      ],
      "solution": {
        "id": "800",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5813,
      "dislikes": 457,
      "similarQuestions": "[{\"title\": \"Max Consecutive Ones II\", \"titleSlug\": \"max-consecutive-ones-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones III\", \"titleSlug\": \"max-consecutive-ones-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Consecutive Characters\", \"titleSlug\": \"consecutive-characters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longer Contiguous Segments of Ones than Zeros\", \"titleSlug\": \"longer-contiguous-segments-of-ones-than-zeros\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Length of the Longest Alphabetical Continuous Substring\", \"titleSlug\": \"length-of-the-longest-alphabetical-continuous-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Enemy Forts That Can Be Captured\", \"titleSlug\": \"maximum-enemy-forts-that-can-be-captured\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486215,
      "commentCount": 80,
      "topLevelCommentCount": 53
    },
    "classAndMethodDefinition": "def findMaxConsecutiveOnes(self, nums: List[int]) -> int:\n        "
  },
  {
    "stat": {
      "question_id": 12,
      "question__article__live": true,
      "question__article__slug": "integer-to-roman",
      "question__article__has_video_solution": true,
      "question__title": "Integer to Roman",
      "question__title_slug": "integer-to-roman",
      "question__hide": false,
      "total_acs": 1426169,
      "total_submitted": 2159117,
      "frontend_question_id": 12,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/integer-to-roman",
      "questionId": "12",
      "questionFrontendId": "12",
      "questionTitle": "Integer to Roman",
      "titleSlug": "integer-to-roman",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Seven different symbols represent Roman numerals with the following values:</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Symbol</th>\n\t\t\t<th>Value</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>I</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>V</td>\n\t\t\t<td>5</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>X</td>\n\t\t\t<td>10</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>L</td>\n\t\t\t<td>50</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>C</td>\n\t\t\t<td>100</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>D</td>\n\t\t\t<td>500</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>M</td>\n\t\t\t<td>1000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Roman numerals are formed by appending&nbsp;the conversions of&nbsp;decimal place values&nbsp;from highest to lowest. Converting a decimal place value into a Roman numeral has the following rules:</p>\n\n<ul>\n\t<li>If the value does not start with 4 or&nbsp;9, select the symbol of the maximal value that can be subtracted from the input, append that symbol to the result, subtract its value, and convert the remainder to a Roman numeral.</li>\n\t<li>If the value starts with 4 or 9 use the&nbsp;<strong>subtractive form</strong>&nbsp;representing&nbsp;one symbol subtracted from the following symbol, for example,&nbsp;4 is 1 (<code>I</code>) less than 5 (<code>V</code>): <code>IV</code>&nbsp;and 9 is 1 (<code>I</code>) less than 10 (<code>X</code>): <code>IX</code>.&nbsp;Only the following subtractive forms are used: 4 (<code>IV</code>), 9 (<code>IX</code>),&nbsp;40 (<code>XL</code>), 90 (<code>XC</code>), 400 (<code>CD</code>) and 900 (<code>CM</code>).</li>\n\t<li>Only powers of 10 (<code>I</code>, <code>X</code>, <code>C</code>, <code>M</code>) can be appended consecutively at most 3 times to represent multiples of 10. You cannot append 5&nbsp;(<code>V</code>), 50 (<code>L</code>), or 500 (<code>D</code>) multiple times. If you need to append a symbol&nbsp;4 times&nbsp;use the <strong>subtractive form</strong>.</li>\n</ul>\n\n<p>Given an integer, convert it to a Roman numeral.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">num = 3749</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;MMMDCCXLIX&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<pre>\n3000 = MMM as 1000 (M) + 1000 (M) + 1000 (M)\n 700 = DCC as 500 (D) + 100 (C) + 100 (C)\n  40 = XL as 10 (X) less of 50 (L)\n   9 = IX as 1 (I) less of 10 (X)\nNote: 49 is not 1 (I) less of 50 (L) because the conversion is based on decimal places\n</pre>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">num = 58</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;LVIII&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<pre>\n50 = L\n 8 = VIII\n</pre>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">num = 1994</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;MCMXCIV&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<pre>\n1000 = M\n 900 = CM\n  90 = XC\n   4 = IV\n</pre>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 3999</code></li>\n</ul>\n",
      "exampleTestcases": "3749\n58\n1994",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "919",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7261,
      "dislikes": 5570,
      "similarQuestions": "[{\"title\": \"Roman to Integer\", \"titleSlug\": \"roman-to-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Integer to English Words\", \"titleSlug\": \"integer-to-english-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485749,
      "commentCount": 164,
      "topLevelCommentCount": 89
    },
    "classAndMethodDefinition": "class Solution:\n    def intToRoman(self, num: int) -> str:"
  },
  {
    "stat": {
      "question_id": 44,
      "question__article__live": true,
      "question__article__slug": "wildcard-matching",
      "question__article__has_video_solution": false,
      "question__title": "Wildcard Matching",
      "question__title_slug": "wildcard-matching",
      "question__hide": false,
      "total_acs": 613857,
      "total_submitted": 2152315,
      "frontend_question_id": 44,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/wildcard-matching",
      "questionId": "44",
      "questionFrontendId": "44",
      "questionTitle": "Wildcard Matching",
      "titleSlug": "wildcard-matching",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an input string (<code>s</code>) and a pattern (<code>p</code>), implement wildcard pattern matching with support for <code>&#39;?&#39;</code> and <code>&#39;*&#39;</code> where:</p>\n\n<ul>\n\t<li><code>&#39;?&#39;</code> Matches any single character.</li>\n\t<li><code>&#39;*&#39;</code> Matches any sequence of characters (including the empty sequence).</li>\n</ul>\n\n<p>The matching should cover the <strong>entire</strong> input string (not partial).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> &quot;a&quot; does not match the entire string &quot;aa&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;&#39;*&#39; matches any sequence.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cb&quot;, p = &quot;?a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong>&nbsp;&#39;?&#39; matches &#39;c&#39;, but the second letter is &#39;a&#39;, which does not match &#39;b&#39;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length, p.length &lt;= 2000</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n\t<li><code>p</code> contains only lowercase English letters, <code>&#39;?&#39;</code> or <code>&#39;*&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"aa\"\n\"a\"\n\"aa\"\n\"*\"\n\"cb\"\n\"?a\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "730",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8325,
      "dislikes": 356,
      "similarQuestions": "[{\"title\": \"Regular Expression Matching\", \"titleSlug\": \"regular-expression-matching\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485781,
      "commentCount": 124,
      "topLevelCommentCount": 75
    },
    "classAndMethodDefinition": "def isMatch(self, s, p):\n        dp = [[False for _ in range(len(p)+1)] for i in range(len(s)+1)]"
  },
  {
    "stat": {
      "question_id": 84,
      "question__article__live": true,
      "question__article__slug": "largest-rectangle-in-histogram",
      "question__article__has_video_solution": true,
      "question__title": "Largest Rectangle in Histogram",
      "question__title_slug": "largest-rectangle-in-histogram",
      "question__hide": false,
      "total_acs": 975692,
      "total_submitted": 2151782,
      "frontend_question_id": 84,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/largest-rectangle-in-histogram",
      "questionId": "84",
      "questionFrontendId": "84",
      "questionTitle": "Largest Rectangle in Histogram",
      "titleSlug": "largest-rectangle-in-histogram",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>heights</code> representing the histogram&#39;s bar height where the width of each bar is <code>1</code>, return <em>the area of the largest rectangle in the histogram</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram.jpg\" style=\"width: 522px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> heights = [2,1,5,6,2,3]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> The above is a histogram where width of each bar is 1.\nThe largest rectangle is shown in the red area, which has an area = 10 units.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram-1.jpg\" style=\"width: 202px; height: 362px;\" />\n<pre>\n<strong>Input:</strong> heights = [2,4]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= heights.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= heights[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[2,1,5,6,2,3]\n[2,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "67",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 17394,
      "dislikes": 296,
      "similarQuestions": "[{\"title\": \"Maximal Rectangle\", \"titleSlug\": \"maximal-rectangle\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Score of a Good Subarray\", \"titleSlug\": \"maximum-score-of-a-good-subarray\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485821,
      "commentCount": 204,
      "topLevelCommentCount": 133
    },
    "classAndMethodDefinition": "def largestRectangleArea(self, height):\n        height.append(0)"
  },
  {
    "stat": {
      "question_id": 230,
      "question__article__live": true,
      "question__article__slug": "kth-smallest-element-in-a-bst",
      "question__article__has_video_solution": false,
      "question__title": "Kth Smallest Element in a BST",
      "question__title_slug": "kth-smallest-element-in-a-bst",
      "question__hide": false,
      "total_acs": 1557120,
      "total_submitted": 2118360,
      "frontend_question_id": 230,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst",
      "questionId": "230",
      "questionFrontendId": "230",
      "questionTitle": "Kth Smallest Element in a BST",
      "titleSlug": "kth-smallest-element-in-a-bst",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary search tree, and an integer <code>k</code>, return <em>the</em> <code>k<sup>th</sup></code> <em>smallest value (<strong>1-indexed</strong>) of all the values of the nodes in the tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/28/kthtree1.jpg\" style=\"width: 212px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> root = [3,1,4,null,2], k = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/28/kthtree2.jpg\" style=\"width: 382px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,null,1], k = 3\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is <code>n</code>.</li>\n\t<li><code>1 &lt;= k &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> If the BST is modified often (i.e., we can do insert and delete operations) and you need to find the kth smallest frequently, how would you optimize?</p>\n",
      "exampleTestcases": "[3,1,4,null,2]\n1\n[5,3,6,2,4,null,null,1]\n3",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [
        "Try to utilize the property of a BST.",
        "Try in-order traversal. (Credits to @chan13)",
        "What if you could modify the BST node's structure?",
        "The optimal runtime complexity is O(height of BST)."
      ],
      "solution": {
        "id": "723",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11566,
      "dislikes": 233,
      "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Second Minimum Node In a Binary Tree\", \"titleSlug\": \"second-minimum-node-in-a-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485967,
      "commentCount": 134,
      "topLevelCommentCount": 90
    },
    "classAndMethodDefinition": "def kthSmallest(self, root, k):\n        self.k = k"
  },
  {
    "stat": {
      "question_id": 103,
      "question__article__live": true,
      "question__article__slug": "binary-tree-zigzag-level-order-traversal",
      "question__article__has_video_solution": false,
      "question__title": "Binary Tree Zigzag Level Order Traversal",
      "question__title_slug": "binary-tree-zigzag-level-order-traversal",
      "question__hide": false,
      "total_acs": 1258770,
      "total_submitted": 2102711,
      "frontend_question_id": 103,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",
      "questionId": "103",
      "questionFrontendId": "103",
      "questionTitle": "Binary Tree Zigzag Level Order Traversal",
      "titleSlug": "binary-tree-zigzag-level-order-traversal",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>the zigzag level order traversal of its nodes&#39; values</em>. (i.e., from left to right, then right to left for the next level and alternate between).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [[3],[20,9],[15,7]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,null,null,15,7]\n[1]\n[]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "846",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10922,
      "dislikes": 306,
      "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485840,
      "commentCount": 150,
      "topLevelCommentCount": 110
    },
    "classAndMethodDefinition": "def zigzagLevelOrder(self, root: TreeNode) -> List[List[int]]:\n\\tif not root: return []"
  },
  {
    "stat": {
      "question_id": 81,
      "question__article__live": true,
      "question__article__slug": "search-in-rotated-sorted-array-ii",
      "question__article__has_video_solution": false,
      "question__title": "Search in Rotated Sorted Array II",
      "question__title_slug": "search-in-rotated-sorted-array-ii",
      "question__hide": false,
      "total_acs": 793359,
      "total_submitted": 2083130,
      "frontend_question_id": 81,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii",
      "questionId": "81",
      "questionFrontendId": "81",
      "questionTitle": "Search in Rotated Sorted Array II",
      "titleSlug": "search-in-rotated-sorted-array-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is an integer array <code>nums</code> sorted in non-decreasing order (not necessarily with <strong>distinct</strong> values).</p>\n\n<p>Before being passed to your function, <code>nums</code> is <strong>rotated</strong> at an unknown pivot index <code>k</code> (<code>0 &lt;= k &lt; nums.length</code>) such that the resulting array is <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code> (<strong>0-indexed</strong>). For example, <code>[0,1,2,4,4,4,5,6,6,7]</code> might be rotated at pivot index <code>5</code> and become <code>[4,5,6,6,7,0,1,2,4,4]</code>.</p>\n\n<p>Given the array <code>nums</code> <strong>after</strong> the rotation and an integer <code>target</code>, return <code>true</code><em> if </em><code>target</code><em> is in </em><code>nums</code><em>, or </em><code>false</code><em> if it is not in </em><code>nums</code><em>.</em></p>\n\n<p>You must decrease the overall operation steps as much as possible.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 0\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 3\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>nums</code> is guaranteed to be rotated at some pivot.</li>\n\t<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> This problem is similar to&nbsp;<a href=\"/problems/search-in-rotated-sorted-array/description/\" target=\"_blank\">Search in Rotated Sorted Array</a>, but&nbsp;<code>nums</code> may contain <strong>duplicates</strong>. Would this affect the runtime complexity? How and why?</p>\n",
      "exampleTestcases": "[2,5,6,0,0,1,2]\n0\n[2,5,6,0,0,1,2]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1009",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8568,
      "dislikes": 1051,
      "similarQuestions": "[{\"title\": \"Search in Rotated Sorted Array\", \"titleSlug\": \"search-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485818,
      "commentCount": 183,
      "topLevelCommentCount": 121
    },
    "classAndMethodDefinition": "def search(self, nums, target):\n        l, r = 0, len(nums)-1"
  },
  {
    "stat": {
      "question_id": 40,
      "question__article__live": true,
      "question__article__slug": "combination-sum-ii",
      "question__article__has_video_solution": false,
      "question__title": "Combination Sum II",
      "question__title_slug": "combination-sum-ii",
      "question__hide": false,
      "total_acs": 1162008,
      "total_submitted": 2062668,
      "frontend_question_id": 40,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/combination-sum-ii",
      "questionId": "40",
      "questionFrontendId": "40",
      "questionTitle": "Combination Sum II",
      "titleSlug": "combination-sum-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a collection of candidate numbers (<code>candidates</code>) and a target number (<code>target</code>), find all unique combinations in <code>candidates</code>&nbsp;where the candidate numbers sum to <code>target</code>.</p>\n\n<p>Each number in <code>candidates</code>&nbsp;may only be used <strong>once</strong> in the combination.</p>\n\n<p><strong>Note:</strong>&nbsp;The solution set must not contain duplicate combinations.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [10,1,2,7,6,1,5], target = 8\n<strong>Output:</strong> \n[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [2,5,2,1,2], target = 5\n<strong>Output:</strong> \n[\n[1,2,2],\n[5]\n]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;candidates.length &lt;= 100</code></li>\n\t<li><code>1 &lt;=&nbsp;candidates[i] &lt;= 50</code></li>\n\t<li><code>1 &lt;= target &lt;= 30</code></li>\n</ul>\n",
      "exampleTestcases": "[10,1,2,7,6,1,5]\n8\n[2,5,2,1,2]\n5",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2402",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11033,
      "dislikes": 321,
      "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485777,
      "commentCount": 228,
      "topLevelCommentCount": 138
    },
    "classAndMethodDefinition": "def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        if not candidates: return []"
  },
  {
    "stat": {
      "question_id": 1250,
      "question__article__live": true,
      "question__article__slug": "longest-common-subsequence",
      "question__article__has_video_solution": false,
      "question__title": "Longest Common Subsequence",
      "question__title_slug": "longest-common-subsequence",
      "question__hide": false,
      "total_acs": 1190706,
      "total_submitted": 2062105,
      "frontend_question_id": 1143,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-common-subsequence",
      "questionId": "1250",
      "questionFrontendId": "1143",
      "questionTitle": "Longest Common Subsequence",
      "titleSlug": "longest-common-subsequence",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>text1</code> and <code>text2</code>, return <em>the length of their longest <strong>common subsequence</strong>. </em>If there is no <strong>common subsequence</strong>, return <code>0</code>.</p>\n\n<p>A <strong>subsequence</strong> of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.</p>\n\n<ul>\n\t<li>For example, <code>&quot;ace&quot;</code> is a subsequence of <code>&quot;abcde&quot;</code>.</li>\n</ul>\n\n<p>A <strong>common subsequence</strong> of two strings is a subsequence that is common to both strings.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text1 = &quot;abcde&quot;, text2 = &quot;ace&quot; \n<strong>Output:</strong> 3  \n<strong>Explanation:</strong> The longest common subsequence is &quot;ace&quot; and its length is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text1 = &quot;abc&quot;, text2 = &quot;abc&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The longest common subsequence is &quot;abc&quot; and its length is 3.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text1 = &quot;abc&quot;, text2 = &quot;def&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no such common subsequence, so the result is 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text1.length, text2.length &lt;= 1000</code></li>\n\t<li><code>text1</code> and <code>text2</code> consist of only lowercase English characters.</li>\n</ul>\n",
      "exampleTestcases": "\"abcde\"\n\"ace\"\n\"abc\"\n\"abc\"\n\"abc\"\n\"def\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "Try dynamic programming. \r\nDP[i][j] represents the longest common subsequence of text1[0 ... i] & text2[0 ... j].",
        "DP[i][j] = DP[i - 1][j - 1] + 1 , if text1[i] == text2[j]\r\nDP[i][j] = max(DP[i - 1][j], DP[i][j - 1]) , otherwise"
      ],
      "solution": {
        "id": "940",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13630,
      "dislikes": 199,
      "similarQuestions": "[{\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Operation for Two Strings\", \"titleSlug\": \"delete-operation-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Common Supersequence \", \"titleSlug\": \"shortest-common-supersequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximize Number of Subsequences in a String\", \"titleSlug\": \"maximize-number-of-subsequences-in-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subsequence With the Minimum Score\", \"titleSlug\": \"subsequence-with-the-minimum-score\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486948,
      "commentCount": 305,
      "topLevelCommentCount": 161
    },
    "classAndMethodDefinition": "def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        dp = [[0] * (len(text2) + 1) for _ in range(len(text1) + 1)]"
  },
  {
    "stat": {
      "question_id": 43,
      "question__article__live": true,
      "question__article__slug": "multiply-strings",
      "question__article__has_video_solution": false,
      "question__title": "Multiply Strings",
      "question__title_slug": "multiply-strings",
      "question__hide": false,
      "total_acs": 841599,
      "total_submitted": 2058655,
      "frontend_question_id": 43,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/multiply-strings",
      "questionId": "43",
      "questionFrontendId": "43",
      "questionTitle": "Multiply Strings",
      "titleSlug": "multiply-strings",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p>\n\n<p><strong>Note:</strong>&nbsp;You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> num1 = \"2\", num2 = \"3\"\n<strong>Output:</strong> \"6\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> num1 = \"123\", num2 = \"456\"\n<strong>Output:</strong> \"56088\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li>\n\t<li><code>num1</code> and <code>num2</code> consist of digits only.</li>\n\t<li>Both <code>num1</code> and <code>num2</code>&nbsp;do not contain any leading zero, except the number <code>0</code> itself.</li>\n</ul>\n",
      "exampleTestcases": "\"2\"\n\"3\"\n\"123\"\n\"456\"",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1202",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7108,
      "dislikes": 3376,
      "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Apply Discount to Prices\", \"titleSlug\": \"apply-discount-to-prices\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485780,
      "commentCount": 194,
      "topLevelCommentCount": 127
    },
    "classAndMethodDefinition": "def multiply(self, num1, num2):\n        res = [0] * (len(num1)+len(num2))"
  },
  {
    "stat": {
      "question_id": 567,
      "question__article__live": true,
      "question__article__slug": "short-permutation-in-a-long-string",
      "question__article__has_video_solution": false,
      "question__title": "Permutation in String",
      "question__title_slug": "permutation-in-string",
      "question__hide": false,
      "total_acs": 918101,
      "total_submitted": 2053251,
      "frontend_question_id": 567,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/permutation-in-string",
      "questionId": "567",
      "questionFrontendId": "567",
      "questionTitle": "Permutation in String",
      "titleSlug": "permutation-in-string",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>s1</code> and <code>s2</code>, return <code>true</code><em> if </em><code>s2</code><em> contains a permutation of </em><code>s1</code><em>, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>In other words, return <code>true</code> if one of <code>s1</code>&#39;s permutations is the substring of <code>s2</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;ab&quot;, s2 = &quot;eidbaooo&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> s2 contains one permutation of s1 (&quot;ba&quot;).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;ab&quot;, s2 = &quot;eidboaoo&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s1.length, s2.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s1</code> and <code>s2</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"ab\"\n\"eidbaooo\"\n\"ab\"\n\"eidboaoo\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [
        "Obviously, brute force will result in TLE. Think of something else.",
        "How will you check whether one string is a permutation of another string?",
        "One way is to sort the string and then compare. But, Is there a better way?",
        "If one string is a permutation of another string then they must one common metric. What is that?",
        "Both strings must have same character frequencies, if  one is permutation of another. Which data structure should be used to store frequencies?",
        "What about hash table?  An array of size 26?"
      ],
      "solution": {
        "id": "121",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11351,
      "dislikes": 424,
      "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find All Anagrams in a String\", \"titleSlug\": \"find-all-anagrams-in-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486294,
      "commentCount": 198,
      "topLevelCommentCount": 122
    },
    "classAndMethodDefinition": "def checkInclusion(self, s1: str, s2: str) -> bool:\n\\tcntr, w = Counter(s1), len(s1)   "
  },
  {
    "stat": {
      "question_id": 105,
      "question__article__live": true,
      "question__article__slug": "construct-binary-tree-from-preorder-and-inorder-traversal",
      "question__article__has_video_solution": false,
      "question__title": "Construct Binary Tree from Preorder and Inorder Traversal",
      "question__title_slug": "construct-binary-tree-from-preorder-and-inorder-traversal",
      "question__hide": false,
      "total_acs": 1325389,
      "total_submitted": 2044297,
      "frontend_question_id": 105,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",
      "questionId": "105",
      "questionFrontendId": "105",
      "questionTitle": "Construct Binary Tree from Preorder and Inorder Traversal",
      "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two integer arrays <code>preorder</code> and <code>inorder</code> where <code>preorder</code> is the preorder traversal of a binary tree and <code>inorder</code> is the inorder traversal of the same tree, construct and return <em>the binary tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]\n<strong>Output:</strong> [3,9,20,null,null,15,7]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> preorder = [-1], inorder = [-1]\n<strong>Output:</strong> [-1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= preorder.length &lt;= 3000</code></li>\n\t<li><code>inorder.length == preorder.length</code></li>\n\t<li><code>-3000 &lt;= preorder[i], inorder[i] &lt;= 3000</code></li>\n\t<li><code>preorder</code> and <code>inorder</code> consist of <strong>unique</strong> values.</li>\n\t<li>Each value of <code>inorder</code> also appears in <code>preorder</code>.</li>\n\t<li><code>preorder</code> is <strong>guaranteed</strong> to be the preorder traversal of the tree.</li>\n\t<li><code>inorder</code> is <strong>guaranteed</strong> to be the inorder traversal of the tree.</li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,15,7]\n[9,3,15,20,7]\n[-1]\n[-1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1114",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 15134,
      "dislikes": 516,
      "similarQuestions": "[{\"title\": \"Construct Binary Tree from Inorder and Postorder Traversal\", \"titleSlug\": \"construct-binary-tree-from-inorder-and-postorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485842,
      "commentCount": 187,
      "topLevelCommentCount": 116
    },
    "classAndMethodDefinition": "def buildTree(self, preorder, inorder):\n        if inorder:"
  },
  {
    "stat": {
      "question_id": 383,
      "question__article__live": true,
      "question__article__slug": "ransom-note",
      "question__article__has_video_solution": true,
      "question__title": "Ransom Note",
      "question__title_slug": "ransom-note",
      "question__hide": false,
      "total_acs": 1273793,
      "total_submitted": 2039791,
      "frontend_question_id": 383,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/ransom-note",
      "questionId": "383",
      "questionFrontendId": "383",
      "questionTitle": "Ransom Note",
      "titleSlug": "ransom-note",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>ransomNote</code> and <code>magazine</code>, return <code>true</code><em> if </em><code>ransomNote</code><em> can be constructed by using the letters from </em><code>magazine</code><em> and </em><code>false</code><em> otherwise</em>.</p>\n\n<p>Each letter in <code>magazine</code> can only be used once in <code>ransomNote</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> ransomNote = \"a\", magazine = \"b\"\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> ransomNote = \"aa\", magazine = \"ab\"\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> ransomNote = \"aa\", magazine = \"aab\"\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= ransomNote.length, magazine.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>ransomNote</code> and <code>magazine</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"a\"\n\"b\"\n\"aa\"\n\"ab\"\n\"aa\"\n\"aab\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "895",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5038,
      "dislikes": 504,
      "similarQuestions": "[{\"title\": \"Stickers to Spell Word\", \"titleSlug\": \"stickers-to-spell-word\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486120,
      "commentCount": 141,
      "topLevelCommentCount": 80
    },
    "classAndMethodDefinition": "class Solution(object):\n    def canConstruct(self, ransomNote, magazine):"
  },
  {
    "stat": {
      "question_id": 724,
      "question__article__live": true,
      "question__article__slug": "find-pivot-index",
      "question__article__has_video_solution": false,
      "question__title": "Find Pivot Index",
      "question__title_slug": "find-pivot-index",
      "question__hide": false,
      "total_acs": 1173328,
      "total_submitted": 2005654,
      "frontend_question_id": 724,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-pivot-index",
      "questionId": "724",
      "questionFrontendId": "724",
      "questionTitle": "Find Pivot Index",
      "titleSlug": "find-pivot-index",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code>, calculate the <strong>pivot index</strong> of this array.</p>\n\n<p>The <strong>pivot index</strong> is the index where the sum of all the numbers <strong>strictly</strong> to the left of the index is equal to the sum of all the numbers <strong>strictly</strong> to the index&#39;s right.</p>\n\n<p>If the index is on the left edge of the array, then the left sum is <code>0</code> because there are no elements to the left. This also applies to the right edge of the array.</p>\n\n<p>Return <em>the <strong>leftmost pivot index</strong></em>. If no such index exists, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,7,3,6,5,6]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nThe pivot index is 3.\nLeft sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11\nRight sum = nums[4] + nums[5] = 5 + 6 = 11\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>\nThere is no index that satisfies the conditions in the problem statement.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,-1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nThe pivot index is 0.\nLeft sum = 0 (no elements to the left of index 0)\nRight sum = nums[1] + nums[2] = 1 + -1 = 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as&nbsp;1991:&nbsp;<a href=\"https://leetcode.com/problems/find-the-middle-index-in-array/\" target=\"_blank\">https://leetcode.com/problems/find-the-middle-index-in-array/</a></p>\n",
      "exampleTestcases": "[1,7,3,6,5,6]\n[1,2,3]\n[2,1,-1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [
        "Create an array sumLeft where sumLeft[i] is the sum of all the numbers to the left of index i.",
        "Create an array sumRight where sumRight[i] is the sum of all the numbers to the right of index i.",
        "For each index i, check if sumLeft[i] equals sumRight[i]. If so, return i. If no such i is found, return -1."
      ],
      "solution": {
        "id": "291",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8415,
      "dislikes": 856,
      "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Middle Index in Array\", \"titleSlug\": \"find-the-middle-index-in-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Ways to Split Array\", \"titleSlug\": \"number-of-ways-to-split-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Sum Score of Array\", \"titleSlug\": \"maximum-sum-score-of-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Left and Right Sum Differences\", \"titleSlug\": \"left-and-right-sum-differences\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486436,
      "commentCount": 257,
      "topLevelCommentCount": 167
    },
    "classAndMethodDefinition": "def pivotIndex(self, nums):\n        # Initialize leftSum & rightSum to store the sum of all the numbers strictly to the index\\'s left & right respectively..."
  },
  {
    "stat": {
      "question_id": 64,
      "question__article__live": true,
      "question__article__slug": "minimum-path-sum",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Path Sum",
      "question__title_slug": "minimum-path-sum",
      "question__hide": false,
      "total_acs": 1272292,
      "total_submitted": 1963018,
      "frontend_question_id": 64,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-path-sum",
      "questionId": "64",
      "questionFrontendId": "64",
      "questionTitle": "Minimum Path Sum",
      "titleSlug": "minimum-path-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a <code>m x n</code> <code>grid</code> filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.</p>\n\n<p><strong>Note:</strong> You can only move either down or right at any point in time.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/minpath.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,3,1],[1,5,1],[4,2,1]]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Because the path 1 &rarr; 3 &rarr; 1 &rarr; 1 &rarr; 1 minimizes the sum.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,2,3],[4,5,6]]\n<strong>Output:</strong> 12\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 200</code></li>\n</ul>\n",
      "exampleTestcases": "[[1,3,1],[1,5,1],[4,2,1]]\n[[1,2,3],[4,5,6]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "68",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12546,
      "dislikes": 171,
      "similarQuestions": "[{\"title\": \"Unique Paths\", \"titleSlug\": \"unique-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Dungeon Game\", \"titleSlug\": \"dungeon-game\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Cherry Pickup\", \"titleSlug\": \"cherry-pickup\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Cost in a Grid\", \"titleSlug\": \"minimum-path-cost-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Points with Cost\", \"titleSlug\": \"maximum-number-of-points-with-cost\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost Homecoming of a Robot in a Grid\", \"titleSlug\": \"minimum-cost-homecoming-of-a-robot-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paths in Matrix Whose Sum Is Divisible by K\", \"titleSlug\": \"paths-in-matrix-whose-sum-is-divisible-by-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Check if There is a Path With Equal Number of 0's And 1's\", \"titleSlug\": \"check-if-there-is-a-path-with-equal-number-of-0s-and-1s\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost of a Path With Special Roads\", \"titleSlug\": \"minimum-cost-of-a-path-with-special-roads\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485801,
      "commentCount": 183,
      "topLevelCommentCount": 103
    },
    "classAndMethodDefinition": "class Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:"
  },
  {
    "stat": {
      "question_id": 523,
      "question__article__live": true,
      "question__article__slug": "continuous-subarray-sum",
      "question__article__has_video_solution": false,
      "question__title": "Continuous Subarray Sum",
      "question__title_slug": "continuous-subarray-sum",
      "question__hide": false,
      "total_acs": 593328,
      "total_submitted": 1956522,
      "frontend_question_id": 523,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/continuous-subarray-sum",
      "questionId": "523",
      "questionFrontendId": "523",
      "questionTitle": "Continuous Subarray Sum",
      "titleSlug": "continuous-subarray-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array nums and an integer k, return <code>true</code> <em>if </em><code>nums</code><em> has a <strong>good subarray</strong> or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>A <strong>good subarray</strong> is a subarray where:</p>\n\n<ul>\n\t<li>its length is <strong>at least two</strong>, and</li>\n\t<li>the sum of the elements of the subarray is a multiple of <code>k</code>.</li>\n</ul>\n\n<p><strong>Note</strong> that:</p>\n\n<ul>\n\t<li>A <strong>subarray</strong> is a contiguous part of the array.</li>\n\t<li>An integer <code>x</code> is a multiple of <code>k</code> if there exists an integer <code>n</code> such that <code>x = n * k</code>. <code>0</code> is <strong>always</strong> a multiple of <code>k</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [23,<u>2,4</u>,6,7], k = 6\n<strong>Output:</strong> true\n<strong>Explanation:</strong> [2, 4] is a continuous subarray of size 2 whose elements sum up to 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [<u>23,2,6,4,7</u>], k = 6\n<strong>Output:</strong> true\n<strong>Explanation:</strong> [23, 2, 6, 4, 7] is an continuous subarray of size 5 whose elements sum up to 42.\n42 is a multiple of 6 because 42 = 7 * 6 and 7 is an integer.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [23,2,6,4,7], k = 13\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= sum(nums[i]) &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>1 &lt;= k &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[23,2,4,6,7]\n6\n[23,2,6,4,7]\n6\n[23,2,6,4,7]\n13",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2332",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6298,
      "dislikes": 655,
      "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Operations to Make Array Continuous\", \"titleSlug\": \"minimum-number-of-operations-to-make-array-continuous\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Intervals Between Identical Elements\", \"titleSlug\": \"intervals-between-identical-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Apply Operations to Make All Array Elements Equal to Zero\", \"titleSlug\": \"apply-operations-to-make-all-array-elements-equal-to-zero\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486252,
      "commentCount": 443,
      "topLevelCommentCount": 234
    },
    "classAndMethodDefinition": "def checkSubarraySum(self, nums: List[int], k: int) -> bool:\n        remainder_cache = {0:-1}"
  },
  {
    "stat": {
      "question_id": 416,
      "question__article__live": true,
      "question__article__slug": "partition-equal-subset-sum",
      "question__article__has_video_solution": true,
      "question__title": "Partition Equal Subset Sum",
      "question__title_slug": "partition-equal-subset-sum",
      "question__hide": false,
      "total_acs": 912252,
      "total_submitted": 1954251,
      "frontend_question_id": 416,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/partition-equal-subset-sum",
      "questionId": "416",
      "questionFrontendId": "416",
      "questionTitle": "Partition Equal Subset Sum",
      "titleSlug": "partition-equal-subset-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <code>true</code> <em>if you can partition the array into two subsets such that the sum of the elements in both subsets is equal or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5,11,5]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The array can be partitioned as [1, 5, 5] and [11].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,5]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The array cannot be partitioned into equal sum subsets.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 200</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,5,11,5]\n[1,2,3,5]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1000",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12356,
      "dislikes": 254,
      "similarQuestions": "[{\"title\": \"Partition to K Equal Sum Subsets\", \"titleSlug\": \"partition-to-k-equal-sum-subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimize the Difference Between Target and Chosen Elements\", \"titleSlug\": \"minimize-the-difference-between-target-and-chosen-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Ways to Partition an Array\", \"titleSlug\": \"maximum-number-of-ways-to-partition-an-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Partition Array Into Two Arrays to Minimize Sum Difference\", \"titleSlug\": \"partition-array-into-two-arrays-to-minimize-sum-difference\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Great Partitions\", \"titleSlug\": \"number-of-great-partitions\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Split With Minimum Sum\", \"titleSlug\": \"split-with-minimum-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486153,
      "commentCount": 151,
      "topLevelCommentCount": 91
    },
    "classAndMethodDefinition": "def canPartition(nums):\n\\ts, n = sum(nums), len(nums)"
  },
  {
    "stat": {
      "question_id": 213,
      "question__article__live": true,
      "question__article__slug": "house-robber-ii",
      "question__article__has_video_solution": false,
      "question__title": "House Robber II",
      "question__title_slug": "house-robber-ii",
      "question__hide": false,
      "total_acs": 827718,
      "total_submitted": 1949512,
      "frontend_question_id": 213,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/house-robber-ii",
      "questionId": "213",
      "questionFrontendId": "213",
      "questionTitle": "House Robber II",
      "titleSlug": "house-robber-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are <strong>arranged in a circle.</strong> That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and&nbsp;<b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p>\n\n<p>Given an integer array <code>nums</code> representing the amount of money of each house, return <em>the maximum amount of money you can rob tonight <strong>without alerting the police</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> You cannot rob house 1 (money = 2) and then rob house 3 (money = 2), because they are adjacent houses.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[2,3,2]\n[1,2,3,1]\n[1,2,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "Since House[1] and House[n] are adjacent, they cannot be robbed together. Therefore, the problem becomes to rob either House[1]-House[n-1] or House[2]-House[n], depending on which choice offers more money. Now the problem has degenerated to the <a href =\"https://leetcode.com/problems/house-robber/description/\">House Robber</a>, which is already been solved."
      ],
      "solution": {
        "id": "983",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9929,
      "dislikes": 157,
      "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House\", \"titleSlug\": \"paint-house\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint Fence\", \"titleSlug\": \"paint-fence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber III\", \"titleSlug\": \"house-robber-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-negative Integers without Consecutive Ones\", \"titleSlug\": \"non-negative-integers-without-consecutive-ones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Coin Path\", \"titleSlug\": \"coin-path\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485950,
      "commentCount": 114,
      "topLevelCommentCount": 70
    },
    "classAndMethodDefinition": "def rob(self, nums):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 134,
      "question__article__live": true,
      "question__article__slug": "gas-station",
      "question__article__has_video_solution": false,
      "question__title": "Gas Station",
      "question__title_slug": "gas-station",
      "question__hide": false,
      "total_acs": 885780,
      "total_submitted": 1943191,
      "frontend_question_id": 134,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/gas-station",
      "questionId": "134",
      "questionFrontendId": "134",
      "questionTitle": "Gas Station",
      "titleSlug": "gas-station",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> gas stations along a circular route, where the amount of gas at the <code>i<sup>th</sup></code> station is <code>gas[i]</code>.</p>\n\n<p>You have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from the <code>i<sup>th</sup></code> station to its next <code>(i + 1)<sup>th</sup></code> station. You begin the journey with an empty tank at one of the gas stations.</p>\n\n<p>Given two integer arrays <code>gas</code> and <code>cost</code>, return <em>the starting gas station&#39;s index if you can travel around the circuit once in the clockwise direction, otherwise return</em> <code>-1</code>. If there exists a solution, it is <strong>guaranteed</strong> to be <strong>unique</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> gas = [1,2,3,4,5], cost = [3,4,5,1,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nStart at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 4. Your tank = 4 - 1 + 5 = 8\nTravel to station 0. Your tank = 8 - 2 + 1 = 7\nTravel to station 1. Your tank = 7 - 3 + 2 = 6\nTravel to station 2. Your tank = 6 - 4 + 3 = 5\nTravel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.\nTherefore, return 3 as the starting index.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> gas = [2,3,4], cost = [3,4,3]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>\nYou can&#39;t start at station 0 or 1, as there is not enough gas to travel to the next station.\nLet&#39;s start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 0. Your tank = 4 - 3 + 2 = 3\nTravel to station 1. Your tank = 3 - 3 + 3 = 3\nYou cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.\nTherefore, you can&#39;t travel around the circuit once no matter where you start.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == gas.length == cost.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= gas[i], cost[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5]\n[3,4,5,1,2]\n[2,3,4]\n[3,4,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1951",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12094,
      "dislikes": 1185,
      "similarQuestions": "[{\"title\": \"Maximize the Topmost Element After K Moves\", \"titleSlug\": \"maximize-the-topmost-element-after-k-moves\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485871,
      "commentCount": 330,
      "topLevelCommentCount": 190
    },
    "classAndMethodDefinition": "class Solution:\n    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 92,
      "question__article__live": true,
      "question__article__slug": "reverse-linked-list-ii",
      "question__article__has_video_solution": true,
      "question__title": "Reverse Linked List II",
      "question__title_slug": "reverse-linked-list-ii",
      "question__hide": false,
      "total_acs": 926715,
      "total_submitted": 1921831,
      "frontend_question_id": 92,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-linked-list-ii",
      "questionId": "92",
      "questionFrontendId": "92",
      "questionTitle": "Reverse Linked List II",
      "titleSlug": "reverse-linked-list-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a singly linked list and two integers <code>left</code> and <code>right</code> where <code>left &lt;= right</code>, reverse the nodes of the list from position <code>left</code> to position <code>right</code>, and return <em>the reversed list</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/rev2ex2.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], left = 2, right = 4\n<strong>Output:</strong> [1,4,3,2,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [5], left = 1, right = 1\n<strong>Output:</strong> [5]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is <code>n</code>.</li>\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\n\t<li><code>-500 &lt;= Node.val &lt;= 500</code></li>\n\t<li><code>1 &lt;= left &lt;= right &lt;= n</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you do it in one pass?",
      "exampleTestcases": "[1,2,3,4,5]\n2\n4\n[5]\n1\n1",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "661",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11702,
      "dislikes": 628,
      "similarQuestions": "[{\"title\": \"Reverse Linked List\", \"titleSlug\": \"reverse-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485829,
      "commentCount": 179,
      "topLevelCommentCount": 123
    },
    "classAndMethodDefinition": "def reverseBetween(self, head, m, n):\n            if m == n:"
  },
  {
    "stat": {
      "question_id": 680,
      "question__article__live": true,
      "question__article__slug": "valid-palindrome-ii",
      "question__article__has_video_solution": false,
      "question__title": "Valid Palindrome II",
      "question__title_slug": "valid-palindrome-ii",
      "question__hide": false,
      "total_acs": 791011,
      "total_submitted": 1918245,
      "frontend_question_id": 680,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-palindrome-ii",
      "questionId": "680",
      "questionFrontendId": "680",
      "questionTitle": "Valid Palindrome II",
      "titleSlug": "valid-palindrome-ii",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, return <code>true</code> <em>if the </em><code>s</code><em> can be palindrome after deleting <strong>at most one</strong> character from it</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aba&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abca&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You could delete the character &#39;c&#39;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abc&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"aba\"\n\"abca\"\n\"abc\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1317",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8278,
      "dislikes": 447,
      "similarQuestions": "[{\"title\": \"Valid Palindrome\", \"titleSlug\": \"valid-palindrome\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Valid Palindrome III\", \"titleSlug\": \"valid-palindrome-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Valid Palindrome IV\", \"titleSlug\": \"valid-palindrome-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486403,
      "commentCount": 140,
      "topLevelCommentCount": 75
    },
    "classAndMethodDefinition": "def validPalindrome(self, s: str) -> bool:\n    def verify(s, left, right, deleted):"
  },
  {
    "stat": {
      "question_id": 130,
      "question__article__live": true,
      "question__article__slug": "surrounded-regions",
      "question__article__has_video_solution": false,
      "question__title": "Surrounded Regions",
      "question__title_slug": "surrounded-regions",
      "question__hide": false,
      "total_acs": 775426,
      "total_submitted": 1910430,
      "frontend_question_id": 130,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/surrounded-regions",
      "questionId": "130",
      "questionFrontendId": "130",
      "questionTitle": "Surrounded Regions",
      "titleSlug": "surrounded-regions",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>m x n</code> matrix <code>board</code> containing <strong>letters</strong> <code>&#39;X&#39;</code> and <code>&#39;O&#39;</code>, <strong>capture regions</strong> that are <strong>surrounded</strong>:</p>\n\n<ul>\n\t<li><strong>Connect</strong>: A cell is connected to adjacent cells horizontally or vertically.</li>\n\t<li><strong>Region</strong>: To form a region <strong>connect every</strong> <code>&#39;O&#39;</code> cell.</li>\n\t<li><strong>Surround</strong>: The region is surrounded with <code>&#39;X&#39;</code> cells if you can <strong>connect the region </strong>with <code>&#39;X&#39;</code> cells and none of the region cells are on the edge of the <code>board</code>.</li>\n</ul>\n\n<p>A <strong>surrounded region is captured</strong> by replacing all <code>&#39;O&#39;</code>s with <code>&#39;X&#39;</code>s in the input matrix <code>board</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">board = [[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;O&quot;,&quot;O&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;X&quot;,&quot;O&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;O&quot;,&quot;X&quot;,&quot;X&quot;]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;O&quot;,&quot;X&quot;,&quot;X&quot;]]</span></p>\n\n<p><strong>Explanation:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/xogrid.jpg\" style=\"width: 367px; height: 158px;\" />\n<p>In the above diagram, the bottom region is not captured because it is on the edge of the board and cannot be surrounded.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">board = [[&quot;X&quot;]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[[&quot;X&quot;]]</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == board.length</code></li>\n\t<li><code>n == board[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>board[i][j]</code> is <code>&#39;X&#39;</code> or <code>&#39;O&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"O\",\"X\"],[\"X\",\"X\",\"O\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]\n[[\"X\"]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "857",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8739,
      "dislikes": 1892,
      "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485867,
      "commentCount": 193,
      "topLevelCommentCount": 136
    },
    "classAndMethodDefinition": "def solve(self, board):\n        if not any(board): return"
  },
  {
    "stat": {
      "question_id": 1014,
      "question__article__live": true,
      "question__article__slug": "k-closest-points-to-origin",
      "question__article__has_video_solution": false,
      "question__title": "K Closest Points to Origin",
      "question__title_slug": "k-closest-points-to-origin",
      "question__hide": false,
      "total_acs": 1272908,
      "total_submitted": 1905629,
      "frontend_question_id": 973,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/k-closest-points-to-origin",
      "questionId": "1014",
      "questionFrontendId": "973",
      "questionTitle": "K Closest Points to Origin",
      "titleSlug": "k-closest-points-to-origin",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of <code>points</code> where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> represents a point on the <strong>X-Y</strong> plane and an integer <code>k</code>, return the <code>k</code> closest points to the origin <code>(0, 0)</code>.</p>\n\n<p>The distance between two points on the <strong>X-Y</strong> plane is the Euclidean distance (i.e., <code>&radic;(x<sub>1</sub> - x<sub>2</sub>)<sup>2</sup> + (y<sub>1</sub> - y<sub>2</sub>)<sup>2</sup></code>).</p>\n\n<p>You may return the answer in <strong>any order</strong>. The answer is <strong>guaranteed</strong> to be <strong>unique</strong> (except for the order that it is in).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/03/closestplane1.jpg\" style=\"width: 400px; height: 400px;\" />\n<pre>\n<strong>Input:</strong> points = [[1,3],[-2,2]], k = 1\n<strong>Output:</strong> [[-2,2]]\n<strong>Explanation:</strong>\nThe distance between (1, 3) and the origin is sqrt(10).\nThe distance between (-2, 2) and the origin is sqrt(8).\nSince sqrt(8) &lt; sqrt(10), (-2, 2) is closer to the origin.\nWe only want the closest k = 1 points from the origin, so the answer is just [[-2,2]].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[3,3],[5,-1],[-2,4]], k = 2\n<strong>Output:</strong> [[3,3],[-2,4]]\n<strong>Explanation:</strong> The answer [[-2,4],[3,3]] would also be accepted.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= points.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,3],[-2,2]]\n1\n[[3,3],[5,-1],[-2,4]]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Geometry",
          "slug": "geometry",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Quickselect",
          "slug": "quickselect",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1272",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8440,
      "dislikes": 309,
      "similarQuestions": "[{\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Words\", \"titleSlug\": \"top-k-frequent-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Nearest Point That Has the Same X or Y Coordinate\", \"titleSlug\": \"find-nearest-point-that-has-the-same-x-or-y-coordinate\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Rectangles to Cover Points\", \"titleSlug\": \"minimum-rectangles-to-cover-points\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486717,
      "commentCount": 81,
      "topLevelCommentCount": 43
    },
    "classAndMethodDefinition": "def kClosest(self, points, k):\n        return nsmallest(K, points, lambda (x, y): x * x + y * y)"
  },
  {
    "stat": {
      "question_id": 747,
      "question__article__live": true,
      "question__article__slug": "min-cost-climbing-stairs",
      "question__article__has_video_solution": false,
      "question__title": "Min Cost Climbing Stairs",
      "question__title_slug": "min-cost-climbing-stairs",
      "question__hide": false,
      "total_acs": 1259998,
      "total_submitted": 1903997,
      "frontend_question_id": 746,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/min-cost-climbing-stairs",
      "questionId": "747",
      "questionFrontendId": "746",
      "questionTitle": "Min Cost Climbing Stairs",
      "titleSlug": "min-cost-climbing-stairs",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>cost</code> where <code>cost[i]</code> is the cost of <code>i<sup>th</sup></code> step on a staircase. Once you pay the cost, you can either climb one or two steps.</p>\n\n<p>You can either start from the step with index <code>0</code>, or the step with index <code>1</code>.</p>\n\n<p>Return <em>the minimum cost to reach the top of the floor</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> cost = [10,<u>15</u>,20]\n<strong>Output:</strong> 15\n<strong>Explanation:</strong> You will start at index 1.\n- Pay 15 and climb two steps to reach the top.\nThe total cost is 15.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> cost = [<u>1</u>,100,<u>1</u>,1,<u>1</u>,100,<u>1</u>,<u>1</u>,100,<u>1</u>]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> You will start at index 0.\n- Pay 1 and climb two steps to reach index 2.\n- Pay 1 and climb two steps to reach index 4.\n- Pay 1 and climb two steps to reach index 6.\n- Pay 1 and climb one step to reach index 7.\n- Pay 1 and climb two steps to reach index 9.\n- Pay 1 and climb one step to reach the top.\nThe total cost is 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= cost.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= cost[i] &lt;= 999</code></li>\n</ul>\n",
      "exampleTestcases": "[10,15,20]\n[1,100,1,1,1,100,1,1,100,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "Build an array dp where dp[i] is the minimum cost to climb to the top starting from the ith staircase.",
        "Assuming we have n staircase labeled from 0 to n - 1 and assuming the top is n, then dp[n] = 0, marking that if you are at the top, the cost is 0.",
        "Now, looping from n - 1 to 0, the dp[i] = cost[i] + min(dp[i + 1], dp[i + 2]). The answer will be the minimum of dp[0] and dp[1]"
      ],
      "solution": {
        "id": "1137",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11488,
      "dislikes": 1775,
      "similarQuestions": "[{\"title\": \"Climbing Stairs\", \"titleSlug\": \"climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Number of Ways to Reach the K-th Stair\", \"titleSlug\": \"find-number-of-ways-to-reach-the-k-th-stair\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486459,
      "commentCount": 276,
      "topLevelCommentCount": 202
    },
    "classAndMethodDefinition": "def minCostClimbingStairs(self, cost: List[int]) -> int:\n        # identify what is changing from subproblems to subproblems: "
  },
  {
    "stat": {
      "question_id": 145,
      "question__article__live": true,
      "question__article__slug": "binary-tree-postorder-traversal",
      "question__article__has_video_solution": false,
      "question__title": "Binary Tree Postorder Traversal",
      "question__title_slug": "binary-tree-postorder-traversal",
      "question__hide": false,
      "total_acs": 1391812,
      "total_submitted": 1900271,
      "frontend_question_id": 145,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-tree-postorder-traversal",
      "questionId": "145",
      "questionFrontendId": "145",
      "questionTitle": "Binary Tree Postorder Traversal",
      "titleSlug": "binary-tree-postorder-traversal",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a&nbsp;binary tree, return <em>the postorder traversal of its nodes&#39; values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,null,2,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[3,2,1]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/screenshot-2024-08-29-202743.png\" style=\"width: 200px; height: 264px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,2,3,4,5,null,8,null,null,6,7,9]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[4,6,7,5,2,9,8,3,1]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/tree_2.png\" style=\"width: 350px; height: 286px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = []</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1]</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?",
      "exampleTestcases": "[1,null,2,3]\n[1,2,3,4,5,null,8,null,null,6,7,9]\n[]\n[1]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2414",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7159,
      "dislikes": 202,
      "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Postorder Traversal\", \"titleSlug\": \"n-ary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Fuel Cost to Report to the Capital\", \"titleSlug\": \"minimum-fuel-cost-to-report-to-the-capital\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485882,
      "commentCount": 147,
      "topLevelCommentCount": 94
    },
    "classAndMethodDefinition": "def postorderTraversal(self, root):\n            traversal, stack = [], [(root, False)]"
  },
  {
    "stat": {
      "question_id": 71,
      "question__article__live": true,
      "question__article__slug": "simplify-path",
      "question__article__has_video_solution": true,
      "question__title": "Simplify Path",
      "question__title_slug": "simplify-path",
      "question__hide": false,
      "total_acs": 832718,
      "total_submitted": 1896594,
      "frontend_question_id": 71,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/simplify-path",
      "questionId": "71",
      "questionFrontendId": "71",
      "questionTitle": "Simplify Path",
      "titleSlug": "simplify-path",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an absolute path for a Unix-style file system, which begins with a slash <code>&#39;/&#39;</code>, transform this path into its <strong>simplified canonical path</strong>.</p>\n\n<p>In Unix-style file system context, a single period <code>&#39;.&#39;</code> signifies the current directory, a double period <code>&quot;..&quot;</code> denotes moving up one directory level, and multiple slashes such as <code>&quot;//&quot;</code> are interpreted as a single slash. In this problem, treat sequences of periods not covered by the previous rules (like <code>&quot;...&quot;</code>) as valid names for files or directories.</p>\n\n<p>The simplified canonical path should adhere to the following rules:</p>\n\n<ul>\n\t<li>It must start with a single slash <code>&#39;/&#39;</code>.</li>\n\t<li>Directories within the path should be separated by only one slash <code>&#39;/&#39;</code>.</li>\n\t<li>It should not end with a slash <code>&#39;/&#39;</code>, unless it&#39;s the root directory.</li>\n\t<li>It should exclude any single or double periods used to denote current or parent directories.</li>\n</ul>\n\n<p>Return the new path.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/home/&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/home&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The trailing slash should be removed.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/home//foo/&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/home/foo&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Multiple consecutive slashes are replaced by a single one.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/home/user/Documents/../Pictures&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/home/user/Pictures&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>A double period <code>&quot;..&quot;</code> refers to the directory up a level.</p>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/../&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Going one level up from the root directory is not possible.</p>\n</div>\n\n<p><strong class=\"example\">Example 5:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/.../a/../b/c/../d/./&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/.../b/d&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><code>&quot;...&quot;</code> is a valid name for a directory in this problem.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= path.length &lt;= 3000</code></li>\n\t<li><code>path</code> consists of English letters, digits, period <code>&#39;.&#39;</code>, slash <code>&#39;/&#39;</code> or <code>&#39;_&#39;</code>.</li>\n\t<li><code>path</code> is a valid absolute Unix path.</li>\n</ul>\n",
      "exampleTestcases": "\"/home/\"\n\"/home//foo/\"\n\"/home/user/Documents/../Pictures\"\n\"/../\"\n\"/.../a/../b/c/../d/./\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "873",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5660,
      "dislikes": 1293,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485808,
      "commentCount": 208,
      "topLevelCommentCount": 125
    },
    "classAndMethodDefinition": "def simplifyPath(self, path):\n        stack = []"
  },
  {
    "stat": {
      "question_id": 65,
      "question__article__live": true,
      "question__article__slug": "valid-number",
      "question__article__has_video_solution": false,
      "question__title": "Valid Number",
      "question__title_slug": "valid-number",
      "question__hide": false,
      "total_acs": 383877,
      "total_submitted": 1894589,
      "frontend_question_id": 65,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-number",
      "questionId": "65",
      "questionFrontendId": "65",
      "questionTitle": "Valid Number",
      "titleSlug": "valid-number",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, return whether <code>s</code> is a <strong>valid number</strong>.<br />\n<br />\nFor example, all the following are valid numbers: <code>&quot;2&quot;, &quot;0089&quot;, &quot;-0.1&quot;, &quot;+3.14&quot;, &quot;4.&quot;, &quot;-.9&quot;, &quot;2e10&quot;, &quot;-90E3&quot;, &quot;3e+7&quot;, &quot;+6e-1&quot;, &quot;53.5e93&quot;, &quot;-123.456e789&quot;</code>, while the following are not valid numbers: <code>&quot;abc&quot;, &quot;1a&quot;, &quot;1e&quot;, &quot;e3&quot;, &quot;99e2.5&quot;, &quot;--6&quot;, &quot;-+3&quot;, &quot;95a54e53&quot;</code>.</p>\n\n<p>Formally, a&nbsp;<strong>valid number</strong> is defined using one of the following definitions:</p>\n\n<ol>\n\t<li>An <strong>integer number</strong> followed by an <strong>optional exponent</strong>.</li>\n\t<li>A <strong>decimal number</strong> followed by an <strong>optional exponent</strong>.</li>\n</ol>\n\n<p>An <strong>integer number</strong> is defined with an <strong>optional sign</strong> <code>&#39;-&#39;</code> or <code>&#39;+&#39;</code> followed by <strong>digits</strong>.</p>\n\n<p>A <strong>decimal number</strong> is defined with an <strong>optional sign</strong> <code>&#39;-&#39;</code> or <code>&#39;+&#39;</code> followed by one of the following definitions:</p>\n\n<ol>\n\t<li><strong>Digits</strong> followed by a <strong>dot</strong> <code>&#39;.&#39;</code>.</li>\n\t<li><strong>Digits</strong> followed by a <strong>dot</strong> <code>&#39;.&#39;</code> followed by <strong>digits</strong>.</li>\n\t<li>A <strong>dot</strong> <code>&#39;.&#39;</code> followed by <strong>digits</strong>.</li>\n</ol>\n\n<p>An <strong>exponent</strong> is defined with an <strong>exponent notation</strong> <code>&#39;e&#39;</code> or <code>&#39;E&#39;</code> followed by an <strong>integer number</strong>.</p>\n\n<p>The <strong>digits</strong> are defined as one or more digits.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;0&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;e&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;.&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 20</code></li>\n\t<li><code>s</code> consists of only English letters (both uppercase and lowercase), digits (<code>0-9</code>), plus <code>&#39;+&#39;</code>, minus <code>&#39;-&#39;</code>, or dot <code>&#39;.&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"0\"\n\"e\"\n\".\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1133",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1271,
      "dislikes": 2021,
      "similarQuestions": "[{\"title\": \"String to Integer (atoi)\", \"titleSlug\": \"string-to-integer-atoi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485802,
      "commentCount": 170,
      "topLevelCommentCount": 140
    },
    "classAndMethodDefinition": "def isNumber(self, s):\n"
  },
  {
    "stat": {
      "question_id": 212,
      "question__article__live": true,
      "question__article__slug": "word-search-ii",
      "question__article__has_video_solution": true,
      "question__title": "Word Search II",
      "question__title_slug": "word-search-ii",
      "question__hide": false,
      "total_acs": 692170,
      "total_submitted": 1894402,
      "frontend_question_id": 212,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/word-search-ii",
      "questionId": "212",
      "questionFrontendId": "212",
      "questionTitle": "Word Search II",
      "titleSlug": "word-search-ii",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> <code>board</code>&nbsp;of characters and a list of strings <code>words</code>, return <em>all words on the board</em>.</p>\n\n<p>Each word must be constructed from letters of sequentially adjacent cells, where <strong>adjacent cells</strong> are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/07/search1.jpg\" style=\"width: 322px; height: 322px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;o&quot;,&quot;a&quot;,&quot;a&quot;,&quot;n&quot;],[&quot;e&quot;,&quot;t&quot;,&quot;a&quot;,&quot;e&quot;],[&quot;i&quot;,&quot;h&quot;,&quot;k&quot;,&quot;r&quot;],[&quot;i&quot;,&quot;f&quot;,&quot;l&quot;,&quot;v&quot;]], words = [&quot;oath&quot;,&quot;pea&quot;,&quot;eat&quot;,&quot;rain&quot;]\n<strong>Output:</strong> [&quot;eat&quot;,&quot;oath&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/07/search2.jpg\" style=\"width: 162px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;a&quot;,&quot;b&quot;],[&quot;c&quot;,&quot;d&quot;]], words = [&quot;abcb&quot;]\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == board.length</code></li>\n\t<li><code>n == board[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 12</code></li>\n\t<li><code>board[i][j]</code> is a lowercase English letter.</li>\n\t<li><code>1 &lt;= words.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 10</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n\t<li>All the strings of <code>words</code> are unique.</li>\n</ul>\n",
      "exampleTestcases": "[[\"o\",\"a\",\"a\",\"n\"],[\"e\",\"t\",\"a\",\"e\"],[\"i\",\"h\",\"k\",\"r\"],[\"i\",\"f\",\"l\",\"v\"]]\n[\"oath\",\"pea\",\"eat\",\"rain\"]\n[[\"a\",\"b\"],[\"c\",\"d\"]]\n[\"abcb\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "You would need to optimize your backtracking to pass the larger test. Could you stop backtracking earlier?",
        "If the current candidate does not exist in all words&#39; prefix, you could stop backtracking immediately. What kind of data structure could answer such query efficiently? Does a hash table work? Why or why not? How about a Trie? If you would like to learn how to implement a basic trie, please work on this problem: <a href=\"https://leetcode.com/problems/implement-trie-prefix-tree/\">Implement Trie (Prefix Tree)</a> first."
      ],
      "solution": {
        "id": "772",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9476,
      "dislikes": 467,
      "similarQuestions": "[{\"title\": \"Word Search\", \"titleSlug\": \"word-search\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Paths III\", \"titleSlug\": \"unique-paths-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Encrypt and Decrypt Strings\", \"titleSlug\": \"encrypt-and-decrypt-strings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485949,
      "commentCount": 162,
      "topLevelCommentCount": 92
    },
    "classAndMethodDefinition": "def __init__(self):\n            self.children = collections.defaultdict(TrieNode)"
  },
  {
    "stat": {
      "question_id": 326,
      "question__article__live": true,
      "question__article__slug": "power-of-three",
      "question__article__has_video_solution": false,
      "question__title": "Power of Three",
      "question__title_slug": "power-of-three",
      "question__hide": false,
      "total_acs": 883053,
      "total_submitted": 1880047,
      "frontend_question_id": 326,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/power-of-three",
      "questionId": "326",
      "questionFrontendId": "326",
      "questionTitle": "Power of Three",
      "titleSlug": "power-of-three",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em><code>true</code> if it is a power of three. Otherwise, return <code>false</code></em>.</p>\n\n<p>An integer <code>n</code> is a power of three, if there exists an integer <code>x</code> such that <code>n == 3<sup>x</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 27\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 27 = 3<sup>3</sup>\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no x where 3<sup>x</sup> = 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = -1\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no x where 3<sup>x</sup> = (-1).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it without loops/recursion?",
      "exampleTestcases": "27\n0\n-1",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "45",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3111,
      "dislikes": 278,
      "similarQuestions": "[{\"title\": \"Power of Two\", \"titleSlug\": \"power-of-two\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Four\", \"titleSlug\": \"power-of-four\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Check if Number is a Sum of Powers of Three\", \"titleSlug\": \"check-if-number-is-a-sum-of-powers-of-three\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486063,
      "commentCount": 107,
      "topLevelCommentCount": 54
    },
    "classAndMethodDefinition": "def isPowerOfThree(self, n: int) -> bool:\n        return (n > 0) and 1162261467 % n == 0"
  },
  {
    "stat": {
      "question_id": 572,
      "question__article__live": true,
      "question__article__slug": "subtree-of-another-tree",
      "question__article__has_video_solution": false,
      "question__title": "Subtree of Another Tree",
      "question__title_slug": "subtree-of-another-tree",
      "question__hide": false,
      "total_acs": 911466,
      "total_submitted": 1877211,
      "frontend_question_id": 572,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/subtree-of-another-tree",
      "questionId": "572",
      "questionFrontendId": "572",
      "questionTitle": "Subtree of Another Tree",
      "titleSlug": "subtree-of-another-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the roots of two binary trees <code>root</code> and <code>subRoot</code>, return <code>true</code> if there is a subtree of <code>root</code> with the same structure and node values of<code> subRoot</code> and <code>false</code> otherwise.</p>\n\n<p>A subtree of a binary tree <code>tree</code> is a tree that consists of a node in <code>tree</code> and all of this node&#39;s descendants. The tree <code>tree</code> could also be considered as a subtree of itself.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/28/subtree1-tree.jpg\" style=\"width: 532px; height: 400px;\" />\n<pre>\n<strong>Input:</strong> root = [3,4,5,1,2], subRoot = [4,1,2]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/28/subtree2-tree.jpg\" style=\"width: 502px; height: 458px;\" />\n<pre>\n<strong>Input:</strong> root = [3,4,5,1,2,null,null,null,null,0], subRoot = [4,1,2]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the <code>root</code> tree is in the range <code>[1, 2000]</code>.</li>\n\t<li>The number of nodes in the <code>subRoot</code> tree is in the range <code>[1, 1000]</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= root.val &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= subRoot.val &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,4,5,1,2]\n[4,1,2]\n[3,4,5,1,2,null,null,null,null,0]\n[4,1,2]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "String Matching",
          "slug": "string-matching",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        },
        {
          "name": "Hash Function",
          "slug": "hash-function",
          "translatedName": null
        }
      ],
      "hints": [
        "Which approach is better here- recursive or iterative?",
        "If recursive approach is better, can you write recursive function with its parameters?",
        "Two trees <b>s</b> and <b>t</b> are said to be identical if their root values are same and their left and right subtrees are identical. Can you write this in form of recursive formulae?",
        "Recursive formulae can be: \r\nisIdentical(s,t)= s.val==t.val AND isIdentical(s.left,t.left) AND isIdentical(s.right,t.right)"
      ],
      "solution": {
        "id": "1577",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8257,
      "dislikes": 520,
      "similarQuestions": "[{\"title\": \"Count Univalue Subtrees\", \"titleSlug\": \"count-univalue-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Most Frequent Subtree Sum\", \"titleSlug\": \"most-frequent-subtree-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486299,
      "commentCount": 139,
      "topLevelCommentCount": 93
    },
    "classAndMethodDefinition": "def isSubtree(self, s: TreeNode, t: TreeNode) -> bool:\n        if not s: "
  },
  {
    "stat": {
      "question_id": 80,
      "question__article__live": true,
      "question__article__slug": "remove-duplicates-from-sorted-array-ii",
      "question__article__has_video_solution": false,
      "question__title": "Remove Duplicates from Sorted Array II",
      "question__title_slug": "remove-duplicates-from-sorted-array-ii",
      "question__hide": false,
      "total_acs": 1124142,
      "total_submitted": 1876664,
      "frontend_question_id": 80,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii",
      "questionId": "80",
      "questionFrontendId": "80",
      "questionTitle": "Remove Duplicates from Sorted Array II",
      "titleSlug": "remove-duplicates-from-sorted-array-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> sorted in <strong>non-decreasing order</strong>, remove some duplicates <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a> such that each unique element appears <strong>at most twice</strong>. The <strong>relative order</strong> of the elements should be kept the <strong>same</strong>.</p>\n\n<p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the <strong>first part</strong> of the array <code>nums</code>. More formally, if there are <code>k</code> elements after removing the duplicates, then the first <code>k</code> elements of <code>nums</code>&nbsp;should hold the final result. It does not matter what you leave beyond the first&nbsp;<code>k</code>&nbsp;elements.</p>\n\n<p>Return <code>k</code><em> after placing the final result in the first </em><code>k</code><em> slots of </em><code>nums</code>.</p>\n\n<p>Do <strong>not</strong> allocate extra space for another array. You must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> with O(1) extra memory.</p>\n\n<p><strong>Custom Judge:</strong></p>\n\n<p>The judge will test your solution with the following code:</p>\n\n<pre>\nint[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\n\nint k = removeDuplicates(nums); // Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i &lt; k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n</pre>\n\n<p>If all assertions pass, then your solution will be <strong>accepted</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,2,2,3]\n<strong>Output:</strong> 5, nums = [1,1,2,2,3,_]\n<strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,1,1,1,1,2,3,3]\n<strong>Output:</strong> 7, nums = [0,0,1,1,2,3,3,_,_]\n<strong>Explanation:</strong> Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>nums</code> is sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n",
      "exampleTestcases": "[1,1,1,2,2,3]\n[0,0,1,1,1,1,2,3,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "809",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7029,
      "dislikes": 1355,
      "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted Array\", \"titleSlug\": \"remove-duplicates-from-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485817,
      "commentCount": 179,
      "topLevelCommentCount": 117
    },
    "classAndMethodDefinition": "class Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 237,
      "question__article__live": true,
      "question__article__slug": "delete-node-in-a-linked-list",
      "question__article__has_video_solution": false,
      "question__title": "Delete Node in a Linked List",
      "question__title_slug": "delete-node-in-a-linked-list",
      "question__hide": false,
      "total_acs": 1490435,
      "total_submitted": 1848669,
      "frontend_question_id": 237,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/delete-node-in-a-linked-list",
      "questionId": "237",
      "questionFrontendId": "237",
      "questionTitle": "Delete Node in a Linked List",
      "titleSlug": "delete-node-in-a-linked-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is a singly-linked list <code>head</code> and we want to delete a node <code>node</code> in it.</p>\n\n<p>You are given the node to be deleted <code>node</code>. You will <strong>not be given access</strong> to the first node of <code>head</code>.</p>\n\n<p>All the values of the linked list are <strong>unique</strong>, and it is guaranteed that the given node <code>node</code> is not the last node in the linked list.</p>\n\n<p>Delete the given node. Note that by deleting the node, we do not mean removing it from memory. We mean:</p>\n\n<ul>\n\t<li>The value of the given node should not exist in the linked list.</li>\n\t<li>The number of nodes in the linked list should decrease by one.</li>\n\t<li>All the values before <code>node</code> should be in the same order.</li>\n\t<li>All the values after <code>node</code> should be in the same order.</li>\n</ul>\n\n<p><strong>Custom testing:</strong></p>\n\n<ul>\n\t<li>For the input, you should provide the entire linked list <code>head</code> and the node to be given <code>node</code>. <code>node</code> should not be the last node of the list and should be an actual node in the list.</li>\n\t<li>We will build the linked list and pass the node to your function.</li>\n\t<li>The output will be the entire list after calling your function.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/01/node1.jpg\" style=\"width: 400px; height: 286px;\" />\n<pre>\n<strong>Input:</strong> head = [4,5,1,9], node = 5\n<strong>Output:</strong> [4,1,9]\n<strong>Explanation: </strong>You are given the second node with value 5, the linked list should become 4 -&gt; 1 -&gt; 9 after calling your function.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/01/node2.jpg\" style=\"width: 400px; height: 315px;\" />\n<pre>\n<strong>Input:</strong> head = [4,5,1,9], node = 1\n<strong>Output:</strong> [4,5,9]\n<strong>Explanation: </strong>You are given the third node with value 1, the linked list should become 4 -&gt; 5 -&gt; 9 after calling your function.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the given list is in the range <code>[2, 1000]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n\t<li>The value of each node in the list is <strong>unique</strong>.</li>\n\t<li>The <code>node</code> to be deleted is <strong>in the list</strong> and is <strong>not a tail</strong> node.</li>\n</ul>\n",
      "exampleTestcases": "[4,5,1,9]\n5\n[4,5,1,9]\n1",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2290",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5164,
      "dislikes": 1586,
      "similarQuestions": "[{\"title\": \"Remove Linked List Elements\", \"titleSlug\": \"remove-linked-list-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove Nodes From Linked List\", \"titleSlug\": \"remove-nodes-from-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Nodes From Linked List Present in Array\", \"titleSlug\": \"delete-nodes-from-linked-list-present-in-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485974,
      "commentCount": 548,
      "topLevelCommentCount": 380
    },
    "classAndMethodDefinition": "def __init__(self, x):\n#         self.val = x"
  },
  {
    "stat": {
      "question_id": 240,
      "question__article__live": true,
      "question__article__slug": "search-a-2d-matrix-ii",
      "question__article__has_video_solution": false,
      "question__title": "Search a 2D Matrix II",
      "question__title_slug": "search-a-2d-matrix-ii",
      "question__hide": false,
      "total_acs": 986811,
      "total_submitted": 1847644,
      "frontend_question_id": 240,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/search-a-2d-matrix-ii",
      "questionId": "240",
      "questionFrontendId": "240",
      "questionTitle": "Search a 2D Matrix II",
      "titleSlug": "search-a-2d-matrix-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Write an efficient algorithm that searches for a value <code>target</code> in an <code>m x n</code> integer matrix <code>matrix</code>. This matrix has the following properties:</p>\n\n<ul>\n\t<li>Integers in each row are sorted in ascending from left to right.</li>\n\t<li>Integers in each column are sorted in ascending from top to bottom.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/24/searchgrid2.jpg\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/24/searchgrid.jpg\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= n, m &lt;= 300</code></li>\n\t<li><code>-10<sup>9</sup> &lt;= matrix[i][j] &lt;= 10<sup>9</sup></code></li>\n\t<li>All the integers in each row are <strong>sorted</strong> in ascending order.</li>\n\t<li>All the integers in each column are <strong>sorted</strong> in ascending order.</li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]]\n5\n[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]]\n20",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "341",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11989,
      "dislikes": 207,
      "similarQuestions": "[{\"title\": \"Search a 2D Matrix\", \"titleSlug\": \"search-a-2d-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485977,
      "commentCount": 93,
      "topLevelCommentCount": 63
    },
    "classAndMethodDefinition": "def searchMatrix(self, mat: List[List[int]], target: int) -> bool:\n        "
  },
  {
    "stat": {
      "question_id": 290,
      "question__article__live": true,
      "question__article__slug": "word-pattern",
      "question__article__has_video_solution": false,
      "question__title": "Word Pattern",
      "question__title_slug": "word-pattern",
      "question__hide": false,
      "total_acs": 779241,
      "total_submitted": 1840062,
      "frontend_question_id": 290,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/word-pattern",
      "questionId": "290",
      "questionFrontendId": "290",
      "questionTitle": "Word Pattern",
      "titleSlug": "word-pattern",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a <code>pattern</code> and a string <code>s</code>, find if <code>s</code>&nbsp;follows the same pattern.</p>\n\n<p>Here <b>follow</b> means a full match, such that there is a bijection between a letter in <code>pattern</code> and a <b>non-empty</b> word in <code>s</code>. Specifically:</p>\n\n<ul>\n\t<li>Each letter in <code>pattern</code> maps to <strong>exactly</strong> one unique word in <code>s</code>.</li>\n\t<li>Each unique word in <code>s</code> maps to <strong>exactly</strong> one letter in <code>pattern</code>.</li>\n\t<li>No two letters map to the same word, and no two words map to the same letter.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">pattern = &quot;abba&quot;, s = &quot;dog cat cat dog&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The bijection can be established as:</p>\n\n<ul>\n\t<li><code>&#39;a&#39;</code> maps to <code>&quot;dog&quot;</code>.</li>\n\t<li><code>&#39;b&#39;</code> maps to <code>&quot;cat&quot;</code>.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">pattern = &quot;abba&quot;, s = &quot;dog cat cat fish&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">pattern = &quot;aaaa&quot;, s = &quot;dog cat cat dog&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= pattern.length &lt;= 300</code></li>\n\t<li><code>pattern</code> contains only lower-case English letters.</li>\n\t<li><code>1 &lt;= s.length &lt;= 3000</code></li>\n\t<li><code>s</code> contains only lowercase English letters and spaces <code>&#39; &#39;</code>.</li>\n\t<li><code>s</code> <strong>does not contain</strong> any leading or trailing spaces.</li>\n\t<li>All the words in <code>s</code> are separated by a <strong>single space</strong>.</li>\n</ul>\n",
      "exampleTestcases": "\"abba\"\n\"dog cat cat dog\"\n\"abba\"\n\"dog cat cat fish\"\n\"aaaa\"\n\"dog cat cat dog\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "970",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7300,
      "dislikes": 1039,
      "similarQuestions": "[{\"title\": \"Isomorphic Strings\", \"titleSlug\": \"isomorphic-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Word Pattern II\", \"titleSlug\": \"word-pattern-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486027,
      "commentCount": 310,
      "topLevelCommentCount": 209
    },
    "classAndMethodDefinition": "def wordPattern(self, pattern, str):\n        s = pattern"
  },
  {
    "stat": {
      "question_id": 412,
      "question__article__live": true,
      "question__article__slug": "fizz-buzz",
      "question__article__has_video_solution": true,
      "question__title": "Fizz Buzz",
      "question__title_slug": "fizz-buzz",
      "question__hide": false,
      "total_acs": 1313391,
      "total_submitted": 1802533,
      "frontend_question_id": 412,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/fizz-buzz",
      "questionId": "412",
      "questionFrontendId": "412",
      "questionTitle": "Fizz Buzz",
      "titleSlug": "fizz-buzz",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em>a string array </em><code>answer</code><em> (<strong>1-indexed</strong>) where</em>:</p>\n\n<ul>\n\t<li><code>answer[i] == &quot;FizzBuzz&quot;</code> if <code>i</code> is divisible by <code>3</code> and <code>5</code>.</li>\n\t<li><code>answer[i] == &quot;Fizz&quot;</code> if <code>i</code> is divisible by <code>3</code>.</li>\n\t<li><code>answer[i] == &quot;Buzz&quot;</code> if <code>i</code> is divisible by <code>5</code>.</li>\n\t<li><code>answer[i] == i</code> (as a string) if none of the above conditions are true.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [\"1\",\"2\",\"Fizz\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 5\n<strong>Output:</strong> [\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\"]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 15\n<strong>Output:</strong> [\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\",\"Fizz\",\"7\",\"8\",\"Fizz\",\"Buzz\",\"11\",\"Fizz\",\"13\",\"14\",\"FizzBuzz\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "3\n5\n15",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "569",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2796,
      "dislikes": 383,
      "similarQuestions": "[{\"title\": \"Fizz Buzz Multithreaded\", \"titleSlug\": \"fizz-buzz-multithreaded\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Categorize Box According to Criteria\", \"titleSlug\": \"categorize-box-according-to-criteria\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486149,
      "commentCount": 112,
      "topLevelCommentCount": 76
    },
    "classAndMethodDefinition": "class Solution:\n    def fizzBuzz(self, n: int) -> List[str]:"
  },
  {
    "stat": {
      "question_id": 380,
      "question__article__live": true,
      "question__article__slug": "insert-delete-getrandom-o1",
      "question__article__has_video_solution": false,
      "question__title": "Insert Delete GetRandom O(1)",
      "question__title_slug": "insert-delete-getrandom-o1",
      "question__hide": false,
      "total_acs": 976500,
      "total_submitted": 1788235,
      "frontend_question_id": 380,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
      "questionId": "380",
      "questionFrontendId": "380",
      "questionTitle": "Insert Delete GetRandom O(1)",
      "titleSlug": "insert-delete-getrandom-o1",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Implement the <code>RandomizedSet</code> class:</p>\n\n<ul>\n\t<li><code>RandomizedSet()</code> Initializes the <code>RandomizedSet</code> object.</li>\n\t<li><code>bool insert(int val)</code> Inserts an item <code>val</code> into the set if not present. Returns <code>true</code> if the item was not present, <code>false</code> otherwise.</li>\n\t<li><code>bool remove(int val)</code> Removes an item <code>val</code> from the set if present. Returns <code>true</code> if the item was present, <code>false</code> otherwise.</li>\n\t<li><code>int getRandom()</code> Returns a random element from the current set of elements (it&#39;s guaranteed that at least one element exists when this method is called). Each element must have the <b>same probability</b> of being returned.</li>\n</ul>\n\n<p>You must implement the functions of the class such that each function works in&nbsp;<strong>average</strong>&nbsp;<code>O(1)</code>&nbsp;time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;RandomizedSet&quot;, &quot;insert&quot;, &quot;remove&quot;, &quot;insert&quot;, &quot;getRandom&quot;, &quot;remove&quot;, &quot;insert&quot;, &quot;getRandom&quot;]\n[[], [1], [2], [2], [], [1], [2], []]\n<strong>Output</strong>\n[null, true, false, true, 2, true, false, 2]\n\n<strong>Explanation</strong>\nRandomizedSet randomizedSet = new RandomizedSet();\nrandomizedSet.insert(1); // Inserts 1 to the set. Returns true as 1 was inserted successfully.\nrandomizedSet.remove(2); // Returns false as 2 does not exist in the set.\nrandomizedSet.insert(2); // Inserts 2 to the set, returns true. Set now contains [1,2].\nrandomizedSet.getRandom(); // getRandom() should return either 1 or 2 randomly.\nrandomizedSet.remove(1); // Removes 1 from the set, returns true. Set now contains [2].\nrandomizedSet.insert(2); // 2 was already in the set, so return false.\nrandomizedSet.getRandom(); // Since 2 is the only number in the set, getRandom() will always return 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= val &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>At most <code>2 *&nbsp;</code><code>10<sup>5</sup></code> calls will be made to <code>insert</code>, <code>remove</code>, and <code>getRandom</code>.</li>\n\t<li>There will be <strong>at least one</strong> element in the data structure when <code>getRandom</code> is called.</li>\n</ul>\n",
      "exampleTestcases": "[\"RandomizedSet\",\"insert\",\"remove\",\"insert\",\"getRandom\",\"remove\",\"insert\",\"getRandom\"]\n[[],[1],[2],[2],[],[1],[2],[]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Randomized",
          "slug": "randomized",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "810",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9268,
      "dislikes": 631,
      "similarQuestions": "[{\"title\": \"Insert Delete GetRandom O(1) - Duplicates allowed\", \"titleSlug\": \"insert-delete-getrandom-o1-duplicates-allowed\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486117,
      "commentCount": 304,
      "topLevelCommentCount": 156
    },
    "classAndMethodDefinition": "def __init__(self):\n        self.data_map = {} # dictionary, aka map, aka hashtable, aka hashmap"
  },
  {
    "stat": {
      "question_id": 345,
      "question__article__live": true,
      "question__article__slug": "reverse-vowels-of-a-string",
      "question__article__has_video_solution": true,
      "question__title": "Reverse Vowels of a String",
      "question__title_slug": "reverse-vowels-of-a-string",
      "question__hide": false,
      "total_acs": 965709,
      "total_submitted": 1785304,
      "frontend_question_id": 345,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-vowels-of-a-string",
      "questionId": "345",
      "questionFrontendId": "345",
      "questionTitle": "Reverse Vowels of a String",
      "titleSlug": "reverse-vowels-of-a-string",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, reverse only all the vowels in the string and return it.</p>\n\n<p>The vowels are <code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, and <code>&#39;u&#39;</code>, and they can appear in both lower and upper cases, more than once.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"hello\"\n<strong>Output:</strong> \"holle\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"leetcode\"\n<strong>Output:</strong> \"leotcede\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 3 * 10<sup>5</sup></code></li>\n\t<li><code>s</code> consist of <strong>printable ASCII</strong> characters.</li>\n</ul>\n",
      "exampleTestcases": "\"hello\"\n\"leetcode\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1484",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4621,
      "dislikes": 2795,
      "similarQuestions": "[{\"title\": \"Reverse String\", \"titleSlug\": \"reverse-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove Vowels from a String\", \"titleSlug\": \"remove-vowels-from-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Faulty Keyboard\", \"titleSlug\": \"faulty-keyboard\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort Vowels in a String\", \"titleSlug\": \"sort-vowels-in-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486082,
      "commentCount": 209,
      "topLevelCommentCount": 134
    },
    "classAndMethodDefinition": "class Solution(object):\n    def reverseVowels(self, s):"
  },
  {
    "stat": {
      "question_id": 438,
      "question__article__live": true,
      "question__article__slug": "find-all-anagrams-in-a-string",
      "question__article__has_video_solution": false,
      "question__title": "Find All Anagrams in a String",
      "question__title_slug": "find-all-anagrams-in-a-string",
      "question__hide": false,
      "total_acs": 908954,
      "total_submitted": 1774811,
      "frontend_question_id": 438,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-all-anagrams-in-a-string",
      "questionId": "438",
      "questionFrontendId": "438",
      "questionTitle": "Find All Anagrams in a String",
      "titleSlug": "find-all-anagrams-in-a-string",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>s</code> and <code>p</code>, return <em>an array of all the start indices of </em><code>p</code><em>&#39;s anagrams in </em><code>s</code>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cbaebabacd&quot;, p = &quot;abc&quot;\n<strong>Output:</strong> [0,6]\n<strong>Explanation:</strong>\nThe substring with start index = 0 is &quot;cba&quot;, which is an anagram of &quot;abc&quot;.\nThe substring with start index = 6 is &quot;bac&quot;, which is an anagram of &quot;abc&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abab&quot;, p = &quot;ab&quot;\n<strong>Output:</strong> [0,1,2]\n<strong>Explanation:</strong>\nThe substring with start index = 0 is &quot;ab&quot;, which is an anagram of &quot;ab&quot;.\nThe substring with start index = 1 is &quot;ba&quot;, which is an anagram of &quot;ab&quot;.\nThe substring with start index = 2 is &quot;ab&quot;, which is an anagram of &quot;ab&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, p.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> and <code>p</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"cbaebabacd\"\n\"abc\"\n\"abab\"\n\"ab\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "863",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12372,
      "dislikes": 342,
      "similarQuestions": "[{\"title\": \"Valid Anagram\", \"titleSlug\": \"valid-anagram\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Permutation in String\", \"titleSlug\": \"permutation-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486169,
      "commentCount": 155,
      "topLevelCommentCount": 107
    },
    "classAndMethodDefinition": "def findAnagrams(self, s: str, p: str) -> List[int]:\n        hm, res, pL, sL = defaultdict(int), [], len(p), len(s)"
  },
  {
    "stat": {
      "question_id": 143,
      "question__article__live": true,
      "question__article__slug": "reorder-list",
      "question__article__has_video_solution": false,
      "question__title": "Reorder List",
      "question__title_slug": "reorder-list",
      "question__hide": false,
      "total_acs": 1058962,
      "total_submitted": 1767799,
      "frontend_question_id": 143,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reorder-list",
      "questionId": "143",
      "questionFrontendId": "143",
      "questionTitle": "Reorder List",
      "titleSlug": "reorder-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given the head of a singly linked-list. The list can be represented as:</p>\n\n<pre>\nL<sub>0</sub> &rarr; L<sub>1</sub> &rarr; &hellip; &rarr; L<sub>n - 1</sub> &rarr; L<sub>n</sub>\n</pre>\n\n<p><em>Reorder the list to be on the following form:</em></p>\n\n<pre>\nL<sub>0</sub> &rarr; L<sub>n</sub> &rarr; L<sub>1</sub> &rarr; L<sub>n - 1</sub> &rarr; L<sub>2</sub> &rarr; L<sub>n - 2</sub> &rarr; &hellip;\n</pre>\n\n<p>You may not modify the values in the list&#39;s nodes. Only nodes themselves may be changed.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/04/reorder1linked-list.jpg\" style=\"width: 422px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4]\n<strong>Output:</strong> [1,4,2,3]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/09/reorder2-linked-list.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5]\n<strong>Output:</strong> [1,5,2,4,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[1, 5 * 10<sup>4</sup>]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4]\n[1,2,3,4,5]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "932",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11212,
      "dislikes": 412,
      "similarQuestions": "[{\"title\": \"Delete the Middle Node of a Linked List\", \"titleSlug\": \"delete-the-middle-node-of-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Take K of Each Character From Left and Right\", \"titleSlug\": \"take-k-of-each-character-from-left-and-right\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485880,
      "commentCount": 249,
      "topLevelCommentCount": 157
    },
    "classAndMethodDefinition": "def _splitList(head):\n        fast = head"
  },
  {
    "stat": {
      "question_id": 108,
      "question__article__live": true,
      "question__article__slug": "convert-sorted-array-to-bst",
      "question__article__has_video_solution": true,
      "question__title": "Convert Sorted Array to Binary Search Tree",
      "question__title_slug": "convert-sorted-array-to-binary-search-tree",
      "question__hide": false,
      "total_acs": 1277718,
      "total_submitted": 1762840,
      "frontend_question_id": 108,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",
      "questionId": "108",
      "questionFrontendId": "108",
      "questionTitle": "Convert Sorted Array to Binary Search Tree",
      "titleSlug": "convert-sorted-array-to-binary-search-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> where the elements are sorted in <strong>ascending order</strong>, convert <em>it to a </em><span data-keyword=\"height-balanced\"><strong><em>height-balanced</em></strong></span> <em>binary search tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/btree1.jpg\" style=\"width: 302px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> nums = [-10,-3,0,5,9]\n<strong>Output:</strong> [0,-3,9,-10,null,5]\n<strong>Explanation:</strong> [0,-10,5,null,-3,null,9] is also accepted:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/btree2.jpg\" style=\"width: 302px; height: 222px;\" />\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/btree.jpg\" style=\"width: 342px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> nums = [1,3]\n<strong>Output:</strong> [3,1]\n<strong>Explanation:</strong> [1,null,3] and [3,1] are both height-balanced BSTs.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>nums</code> is sorted in a <strong>strictly increasing</strong> order.</li>\n</ul>\n",
      "exampleTestcases": "[-10,-3,0,5,9]\n[1,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "815",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11032,
      "dislikes": 567,
      "similarQuestions": "[{\"title\": \"Convert Sorted List to Binary Search Tree\", \"titleSlug\": \"convert-sorted-list-to-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485845,
      "commentCount": 138,
      "topLevelCommentCount": 90
    },
    "classAndMethodDefinition": "def __init__(self, x):\n    #         self.val = x"
  },
  {
    "stat": {
      "question_id": 38,
      "question__article__live": true,
      "question__article__slug": "count-and-say",
      "question__article__has_video_solution": false,
      "question__title": "Count and Say",
      "question__title_slug": "count-and-say",
      "question__hide": false,
      "total_acs": 981610,
      "total_submitted": 1745813,
      "frontend_question_id": 38,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/count-and-say",
      "questionId": "38",
      "questionFrontendId": "38",
      "questionTitle": "Count and Say",
      "titleSlug": "count-and-say",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>The <strong>count-and-say</strong> sequence is a sequence of digit strings defined by the recursive formula:</p>\n\n<ul>\n\t<li><code>countAndSay(1) = &quot;1&quot;</code></li>\n\t<li><code>countAndSay(n)</code> is the run-length encoding of <code>countAndSay(n - 1)</code>.</li>\n</ul>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Run-length_encoding\" target=\"_blank\">Run-length encoding</a> (RLE) is a string compression method that works by replacing consecutive identical characters (repeated 2 or more times) with the concatenation of the character and the number marking the count of the characters (length of the run). For example, to compress the string <code>&quot;3322251&quot;</code> we replace <code>&quot;33&quot;</code> with <code>&quot;23&quot;</code>, replace <code>&quot;222&quot;</code> with <code>&quot;32&quot;</code>, replace <code>&quot;5&quot;</code> with <code>&quot;15&quot;</code> and replace <code>&quot;1&quot;</code> with <code>&quot;11&quot;</code>. Thus the compressed string becomes <code>&quot;23321511&quot;</code>.</p>\n\n<p>Given a positive integer <code>n</code>, return <em>the </em><code>n<sup>th</sup></code><em> element of the <strong>count-and-say</strong> sequence</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">n = 4</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;1211&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<pre>\ncountAndSay(1) = &quot;1&quot;\ncountAndSay(2) = RLE of &quot;1&quot; = &quot;11&quot;\ncountAndSay(3) = RLE of &quot;11&quot; = &quot;21&quot;\ncountAndSay(4) = RLE of &quot;21&quot; = &quot;1211&quot;\n</pre>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">n = 1</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;1&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>This is the base case.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 30</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it iteratively?",
      "exampleTestcases": "1\n4",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "Create a helper function that maps an integer to pairs of its digits and their frequencies. For example, if you call this function with \"223314444411\", then it maps it to an array of pairs [[2,2], [3,2], [1,1], [4,5], [1, 2]].",
        "Create another helper function that takes the array of pairs and creates a new integer. For example, if you call this function with [[2,2], [3,2], [1,1], [4,5], [1, 2]], it should create \"22\"+\"23\"+\"11\"+\"54\"+\"21\" = \"2223115421\".",
        "Now, with the two helper functions, you can start with \"1\" and call the two functions alternatively n-1 times. The answer is the last integer you will obtain."
      ],
      "solution": {
        "id": "1485",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4054,
      "dislikes": 8381,
      "similarQuestions": "[{\"title\": \"Encode and Decode Strings\", \"titleSlug\": \"encode-and-decode-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"String Compression\", \"titleSlug\": \"string-compression\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485775,
      "commentCount": 216,
      "topLevelCommentCount": 138
    },
    "classAndMethodDefinition": "def countAndSay(self, n):\n        s = '1'"
  },
  {
    "stat": {
      "question_id": 90,
      "question__article__live": true,
      "question__article__slug": "subsets-ii",
      "question__article__has_video_solution": false,
      "question__title": "Subsets II",
      "question__title_slug": "subsets-ii",
      "question__hide": false,
      "total_acs": 1006023,
      "total_submitted": 1735150,
      "frontend_question_id": 90,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/subsets-ii",
      "questionId": "90",
      "questionFrontendId": "90",
      "questionTitle": "Subsets II",
      "titleSlug": "subsets-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> that may contain duplicates, return <em>all possible</em> <span data-keyword=\"subset\"><em>subsets</em></span><em> (the power set)</em>.</p>\n\n<p>The solution set <strong>must not</strong> contain duplicate subsets. Return the solution in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,2]\n<strong>Output:</strong> [[],[1],[1,2],[1,2,2],[2],[2,2]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [[],[0]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10</code></li>\n\t<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,2]\n[0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1152",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9836,
      "dislikes": 326,
      "similarQuestions": "[{\"title\": \"Subsets\", \"titleSlug\": \"subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Array Given Subset Sums\", \"titleSlug\": \"find-array-given-subset-sums\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485827,
      "commentCount": 111,
      "topLevelCommentCount": 79
    },
    "classAndMethodDefinition": "def subsetsWithDup(self, S):\n            res = [[]]"
  },
  {
    "stat": {
      "question_id": 874,
      "question__article__live": true,
      "question__article__slug": "backspace-string-compare",
      "question__article__has_video_solution": false,
      "question__title": "Backspace String Compare",
      "question__title_slug": "backspace-string-compare",
      "question__hide": false,
      "total_acs": 854675,
      "total_submitted": 1735047,
      "frontend_question_id": 844,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/backspace-string-compare",
      "questionId": "874",
      "questionFrontendId": "844",
      "questionTitle": "Backspace String Compare",
      "titleSlug": "backspace-string-compare",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code> <em>if they are equal when both are typed into empty text editors</em>. <code>&#39;#&#39;</code> means a backspace character.</p>\n\n<p>Note that after backspacing an empty text, the text will continue empty.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ab#c&quot;, t = &quot;ad#c&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Both s and t become &quot;ac&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ab##&quot;, t = &quot;c#d#&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Both s and t become &quot;&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a#c&quot;, t = &quot;b&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> s becomes &quot;c&quot; while t becomes &quot;b&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code><span>1 &lt;= s.length, t.length &lt;= 200</span></code></li>\n\t<li><span><code>s</code> and <code>t</code> only contain lowercase letters and <code>&#39;#&#39;</code> characters.</span></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Can you solve it in <code>O(n)</code> time and <code>O(1)</code> space?</p>\n",
      "exampleTestcases": "\"ab#c\"\n\"ad#c\"\n\"ab##\"\n\"c#d#\"\n\"a#c\"\n\"b\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "476",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7551,
      "dislikes": 355,
      "similarQuestions": "[{\"title\": \"Crawler Log Folder\", \"titleSlug\": \"crawler-log-folder\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Removing Stars From a String\", \"titleSlug\": \"removing-stars-from-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486580,
      "commentCount": 141,
      "topLevelCommentCount": 82
    },
    "classAndMethodDefinition": "class Solution:\n    def backspaceCompare(self, s: str, t: str) -> bool:"
  },
  {
    "stat": {
      "question_id": 1036,
      "question__article__live": true,
      "question__article__slug": "rotting-oranges",
      "question__article__has_video_solution": false,
      "question__title": "Rotting Oranges",
      "question__title_slug": "rotting-oranges",
      "question__hide": false,
      "total_acs": 950398,
      "total_submitted": 1732510,
      "frontend_question_id": 994,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/rotting-oranges",
      "questionId": "1036",
      "questionFrontendId": "994",
      "questionTitle": "Rotting Oranges",
      "titleSlug": "rotting-oranges",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>m x n</code> <code>grid</code> where each cell can have one of three values:</p>\n\n<ul>\n\t<li><code>0</code> representing an empty cell,</li>\n\t<li><code>1</code> representing a fresh orange, or</li>\n\t<li><code>2</code> representing a rotten orange.</li>\n</ul>\n\n<p>Every minute, any fresh orange that is <strong>4-directionally adjacent</strong> to a rotten orange becomes rotten.</p>\n\n<p>Return <em>the minimum number of minutes that must elapse until no cell has a fresh orange</em>. If <em>this is impossible, return</em> <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/16/oranges.png\" style=\"width: 650px; height: 137px;\" />\n<pre>\n<strong>Input:</strong> grid = [[2,1,1],[1,1,0],[0,1,1]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[2,1,1],[0,1,1],[1,0,1]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> The orange in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0,2]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Since there are already no fresh oranges at minute 0, the answer is just 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 10</code></li>\n\t<li><code>grid[i][j]</code> is <code>0</code>, <code>1</code>, or <code>2</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[2,1,1],[1,1,0],[0,1,1]]\n[[2,1,1],[0,1,1],[1,0,1]]\n[[0,2]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "935",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13016,
      "dislikes": 408,
      "similarQuestions": "[{\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Battleships in a Board\", \"titleSlug\": \"battleships-in-a-board\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Detonate the Maximum Bombs\", \"titleSlug\": \"detonate-the-maximum-bombs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Escape the Spreading Fire\", \"titleSlug\": \"escape-the-spreading-fire\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486738,
      "commentCount": 169,
      "topLevelCommentCount": 97
    },
    "classAndMethodDefinition": "def orangesRotting(self, grid: List[List[int]]) -> int:\n        "
  },
  {
    "stat": {
      "question_id": 349,
      "question__article__live": true,
      "question__article__slug": "intersection-of-two-arrays",
      "question__article__has_video_solution": false,
      "question__title": "Intersection of Two Arrays",
      "question__title_slug": "intersection-of-two-arrays",
      "question__hide": false,
      "total_acs": 1293770,
      "total_submitted": 1722542,
      "frontend_question_id": 349,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/intersection-of-two-arrays",
      "questionId": "349",
      "questionFrontendId": "349",
      "questionTitle": "Intersection of Two Arrays",
      "titleSlug": "intersection-of-two-arrays",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two integer arrays <code>nums1</code> and <code>nums2</code>, return <em>an array of their <span data-keyword=\"array-intersection\">intersection</span></em>. Each element in the result must be <strong>unique</strong> and you may return the result in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,2,1], nums2 = [2,2]\n<strong>Output:</strong> [2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [4,9,5], nums2 = [9,4,9,8,4]\n<strong>Output:</strong> [9,4]\n<strong>Explanation:</strong> [4,9] is also accepted.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums1[i], nums2[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,2,1]\n[2,2]\n[4,9,5]\n[9,4,9,8,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2263",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6120,
      "dislikes": 2295,
      "similarQuestions": "[{\"title\": \"Intersection of Two Arrays II\", \"titleSlug\": \"intersection-of-two-arrays-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Intersection of Three Sorted Arrays\", \"titleSlug\": \"intersection-of-three-sorted-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Difference of Two Arrays\", \"titleSlug\": \"find-the-difference-of-two-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Common Words With One Occurrence\", \"titleSlug\": \"count-common-words-with-one-occurrence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Choose Numbers From Two Arrays in Range\", \"titleSlug\": \"choose-numbers-from-two-arrays-in-range\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Intersection of Multiple Arrays\", \"titleSlug\": \"intersection-of-multiple-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Common Value\", \"titleSlug\": \"minimum-common-value\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Size of a Set After Removals\", \"titleSlug\": \"maximum-size-of-a-set-after-removals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486086,
      "commentCount": 223,
      "topLevelCommentCount": 151
    },
    "classAndMethodDefinition": "def intersection(self, nums1, nums2):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 116,
      "question__article__live": true,
      "question__article__slug": "populating-next-right-pointers-in-each-node",
      "question__article__has_video_solution": false,
      "question__title": "Populating Next Right Pointers in Each Node",
      "question__title_slug": "populating-next-right-pointers-in-each-node",
      "question__hide": false,
      "total_acs": 1085290,
      "total_submitted": 1708934,
      "frontend_question_id": 116,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node",
      "questionId": "116",
      "questionFrontendId": "116",
      "questionTitle": "Populating Next Right Pointers in Each Node",
      "titleSlug": "populating-next-right-pointers-in-each-node",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a <strong>perfect binary tree</strong> where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:</p>\n\n<pre>\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n</pre>\n\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/14/116_sample.png\" style=\"width: 500px; height: 171px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,6,7]\n<strong>Output:</strong> [1,#,2,3,#,4,5,6,7,#]\n<strong>Explanation: </strong>Given the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with &#39;#&#39; signifying the end of each level.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 2<sup>12</sup> - 1]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow-up:</strong></p>\n\n<ul>\n\t<li>You may only use constant extra space.</li>\n\t<li>The recursive approach is fine. You may assume implicit stack space does not count as extra space for this problem.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5,6,7]\n[]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "830",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9776,
      "dislikes": 307,
      "similarQuestions": "[{\"title\": \"Populating Next Right Pointers in Each Node II\", \"titleSlug\": \"populating-next-right-pointers-in-each-node-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Right Side View\", \"titleSlug\": \"binary-tree-right-side-view\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cycle Length Queries in a Tree\", \"titleSlug\": \"cycle-length-queries-in-a-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485853,
      "commentCount": 98,
      "topLevelCommentCount": 61
    },
    "classAndMethodDefinition": "def connect(self, root):\n        while root and root.left:"
  },
  {
    "stat": {
      "question_id": 208,
      "question__article__live": true,
      "question__article__slug": "implement-trie-prefix-tree",
      "question__article__has_video_solution": false,
      "question__title": "Implement Trie (Prefix Tree)",
      "question__title_slug": "implement-trie-prefix-tree",
      "question__hide": false,
      "total_acs": 1116237,
      "total_submitted": 1688011,
      "frontend_question_id": 208,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/implement-trie-prefix-tree",
      "questionId": "208",
      "questionFrontendId": "208",
      "questionTitle": "Implement Trie (Prefix Tree)",
      "titleSlug": "implement-trie-prefix-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A <a href=\"https://en.wikipedia.org/wiki/Trie\" target=\"_blank\"><strong>trie</strong></a> (pronounced as &quot;try&quot;) or <strong>prefix tree</strong> is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker.</p>\n\n<p>Implement the Trie class:</p>\n\n<ul>\n\t<li><code>Trie()</code> Initializes the trie object.</li>\n\t<li><code>void insert(String word)</code> Inserts the string <code>word</code> into the trie.</li>\n\t<li><code>boolean search(String word)</code> Returns <code>true</code> if the string <code>word</code> is in the trie (i.e., was inserted before), and <code>false</code> otherwise.</li>\n\t<li><code>boolean startsWith(String prefix)</code> Returns <code>true</code> if there is a previously inserted string <code>word</code> that has the prefix <code>prefix</code>, and <code>false</code> otherwise.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Trie&quot;, &quot;insert&quot;, &quot;search&quot;, &quot;search&quot;, &quot;startsWith&quot;, &quot;insert&quot;, &quot;search&quot;]\n[[], [&quot;apple&quot;], [&quot;apple&quot;], [&quot;app&quot;], [&quot;app&quot;], [&quot;app&quot;], [&quot;app&quot;]]\n<strong>Output</strong>\n[null, null, true, false, true, null, true]\n\n<strong>Explanation</strong>\nTrie trie = new Trie();\ntrie.insert(&quot;apple&quot;);\ntrie.search(&quot;apple&quot;);   // return True\ntrie.search(&quot;app&quot;);     // return False\ntrie.startsWith(&quot;app&quot;); // return True\ntrie.insert(&quot;app&quot;);\ntrie.search(&quot;app&quot;);     // return True\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length, prefix.length &lt;= 2000</code></li>\n\t<li><code>word</code> and <code>prefix</code> consist only of lowercase English letters.</li>\n\t<li>At most <code>3 * 10<sup>4</sup></code> calls <strong>in total</strong> will be made to <code>insert</code>, <code>search</code>, and <code>startsWith</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"Trie\",\"insert\",\"search\",\"search\",\"startsWith\",\"insert\",\"search\"]\n[[],[\"apple\"],[\"apple\"],[\"app\"],[\"app\"],[\"app\"],[\"app\"]]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "40",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11610,
      "dislikes": 143,
      "similarQuestions": "[{\"title\": \"Design Add and Search Words Data Structure\", \"titleSlug\": \"design-add-and-search-words-data-structure\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Search Autocomplete System\", \"titleSlug\": \"design-search-autocomplete-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Replace Words\", \"titleSlug\": \"replace-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Implement Magic Dictionary\", \"titleSlug\": \"implement-magic-dictionary\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Encrypt and Decrypt Strings\", \"titleSlug\": \"encrypt-and-decrypt-strings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Implement Trie II (Prefix Tree)\", \"titleSlug\": \"implement-trie-ii-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Prefix and Suffix Pairs II\", \"titleSlug\": \"count-prefix-and-suffix-pairs-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Prefix and Suffix Pairs I\", \"titleSlug\": \"count-prefix-and-suffix-pairs-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485945,
      "commentCount": 103,
      "topLevelCommentCount": 64
    },
    "classAndMethodDefinition": "class Trie:\n"
  },
  {
    "stat": {
      "question_id": 25,
      "question__article__live": true,
      "question__article__slug": "reverse-nodes-in-k-group",
      "question__article__has_video_solution": false,
      "question__title": "Reverse Nodes in k-Group",
      "question__title_slug": "reverse-nodes-in-k-group",
      "question__hide": false,
      "total_acs": 1014255,
      "total_submitted": 1685759,
      "frontend_question_id": 25,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-nodes-in-k-group",
      "questionId": "25",
      "questionFrontendId": "25",
      "questionTitle": "Reverse Nodes in k-Group",
      "titleSlug": "reverse-nodes-in-k-group",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a linked list, reverse the nodes of the list <code>k</code> at a time, and return <em>the modified list</em>.</p>\n\n<p><code>k</code> is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of <code>k</code> then left-out nodes, in the end, should remain as it is.</p>\n\n<p>You may not alter the values in the list&#39;s nodes, only nodes themselves may be changed.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/reverse_ex1.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], k = 2\n<strong>Output:</strong> [2,1,4,3,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/reverse_ex2.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], k = 3\n<strong>Output:</strong> [3,2,1,4,5]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is <code>n</code>.</li>\n\t<li><code>1 &lt;= k &lt;= n &lt;= 5000</code></li>\n\t<li><code>0 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow-up:</strong> Can you solve the problem in <code>O(1)</code> extra memory space?</p>\n",
      "exampleTestcases": "[1,2,3,4,5]\n2\n[1,2,3,4,5]\n3",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "896",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13837,
      "dislikes": 715,
      "similarQuestions": "[{\"title\": \"Swap Nodes in Pairs\", \"titleSlug\": \"swap-nodes-in-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Swapping Nodes in a Linked List\", \"titleSlug\": \"swapping-nodes-in-a-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Nodes in Even Length Groups\", \"titleSlug\": \"reverse-nodes-in-even-length-groups\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485762,
      "commentCount": 164,
      "topLevelCommentCount": 120
    },
    "classAndMethodDefinition": "def reverseKGroup(self, head, k):\n        dummy = jump = ListNode(0)"
  },
  {
    "stat": {
      "question_id": 72,
      "question__article__live": true,
      "question__article__slug": "edit-distance",
      "question__article__has_video_solution": false,
      "question__title": "Edit Distance",
      "question__title_slug": "edit-distance",
      "question__hide": false,
      "total_acs": 945558,
      "total_submitted": 1652559,
      "frontend_question_id": 72,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/edit-distance",
      "questionId": "72",
      "questionFrontendId": "72",
      "questionTitle": "Edit Distance",
      "titleSlug": "edit-distance",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>word1</code> and <code>word2</code>, return <em>the minimum number of operations required to convert <code>word1</code> to <code>word2</code></em>.</p>\n\n<p>You have the following three operations permitted on a word:</p>\n\n<ul>\n\t<li>Insert a character</li>\n\t<li>Delete a character</li>\n\t<li>Replace a character</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;horse&quot;, word2 = &quot;ros&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nhorse -&gt; rorse (replace &#39;h&#39; with &#39;r&#39;)\nrorse -&gt; rose (remove &#39;r&#39;)\nrose -&gt; ros (remove &#39;e&#39;)\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;intention&quot;, word2 = &quot;execution&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> \nintention -&gt; inention (remove &#39;t&#39;)\ninention -&gt; enention (replace &#39;i&#39; with &#39;e&#39;)\nenention -&gt; exention (replace &#39;n&#39; with &#39;x&#39;)\nexention -&gt; exection (replace &#39;n&#39; with &#39;c&#39;)\nexection -&gt; execution (insert &#39;u&#39;)\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= word1.length, word2.length &lt;= 500</code></li>\n\t<li><code>word1</code> and <code>word2</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"horse\"\n\"ros\"\n\"intention\"\n\"execution\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1681",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 14967,
      "dislikes": 239,
      "similarQuestions": "[{\"title\": \"One Edit Distance\", \"titleSlug\": \"one-edit-distance\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Operation for Two Strings\", \"titleSlug\": \"delete-operation-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum ASCII Delete Sum for Two Strings\", \"titleSlug\": \"minimum-ascii-delete-sum-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Uncrossed Lines\", \"titleSlug\": \"uncrossed-lines\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum White Tiles After Covering With Carpets\", \"titleSlug\": \"minimum-white-tiles-after-covering-with-carpets\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485809,
      "commentCount": 199,
      "topLevelCommentCount": 101
    },
    "classAndMethodDefinition": "class Solution:\n  def minDistance(self, word1: str, word2: str) -> int:"
  },
  {
    "stat": {
      "question_id": 328,
      "question__article__live": true,
      "question__article__slug": "odd-even-linked-list",
      "question__article__has_video_solution": false,
      "question__title": "Odd Even Linked List",
      "question__title_slug": "odd-even-linked-list",
      "question__hide": false,
      "total_acs": 1011650,
      "total_submitted": 1642839,
      "frontend_question_id": 328,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/odd-even-linked-list",
      "questionId": "328",
      "questionFrontendId": "328",
      "questionTitle": "Odd Even Linked List",
      "titleSlug": "odd-even-linked-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return <em>the reordered list</em>.</p>\n\n<p>The <strong>first</strong> node is considered <strong>odd</strong>, and the <strong>second</strong> node is <strong>even</strong>, and so on.</p>\n\n<p>Note that the relative order inside both the even and odd groups should remain as it was in the input.</p>\n\n<p>You must solve the problem&nbsp;in <code>O(1)</code>&nbsp;extra space complexity and <code>O(n)</code> time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/10/oddeven-linked-list.jpg\" style=\"width: 300px; height: 123px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5]\n<strong>Output:</strong> [1,3,5,2,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/10/oddeven2-linked-list.jpg\" style=\"width: 500px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> head = [2,1,3,5,6,4,7]\n<strong>Output:</strong> [2,3,6,7,1,5,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the linked list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>6</sup> &lt;= Node.val &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5]\n[2,1,3,5,6,4,7]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "28",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10063,
      "dislikes": 535,
      "similarQuestions": "[{\"title\": \"Split Linked List in Parts\", \"titleSlug\": \"split-linked-list-in-parts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486065,
      "commentCount": 203,
      "topLevelCommentCount": 126
    },
    "classAndMethodDefinition": "def oddEvenList(self, head):\n        dummy1 = odd = ListNode(0)"
  },
  {
    "stat": {
      "question_id": 82,
      "question__article__live": true,
      "question__article__slug": "remove-duplicates-from-sorted-list-ii",
      "question__article__has_video_solution": false,
      "question__title": "Remove Duplicates from Sorted List II",
      "question__title_slug": "remove-duplicates-from-sorted-list-ii",
      "question__hide": false,
      "total_acs": 785484,
      "total_submitted": 1630748,
      "frontend_question_id": 82,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii",
      "questionId": "82",
      "questionFrontendId": "82",
      "questionTitle": "Remove Duplicates from Sorted List II",
      "titleSlug": "remove-duplicates-from-sorted-list-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a sorted linked list, <em>delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list</em>. Return <em>the linked list <strong>sorted</strong> as well</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/linkedlist1.jpg\" style=\"width: 500px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,3,4,4,5]\n<strong>Output:</strong> [1,2,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/linkedlist2.jpg\" style=\"width: 500px; height: 205px;\" />\n<pre>\n<strong>Input:</strong> head = [1,1,1,2,3]\n<strong>Output:</strong> [2,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[0, 300]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n\t<li>The list is guaranteed to be <strong>sorted</strong> in ascending order.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,3,4,4,5]\n[1,1,1,2,3]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1062",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8876,
      "dislikes": 246,
      "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted List\", \"titleSlug\": \"remove-duplicates-from-sorted-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove Duplicates From an Unsorted Linked List\", \"titleSlug\": \"remove-duplicates-from-an-unsorted-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485819,
      "commentCount": 97,
      "topLevelCommentCount": 61
    },
    "classAndMethodDefinition": "def deleteDuplicates(self, head):\n        dummy = pre = ListNode(0)"
  },
  {
    "stat": {
      "question_id": 47,
      "question__article__live": true,
      "question__article__slug": "permutations-ii",
      "question__article__has_video_solution": false,
      "question__title": "Permutations II",
      "question__title_slug": "permutations-ii",
      "question__hide": false,
      "total_acs": 976344,
      "total_submitted": 1629258,
      "frontend_question_id": 47,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/permutations-ii",
      "questionId": "47",
      "questionFrontendId": "47",
      "questionTitle": "Permutations II",
      "titleSlug": "permutations-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a collection of numbers, <code>nums</code>,&nbsp;that might contain duplicates, return <em>all possible unique permutations <strong>in any order</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong>\n[[1,1,2],\n [1,2,1],\n [2,1,1]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 8</code></li>\n\t<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,2]\n[1,2,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1018",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8558,
      "dislikes": 146,
      "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation II\", \"titleSlug\": \"palindrome-permutation-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Squareful Arrays\", \"titleSlug\": \"number-of-squareful-arrays\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485784,
      "commentCount": 55,
      "topLevelCommentCount": 36
    },
    "classAndMethodDefinition": "def permuteUnique(self, nums):\n    res = []"
  },
  {
    "stat": {
      "question_id": 295,
      "question__article__live": true,
      "question__article__slug": "find-median-from-data-stream",
      "question__article__has_video_solution": false,
      "question__title": "Find Median from Data Stream",
      "question__title_slug": "find-median-from-data-stream",
      "question__hide": false,
      "total_acs": 843027,
      "total_submitted": 1612817,
      "frontend_question_id": 295,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-median-from-data-stream",
      "questionId": "295",
      "questionFrontendId": "295",
      "questionTitle": "Find Median from Data Stream",
      "titleSlug": "find-median-from-data-stream",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>The <strong>median</strong> is the middle value in an ordered integer list. If the size of the list is even, there is no middle value, and the median is the mean of the two middle values.</p>\n\n<ul>\n\t<li>For example, for <code>arr = [2,3,4]</code>, the median is <code>3</code>.</li>\n\t<li>For example, for <code>arr = [2,3]</code>, the median is <code>(2 + 3) / 2 = 2.5</code>.</li>\n</ul>\n\n<p>Implement the MedianFinder class:</p>\n\n<ul>\n\t<li><code>MedianFinder()</code> initializes the <code>MedianFinder</code> object.</li>\n\t<li><code>void addNum(int num)</code> adds the integer <code>num</code> from the data stream to the data structure.</li>\n\t<li><code>double findMedian()</code> returns the median of all elements so far. Answers within <code>10<sup>-5</sup></code> of the actual answer will be accepted.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MedianFinder&quot;, &quot;addNum&quot;, &quot;addNum&quot;, &quot;findMedian&quot;, &quot;addNum&quot;, &quot;findMedian&quot;]\n[[], [1], [2], [], [3], []]\n<strong>Output</strong>\n[null, null, null, 1.5, null, 2.0]\n\n<strong>Explanation</strong>\nMedianFinder medianFinder = new MedianFinder();\nmedianFinder.addNum(1);    // arr = [1]\nmedianFinder.addNum(2);    // arr = [1, 2]\nmedianFinder.findMedian(); // return 1.5 (i.e., (1 + 2) / 2)\nmedianFinder.addNum(3);    // arr[1, 2, 3]\nmedianFinder.findMedian(); // return 2.0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-10<sup>5</sup> &lt;= num &lt;= 10<sup>5</sup></code></li>\n\t<li>There will be at least one element in the data structure before calling <code>findMedian</code>.</li>\n\t<li>At most <code>5 * 10<sup>4</sup></code> calls will be made to <code>addNum</code> and <code>findMedian</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>If all integer numbers from the stream are in the range <code>[0, 100]</code>, how would you optimize your solution?</li>\n\t<li>If <code>99%</code> of all integer numbers from the stream are in the range <code>[0, 100]</code>, how would you optimize your solution?</li>\n</ul>\n",
      "exampleTestcases": "[\"MedianFinder\",\"addNum\",\"addNum\",\"findMedian\",\"addNum\",\"findMedian\"]\n[[],[1],[2],[],[3],[]]",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Data Stream",
          "slug": "data-stream",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "85",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11992,
      "dislikes": 244,
      "similarQuestions": "[{\"title\": \"Sliding Window Median\", \"titleSlug\": \"sliding-window-median\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Finding MK Average\", \"titleSlug\": \"finding-mk-average\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Sequentially Ordinal Rank Tracker\", \"titleSlug\": \"sequentially-ordinal-rank-tracker\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Make Median of Array Equal to K\", \"titleSlug\": \"minimum-operations-to-make-median-of-array-equal-to-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486032,
      "commentCount": 134,
      "topLevelCommentCount": 72
    },
    "classAndMethodDefinition": "def __init__(self):\n            self.small = []  # the smaller half of the list, max heap (invert min-heap)"
  },
  {
    "stat": {
      "question_id": 414,
      "question__article__live": true,
      "question__article__slug": "third-maximum-number",
      "question__article__has_video_solution": false,
      "question__title": "Third Maximum Number",
      "question__title_slug": "third-maximum-number",
      "question__hide": false,
      "total_acs": 572366,
      "total_submitted": 1612420,
      "frontend_question_id": 414,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/third-maximum-number",
      "questionId": "414",
      "questionFrontendId": "414",
      "questionTitle": "Third Maximum Number",
      "titleSlug": "third-maximum-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <em>the <strong>third distinct maximum</strong> number in this array. If the third maximum does not exist, return the <strong>maximum</strong> number</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nThe first distinct maximum is 3.\nThe second distinct maximum is 2.\nThe third distinct maximum is 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\nThe first distinct maximum is 2.\nThe second distinct maximum is 1.\nThe third distinct maximum does not exist, so the maximum (2) is returned instead.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,3,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nThe first distinct maximum is 3.\nThe second distinct maximum is 2 (both 2&#39;s are counted together since they have the same value).\nThe third distinct maximum is 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Can you find an <code>O(n)</code> solution?",
      "exampleTestcases": "[3,2,1]\n[1,2]\n[2,2,3,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1563",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3058,
      "dislikes": 3192,
      "similarQuestions": "[{\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Neither Minimum nor Maximum\", \"titleSlug\": \"neither-minimum-nor-maximum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486151,
      "commentCount": 92,
      "topLevelCommentCount": 60
    },
    "classAndMethodDefinition": "def thirdMax(self, nums: List[int]) -> int:\n        if len(set(nums)) >= 3:"
  },
  {
    "stat": {
      "question_id": 279,
      "question__article__live": true,
      "question__article__slug": "perfect-squares",
      "question__article__has_video_solution": false,
      "question__title": "Perfect Squares",
      "question__title_slug": "perfect-squares",
      "question__hide": false,
      "total_acs": 884019,
      "total_submitted": 1605335,
      "frontend_question_id": 279,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/perfect-squares",
      "questionId": "279",
      "questionFrontendId": "279",
      "questionTitle": "Perfect Squares",
      "titleSlug": "perfect-squares",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em>the least number of perfect square numbers that sum to</em> <code>n</code>.</p>\n\n<p>A <strong>perfect square</strong> is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, <code>1</code>, <code>4</code>, <code>9</code>, and <code>16</code> are perfect squares while <code>3</code> and <code>11</code> are not.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 12\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 12 = 4 + 4 + 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 13\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 13 = 4 + 9.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "12\n13",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "788",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11241,
      "dislikes": 474,
      "similarQuestions": "[{\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ways to Express an Integer as Sum of Powers\", \"titleSlug\": \"ways-to-express-an-integer-as-sum-of-powers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486016,
      "commentCount": 167,
      "topLevelCommentCount": 98
    },
    "classAndMethodDefinition": "def numSquares(self, n: int) -> int:\n        dp = [float(\\'inf\\')] * (n + 1)"
  },
  {
    "stat": {
      "question_id": 739,
      "question__article__live": true,
      "question__article__slug": "daily-temperatures",
      "question__article__has_video_solution": false,
      "question__title": "Daily Temperatures",
      "question__title_slug": "daily-temperatures",
      "question__hide": false,
      "total_acs": 1063094,
      "total_submitted": 1603636,
      "frontend_question_id": 739,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/daily-temperatures",
      "questionId": "739",
      "questionFrontendId": "739",
      "questionTitle": "Daily Temperatures",
      "titleSlug": "daily-temperatures",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>temperatures</code> represents the daily temperatures, return <em>an array</em> <code>answer</code> <em>such that</em> <code>answer[i]</code> <em>is the number of days you have to wait after the</em> <code>i<sup>th</sup></code> <em>day to get a warmer temperature</em>. If there is no future day for which this is possible, keep <code>answer[i] == 0</code> instead.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> temperatures = [73,74,75,71,69,72,76,73]\n<strong>Output:</strong> [1,1,4,2,1,1,0,0]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> temperatures = [30,40,50,60]\n<strong>Output:</strong> [1,1,1,0]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> temperatures = [30,60,90]\n<strong>Output:</strong> [1,1,0]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;temperatures.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>30 &lt;=&nbsp;temperatures[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[73,74,75,71,69,72,76,73]\n[30,40,50,60]\n[30,60,90]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [
        "If the temperature is say, 70 today, then in the future a warmer temperature must be either 71, 72, 73, ..., 99, or 100.  We could remember when all of them occur next."
      ],
      "solution": {
        "id": "1206",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 13277,
      "dislikes": 329,
      "similarQuestions": "[{\"title\": \"Next Greater Element I\", \"titleSlug\": \"next-greater-element-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Online Stock Span\", \"titleSlug\": \"online-stock-span\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486451,
      "commentCount": 377,
      "topLevelCommentCount": 230
    },
    "classAndMethodDefinition": "class Solution:\n    def dailyTemperatures(self, temps):"
  },
  {
    "stat": {
      "question_id": 334,
      "question__article__live": true,
      "question__article__slug": "increasing-triplet-subsequence",
      "question__article__has_video_solution": false,
      "question__title": "Increasing Triplet Subsequence",
      "question__title_slug": "increasing-triplet-subsequence",
      "question__hide": false,
      "total_acs": 631062,
      "total_submitted": 1598671,
      "frontend_question_id": 334,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/increasing-triplet-subsequence",
      "questionId": "334",
      "questionFrontendId": "334",
      "questionTitle": "Increasing Triplet Subsequence",
      "titleSlug": "increasing-triplet-subsequence",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <code>true</code><em> if there exists a triple of indices </em><code>(i, j, k)</code><em> such that </em><code>i &lt; j &lt; k</code><em> and </em><code>nums[i] &lt; nums[j] &lt; nums[k]</code>. If no such indices exists, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Any triplet where i &lt; j &lt; k is valid.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,4,3,2,1]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> No triplet exists.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,5,0,4,6]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The triplet (3, 4, 5) is valid because nums[3] == 0 &lt; nums[4] == 4 &lt; nums[5] == 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>5</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you implement a solution that runs in <code>O(n)</code> time complexity and <code>O(1)</code> space complexity?",
      "exampleTestcases": "[1,2,3,4,5]\n[5,4,3,2,1]\n[2,1,5,0,4,6]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "988",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8170,
      "dislikes": 555,
      "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Special Quadruplets\", \"titleSlug\": \"count-special-quadruplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Good Triplets in an Array\", \"titleSlug\": \"count-good-triplets-in-an-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Increasing Quadruplets\", \"titleSlug\": \"count-increasing-quadruplets\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486071,
      "commentCount": 352,
      "topLevelCommentCount": 149
    },
    "classAndMethodDefinition": "def increasingTriplet(nums):\n        first = second = float('inf')"
  },
  {
    "stat": {
      "question_id": 297,
      "question__article__live": true,
      "question__article__slug": "serialize-and-deserialize-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Serialize and Deserialize Binary Tree",
      "question__title_slug": "serialize-and-deserialize-binary-tree",
      "question__hide": false,
      "total_acs": 915510,
      "total_submitted": 1594382,
      "frontend_question_id": 297,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree",
      "questionId": "297",
      "questionFrontendId": "297",
      "questionTitle": "Serialize and Deserialize Binary Tree",
      "titleSlug": "serialize-and-deserialize-binary-tree",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.</p>\n\n<p>Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.</p>\n\n<p><strong>Clarification:</strong> The input/output format is the same as <a href=\"https://support.leetcode.com/hc/en-us/articles/360011883654-What-does-1-null-2-3-mean-in-binary-tree-representation-\" target=\"_blank\">how LeetCode serializes a binary tree</a>. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/serdeser.jpg\" style=\"width: 442px; height: 324px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,null,null,4,5]\n<strong>Output:</strong> [1,2,3,null,null,4,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,null,null,4,5]\n[]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "563",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10233,
      "dislikes": 401,
      "similarQuestions": "[{\"title\": \"Encode and Decode Strings\", \"titleSlug\": \"encode-and-decode-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize BST\", \"titleSlug\": \"serialize-and-deserialize-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Duplicate Subtrees\", \"titleSlug\": \"find-duplicate-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize N-ary Tree\", \"titleSlug\": \"serialize-and-deserialize-n-ary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486034,
      "commentCount": 109,
      "topLevelCommentCount": 62
    },
    "classAndMethodDefinition": "def serialize(self, root):\n            def doit(node):"
  },
  {
    "stat": {
      "question_id": 907,
      "question__article__live": true,
      "question__article__slug": "koko-eating-bananas",
      "question__article__has_video_solution": false,
      "question__title": "Koko Eating Bananas",
      "question__title_slug": "koko-eating-bananas",
      "question__hide": false,
      "total_acs": 768524,
      "total_submitted": 1588014,
      "frontend_question_id": 875,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/koko-eating-bananas",
      "questionId": "907",
      "questionFrontendId": "875",
      "questionTitle": "Koko Eating Bananas",
      "titleSlug": "koko-eating-bananas",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Koko loves to eat bananas. There are <code>n</code> piles of bananas, the <code>i<sup>th</sup></code> pile has <code>piles[i]</code> bananas. The guards have gone and will come back in <code>h</code> hours.</p>\n\n<p>Koko can decide her bananas-per-hour eating speed of <code>k</code>. Each hour, she chooses some pile of bananas and eats <code>k</code> bananas from that pile. If the pile has less than <code>k</code> bananas, she eats all of them instead and will not eat any more bananas during this hour.</p>\n\n<p>Koko likes to eat slowly but still wants to finish eating all the bananas before the guards return.</p>\n\n<p>Return <em>the minimum integer</em> <code>k</code> <em>such that she can eat all the bananas within</em> <code>h</code> <em>hours</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [3,6,7,11], h = 8\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [30,11,23,4,20], h = 5\n<strong>Output:</strong> 30\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [30,11,23,4,20], h = 6\n<strong>Output:</strong> 23\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>piles.length &lt;= h &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= piles[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,6,7,11]\n8\n[30,11,23,4,20]\n5\n[30,11,23,4,20]\n6",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1292",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10859,
      "dislikes": 698,
      "similarQuestions": "[{\"title\": \"Minimize Max Distance to Gas Station\", \"titleSlug\": \"minimize-max-distance-to-gas-station\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Candies Allocated to K Children\", \"titleSlug\": \"maximum-candies-allocated-to-k-children\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimized Maximum of Products Distributed to Any Store\", \"titleSlug\": \"minimized-maximum-of-products-distributed-to-any-store\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Frog Jump II\", \"titleSlug\": \"frog-jump-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Time to Repair Cars\", \"titleSlug\": \"minimum-time-to-repair-cars\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486614,
      "commentCount": 518,
      "topLevelCommentCount": 311
    },
    "classAndMethodDefinition": "def minEatingSpeed(self, piles, h):\n        low, high = 1, 10 ** 9"
  },
  {
    "stat": {
      "question_id": 114,
      "question__article__live": true,
      "question__article__slug": "flatten-binary-tree-to-linked-list",
      "question__article__has_video_solution": false,
      "question__title": "Flatten Binary Tree to Linked List",
      "question__title_slug": "flatten-binary-tree-to-linked-list",
      "question__hide": false,
      "total_acs": 1018968,
      "total_submitted": 1540076,
      "frontend_question_id": 114,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list",
      "questionId": "114",
      "questionFrontendId": "114",
      "questionTitle": "Flatten Binary Tree to Linked List",
      "titleSlug": "flatten-binary-tree-to-linked-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, flatten the tree into a &quot;linked list&quot;:</p>\n\n<ul>\n\t<li>The &quot;linked list&quot; should use the same <code>TreeNode</code> class where the <code>right</code> child pointer points to the next node in the list and the <code>left</code> child pointer is always <code>null</code>.</li>\n\t<li>The &quot;linked list&quot; should be in the same order as a <a href=\"https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR\" target=\"_blank\"><strong>pre-order</strong><strong> traversal</strong></a> of the binary tree.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/14/flaten.jpg\" style=\"width: 500px; height: 226px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,5,3,4,null,6]\n<strong>Output:</strong> [1,null,2,null,3,null,4,null,5,null,6]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [0]\n<strong>Output:</strong> [0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Can you flatten the tree in-place (with <code>O(1)</code> extra space)?",
      "exampleTestcases": "[1,2,5,3,4,null,6]\n[]\n[0]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [
        "If you notice carefully in the flattened tree, each node's right child points to the next node of a pre-order traversal."
      ],
      "solution": {
        "id": "872",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12367,
      "dislikes": 565,
      "similarQuestions": "[{\"title\": \"Flatten a Multilevel Doubly Linked List\", \"titleSlug\": \"flatten-a-multilevel-doubly-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Correct a Binary Tree\", \"titleSlug\": \"correct-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485851,
      "commentCount": 126,
      "topLevelCommentCount": 74
    },
    "classAndMethodDefinition": "def __init__(self):\n        self.prev = None"
  },
  {
    "stat": {
      "question_id": 803,
      "question__article__live": true,
      "question__article__slug": "cheapest-flights-within-k-stops",
      "question__article__has_video_solution": false,
      "question__title": "Cheapest Flights Within K Stops",
      "question__title_slug": "cheapest-flights-within-k-stops",
      "question__hide": false,
      "total_acs": 607584,
      "total_submitted": 1535162,
      "frontend_question_id": 787,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/cheapest-flights-within-k-stops",
      "questionId": "803",
      "questionFrontendId": "787",
      "questionTitle": "Cheapest Flights Within K Stops",
      "titleSlug": "cheapest-flights-within-k-stops",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> cities connected by some number of flights. You are given an array <code>flights</code> where <code>flights[i] = [from<sub>i</sub>, to<sub>i</sub>, price<sub>i</sub>]</code> indicates that there is a flight from city <code>from<sub>i</sub></code> to city <code>to<sub>i</sub></code> with cost <code>price<sub>i</sub></code>.</p>\n\n<p>You are also given three integers <code>src</code>, <code>dst</code>, and <code>k</code>, return <em><strong>the cheapest price</strong> from </em><code>src</code><em> to </em><code>dst</code><em> with at most </em><code>k</code><em> stops. </em>If there is no such route, return<em> </em><code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/18/cheapest-flights-within-k-stops-3drawio.png\" style=\"width: 332px; height: 392px;\" />\n<pre>\n<strong>Input:</strong> n = 4, flights = [[0,1,100],[1,2,100],[2,0,100],[1,3,600],[2,3,200]], src = 0, dst = 3, k = 1\n<strong>Output:</strong> 700\n<strong>Explanation:</strong>\nThe graph is shown above.\nThe optimal path with at most 1 stop from city 0 to 3 is marked in red and has cost 100 + 600 = 700.\nNote that the path through cities [0,1,2,3] is cheaper but is invalid because it uses 2 stops.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/18/cheapest-flights-within-k-stops-1drawio.png\" style=\"width: 332px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> n = 3, flights = [[0,1,100],[1,2,100],[0,2,500]], src = 0, dst = 2, k = 1\n<strong>Output:</strong> 200\n<strong>Explanation:</strong>\nThe graph is shown above.\nThe optimal path with at most 1 stop from city 0 to 2 is marked in red and has cost 100 + 100 = 200.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/18/cheapest-flights-within-k-stops-2drawio.png\" style=\"width: 332px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> n = 3, flights = [[0,1,100],[1,2,100],[0,2,500]], src = 0, dst = 2, k = 0\n<strong>Output:</strong> 500\n<strong>Explanation:</strong>\nThe graph is shown above.\nThe optimal path with no stops from city 0 to 2 is marked in red and has cost 500.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>0 &lt;= flights.length &lt;= (n * (n - 1) / 2)</code></li>\n\t<li><code>flights[i].length == 3</code></li>\n\t<li><code>0 &lt;= from<sub>i</sub>, to<sub>i</sub> &lt; n</code></li>\n\t<li><code>from<sub>i</sub> != to<sub>i</sub></code></li>\n\t<li><code>1 &lt;= price<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n\t<li>There will not be any multiple flights between two cities.</li>\n\t<li><code>0 &lt;= src, dst, k &lt; n</code></li>\n\t<li><code>src != dst</code></li>\n</ul>\n",
      "exampleTestcases": "4\n[[0,1,100],[1,2,100],[2,0,100],[1,3,600],[2,3,200]]\n0\n3\n1\n3\n[[0,1,100],[1,2,100],[0,2,500]]\n0\n2\n1\n3\n[[0,1,100],[1,2,100],[0,2,500]]\n0\n2\n0",
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1614",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10012,
      "dislikes": 417,
      "similarQuestions": "[{\"title\": \"Maximum Vacation Days\", \"titleSlug\": \"maximum-vacation-days\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost to Reach City With Discounts\", \"titleSlug\": \"minimum-cost-to-reach-city-with-discounts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486515,
      "commentCount": 292,
      "topLevelCommentCount": 172
    },
    "classAndMethodDefinition": "class Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:"
  },
  {
    "stat": {
      "question_id": 424,
      "question__article__live": true,
      "question__article__slug": "longest-repeating-character-replacement",
      "question__article__has_video_solution": false,
      "question__title": "Longest Repeating Character Replacement",
      "question__title_slug": "longest-repeating-character-replacement",
      "question__hide": false,
      "total_acs": 843458,
      "total_submitted": 1531571,
      "frontend_question_id": 424,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-repeating-character-replacement",
      "questionId": "424",
      "questionFrontendId": "424",
      "questionTitle": "Longest Repeating Character Replacement",
      "titleSlug": "longest-repeating-character-replacement",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code> and an integer <code>k</code>. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most <code>k</code> times.</p>\n\n<p>Return <em>the length of the longest substring containing the same letter you can get after performing the above operations</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ABAB&quot;, k = 2\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Replace the two &#39;A&#39;s with two &#39;B&#39;s or vice versa.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;AABABBA&quot;, k = 1\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Replace the one &#39;A&#39; in the middle with &#39;B&#39; and form &quot;AABBBBA&quot;.\nThe substring &quot;BBBB&quot; has the longest repeating letters, which is 4.\nThere may exists other ways to achieve this answer too.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of only uppercase English letters.</li>\n\t<li><code>0 &lt;= k &lt;= s.length</code></li>\n</ul>\n",
      "exampleTestcases": "\"ABAB\"\n2\n\"AABABBA\"\n1",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1609",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10828,
      "dislikes": 555,
      "similarQuestions": "[{\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones III\", \"titleSlug\": \"max-consecutive-ones-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Operations to Make Array Continuous\", \"titleSlug\": \"minimum-number-of-operations-to-make-array-continuous\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximize the Confusion of an Exam\", \"titleSlug\": \"maximize-the-confusion-of-an-exam\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring of One Repeating Character\", \"titleSlug\": \"longest-substring-of-one-repeating-character\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486161,
      "commentCount": 214,
      "topLevelCommentCount": 119
    },
    "classAndMethodDefinition": "def characterReplacement(self, s: str, k: int) -> int:\n        "
  },
  {
    "stat": {
      "question_id": 448,
      "question__article__live": true,
      "question__article__slug": "find-all-numbers-disappeared-in-an-array",
      "question__article__has_video_solution": false,
      "question__title": "Find All Numbers Disappeared in an Array",
      "question__title_slug": "find-all-numbers-disappeared-in-an-array",
      "question__hide": false,
      "total_acs": 932116,
      "total_submitted": 1520487,
      "frontend_question_id": 448,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array",
      "questionId": "448",
      "questionFrontendId": "448",
      "questionTitle": "Find All Numbers Disappeared in an Array",
      "titleSlug": "find-all-numbers-disappeared-in-an-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code> of <code>n</code> integers where <code>nums[i]</code> is in the range <code>[1, n]</code>, return <em>an array of all the integers in the range</em> <code>[1, n]</code> <em>that do not appear in</em> <code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [4,3,2,7,8,2,3,1]\n<strong>Output:</strong> [5,6]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1]\n<strong>Output:</strong> [2]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= n</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you do it without extra space and in <code>O(n)</code> runtime? You may assume the returned list does not count as extra space.</p>\n",
      "exampleTestcases": "[4,3,2,7,8,2,3,1]\n[1,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        }
      ],
      "hints": [
        "This is a really easy problem if you decide to use additional memory. For those trying to write an initial solution using additional memory, think <b>counters!</b>",
        "However, the trick really is to not use any additional space than what is already available to use. Sometimes, multiple passes over the input array help find the solution. However, there's an interesting piece of information in this problem that makes it easy to re-use the input array itself for the solution.",
        "The problem specifies that the numbers in the array will be in the range [1, n] where n is the number of elements in the array. Can we use this information and modify the array in-place somehow to find what we need?"
      ],
      "solution": {
        "id": "787",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9462,
      "dislikes": 493,
      "similarQuestions": "[{\"title\": \"First Missing Positive\", \"titleSlug\": \"first-missing-positive\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find All Duplicates in an Array\", \"titleSlug\": \"find-all-duplicates-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Unique Binary String\", \"titleSlug\": \"find-unique-binary-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Append K Integers With Minimal Sum\", \"titleSlug\": \"append-k-integers-with-minimal-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Replace Elements in an Array\", \"titleSlug\": \"replace-elements-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Integers to Choose From a Range I\", \"titleSlug\": \"maximum-number-of-integers-to-choose-from-a-range-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Integers to Choose From a Range II\", \"titleSlug\": \"maximum-number-of-integers-to-choose-from-a-range-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486179,
      "commentCount": 97,
      "topLevelCommentCount": 62
    },
    "classAndMethodDefinition": "def findDisappearedNumbers(self, nums: List[int]) -> List[int]:\n        set_nums = set(nums)"
  },
  {
    "stat": {
      "question_id": 113,
      "question__article__live": true,
      "question__article__slug": "path-sum-ii",
      "question__article__has_video_solution": false,
      "question__title": "Path Sum II",
      "question__title_slug": "path-sum-ii",
      "question__hide": false,
      "total_acs": 897986,
      "total_submitted": 1520102,
      "frontend_question_id": 113,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/path-sum-ii",
      "questionId": "113",
      "questionFrontendId": "113",
      "questionTitle": "Path Sum II",
      "titleSlug": "path-sum-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree and an integer <code>targetSum</code>, return <em>all <strong>root-to-leaf</strong> paths where the sum of the node values in the path equals </em><code>targetSum</code><em>. Each path should be returned as a list of the node <strong>values</strong>, not node references</em>.</p>\n\n<p>A <strong>root-to-leaf</strong> path is a path starting from the root and ending at any leaf node. A <strong>leaf</strong> is a node with no children.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsumii1.jpg\" style=\"width: 500px; height: 356px;\" />\n<pre>\n<strong>Input:</strong> root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22\n<strong>Output:</strong> [[5,4,11,2],[5,8,4,5]]\n<strong>Explanation:</strong> There are two paths whose sum equals targetSum:\n5 + 4 + 11 + 2 = 22\n5 + 8 + 4 + 5 = 22\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg\" style=\"width: 212px; height: 181px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3], targetSum = 5\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2], targetSum = 0\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= targetSum &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[5,4,8,11,null,13,4,7,2,null,null,5,1]\n22\n[1,2,3]\n5\n[1,2]\n0",
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "860",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7994,
      "dislikes": 156,
      "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Paths\", \"titleSlug\": \"binary-tree-paths\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Path Sum III\", \"titleSlug\": \"path-sum-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Step-By-Step Directions From a Binary Tree Node to Another\", \"titleSlug\": \"step-by-step-directions-from-a-binary-tree-node-to-another\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485850,
      "commentCount": 67,
      "topLevelCommentCount": 40
    },
    "classAndMethodDefinition": "def pathSum(self, root, sum):\n        res = []"
  },
  {
    "stat": {
      "question_id": 221,
      "question__article__live": true,
      "question__article__slug": "maximal-square",
      "question__article__has_video_solution": false,
      "question__title": "Maximal Square",
      "question__title_slug": "maximal-square",
      "question__hide": false,
      "total_acs": 716105,
      "total_submitted": 1517576,
      "frontend_question_id": 221,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximal-square",
      "questionId": "221",
      "questionFrontendId": "221",
      "questionTitle": "Maximal Square",
      "titleSlug": "maximal-square",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> binary <code>matrix</code> filled with <code>0</code>&#39;s and <code>1</code>&#39;s, <em>find the largest square containing only</em> <code>1</code>&#39;s <em>and return its area</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/max1grid.jpg\" style=\"width: 400px; height: 319px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],[&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/max2grid.jpg\" style=\"width: 165px; height: 165px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[&quot;0&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;0&quot;]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[&quot;0&quot;]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 300</code></li>\n\t<li><code>matrix[i][j]</code> is <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]\n[[\"0\",\"1\"],[\"1\",\"0\"]]\n[[\"0\"]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "54",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10177,
      "dislikes": 229,
      "similarQuestions": "[{\"title\": \"Maximal Rectangle\", \"titleSlug\": \"maximal-rectangle\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Largest Plus Sign\", \"titleSlug\": \"largest-plus-sign\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Artifacts That Can Be Extracted\", \"titleSlug\": \"count-artifacts-that-can-be-extracted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stamping the Grid\", \"titleSlug\": \"stamping-the-grid\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximize Area of Square Hole in Grid\", \"titleSlug\": \"maximize-area-of-square-hole-in-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485958,
      "commentCount": 71,
      "topLevelCommentCount": 47
    },
    "classAndMethodDefinition": "def maximalSquare(self, matrix: List[List[str]]) -> int:\n        if matrix is None or len(matrix) < 1:"
  },
  {
    "stat": {
      "question_id": 227,
      "question__article__live": true,
      "question__article__slug": "basic-calculator-ii",
      "question__article__has_video_solution": false,
      "question__title": "Basic Calculator II",
      "question__title_slug": "basic-calculator-ii",
      "question__hide": false,
      "total_acs": 668760,
      "total_submitted": 1515573,
      "frontend_question_id": 227,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/basic-calculator-ii",
      "questionId": "227",
      "questionFrontendId": "227",
      "questionTitle": "Basic Calculator II",
      "titleSlug": "basic-calculator-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> which represents an expression, <em>evaluate this expression and return its value</em>.&nbsp;</p>\n\n<p>The integer division should truncate toward zero.</p>\n\n<p>You may assume that the given expression is always valid. All intermediate results will be in the range of <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>.</p>\n\n<p><strong>Note:</strong> You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as <code>eval()</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"3+2*2\"\n<strong>Output:</strong> 7\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \" 3/2 \"\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \" 3+5 / 2 \"\n<strong>Output:</strong> 5\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 3 * 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of integers and operators <code>(&#39;+&#39;, &#39;-&#39;, &#39;*&#39;, &#39;/&#39;)</code> separated by some number of spaces.</li>\n\t<li><code>s</code> represents <strong>a valid expression</strong>.</li>\n\t<li>All the integers in the expression are non-negative integers in the range <code>[0, 2<sup>31</sup> - 1]</code>.</li>\n\t<li>The answer is <strong>guaranteed</strong> to fit in a <strong>32-bit integer</strong>.</li>\n</ul>\n",
      "exampleTestcases": "\"3+2*2\"\n\" 3/2 \"\n\" 3+5 / 2 \"",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1026",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6166,
      "dislikes": 851,
      "similarQuestions": "[{\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator III\", \"titleSlug\": \"basic-calculator-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485964,
      "commentCount": 104,
      "topLevelCommentCount": 56
    },
    "classAndMethodDefinition": "def calculate(self, s):\n        if not s:"
  },
  {
    "stat": {
      "question_id": 402,
      "question__article__live": true,
      "question__article__slug": "remove-k-digits",
      "question__article__has_video_solution": false,
      "question__title": "Remove K Digits",
      "question__title_slug": "remove-k-digits",
      "question__hide": false,
      "total_acs": 512163,
      "total_submitted": 1512206,
      "frontend_question_id": 402,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-k-digits",
      "questionId": "402",
      "questionFrontendId": "402",
      "questionTitle": "Remove K Digits",
      "titleSlug": "remove-k-digits",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given string num representing a non-negative integer <code>num</code>, and an integer <code>k</code>, return <em>the smallest possible integer after removing</em> <code>k</code> <em>digits from</em> <code>num</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;1432219&quot;, k = 3\n<strong>Output:</strong> &quot;1219&quot;\n<strong>Explanation:</strong> Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;10200&quot;, k = 1\n<strong>Output:</strong> &quot;200&quot;\n<strong>Explanation:</strong> Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;10&quot;, k = 2\n<strong>Output:</strong> &quot;0&quot;\n<strong>Explanation:</strong> Remove all the digits from the number and it is left with nothing which is 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= num.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>num</code> consists of only digits.</li>\n\t<li><code>num</code> does not have any leading zeros except for the zero itself.</li>\n</ul>\n",
      "exampleTestcases": "\"1432219\"\n3\n\"10200\"\n1\n\"10\"\n2",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "768",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9556,
      "dislikes": 494,
      "similarQuestions": "[{\"title\": \"Create Maximum Number\", \"titleSlug\": \"create-maximum-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Monotone Increasing Digits\", \"titleSlug\": \"monotone-increasing-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Most Competitive Subsequence\", \"titleSlug\": \"find-the-most-competitive-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Append K Integers With Minimal Sum\", \"titleSlug\": \"append-k-integers-with-minimal-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Remove Digit From Number to Maximize Result\", \"titleSlug\": \"remove-digit-from-number-to-maximize-result\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Make a Special Number\", \"titleSlug\": \"minimum-operations-to-make-a-special-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486139,
      "commentCount": 416,
      "topLevelCommentCount": 213
    },
    "classAndMethodDefinition": "class Solution:\n    def removeKdigits(self, num: str, k: int) -> str:"
  },
  {
    "stat": {
      "question_id": 232,
      "question__article__live": true,
      "question__article__slug": "implement-queue-using-stacks",
      "question__article__has_video_solution": false,
      "question__title": "Implement Queue using Stacks",
      "question__title_slug": "implement-queue-using-stacks",
      "question__hide": false,
      "total_acs": 1007453,
      "total_submitted": 1506349,
      "frontend_question_id": 232,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/implement-queue-using-stacks",
      "questionId": "232",
      "questionFrontendId": "232",
      "questionTitle": "Implement Queue using Stacks",
      "titleSlug": "implement-queue-using-stacks",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Implement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (<code>push</code>, <code>peek</code>, <code>pop</code>, and <code>empty</code>).</p>\n\n<p>Implement the <code>MyQueue</code> class:</p>\n\n<ul>\n\t<li><code>void push(int x)</code> Pushes element x to the back of the queue.</li>\n\t<li><code>int pop()</code> Removes the element from the front of the queue and returns it.</li>\n\t<li><code>int peek()</code> Returns the element at the front of the queue.</li>\n\t<li><code>boolean empty()</code> Returns <code>true</code> if the queue is empty, <code>false</code> otherwise.</li>\n</ul>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n\t<li>You must use <strong>only</strong> standard operations of a stack, which means only <code>push to top</code>, <code>peek/pop from top</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li>\n\t<li>Depending on your language, the stack may not be supported natively. You may simulate a stack using a list or deque (double-ended queue) as long as you use only a stack&#39;s standard operations.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyQueue&quot;, &quot;push&quot;, &quot;push&quot;, &quot;peek&quot;, &quot;pop&quot;, &quot;empty&quot;]\n[[], [1], [2], [], [], []]\n<strong>Output</strong>\n[null, null, null, 1, 1, false]\n\n<strong>Explanation</strong>\nMyQueue myQueue = new MyQueue();\nmyQueue.push(1); // queue is: [1]\nmyQueue.push(2); // queue is: [1, 2] (leftmost is front of the queue)\nmyQueue.peek(); // return 1\nmyQueue.pop(); // return 1, queue is [2]\nmyQueue.empty(); // return false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= x &lt;= 9</code></li>\n\t<li>At most <code>100</code>&nbsp;calls will be made to <code>push</code>, <code>pop</code>, <code>peek</code>, and <code>empty</code>.</li>\n\t<li>All the calls to <code>pop</code> and <code>peek</code> are valid.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow-up:</strong> Can you implement the queue such that each operation is <strong><a href=\"https://en.wikipedia.org/wiki/Amortized_analysis\" target=\"_blank\">amortized</a></strong> <code>O(1)</code> time complexity? In other words, performing <code>n</code> operations will take overall <code>O(n)</code> time even if one of those operations may take longer.</p>\n",
      "exampleTestcases": "[\"MyQueue\",\"push\",\"push\",\"peek\",\"pop\",\"empty\"]\n[[],[1],[2],[],[],[]]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "47",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7706,
      "dislikes": 439,
      "similarQuestions": "[{\"title\": \"Implement Stack using Queues\", \"titleSlug\": \"implement-stack-using-queues\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485969,
      "commentCount": 193,
      "topLevelCommentCount": 101
    },
    "classAndMethodDefinition": "def __init__(self):\n        self.in_stk = []"
  },
  {
    "stat": {
      "question_id": 733,
      "question__article__live": true,
      "question__article__slug": "flood-fill",
      "question__article__has_video_solution": false,
      "question__title": "Flood Fill",
      "question__title_slug": "flood-fill",
      "question__hide": false,
      "total_acs": 973758,
      "total_submitted": 1504174,
      "frontend_question_id": 733,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/flood-fill",
      "questionId": "733",
      "questionFrontendId": "733",
      "questionTitle": "Flood Fill",
      "titleSlug": "flood-fill",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>An image is represented by an <code>m x n</code> integer grid <code>image</code> where <code>image[i][j]</code> represents the pixel value of the image.</p>\n\n<p>You are also given three integers <code>sr</code>, <code>sc</code>, and <code>color</code>. You should perform a <strong>flood fill</strong> on the image starting from the pixel <code>image[sr][sc]</code>.</p>\n\n<p>To perform a <strong>flood fill</strong>, consider the starting pixel, plus any pixels connected <strong>4-directionally</strong> to the starting pixel of the same color as the starting pixel, plus any pixels connected <strong>4-directionally</strong> to those pixels (also with the same color), and so on. Replace the color of all of the aforementioned pixels with <code>color</code>.</p>\n\n<p>Return <em>the modified image after performing the flood fill</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">image = [[1,1,1],[1,1,0],[1,0,1]], sr = 1, sc = 1, color = 2</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[[2,2,2],[2,2,0],[2,0,1]]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/06/01/flood1-grid.jpg\" style=\"width: 613px; height: 253px;\" /></p>\n\n<p>From the center of the image with position <code>(sr, sc) = (1, 1)</code> (i.e., the red pixel), all pixels connected by a path of the same color as the starting pixel (i.e., the blue pixels) are colored with the new color.</p>\n\n<p>Note the bottom corner is <strong>not</strong> colored 2, because it is not 4-directionally connected to the starting pixel.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">image = [[0,0,0],[0,0,0]], sr = 0, sc = 0, color = 0</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[[0,0,0],[0,0,0]]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The starting pixel is already colored with 0, which is the same as the target color. Therefore, no changes are made to the image.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == image.length</code></li>\n\t<li><code>n == image[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\n\t<li><code>0 &lt;= image[i][j], color &lt; 2<sup>16</sup></code></li>\n\t<li><code>0 &lt;= sr &lt; m</code></li>\n\t<li><code>0 &lt;= sc &lt; n</code></li>\n</ul>\n",
      "exampleTestcases": "[[1,1,1],[1,1,0],[1,0,1]]\n1\n1\n2\n[[0,0,0],[0,0,0]]\n0\n0\n0",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "Write a recursive function that paints the pixel if it's the correct color, then recurses on neighboring pixels."
      ],
      "solution": {
        "id": "307",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8487,
      "dislikes": 883,
      "similarQuestions": "[{\"title\": \"Island Perimeter\", \"titleSlug\": \"island-perimeter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486445,
      "commentCount": 214,
      "topLevelCommentCount": 138
    },
    "classAndMethodDefinition": "def fill(self, image, sr, sc, color, cur):\n        # If sr is less than 0 or greater equals to the length of image..."
  },
  {
    "stat": {
      "question_id": 149,
      "question__article__live": true,
      "question__article__slug": "max-points-on-a-line",
      "question__article__has_video_solution": false,
      "question__title": "Max Points on a Line",
      "question__title_slug": "max-points-on-a-line",
      "question__hide": false,
      "total_acs": 411834,
      "total_submitted": 1502711,
      "frontend_question_id": 149,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/max-points-on-a-line",
      "questionId": "149",
      "questionFrontendId": "149",
      "questionTitle": "Max Points on a Line",
      "titleSlug": "max-points-on-a-line",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an array of <code>points</code> where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> represents a point on the <strong>X-Y</strong> plane, return <em>the maximum number of points that lie on the same straight line</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/25/plane1.jpg\" style=\"width: 300px; height: 294px;\" />\n<pre>\n<strong>Input:</strong> points = [[1,1],[2,2],[3,3]]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/25/plane2.jpg\" style=\"width: 300px; height: 294px;\" />\n<pre>\n<strong>Input:</strong> points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= points.length &lt;= 300</code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n\t<li>All the <code>points</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[[1,1],[2,2],[3,3]]\n[[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Geometry",
          "slug": "geometry",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1640",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4208,
      "dislikes": 505,
      "similarQuestions": "[{\"title\": \"Line Reflection\", \"titleSlug\": \"line-reflection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Lines to Cover Points\", \"titleSlug\": \"minimum-number-of-lines-to-cover-points\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Lines to Represent a Line Chart\", \"titleSlug\": \"minimum-lines-to-represent-a-line-chart\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485886,
      "commentCount": 273,
      "topLevelCommentCount": 169
    },
    "classAndMethodDefinition": "def maxPoints(self, points: List[List[int]]) -> int:\n        if len(points) <= 2:"
  },
  {
    "stat": {
      "question_id": 338,
      "question__article__live": true,
      "question__article__slug": "counting-bits",
      "question__article__has_video_solution": false,
      "question__title": "Counting Bits",
      "question__title_slug": "counting-bits",
      "question__hide": false,
      "total_acs": 1183065,
      "total_submitted": 1501835,
      "frontend_question_id": 338,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/counting-bits",
      "questionId": "338",
      "questionFrontendId": "338",
      "questionTitle": "Counting Bits",
      "titleSlug": "counting-bits",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em>an array </em><code>ans</code><em> of length </em><code>n + 1</code><em> such that for each </em><code>i</code><em> </em>(<code>0 &lt;= i &lt;= n</code>)<em>, </em><code>ans[i]</code><em> is the <strong>number of </strong></em><code>1</code><em><strong>&#39;s</strong> in the binary representation of </em><code>i</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> [0,1,1]\n<strong>Explanation:</strong>\n0 --&gt; 0\n1 --&gt; 1\n2 --&gt; 10\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> [0,1,1,2,1,2]\n<strong>Explanation:</strong>\n0 --&gt; 0\n1 --&gt; 1\n2 --&gt; 10\n3 --&gt; 11\n4 --&gt; 100\n5 --&gt; 101\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>It is very easy to come up with a solution with a runtime of <code>O(n log n)</code>. Can you do it in linear time <code>O(n)</code> and possibly in a single pass?</li>\n\t<li>Can you do it without using any built-in function (i.e., like <code>__builtin_popcount</code> in C++)?</li>\n</ul>\n",
      "exampleTestcases": "2\n5",
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [
        "You should make use of what you have produced already.",
        "Divide the numbers in ranges like [2-3], [4-7], [8-15] and so on. And try to generate new range from previous.",
        "Or does the odd/even status of the number help you in calculating the number of 1s?"
      ],
      "solution": {
        "id": "73",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11167,
      "dislikes": 545,
      "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Values at Indices With K Set Bits\", \"titleSlug\": \"sum-of-values-at-indices-with-k-set-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the K-or of an Array\", \"titleSlug\": \"find-the-k-or-of-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486075,
      "commentCount": 129,
      "topLevelCommentCount": 83
    },
    "classAndMethodDefinition": "def countBits(self, num: int) -> List[int]:\n    counter = [0]"
  },
  {
    "stat": {
      "question_id": 367,
      "question__article__live": true,
      "question__article__slug": "valid-perfect-square",
      "question__article__has_video_solution": false,
      "question__title": "Valid Perfect Square",
      "question__title_slug": "valid-perfect-square",
      "question__hide": false,
      "total_acs": 652342,
      "total_submitted": 1488570,
      "frontend_question_id": 367,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-perfect-square",
      "questionId": "367",
      "questionFrontendId": "367",
      "questionTitle": "Valid Perfect Square",
      "titleSlug": "valid-perfect-square",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a positive integer num, return <code>true</code> <em>if</em> <code>num</code> <em>is a perfect square or</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>A <strong>perfect square</strong> is an integer that is the square of an integer. In other words, it is the product of some integer with itself.</p>\n\n<p>You must not use any built-in library function, such as <code>sqrt</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 16\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We return true because 4 * 4 = 16 and 4 is an integer.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 14\n<strong>Output:</strong> false\n<strong>Explanation:</strong> We return false because 3.742 * 3.742 = 14 and 3.742 is not an integer.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "16\n14",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "792",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4264,
      "dislikes": 310,
      "similarQuestions": "[{\"title\": \"Sqrt(x)\", \"titleSlug\": \"sqrtx\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Square Numbers\", \"titleSlug\": \"sum-of-square-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486104,
      "commentCount": 114,
      "topLevelCommentCount": 58
    },
    "classAndMethodDefinition": "def isPerfectSquare(self, num):\n            \"\"\""
  },
  {
    "stat": {
      "question_id": 30,
      "question__article__live": true,
      "question__article__slug": "substring-with-concatenation-of-all-words",
      "question__article__has_video_solution": true,
      "question__title": "Substring with Concatenation of All Words",
      "question__title_slug": "substring-with-concatenation-of-all-words",
      "question__hide": false,
      "total_acs": 483253,
      "total_submitted": 1483753,
      "frontend_question_id": 30,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words",
      "questionId": "30",
      "questionFrontendId": "30",
      "questionTitle": "Substring with Concatenation of All Words",
      "titleSlug": "substring-with-concatenation-of-all-words",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code> and an array of strings <code>words</code>. All the strings of <code>words</code> are of <strong>the same length</strong>.</p>\n\n<p>A <strong>concatenated string</strong> is a string that exactly contains all the strings of any permutation of <code>words</code> concatenated.</p>\n\n<ul>\n\t<li>For example, if <code>words = [&quot;ab&quot;,&quot;cd&quot;,&quot;ef&quot;]</code>, then <code>&quot;abcdef&quot;</code>, <code>&quot;abefcd&quot;</code>, <code>&quot;cdabef&quot;</code>, <code>&quot;cdefab&quot;</code>, <code>&quot;efabcd&quot;</code>, and <code>&quot;efcdab&quot;</code> are all concatenated strings. <code>&quot;acdbef&quot;</code> is not a concatenated string because it is not the concatenation of any permutation of <code>words</code>.</li>\n</ul>\n\n<p>Return an array of <em>the starting indices</em> of all the concatenated substrings in <code>s</code>. You can return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;barfoothefoobarman&quot;, words = [&quot;foo&quot;,&quot;bar&quot;]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[0,9]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The substring starting at 0 is <code>&quot;barfoo&quot;</code>. It is the concatenation of <code>[&quot;bar&quot;,&quot;foo&quot;]</code> which is a permutation of <code>words</code>.<br />\nThe substring starting at 9 is <code>&quot;foobar&quot;</code>. It is the concatenation of <code>[&quot;foo&quot;,&quot;bar&quot;]</code> which is a permutation of <code>words</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;wordgoodgoodgoodbestword&quot;, words = [&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>There is no concatenated substring.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;barfoofoobarthefoobarman&quot;, words = [&quot;bar&quot;,&quot;foo&quot;,&quot;the&quot;]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[6,9,12]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The substring starting at 6 is <code>&quot;foobarthe&quot;</code>. It is the concatenation of <code>[&quot;foo&quot;,&quot;bar&quot;,&quot;the&quot;]</code>.<br />\nThe substring starting at 9 is <code>&quot;barthefoo&quot;</code>. It is the concatenation of <code>[&quot;bar&quot;,&quot;the&quot;,&quot;foo&quot;]</code>.<br />\nThe substring starting at 12 is <code>&quot;thefoobar&quot;</code>. It is the concatenation of <code>[&quot;the&quot;,&quot;foo&quot;,&quot;bar&quot;]</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= words.length &lt;= 5000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 30</code></li>\n\t<li><code>s</code> and <code>words[i]</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"barfoothefoobarman\"\n[\"foo\",\"bar\"]\n\"wordgoodgoodgoodbestword\"\n[\"word\",\"good\",\"best\",\"word\"]\n\"barfoofoobarthefoobarman\"\n[\"bar\",\"foo\",\"the\"]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1295",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1907,
      "dislikes": 277,
      "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485767,
      "commentCount": 207,
      "topLevelCommentCount": 140
    },
    "classAndMethodDefinition": "def findSubstring(self, s: str, words: List[str]) -> List[int]:\n        word_len = len(words[0])"
  },
  {
    "stat": {
      "question_id": 273,
      "question__article__live": true,
      "question__article__slug": "integer-to-english-words",
      "question__article__has_video_solution": false,
      "question__title": "Integer to English Words",
      "question__title_slug": "integer-to-english-words",
      "question__hide": false,
      "total_acs": 503590,
      "total_submitted": 1482561,
      "frontend_question_id": 273,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/integer-to-english-words",
      "questionId": "273",
      "questionFrontendId": "273",
      "questionTitle": "Integer to English Words",
      "titleSlug": "integer-to-english-words",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Convert a non-negative integer <code>num</code> to its English words representation.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 123\n<strong>Output:</strong> &quot;One Hundred Twenty Three&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 12345\n<strong>Output:</strong> &quot;Twelve Thousand Three Hundred Forty Five&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 1234567\n<strong>Output:</strong> &quot;One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "123\n12345\n1234567",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [
        "Did you see a pattern in dividing the number into chunk of words? For example, 123 and 123000.",
        "Group the number by thousands (3 digits). You can write a helper function that takes a number less than 1000 and convert just that chunk to words.",
        "There are many edge cases. What are some good test cases? Does your code work with input such as 0? Or 1000010? (middle chunk is zero and should not be printed out)"
      ],
      "solution": {
        "id": "2395",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3609,
      "dislikes": 6705,
      "similarQuestions": "[{\"title\": \"Integer to Roman\", \"titleSlug\": \"integer-to-roman\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486010,
      "commentCount": 416,
      "topLevelCommentCount": 261
    },
    "classAndMethodDefinition": "def numberToWords(self, num):\n        to19 = 'One Two Three Four Five Six Seven Eight Nine Ten Eleven Twelve ' \\\\"
  },
  {
    "stat": {
      "question_id": 409,
      "question__article__live": true,
      "question__article__slug": "longest-palindrome",
      "question__article__has_video_solution": false,
      "question__title": "Longest Palindrome",
      "question__title_slug": "longest-palindrome",
      "question__hide": false,
      "total_acs": 816177,
      "total_submitted": 1474195,
      "frontend_question_id": 409,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-palindrome",
      "questionId": "409",
      "questionFrontendId": "409",
      "questionTitle": "Longest Palindrome",
      "titleSlug": "longest-palindrome",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> which consists of lowercase or uppercase letters, return the length of the <strong>longest <span data-keyword=\"palindrome-string\">palindrome</span></strong>&nbsp;that can be built with those letters.</p>\n\n<p>Letters are <strong>case sensitive</strong>, for example, <code>&quot;Aa&quot;</code> is not considered a palindrome.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abccccdd&quot;\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> One longest palindrome that can be built is &quot;dccaccd&quot;, whose length is 7.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The longest palindrome that can be built is &quot;a&quot;, whose length is 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 2000</code></li>\n\t<li><code>s</code> consists of lowercase <strong>and/or</strong> uppercase English&nbsp;letters only.</li>\n</ul>\n",
      "exampleTestcases": "\"abccccdd\"\n\"a\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2330",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5931,
      "dislikes": 412,
      "similarQuestions": "[{\"title\": \"Palindrome Permutation\", \"titleSlug\": \"palindrome-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longest Palindrome by Concatenating Two Letter Words\", \"titleSlug\": \"longest-palindrome-by-concatenating-two-letter-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Largest Palindromic Number\", \"titleSlug\": \"largest-palindromic-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486146,
      "commentCount": 336,
      "topLevelCommentCount": 192
    },
    "classAndMethodDefinition": "class Solution:\n    def longestPalindrome(self, s: str) -> int:"
  },
  {
    "stat": {
      "question_id": 211,
      "question__article__live": true,
      "question__article__slug": "add-and-search-word",
      "question__article__has_video_solution": false,
      "question__title": "Design Add and Search Words Data Structure",
      "question__title_slug": "design-add-and-search-words-data-structure",
      "question__hide": false,
      "total_acs": 672787,
      "total_submitted": 1468726,
      "frontend_question_id": 211,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/design-add-and-search-words-data-structure",
      "questionId": "211",
      "questionFrontendId": "211",
      "questionTitle": "Design Add and Search Words Data Structure",
      "titleSlug": "design-add-and-search-words-data-structure",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Design a data structure that supports adding new words and finding if a string matches any previously added string.</p>\n\n<p>Implement the <code>WordDictionary</code> class:</p>\n\n<ul>\n\t<li><code>WordDictionary()</code>&nbsp;Initializes the object.</li>\n\t<li><code>void addWord(word)</code> Adds <code>word</code> to the data structure, it can be matched later.</li>\n\t<li><code>bool search(word)</code>&nbsp;Returns <code>true</code> if there is any string in the data structure that matches <code>word</code>&nbsp;or <code>false</code> otherwise. <code>word</code> may contain dots <code>&#39;.&#39;</code> where dots can be matched with any letter.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;WordDictionary&quot;,&quot;addWord&quot;,&quot;addWord&quot;,&quot;addWord&quot;,&quot;search&quot;,&quot;search&quot;,&quot;search&quot;,&quot;search&quot;]\n[[],[&quot;bad&quot;],[&quot;dad&quot;],[&quot;mad&quot;],[&quot;pad&quot;],[&quot;bad&quot;],[&quot;.ad&quot;],[&quot;b..&quot;]]\n<strong>Output</strong>\n[null,null,null,null,false,true,true,true]\n\n<strong>Explanation</strong>\nWordDictionary wordDictionary = new WordDictionary();\nwordDictionary.addWord(&quot;bad&quot;);\nwordDictionary.addWord(&quot;dad&quot;);\nwordDictionary.addWord(&quot;mad&quot;);\nwordDictionary.search(&quot;pad&quot;); // return False\nwordDictionary.search(&quot;bad&quot;); // return True\nwordDictionary.search(&quot;.ad&quot;); // return True\nwordDictionary.search(&quot;b..&quot;); // return True\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 25</code></li>\n\t<li><code>word</code> in <code>addWord</code> consists of lowercase English letters.</li>\n\t<li><code>word</code> in <code>search</code> consist of <code>&#39;.&#39;</code> or lowercase English letters.</li>\n\t<li>There will be at most <code>2</code> dots in <code>word</code> for <code>search</code> queries.</li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>addWord</code> and <code>search</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"WordDictionary\",\"addWord\",\"addWord\",\"addWord\",\"search\",\"search\",\"search\",\"search\"]\n[[],[\"bad\"],[\"dad\"],[\"mad\"],[\"pad\"],[\"bad\"],[\".ad\"],[\"b..\"]]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        }
      ],
      "hints": [
        "You should be familiar with how a Trie works. If not, please work on this problem: <a href=\"https://leetcode.com/problems/implement-trie-prefix-tree/\">Implement Trie (Prefix Tree)</a> first."
      ],
      "solution": {
        "id": "972",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7619,
      "dislikes": 458,
      "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Prefix and Suffix Search\", \"titleSlug\": \"prefix-and-suffix-search\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Match Substring After Replacement\", \"titleSlug\": \"match-substring-after-replacement\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Sum of Prefix Scores of Strings\", \"titleSlug\": \"sum-of-prefix-scores-of-strings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Prefix and Suffix Pairs II\", \"titleSlug\": \"count-prefix-and-suffix-pairs-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Prefix and Suffix Pairs I\", \"titleSlug\": \"count-prefix-and-suffix-pairs-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485948,
      "commentCount": 130,
      "topLevelCommentCount": 81
    },
    "classAndMethodDefinition": "def __init__(self):\n        "
  },
  {
    "stat": {
      "question_id": 229,
      "question__article__live": true,
      "question__article__slug": "majority-element-ii",
      "question__article__has_video_solution": false,
      "question__title": "Majority Element II",
      "question__title_slug": "majority-element-ii",
      "question__hide": false,
      "total_acs": 765995,
      "total_submitted": 1459580,
      "frontend_question_id": 229,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/majority-element-ii",
      "questionId": "229",
      "questionFrontendId": "229",
      "questionTitle": "Majority Element II",
      "titleSlug": "majority-element-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array of size <code>n</code>, find all elements that appear more than <code>&lfloor; n/3 &rfloor;</code> times.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,3]\n<strong>Output:</strong> [3]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2]\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you solve the problem in linear time and in <code>O(1)</code> space?</p>\n",
      "exampleTestcases": "[3,2,3]\n[1]\n[1,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [
        "Think about the possible number of elements that can appear more than ⌊ n/3 ⌋ times in the array.",
        "It can be at most two. Why?",
        "Consider using Boyer-Moore Voting Algorithm, which is efficient for finding elements that appear more than a certain threshold."
      ],
      "solution": {
        "id": "995",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9770,
      "dislikes": 433,
      "similarQuestions": "[{\"title\": \"Majority Element\", \"titleSlug\": \"majority-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Check If a Number Is Majority Element in a Sorted Array\", \"titleSlug\": \"check-if-a-number-is-majority-element-in-a-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Most Frequent Even Element\", \"titleSlug\": \"most-frequent-even-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485966,
      "commentCount": 224,
      "topLevelCommentCount": 112
    },
    "classAndMethodDefinition": "def majorityElement(self, nums):\n        if not nums:"
  },
  {
    "stat": {
      "question_id": 547,
      "question__article__live": true,
      "question__article__slug": "number-of-provinces",
      "question__article__has_video_solution": false,
      "question__title": "Number of Provinces",
      "question__title_slug": "number-of-provinces",
      "question__hide": false,
      "total_acs": 977868,
      "total_submitted": 1458918,
      "frontend_question_id": 547,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-provinces",
      "questionId": "547",
      "questionFrontendId": "547",
      "questionTitle": "Number of Provinces",
      "titleSlug": "number-of-provinces",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> cities. Some of them are connected, while some are not. If city <code>a</code> is connected directly with city <code>b</code>, and city <code>b</code> is connected directly with city <code>c</code>, then city <code>a</code> is connected indirectly with city <code>c</code>.</p>\n\n<p>A <strong>province</strong> is a group of directly or indirectly connected cities and no other cities outside of the group.</p>\n\n<p>You are given an <code>n x n</code> matrix <code>isConnected</code> where <code>isConnected[i][j] = 1</code> if the <code>i<sup>th</sup></code> city and the <code>j<sup>th</sup></code> city are directly connected, and <code>isConnected[i][j] = 0</code> otherwise.</p>\n\n<p>Return <em>the total number of <strong>provinces</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/24/graph1.jpg\" style=\"width: 222px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> isConnected = [[1,1,0],[1,1,0],[0,0,1]]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/24/graph2.jpg\" style=\"width: 222px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> isConnected = [[1,0,0],[0,1,0],[0,0,1]]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n\t<li><code>n == isConnected.length</code></li>\n\t<li><code>n == isConnected[i].length</code></li>\n\t<li><code>isConnected[i][j]</code> is <code>1</code> or <code>0</code>.</li>\n\t<li><code>isConnected[i][i] == 1</code></li>\n\t<li><code>isConnected[i][j] == isConnected[j][i]</code></li>\n</ul>\n",
      "exampleTestcases": "[[1,1,0],[1,1,0],[0,0,1]]\n[[1,0,0],[0,1,0],[0,0,1]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1848",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9829,
      "dislikes": 365,
      "similarQuestions": "[{\"title\": \"Number of Connected Components in an Undirected Graph\", \"titleSlug\": \"number-of-connected-components-in-an-undirected-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Robot Return to Origin\", \"titleSlug\": \"robot-return-to-origin\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity\", \"titleSlug\": \"sentence-similarity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity II\", \"titleSlug\": \"sentence-similarity-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"The Earliest Moment When Everyone Become Friends\", \"titleSlug\": \"the-earliest-moment-when-everyone-become-friends\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Detonate the Maximum Bombs\", \"titleSlug\": \"detonate-the-maximum-bombs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486276,
      "commentCount": 141,
      "topLevelCommentCount": 93
    },
    "classAndMethodDefinition": "def __init__(self, n):\n        self.u = list(range(n))"
  },
  {
    "stat": {
      "question_id": 148,
      "question__article__live": true,
      "question__article__slug": "sort-list",
      "question__article__has_video_solution": false,
      "question__title": "Sort List",
      "question__title_slug": "sort-list",
      "question__hide": false,
      "total_acs": 861054,
      "total_submitted": 1452334,
      "frontend_question_id": 148,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sort-list",
      "questionId": "148",
      "questionFrontendId": "148",
      "questionTitle": "Sort List",
      "titleSlug": "sort-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a linked list, return <em>the list after sorting it in <strong>ascending order</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/14/sort_list_1.jpg\" style=\"width: 450px; height: 194px;\" />\n<pre>\n<strong>Input:</strong> head = [4,2,1,3]\n<strong>Output:</strong> [1,2,3,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/14/sort_list_2.jpg\" style=\"width: 550px; height: 184px;\" />\n<pre>\n<strong>Input:</strong> head = [-1,5,3,4,0]\n<strong>Output:</strong> [-1,0,3,4,5]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[0, 5 * 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Can you sort the linked list in <code>O(n logn)</code> time and <code>O(1)</code> memory (i.e. constant space)?</p>\n",
      "exampleTestcases": "[4,2,1,3]\n[-1,5,3,4,0]\n[]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1006",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11732,
      "dislikes": 355,
      "similarQuestions": "[{\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort Colors\", \"titleSlug\": \"sort-colors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insertion Sort List\", \"titleSlug\": \"insertion-sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sort Linked List Already Sorted Using Absolute Values\", \"titleSlug\": \"sort-linked-list-already-sorted-using-absolute-values\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485885,
      "commentCount": 142,
      "topLevelCommentCount": 90
    },
    "classAndMethodDefinition": "def sortList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n  dummy = ListNode(0)"
  },
  {
    "stat": {
      "question_id": 342,
      "question__article__live": true,
      "question__article__slug": "power-of-four",
      "question__article__has_video_solution": false,
      "question__title": "Power of Four",
      "question__title_slug": "power-of-four",
      "question__hide": false,
      "total_acs": 701414,
      "total_submitted": 1450652,
      "frontend_question_id": 342,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/power-of-four",
      "questionId": "342",
      "questionFrontendId": "342",
      "questionTitle": "Power of Four",
      "titleSlug": "power-of-four",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em><code>true</code> if it is a power of four. Otherwise, return <code>false</code></em>.</p>\n\n<p>An integer <code>n</code> is a power of four, if there exists an integer <code>x</code> such that <code>n == 4<sup>x</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 16\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 5\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it without loops/recursion?",
      "exampleTestcases": "16\n5\n1",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "767",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3936,
      "dislikes": 398,
      "similarQuestions": "[{\"title\": \"Power of Two\", \"titleSlug\": \"power-of-two\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Three\", \"titleSlug\": \"power-of-three\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486079,
      "commentCount": 167,
      "topLevelCommentCount": 113
    },
    "classAndMethodDefinition": "class Solution:\n    def isPowerOfFour(self, n):"
  },
  {
    "stat": {
      "question_id": 119,
      "question__article__live": true,
      "question__article__slug": "pascals-triangle-ii",
      "question__article__has_video_solution": false,
      "question__title": "Pascal's Triangle II",
      "question__title_slug": "pascals-triangle-ii",
      "question__hide": false,
      "total_acs": 928820,
      "total_submitted": 1438264,
      "frontend_question_id": 119,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/pascals-triangle-ii",
      "questionId": "119",
      "questionFrontendId": "119",
      "questionTitle": "Pascal's Triangle II",
      "titleSlug": "pascals-triangle-ii",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>rowIndex</code>, return the <code>rowIndex<sup>th</sup></code> (<strong>0-indexed</strong>) row of the <strong>Pascal&#39;s triangle</strong>.</p>\n\n<p>In <strong>Pascal&#39;s triangle</strong>, each number is the sum of the two numbers directly above it as shown:</p>\n<img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif\" style=\"height:240px; width:260px\" />\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> rowIndex = 3\n<strong>Output:</strong> [1,3,3,1]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> rowIndex = 0\n<strong>Output:</strong> [1]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> rowIndex = 1\n<strong>Output:</strong> [1,1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= rowIndex &lt;= 33</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you optimize your algorithm to use only <code>O(rowIndex)</code> extra space?</p>\n",
      "exampleTestcases": "3\n0\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "868",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4860,
      "dislikes": 345,
      "similarQuestions": "[{\"title\": \"Pascal's Triangle\", \"titleSlug\": \"pascals-triangle\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Triangular Sum of an Array\", \"titleSlug\": \"find-triangular-sum-of-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485856,
      "commentCount": 100,
      "topLevelCommentCount": 68
    },
    "classAndMethodDefinition": "def getRow(self, r):\n        ans = [1]*(r+1);"
  },
  {
    "stat": {
      "question_id": 120,
      "question__article__live": true,
      "question__article__slug": "triangle",
      "question__article__has_video_solution": false,
      "question__title": "Triangle",
      "question__title_slug": "triangle",
      "question__hide": false,
      "total_acs": 827054,
      "total_submitted": 1436736,
      "frontend_question_id": 120,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/triangle",
      "questionId": "120",
      "questionFrontendId": "120",
      "questionTitle": "Triangle",
      "titleSlug": "triangle",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a <code>triangle</code> array, return <em>the minimum path sum from top to bottom</em>.</p>\n\n<p>For each step, you may move to an adjacent number of the row below. More formally, if you are on index <code>i</code> on the current row, you may move to either index <code>i</code> or index <code>i + 1</code> on the next row.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> The triangle looks like:\n   <u>2</u>\n  <u>3</u> 4\n 6 <u>5</u> 7\n4 <u>1</u> 8 3\nThe minimum path sum from top to bottom is 2 + 3 + 5 + 1 = 11 (underlined above).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> triangle = [[-10]]\n<strong>Output:</strong> -10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= triangle.length &lt;= 200</code></li>\n\t<li><code>triangle[0].length == 1</code></li>\n\t<li><code>triangle[i].length == triangle[i - 1].length + 1</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= triangle[i][j] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you&nbsp;do this using only <code>O(n)</code> extra space, where <code>n</code> is the total number of rows in the triangle?",
      "exampleTestcases": "[[2],[3,4],[6,5,7],[4,1,8,3]]\n[[-10]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1134",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9604,
      "dislikes": 561,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485857,
      "commentCount": 152,
      "topLevelCommentCount": 96
    },
    "classAndMethodDefinition": "def minimumTotal(self, triangle: List[List[int]]) -> int:\n        @cache"
  },
  {
    "stat": {
      "question_id": 394,
      "question__article__live": true,
      "question__article__slug": "decode-string",
      "question__article__has_video_solution": false,
      "question__title": "Decode String",
      "question__title_slug": "decode-string",
      "question__hide": false,
      "total_acs": 856327,
      "total_submitted": 1433518,
      "frontend_question_id": 394,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/decode-string",
      "questionId": "394",
      "questionFrontendId": "394",
      "questionTitle": "Decode String",
      "titleSlug": "decode-string",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an encoded string, return its decoded string.</p>\n\n<p>The encoding rule is: <code>k[encoded_string]</code>, where the <code>encoded_string</code> inside the square brackets is being repeated exactly <code>k</code> times. Note that <code>k</code> is guaranteed to be a positive integer.</p>\n\n<p>You may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc. Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, <code>k</code>. For example, there will not be input like <code>3a</code> or <code>2[4]</code>.</p>\n\n<p>The test cases are generated so that the length of the output will never exceed <code>10<sup>5</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;3[a]2[bc]&quot;\n<strong>Output:</strong> &quot;aaabcbc&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;3[a2[c]]&quot;\n<strong>Output:</strong> &quot;accaccacc&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;2[abc]3[cd]ef&quot;\n<strong>Output:</strong> &quot;abcabccdcdcdef&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 30</code></li>\n\t<li><code>s</code> consists of lowercase English letters, digits, and square brackets <code>&#39;[]&#39;</code>.</li>\n\t<li><code>s</code> is guaranteed to be <strong>a valid</strong> input.</li>\n\t<li>All the integers in <code>s</code> are in the range <code>[1, 300]</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"3[a]2[bc]\"\n\"3[a2[c]]\"\n\"2[abc]3[cd]ef\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1013",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12779,
      "dislikes": 624,
      "similarQuestions": "[{\"title\": \"Encode String with Shortest Length\", \"titleSlug\": \"encode-string-with-shortest-length\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Atoms\", \"titleSlug\": \"number-of-atoms\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Brace Expansion\", \"titleSlug\": \"brace-expansion\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486131,
      "commentCount": 121,
      "topLevelCommentCount": 82
    },
    "classAndMethodDefinition": "def decodeString(self, s):\n        stack = []; curNum = 0; curString = \\'\\'"
  },
  {
    "stat": {
      "question_id": 190,
      "question__article__live": true,
      "question__article__slug": "reverse-bits",
      "question__article__has_video_solution": false,
      "question__title": "Reverse Bits",
      "question__title_slug": "reverse-bits",
      "question__hide": false,
      "total_acs": 849771,
      "total_submitted": 1417031,
      "frontend_question_id": 190,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-bits",
      "questionId": "190",
      "questionFrontendId": "190",
      "questionTitle": "Reverse Bits",
      "titleSlug": "reverse-bits",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Reverse bits of a given 32 bits unsigned integer.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Note that in some languages, such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer&#39;s internal binary representation is the same, whether it is signed or unsigned.</li>\n\t<li>In Java, the compiler represents the signed integers using <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" target=\"_blank\">2&#39;s complement notation</a>. Therefore, in <strong class=\"example\">Example 2</strong> above, the input represents the signed integer <code>-3</code> and the output represents the signed integer <code>-1073741825</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 00000010100101000001111010011100\n<strong>Output:</strong>    964176192 (00111001011110000010100101000000)\n<strong>Explanation: </strong>The input binary string <strong>00000010100101000001111010011100</strong> represents the unsigned integer 43261596, so return 964176192 which its binary representation is <strong>00111001011110000010100101000000</strong>.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 11111111111111111111111111111101\n<strong>Output:</strong>   3221225471 (10111111111111111111111111111111)\n<strong>Explanation: </strong>The input binary string <strong>11111111111111111111111111111101</strong> represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is <strong>10111111111111111111111111111111</strong>.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The input must be a <strong>binary string</strong> of length <code>32</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> If this function is called many times, how would you optimize it?</p>\n",
      "exampleTestcases": "00000010100101000001111010011100\n11111111111111111111111111111101",
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "912",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5144,
      "dislikes": 1457,
      "similarQuestions": "[{\"title\": \"Reverse Integer\", \"titleSlug\": \"reverse-integer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"A Number After a Double Reversal\", \"titleSlug\": \"a-number-after-a-double-reversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485927,
      "commentCount": 101,
      "topLevelCommentCount": 80
    },
    "classAndMethodDefinition": "def reverseBits(self, n):\n            oribin='{0:032b}'.format(n)"
  },
  {
    "stat": {
      "question_id": 129,
      "question__article__live": true,
      "question__article__slug": "sum-root-to-leaf-numbers",
      "question__article__has_video_solution": false,
      "question__title": "Sum Root to Leaf Numbers",
      "question__title_slug": "sum-root-to-leaf-numbers",
      "question__hide": false,
      "total_acs": 934476,
      "total_submitted": 1403798,
      "frontend_question_id": 129,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sum-root-to-leaf-numbers",
      "questionId": "129",
      "questionFrontendId": "129",
      "questionTitle": "Sum Root to Leaf Numbers",
      "titleSlug": "sum-root-to-leaf-numbers",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given the <code>root</code> of a binary tree containing digits from <code>0</code> to <code>9</code> only.</p>\n\n<p>Each root-to-leaf path in the tree represents a number.</p>\n\n<ul>\n\t<li>For example, the root-to-leaf path <code>1 -&gt; 2 -&gt; 3</code> represents the number <code>123</code>.</li>\n</ul>\n\n<p>Return <em>the total sum of all root-to-leaf numbers</em>. Test cases are generated so that the answer will fit in a <strong>32-bit</strong> integer.</p>\n\n<p>A <strong>leaf</strong> node is a node with no children.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/num1tree.jpg\" style=\"width: 212px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3]\n<strong>Output:</strong> 25\n<strong>Explanation:</strong>\nThe root-to-leaf path <code>1-&gt;2</code> represents the number <code>12</code>.\nThe root-to-leaf path <code>1-&gt;3</code> represents the number <code>13</code>.\nTherefore, sum = 12 + 13 = <code>25</code>.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/num2tree.jpg\" style=\"width: 292px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [4,9,0,5,1]\n<strong>Output:</strong> 1026\n<strong>Explanation:</strong>\nThe root-to-leaf path <code>4-&gt;9-&gt;5</code> represents the number 495.\nThe root-to-leaf path <code>4-&gt;9-&gt;1</code> represents the number 491.\nThe root-to-leaf path <code>4-&gt;0</code> represents the number 40.\nTherefore, sum = 495 + 491 + 40 = <code>1026</code>.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 1000]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n\t<li>The depth of the tree will not exceed <code>10</code>.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[4,9,0,5,1]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "893",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8086,
      "dislikes": 144,
      "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Smallest String Starting From Leaf\", \"titleSlug\": \"smallest-string-starting-from-leaf\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485866,
      "commentCount": 196,
      "topLevelCommentCount": 127
    },
    "classAndMethodDefinition": "def sumNumbers1(self, root): # DFS recursively \n        self.res = 0"
  },
  {
    "stat": {
      "question_id": 126,
      "question__article__live": true,
      "question__article__slug": "word-ladder-ii",
      "question__article__has_video_solution": false,
      "question__title": "Word Ladder II",
      "question__title_slug": "word-ladder-ii",
      "question__hide": false,
      "total_acs": 377115,
      "total_submitted": 1387857,
      "frontend_question_id": 126,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/word-ladder-ii",
      "questionId": "126",
      "questionFrontendId": "126",
      "questionTitle": "Word Ladder II",
      "titleSlug": "word-ladder-ii",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>A <strong>transformation sequence</strong> from word <code>beginWord</code> to word <code>endWord</code> using a dictionary <code>wordList</code> is a sequence of words <code>beginWord -&gt; s<sub>1</sub> -&gt; s<sub>2</sub> -&gt; ... -&gt; s<sub>k</sub></code> such that:</p>\n\n<ul>\n\t<li>Every adjacent pair of words differs by a single letter.</li>\n\t<li>Every <code>s<sub>i</sub></code> for <code>1 &lt;= i &lt;= k</code> is in <code>wordList</code>. Note that <code>beginWord</code> does not need to be in <code>wordList</code>.</li>\n\t<li><code>s<sub>k</sub> == endWord</code></li>\n</ul>\n\n<p>Given two words, <code>beginWord</code> and <code>endWord</code>, and a dictionary <code>wordList</code>, return <em>all the <strong>shortest transformation sequences</strong> from</em> <code>beginWord</code> <em>to</em> <code>endWord</code><em>, or an empty list if no such sequence exists. Each sequence should be returned as a list of the words </em><code>[beginWord, s<sub>1</sub>, s<sub>2</sub>, ..., s<sub>k</sub>]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> beginWord = &quot;hit&quot;, endWord = &quot;cog&quot;, wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n<strong>Output:</strong> [[&quot;hit&quot;,&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;cog&quot;],[&quot;hit&quot;,&quot;hot&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]]\n<strong>Explanation:</strong>&nbsp;There are 2 shortest transformation sequences:\n&quot;hit&quot; -&gt; &quot;hot&quot; -&gt; &quot;dot&quot; -&gt; &quot;dog&quot; -&gt; &quot;cog&quot;\n&quot;hit&quot; -&gt; &quot;hot&quot; -&gt; &quot;lot&quot; -&gt; &quot;log&quot; -&gt; &quot;cog&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> beginWord = &quot;hit&quot;, endWord = &quot;cog&quot;, wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\n<strong>Output:</strong> []\n<strong>Explanation:</strong> The endWord &quot;cog&quot; is not in wordList, therefore there is no valid transformation sequence.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= beginWord.length &lt;= 5</code></li>\n\t<li><code>endWord.length == beginWord.length</code></li>\n\t<li><code>1 &lt;= wordList.length &lt;= 500</code></li>\n\t<li><code>wordList[i].length == beginWord.length</code></li>\n\t<li><code>beginWord</code>, <code>endWord</code>, and <code>wordList[i]</code> consist of lowercase English letters.</li>\n\t<li><code>beginWord != endWord</code></li>\n\t<li>All the words in <code>wordList</code> are <strong>unique</strong>.</li>\n\t<li>The <strong>sum</strong> of all shortest transformation sequences does not exceed <code>10<sup>5</sup></code>.</li>\n</ul>\n",
      "exampleTestcases": "\"hit\"\n\"cog\"\n[\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\"hit\"\n\"cog\"\n[\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1148",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6042,
      "dislikes": 757,
      "similarQuestions": "[{\"title\": \"Word Ladder\", \"titleSlug\": \"word-ladder\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Groups of Strings\", \"titleSlug\": \"groups-of-strings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485863,
      "commentCount": 88,
      "topLevelCommentCount": 61
    },
    "classAndMethodDefinition": "def findLadders(beginWord, endWord, wordList):\n\\ttree, words, n = collections.defaultdict(set), set(wordList), len(beginWord)"
  },
  {
    "stat": {
      "question_id": 274,
      "question__article__live": true,
      "question__article__slug": "h-index",
      "question__article__has_video_solution": false,
      "question__title": "H-Index",
      "question__title_slug": "h-index",
      "question__hide": false,
      "total_acs": 539115,
      "total_submitted": 1372114,
      "frontend_question_id": 274,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/h-index",
      "questionId": "274",
      "questionFrontendId": "274",
      "questionTitle": "H-Index",
      "titleSlug": "h-index",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>citations</code> where <code>citations[i]</code> is the number of citations a researcher received for their <code>i<sup>th</sup></code> paper, return <em>the researcher&#39;s h-index</em>.</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/H-index\" target=\"_blank\">definition of h-index on Wikipedia</a>: The h-index is defined as the maximum value of <code>h</code> such that the given researcher has published at least <code>h</code> papers that have each been cited at least <code>h</code> times.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> citations = [3,0,6,1,5]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.\nSince the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> citations = [1,3,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == citations.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5000</code></li>\n\t<li><code>0 &lt;= citations[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[3,0,6,1,5]\n[1,3,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort",
          "translatedName": null
        }
      ],
      "hints": [
        "An easy approach is to sort the array first.",
        "What are the possible values of h-index?",
        "A faster approach is to use extra space."
      ],
      "solution": {
        "id": "26",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1351,
      "dislikes": 613,
      "similarQuestions": "[{\"title\": \"H-Index II\", \"titleSlug\": \"h-index-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486011,
      "commentCount": 137,
      "topLevelCommentCount": 84
    },
    "classAndMethodDefinition": "def hIndex(self, citations: List[int]) -> int:\n        n = len(citations)"
  },
  {
    "stat": {
      "question_id": 97,
      "question__article__live": true,
      "question__article__slug": "interleaving-strings",
      "question__article__has_video_solution": false,
      "question__title": "Interleaving String",
      "question__title_slug": "interleaving-string",
      "question__hide": false,
      "total_acs": 555769,
      "total_submitted": 1372018,
      "frontend_question_id": 97,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/interleaving-string",
      "questionId": "97",
      "questionFrontendId": "97",
      "questionTitle": "Interleaving String",
      "titleSlug": "interleaving-string",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given strings <code>s1</code>, <code>s2</code>, and <code>s3</code>, find whether <code>s3</code> is formed by an <strong>interleaving</strong> of <code>s1</code> and <code>s2</code>.</p>\n\n<p>An <strong>interleaving</strong> of two strings <code>s</code> and <code>t</code> is a configuration where <code>s</code> and <code>t</code> are divided into <code>n</code> and <code>m</code> <span data-keyword=\"substring-nonempty\">substrings</span> respectively, such that:</p>\n\n<ul>\n\t<li><code>s = s<sub>1</sub> + s<sub>2</sub> + ... + s<sub>n</sub></code></li>\n\t<li><code>t = t<sub>1</sub> + t<sub>2</sub> + ... + t<sub>m</sub></code></li>\n\t<li><code>|n - m| &lt;= 1</code></li>\n\t<li>The <strong>interleaving</strong> is <code>s<sub>1</sub> + t<sub>1</sub> + s<sub>2</sub> + t<sub>2</sub> + s<sub>3</sub> + t<sub>3</sub> + ...</code> or <code>t<sub>1</sub> + s<sub>1</sub> + t<sub>2</sub> + s<sub>2</sub> + t<sub>3</sub> + s<sub>3</sub> + ...</code></li>\n</ul>\n\n<p><strong>Note:</strong> <code>a + b</code> is the concatenation of strings <code>a</code> and <code>b</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/02/interleave.jpg\" style=\"width: 561px; height: 203px;\" />\n<pre>\n<strong>Input:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, s3 = &quot;aadbbcbcac&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> One way to obtain s3 is:\nSplit s1 into s1 = &quot;aa&quot; + &quot;bc&quot; + &quot;c&quot;, and s2 into s2 = &quot;dbbc&quot; + &quot;a&quot;.\nInterleaving the two splits, we get &quot;aa&quot; + &quot;dbbc&quot; + &quot;bc&quot; + &quot;a&quot; + &quot;c&quot; = &quot;aadbbcbcac&quot;.\nSince s3 can be obtained by interleaving s1 and s2, we return true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, s3 = &quot;aadbbbaccc&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Notice how it is impossible to interleave s2 with any other string to obtain s3.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;&quot;, s2 = &quot;&quot;, s3 = &quot;&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s1.length, s2.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= s3.length &lt;= 200</code></li>\n\t<li><code>s1</code>, <code>s2</code>, and <code>s3</code> consist of lowercase English letters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you solve it using only <code>O(s2.length)</code> additional memory space?</p>\n",
      "exampleTestcases": "\"aabcc\"\n\"dbbca\"\n\"aadbbcbcac\"\n\"aabcc\"\n\"dbbca\"\n\"aadbbbaccc\"\n\"\"\n\"\"\n\"\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "91",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8259,
      "dislikes": 492,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485834,
      "commentCount": 195,
      "topLevelCommentCount": 93
    },
    "classAndMethodDefinition": "def isInterleave(self, s1: str, s2: str, s3: str) -> bool:\n        m, n, l = len(s1), len(s2), len(s3)"
  },
  {
    "stat": {
      "question_id": 494,
      "question__article__live": true,
      "question__article__slug": "target-sum",
      "question__article__has_video_solution": false,
      "question__title": "Target Sum",
      "question__title_slug": "target-sum",
      "question__hide": false,
      "total_acs": 649752,
      "total_submitted": 1370634,
      "frontend_question_id": 494,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/target-sum",
      "questionId": "494",
      "questionFrontendId": "494",
      "questionTitle": "Target Sum",
      "titleSlug": "target-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code> and an integer <code>target</code>.</p>\n\n<p>You want to build an <strong>expression</strong> out of nums by adding one of the symbols <code>&#39;+&#39;</code> and <code>&#39;-&#39;</code> before each integer in nums and then concatenate all the integers.</p>\n\n<ul>\n\t<li>For example, if <code>nums = [2, 1]</code>, you can add a <code>&#39;+&#39;</code> before <code>2</code> and a <code>&#39;-&#39;</code> before <code>1</code> and concatenate them to build the expression <code>&quot;+2-1&quot;</code>.</li>\n</ul>\n\n<p>Return the number of different <strong>expressions</strong> that you can build, which evaluates to <code>target</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,1,1], target = 3\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> There are 5 ways to assign symbols to make the sum of nums be target 3.\n-1 + 1 + 1 + 1 + 1 = 3\n+1 - 1 + 1 + 1 + 1 = 3\n+1 + 1 - 1 + 1 + 1 = 3\n+1 + 1 + 1 - 1 + 1 = 3\n+1 + 1 + 1 + 1 - 1 = 3\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1], target = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 20</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li><code>0 &lt;= sum(nums[i]) &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= target &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,1,1,1]\n3\n[1]\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "123",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10969,
      "dislikes": 364,
      "similarQuestions": "[{\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Express an Integer as Sum of Powers\", \"titleSlug\": \"ways-to-express-an-integer-as-sum-of-powers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486224,
      "commentCount": 108,
      "topLevelCommentCount": 70
    },
    "classAndMethodDefinition": "def findTargetSumWays(self, nums: List[int], S: int) -> int:\n        "
  },
  {
    "stat": {
      "question_id": 179,
      "question__article__live": true,
      "question__article__slug": "largest-number",
      "question__article__has_video_solution": false,
      "question__title": "Largest Number",
      "question__title_slug": "largest-number",
      "question__hide": false,
      "total_acs": 502601,
      "total_submitted": 1364502,
      "frontend_question_id": 179,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/largest-number",
      "questionId": "179",
      "questionFrontendId": "179",
      "questionTitle": "Largest Number",
      "titleSlug": "largest-number",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a list of non-negative integers <code>nums</code>, arrange them such that they form the largest number and return it.</p>\n\n<p>Since the result may be very large, so you need to return a string instead of an integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,2]\n<strong>Output:</strong> &quot;210&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,30,34,5,9]\n<strong>Output:</strong> &quot;9534330&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[10,2]\n[3,30,34,5,9]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "339",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8090,
      "dislikes": 676,
      "similarQuestions": "[{\"title\": \"Smallest Value of the Rearranged Number\", \"titleSlug\": \"smallest-value-of-the-rearranged-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Key of the Numbers\", \"titleSlug\": \"find-the-key-of-the-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485916,
      "commentCount": 101,
      "topLevelCommentCount": 50
    },
    "classAndMethodDefinition": "def largestNumber1(self, nums):\n        if not any(nums):"
  },
  {
    "stat": {
      "question_id": 415,
      "question__article__live": true,
      "question__article__slug": "add-strings",
      "question__article__has_video_solution": false,
      "question__title": "Add Strings",
      "question__title_slug": "add-strings",
      "question__hide": false,
      "total_acs": 703682,
      "total_submitted": 1362311,
      "frontend_question_id": 415,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/add-strings",
      "questionId": "415",
      "questionFrontendId": "415",
      "questionTitle": "Add Strings",
      "titleSlug": "add-strings",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two non-negative integers, <code>num1</code> and <code>num2</code> represented as string, return <em>the sum of</em> <code>num1</code> <em>and</em> <code>num2</code> <em>as a string</em>.</p>\n\n<p>You must solve the problem without using any built-in library for handling large integers (such as <code>BigInteger</code>). You must also not convert the inputs to integers directly.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = &quot;11&quot;, num2 = &quot;123&quot;\n<strong>Output:</strong> &quot;134&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = &quot;456&quot;, num2 = &quot;77&quot;\n<strong>Output:</strong> &quot;533&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = &quot;0&quot;, num2 = &quot;0&quot;\n<strong>Output:</strong> &quot;0&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num1.length, num2.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>num1</code> and <code>num2</code> consist of only digits.</li>\n\t<li><code>num1</code> and <code>num2</code> don&#39;t have any leading zeros except for the zero itself.</li>\n</ul>\n",
      "exampleTestcases": "\"11\"\n\"123\"\n\"456\"\n\"77\"\n\"0\"\n\"0\"",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "967",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5055,
      "dislikes": 756,
      "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add to Array-Form of Integer\", \"titleSlug\": \"add-to-array-form-of-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486152,
      "commentCount": 88,
      "topLevelCommentCount": 43
    },
    "classAndMethodDefinition": "def addStrings(self, num1: str, num2: str) -> str:\n        "
  },
  {
    "stat": {
      "question_id": 131,
      "question__article__live": true,
      "question__article__slug": "palindrome-partitioning",
      "question__article__has_video_solution": false,
      "question__title": "Palindrome Partitioning",
      "question__title_slug": "palindrome-partitioning",
      "question__hide": false,
      "total_acs": 953706,
      "total_submitted": 1359611,
      "frontend_question_id": 131,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/palindrome-partitioning",
      "questionId": "131",
      "questionFrontendId": "131",
      "questionTitle": "Palindrome Partitioning",
      "titleSlug": "palindrome-partitioning",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, partition <code>s</code> such that every <span data-keyword=\"substring-nonempty\">substring</span> of the partition is a <span data-keyword=\"palindrome-string\"><strong>palindrome</strong></span>. Return <em>all possible palindrome partitioning of </em><code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aab\"\n<strong>Output:</strong> [[\"a\",\"a\",\"b\"],[\"aa\",\"b\"]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"a\"\n<strong>Output:</strong> [[\"a\"]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 16</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"aab\"\n\"a\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1012",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12968,
      "dislikes": 506,
      "similarQuestions": "[{\"title\": \"Palindrome Partitioning II\", \"titleSlug\": \"palindrome-partitioning-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Palindrome Partitioning IV\", \"titleSlug\": \"palindrome-partitioning-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Non-overlapping Palindrome Substrings\", \"titleSlug\": \"maximum-number-of-non-overlapping-palindrome-substrings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485868,
      "commentCount": 258,
      "topLevelCommentCount": 143
    },
    "classAndMethodDefinition": "def partition(self, s):\n        if not s: return [[]]"
  },
  {
    "stat": {
      "question_id": 948,
      "question__article__live": true,
      "question__article__slug": "sort-an-array",
      "question__article__has_video_solution": false,
      "question__title": "Sort an Array",
      "question__title_slug": "sort-an-array",
      "question__hide": false,
      "total_acs": 785105,
      "total_submitted": 1355702,
      "frontend_question_id": 912,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sort-an-array",
      "questionId": "948",
      "questionFrontendId": "912",
      "questionTitle": "Sort an Array",
      "titleSlug": "sort-an-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code>, sort the array in ascending order and return it.</p>\n\n<p>You must solve the problem <strong>without using any built-in</strong> functions in <code>O(nlog(n))</code> time complexity and with the smallest space complexity possible.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,2,3,1]\n<strong>Output:</strong> [1,2,3,5]\n<strong>Explanation:</strong> After sorting the array, the positions of some numbers are not changed (for example, 2 and 3), while the positions of other numbers are changed (for example, 1 and 5).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,1,1,2,0,0]\n<strong>Output:</strong> [0,0,1,1,2,5]\n<strong>Explanation:</strong> Note that the values of nums are not necessairly unique.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>-5 * 10<sup>4</sup> &lt;= nums[i] &lt;= 5 * 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[5,2,3,1]\n[5,1,1,2,0,0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort",
          "translatedName": null
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort",
          "translatedName": null
        },
        {
          "name": "Radix Sort",
          "slug": "radix-sort",
          "translatedName": null
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1706",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6492,
      "dislikes": 798,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486655,
      "commentCount": 513,
      "topLevelCommentCount": 297
    },
    "classAndMethodDefinition": "def quicksort(self, nums):\n    if len(nums) <= 1:"
  },
  {
    "stat": {
      "question_id": 77,
      "question__article__live": true,
      "question__article__slug": "combinations",
      "question__article__has_video_solution": false,
      "question__title": "Combinations",
      "question__title_slug": "combinations",
      "question__hide": false,
      "total_acs": 960037,
      "total_submitted": 1349325,
      "frontend_question_id": 77,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/combinations",
      "questionId": "77",
      "questionFrontendId": "77",
      "questionTitle": "Combinations",
      "titleSlug": "combinations",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two integers <code>n</code> and <code>k</code>, return <em>all possible combinations of</em> <code>k</code> <em>numbers chosen from the range</em> <code>[1, n]</code>.</p>\n\n<p>You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, k = 2\n<strong>Output:</strong> [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]\n<strong>Explanation:</strong> There are 4 choose 2 = 6 total combinations.\nNote that combinations are unordered, i.e., [1,2] and [2,1] are considered to be the same combination.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, k = 1\n<strong>Output:</strong> [[1]]\n<strong>Explanation:</strong> There is 1 choose 1 = 1 total combination.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>1 &lt;= k &lt;= n</code></li>\n</ul>\n",
      "exampleTestcases": "4\n2\n1\n1",
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1937",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8277,
      "dislikes": 229,
      "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485814,
      "commentCount": 131,
      "topLevelCommentCount": 77
    },
    "classAndMethodDefinition": "def backtrack(candidate):\n    if find_solution(candidate):"
  },
  {
    "stat": {
      "question_id": 135,
      "question__article__live": true,
      "question__article__slug": "candy",
      "question__article__has_video_solution": false,
      "question__title": "Candy",
      "question__title_slug": "candy",
      "question__hide": false,
      "total_acs": 588256,
      "total_submitted": 1344211,
      "frontend_question_id": 135,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/candy",
      "questionId": "135",
      "questionFrontendId": "135",
      "questionTitle": "Candy",
      "titleSlug": "candy",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> children standing in a line. Each child is assigned a rating value given in the integer array <code>ratings</code>.</p>\n\n<p>You are giving candies to these children subjected to the following requirements:</p>\n\n<ul>\n\t<li>Each child must have at least one candy.</li>\n\t<li>Children with a higher rating get more candies than their neighbors.</li>\n</ul>\n\n<p>Return <em>the minimum number of candies you need to have to distribute the candies to the children</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> ratings = [1,0,2]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> You can allocate to the first, second and third child with 2, 1, 2 candies respectively.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> ratings = [1,2,2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> You can allocate to the first, second and third child with 1, 2, 1 candies respectively.\nThe third child gets 1 candy because it satisfies the above two conditions.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == ratings.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= ratings[i] &lt;= 2 * 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,0,2]\n[1,2,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "90",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7937,
      "dislikes": 674,
      "similarQuestions": "[{\"title\": \"Minimize Maximum Value in a Grid\", \"titleSlug\": \"minimize-maximum-value-in-a-grid\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Operations to Satisfy Conditions\", \"titleSlug\": \"minimum-number-of-operations-to-satisfy-conditions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check if Grid Satisfies Conditions\", \"titleSlug\": \"check-if-grid-satisfies-conditions\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485872,
      "commentCount": 449,
      "topLevelCommentCount": 239
    },
    "classAndMethodDefinition": "def candy(self, ratings: List[int]) -> int:\n        n = len(ratings)"
  },
  {
    "stat": {
      "question_id": 123,
      "question__article__live": true,
      "question__article__slug": "best-time-to-buy-and-sell-stock-iii",
      "question__article__has_video_solution": false,
      "question__title": "Best Time to Buy and Sell Stock III",
      "question__title_slug": "best-time-to-buy-and-sell-stock-iii",
      "question__hide": false,
      "total_acs": 657481,
      "total_submitted": 1340713,
      "frontend_question_id": 123,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",
      "questionId": "123",
      "questionFrontendId": "123",
      "questionTitle": "Best Time to Buy and Sell Stock III",
      "titleSlug": "best-time-to-buy-and-sell-stock-iii",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given an array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p>\n\n<p>Find the maximum profit you can achieve. You may complete <strong>at most two transactions</strong>.</p>\n\n<p><strong>Note:</strong> You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [3,3,5,0,0,3,1,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\nThen buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [1,2,3,4,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nNote that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> In this case, no transaction is done, i.e. max profit = 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= prices.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= prices[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,3,5,0,0,3,1,4]\n[1,2,3,4,5]\n[7,6,4,3,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "924",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9739,
      "dislikes": 195,
      "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock IV\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Sum of 3 Non-Overlapping Subarrays\", \"titleSlug\": \"maximum-sum-of-3-non-overlapping-subarrays\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Profit From Trading Stocks\", \"titleSlug\": \"maximum-profit-from-trading-stocks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximize Win From Two Segments\", \"titleSlug\": \"maximize-win-from-two-segments\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485860,
      "commentCount": 128,
      "topLevelCommentCount": 72
    },
    "classAndMethodDefinition": "def maxProfit(self, prices):\n        if not prices:"
  },
  {
    "stat": {
      "question_id": 168,
      "question__article__live": true,
      "question__article__slug": "excel-sheet-column-title",
      "question__article__has_video_solution": false,
      "question__title": "Excel Sheet Column Title",
      "question__title_slug": "excel-sheet-column-title",
      "question__hide": false,
      "total_acs": 552565,
      "total_submitted": 1331852,
      "frontend_question_id": 168,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/excel-sheet-column-title",
      "questionId": "168",
      "questionFrontendId": "168",
      "questionTitle": "Excel Sheet Column Title",
      "titleSlug": "excel-sheet-column-title",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>columnNumber</code>, return <em>its corresponding column title as it appears in an Excel sheet</em>.</p>\n\n<p>For example:</p>\n\n<pre>\nA -&gt; 1\nB -&gt; 2\nC -&gt; 3\n...\nZ -&gt; 26\nAA -&gt; 27\nAB -&gt; 28 \n...\n</pre>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> columnNumber = 1\n<strong>Output:</strong> &quot;A&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> columnNumber = 28\n<strong>Output:</strong> &quot;AB&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> columnNumber = 701\n<strong>Output:</strong> &quot;ZY&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= columnNumber &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "1\n28\n701",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2001",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5595,
      "dislikes": 824,
      "similarQuestions": "[{\"title\": \"Excel Sheet Column Number\", \"titleSlug\": \"excel-sheet-column-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Cells in a Range on an Excel Sheet\", \"titleSlug\": \"cells-in-a-range-on-an-excel-sheet\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485905,
      "commentCount": 138,
      "topLevelCommentCount": 94
    },
    "classAndMethodDefinition": "def convertToTitle(self, num):\n            capitals = [chr(x) for x in range(ord('A'), ord('Z')+1)]"
  },
  {
    "stat": {
      "question_id": 140,
      "question__article__live": true,
      "question__article__slug": "word-break-ii",
      "question__article__has_video_solution": false,
      "question__title": "Word Break II",
      "question__title_slug": "word-break-ii",
      "question__hide": false,
      "total_acs": 679522,
      "total_submitted": 1317671,
      "frontend_question_id": 140,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/word-break-ii",
      "questionId": "140",
      "questionFrontendId": "140",
      "questionTitle": "Word Break II",
      "titleSlug": "word-break-ii",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> and a dictionary of strings <code>wordDict</code>, add spaces in <code>s</code> to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in <strong>any order</strong>.</p>\n\n<p><strong>Note</strong> that the same word in the dictionary may be reused multiple times in the segmentation.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;catsanddog&quot;, wordDict = [&quot;cat&quot;,&quot;cats&quot;,&quot;and&quot;,&quot;sand&quot;,&quot;dog&quot;]\n<strong>Output:</strong> [&quot;cats and dog&quot;,&quot;cat sand dog&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;pineapplepenapple&quot;, wordDict = [&quot;apple&quot;,&quot;pen&quot;,&quot;applepen&quot;,&quot;pine&quot;,&quot;pineapple&quot;]\n<strong>Output:</strong> [&quot;pine apple pen apple&quot;,&quot;pineapple pen apple&quot;,&quot;pine applepen apple&quot;]\n<strong>Explanation:</strong> Note that you are allowed to reuse a dictionary word.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;catsandog&quot;, wordDict = [&quot;cats&quot;,&quot;dog&quot;,&quot;sand&quot;,&quot;and&quot;,&quot;cat&quot;]\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= wordDict.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= wordDict[i].length &lt;= 10</code></li>\n\t<li><code>s</code> and <code>wordDict[i]</code> consist of only lowercase English letters.</li>\n\t<li>All the strings of <code>wordDict</code> are <strong>unique</strong>.</li>\n\t<li>Input is generated in a way that the length of the answer doesn&#39;t exceed&nbsp;10<sup>5</sup>.</li>\n</ul>\n",
      "exampleTestcases": "\"catsanddog\"\n[\"cat\",\"cats\",\"and\",\"sand\",\"dog\"]\n\"pineapplepenapple\"\n[\"apple\",\"pen\",\"applepen\",\"pine\",\"pineapple\"]\n\"catsandog\"\n[\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        },
        {
          "name": "Memoization",
          "slug": "memoization",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2324",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7226,
      "dislikes": 538,
      "similarQuestions": "[{\"title\": \"Word Break\", \"titleSlug\": \"word-break\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Concatenated Words\", \"titleSlug\": \"concatenated-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485877,
      "commentCount": 233,
      "topLevelCommentCount": 148
    },
    "classAndMethodDefinition": "def wordBreak(self, s, wordDict):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 263,
      "question__article__live": true,
      "question__article__slug": "ugly-number",
      "question__article__has_video_solution": false,
      "question__title": "Ugly Number",
      "question__title_slug": "ugly-number",
      "question__hide": false,
      "total_acs": 554382,
      "total_submitted": 1315684,
      "frontend_question_id": 263,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/ugly-number",
      "questionId": "263",
      "questionFrontendId": "263",
      "questionTitle": "Ugly Number",
      "titleSlug": "ugly-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>An <strong>ugly number</strong> is a positive integer whose prime factors are limited to <code>2</code>, <code>3</code>, and <code>5</code>.</p>\n\n<p>Given an integer <code>n</code>, return <code>true</code> <em>if</em> <code>n</code> <em>is an <strong>ugly number</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 6\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 6 = 2 &times; 3\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 14\n<strong>Output:</strong> false\n<strong>Explanation:</strong> 14 is not ugly since it includes the prime factor 7.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "6\n1\n14",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1591",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3416,
      "dislikes": 1720,
      "similarQuestions": "[{\"title\": \"Happy Number\", \"titleSlug\": \"happy-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486000,
      "commentCount": 141,
      "topLevelCommentCount": 78
    },
    "classAndMethodDefinition": "def isUgly(self, num):\n            \"\"\""
  },
  {
    "stat": {
      "question_id": 978,
      "question__article__live": true,
      "question__article__slug": "valid-mountain-array",
      "question__article__has_video_solution": false,
      "question__title": "Valid Mountain Array",
      "question__title_slug": "valid-mountain-array",
      "question__hide": false,
      "total_acs": 440141,
      "total_submitted": 1312073,
      "frontend_question_id": 941,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-mountain-array",
      "questionId": "978",
      "questionFrontendId": "941",
      "questionTitle": "Valid Mountain Array",
      "titleSlug": "valid-mountain-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>arr</code>, return <em><code>true</code> if and only if it is a valid mountain array</em>.</p>\n\n<p>Recall that arr is a mountain array if and only if:</p>\n\n<ul>\n\t<li><code>arr.length &gt;= 3</code></li>\n\t<li>There exists some <code>i</code> with <code>0 &lt; i &lt; arr.length - 1</code> such that:\n\t<ul>\n\t\t<li><code>arr[0] &lt; arr[1] &lt; ... &lt; arr[i - 1] &lt; arr[i] </code></li>\n\t\t<li><code>arr[i] &gt; arr[i + 1] &gt; ... &gt; arr[arr.length - 1]</code></li>\n\t</ul>\n\t</li>\n</ul>\n<img src=\"https://assets.leetcode.com/uploads/2019/10/20/hint_valid_mountain_array.png\" width=\"500\" />\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> arr = [2,1]\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> arr = [3,5,5]\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> arr = [0,3,2,1]\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[2,1]\n[3,5,5]\n[0,3,2,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [
        "It's very easy to keep track of a monotonically increasing or decreasing ordering of elements. You just need to be able to determine the start of the valley in the mountain and from that point onwards, it should be a valley i.e. no mini-hills after that. Use this information in regards to the values in the array and you will be able to come up with a straightforward solution."
      ],
      "solution": {
        "id": "621",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2950,
      "dislikes": 185,
      "similarQuestions": "[{\"title\": \"Minimum Number of Removals to Make Mountain Array\", \"titleSlug\": \"minimum-number-of-removals-to-make-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Beautiful Towers I\", \"titleSlug\": \"beautiful-towers-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486684,
      "commentCount": 33,
      "topLevelCommentCount": 29
    },
    "classAndMethodDefinition": "def validMountainArray(self, A):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 389,
      "question__article__live": true,
      "question__article__slug": "find-the-difference",
      "question__article__has_video_solution": false,
      "question__title": "Find the Difference",
      "question__title_slug": "find-the-difference",
      "question__hide": false,
      "total_acs": 776248,
      "total_submitted": 1302980,
      "frontend_question_id": 389,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-the-difference",
      "questionId": "389",
      "questionFrontendId": "389",
      "questionTitle": "Find the Difference",
      "titleSlug": "find-the-difference",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given two strings <code>s</code> and <code>t</code>.</p>\n\n<p>String <code>t</code> is generated by random shuffling string <code>s</code> and then add one more letter at a random position.</p>\n\n<p>Return the letter that was added to <code>t</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;abcde&quot;\n<strong>Output:</strong> &quot;e&quot;\n<strong>Explanation:</strong> &#39;e&#39; is the letter that was added.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;&quot;, t = &quot;y&quot;\n<strong>Output:</strong> &quot;y&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>t.length == s.length + 1</code></li>\n\t<li><code>s</code> and <code>t</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abcd\"\n\"abcde\"\n\"\"\n\"y\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "913",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5017,
      "dislikes": 483,
      "similarQuestions": "[{\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Permutation Difference between Two Strings\", \"titleSlug\": \"permutation-difference-between-two-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486126,
      "commentCount": 141,
      "topLevelCommentCount": 87
    },
    "classAndMethodDefinition": "def findTheDifference(self, s: str, t: str) -> str:\n        for i in t:"
  },
  {
    "stat": {
      "question_id": 735,
      "question__article__live": true,
      "question__article__slug": "asteroid-collision",
      "question__article__has_video_solution": false,
      "question__title": "Asteroid Collision",
      "question__title_slug": "asteroid-collision",
      "question__hide": false,
      "total_acs": 580104,
      "total_submitted": 1298607,
      "frontend_question_id": 735,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/asteroid-collision",
      "questionId": "735",
      "questionFrontendId": "735",
      "questionTitle": "Asteroid Collision",
      "titleSlug": "asteroid-collision",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>We are given an array <code>asteroids</code> of integers representing asteroids in a row.</p>\n\n<p>For each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed.</p>\n\n<p>Find out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> asteroids = [5,10,-5]\n<strong>Output:</strong> [5,10]\n<strong>Explanation:</strong> The 10 and -5 collide resulting in 10. The 5 and 10 never collide.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> asteroids = [8,-8]\n<strong>Output:</strong> []\n<strong>Explanation:</strong> The 8 and -8 collide exploding each other.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> asteroids = [10,2,-5]\n<strong>Output:</strong> [10]\n<strong>Explanation:</strong> The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= asteroids.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-1000 &lt;= asteroids[i] &lt;= 1000</code></li>\n\t<li><code>asteroids[i] != 0</code></li>\n</ul>\n",
      "exampleTestcases": "[5,10,-5]\n[8,-8]\n[10,2,-5]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "Say a row of asteroids is stable.  What happens when a new asteroid is added on the right?"
      ],
      "solution": {
        "id": "1952",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8071,
      "dislikes": 1104,
      "similarQuestions": "[{\"title\": \"Can Place Flowers\", \"titleSlug\": \"can-place-flowers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Destroying Asteroids\", \"titleSlug\": \"destroying-asteroids\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Collisions on a Road\", \"titleSlug\": \"count-collisions-on-a-road\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Robot Collisions\", \"titleSlug\": \"robot-collisions\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486447,
      "commentCount": 369,
      "topLevelCommentCount": 222
    },
    "classAndMethodDefinition": "def asteroidCollision(self, asteroids):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 437,
      "question__article__live": true,
      "question__article__slug": "path-sum-iii",
      "question__article__has_video_solution": false,
      "question__title": "Path Sum III",
      "question__title_slug": "path-sum-iii",
      "question__hide": false,
      "total_acs": 596976,
      "total_submitted": 1294825,
      "frontend_question_id": 437,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/path-sum-iii",
      "questionId": "437",
      "questionFrontendId": "437",
      "questionTitle": "Path Sum III",
      "titleSlug": "path-sum-iii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree and an integer <code>targetSum</code>, return <em>the number of paths where the sum of the values&nbsp;along the path equals</em>&nbsp;<code>targetSum</code>.</p>\n\n<p>The path does not need to start or end at the root or a leaf, but it must go downwards (i.e., traveling only from parent nodes to child nodes).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/09/pathsum3-1-tree.jpg\" style=\"width: 450px; height: 386px;\" />\n<pre>\n<strong>Input:</strong> root = [10,5,-3,3,2,null,11,3,-2,null,1], targetSum = 8\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The paths that sum to 8 are shown.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 1000]</code>.</li>\n\t<li><code>-10<sup>9</sup> &lt;= Node.val &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-1000 &lt;= targetSum &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[10,5,-3,3,2,null,11,3,-2,null,1]\n8\n[5,4,8,11,null,13,4,7,2,null,null,5,1]\n22",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "981",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11010,
      "dislikes": 524,
      "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Path Sum II\", \"titleSlug\": \"path-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Univalue Path\", \"titleSlug\": \"longest-univalue-path\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486168,
      "commentCount": 133,
      "topLevelCommentCount": 96
    },
    "classAndMethodDefinition": "def pathSum(self, root: Optional[TreeNode], targetSum: int) -> int:\n"
  },
  {
    "stat": {
      "question_id": 374,
      "question__article__live": true,
      "question__article__slug": "guess-number-higher-or-lower",
      "question__article__has_video_solution": true,
      "question__title": "Guess Number Higher or Lower",
      "question__title_slug": "guess-number-higher-or-lower",
      "question__hide": false,
      "total_acs": 700668,
      "total_submitted": 1294457,
      "frontend_question_id": 374,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/guess-number-higher-or-lower",
      "questionId": "374",
      "questionFrontendId": "374",
      "questionTitle": "Guess Number Higher or Lower",
      "titleSlug": "guess-number-higher-or-lower",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>We are playing the Guess Game. The game is as follows:</p>\n\n<p>I pick a number from <code>1</code> to <code>n</code>. You have to guess which number I picked.</p>\n\n<p>Every time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess.</p>\n\n<p>You call a pre-defined API <code>int guess(int num)</code>, which returns three possible results:</p>\n\n<ul>\n\t<li><code>-1</code>: Your guess is higher than the number I picked (i.e. <code>num &gt; pick</code>).</li>\n\t<li><code>1</code>: Your guess is lower than the number I picked (i.e. <code>num &lt; pick</code>).</li>\n\t<li><code>0</code>: your guess is equal to the number I picked (i.e. <code>num == pick</code>).</li>\n</ul>\n\n<p>Return <em>the number that I picked</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10, pick = 6\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, pick = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, pick = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>1 &lt;= pick &lt;= n</code></li>\n</ul>\n",
      "exampleTestcases": "10\n6\n1\n1\n2\n1",
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Interactive",
          "slug": "interactive",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "57",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3781,
      "dislikes": 548,
      "similarQuestions": "[{\"title\": \"First Bad Version\", \"titleSlug\": \"first-bad-version\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower II\", \"titleSlug\": \"guess-number-higher-or-lower-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K Closest Elements\", \"titleSlug\": \"find-k-closest-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486111,
      "commentCount": 194,
      "topLevelCommentCount": 123
    },
    "classAndMethodDefinition": "class Solution(GuessGame):\n    def guessNumber(self, n: int) -> int:"
  },
  {
    "stat": {
      "question_id": 1236,
      "question__article__live": true,
      "question__article__slug": "n-th-tribonacci-number",
      "question__article__has_video_solution": false,
      "question__title": "N-th Tribonacci Number",
      "question__title_slug": "n-th-tribonacci-number",
      "question__hide": false,
      "total_acs": 814000,
      "total_submitted": 1276433,
      "frontend_question_id": 1137,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/n-th-tribonacci-number",
      "questionId": "1236",
      "questionFrontendId": "1137",
      "questionTitle": "N-th Tribonacci Number",
      "titleSlug": "n-th-tribonacci-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>The Tribonacci sequence T<sub>n</sub> is defined as follows:&nbsp;</p>\r\n\r\n<p>T<sub>0</sub> = 0, T<sub>1</sub> = 1, T<sub>2</sub> = 1, and T<sub>n+3</sub> = T<sub>n</sub> + T<sub>n+1</sub> + T<sub>n+2</sub> for n &gt;= 0.</p>\r\n\r\n<p>Given <code>n</code>, return the value of T<sub>n</sub>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 4\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong>\r\nT_3 = 0 + 1 + 1 = 2\r\nT_4 = 1 + 1 + 2 = 4\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 25\r\n<strong>Output:</strong> 1389537\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= n &lt;= 37</code></li>\r\n\t<li>The answer is guaranteed to fit within a 32-bit integer, ie. <code>answer &lt;= 2^31 - 1</code>.</li>\r\n</ul>",
      "exampleTestcases": "4\n25",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Memoization",
          "slug": "memoization",
          "translatedName": null
        }
      ],
      "hints": [
        "Make an array F of length 38, and set F[0] = 0, F[1] = F[2] = 1.",
        "Now write a loop where you set F[n+3] = F[n] + F[n+1] + F[n+2], and return F[n]."
      ],
      "solution": {
        "id": "1850",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4458,
      "dislikes": 194,
      "similarQuestions": "[{\"title\": \"Climbing Stairs\", \"titleSlug\": \"climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Fibonacci Number\", \"titleSlug\": \"fibonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486934,
      "commentCount": 243,
      "topLevelCommentCount": 139
    },
    "classAndMethodDefinition": "class Solution:\n    def tribonacci(self, n: int) -> int:"
  },
  {
    "stat": {
      "question_id": 1894,
      "question__article__live": true,
      "question__article__slug": "merge-strings-alternately",
      "question__article__has_video_solution": true,
      "question__title": "Merge Strings Alternately",
      "question__title_slug": "merge-strings-alternately",
      "question__hide": false,
      "total_acs": 1027107,
      "total_submitted": 1274459,
      "frontend_question_id": 1768,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/merge-strings-alternately",
      "questionId": "1894",
      "questionFrontendId": "1768",
      "questionTitle": "Merge Strings Alternately",
      "titleSlug": "merge-strings-alternately",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given two strings <code>word1</code> and <code>word2</code>. Merge the strings by adding letters in alternating order, starting with <code>word1</code>. If a string is longer than the other, append the additional letters onto the end of the merged string.</p>\r\n\r\n<p>Return <em>the merged string.</em></p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> word1 = &quot;abc&quot;, word2 = &quot;pqr&quot;\r\n<strong>Output:</strong> &quot;apbqcr&quot;\r\n<strong>Explanation:</strong>&nbsp;The merged string will be merged as so:\r\nword1:  a   b   c\r\nword2:    p   q   r\r\nmerged: a p b q c r\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> word1 = &quot;ab&quot;, word2 = &quot;pqrs&quot;\r\n<strong>Output:</strong> &quot;apbqrs&quot;\r\n<strong>Explanation:</strong>&nbsp;Notice that as word2 is longer, &quot;rs&quot; is appended to the end.\r\nword1:  a   b \r\nword2:    p   q   r   s\r\nmerged: a p b q   r   s\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> word1 = &quot;abcd&quot;, word2 = &quot;pq&quot;\r\n<strong>Output:</strong> &quot;apbqcd&quot;\r\n<strong>Explanation:</strong>&nbsp;Notice that as word1 is longer, &quot;cd&quot; is appended to the end.\r\nword1:  a   b   c   d\r\nword2:    p   q \r\nmerged: a p b q c   d\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= word1.length, word2.length &lt;= 100</code></li>\r\n\t<li><code>word1</code> and <code>word2</code> consist of lowercase English letters.</li>\r\n</ul>",
      "exampleTestcases": "\"abc\"\n\"pqr\"\n\"ab\"\n\"pqrs\"\n\"abcd\"\n\"pq\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "Use two pointers, one pointer for each string. Alternately choose the character from each pointer, and move the pointer upwards."
      ],
      "solution": {
        "id": "1801",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3935,
      "dislikes": 101,
      "similarQuestions": "[{\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Additions to Make Valid String\", \"titleSlug\": \"minimum-additions-to-make-valid-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487553,
      "commentCount": 215,
      "topLevelCommentCount": 146
    },
    "classAndMethodDefinition": "class Solution(object):\n    def mergeAlternately(self, word1, word2):"
  },
  {
    "stat": {
      "question_id": 695,
      "question__article__live": true,
      "question__article__slug": "max-area-of-island",
      "question__article__has_video_solution": false,
      "question__title": "Max Area of Island",
      "question__title_slug": "max-area-of-island",
      "question__hide": false,
      "total_acs": 920477,
      "total_submitted": 1270724,
      "frontend_question_id": 695,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/max-area-of-island",
      "questionId": "695",
      "questionFrontendId": "695",
      "questionTitle": "Max Area of Island",
      "titleSlug": "max-area-of-island",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>m x n</code> binary matrix <code>grid</code>. An island is a group of <code>1</code>&#39;s (representing land) connected <strong>4-directionally</strong> (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.</p>\n\n<p>The <strong>area</strong> of an island is the number of cells with a value <code>1</code> in the island.</p>\n\n<p>Return <em>the maximum <strong>area</strong> of an island in </em><code>grid</code>. If there is no island, return <code>0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/01/maxarea1-grid.jpg\" style=\"width: 500px; height: 310px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The answer is not 11, because the island must be connected 4-directionally.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0,0,0,0,0,0,0,0]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\n\t<li><code>grid[i][j]</code> is either <code>0</code> or <code>1</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]\n[[0,0,0,0,0,0,0,0]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "260",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9995,
      "dislikes": 204,
      "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Battleships in a Board\", \"titleSlug\": \"battleships-in-a-board\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Island Perimeter\", \"titleSlug\": \"island-perimeter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Submatrix With Rearrangements\", \"titleSlug\": \"largest-submatrix-with-rearrangements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Detonate the Maximum Bombs\", \"titleSlug\": \"detonate-the-maximum-bombs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486418,
      "commentCount": 80,
      "topLevelCommentCount": 55
    },
    "classAndMethodDefinition": "def maxAreaOfIsland(self, grid: List[List[int]]) -> int:\n        ans, n, m = 0, len(grid), len(grid[0])"
  },
  {
    "stat": {
      "question_id": 975,
      "question__article__live": true,
      "question__article__slug": "range-sum-of-bst",
      "question__article__has_video_solution": true,
      "question__title": "Range Sum of BST",
      "question__title_slug": "range-sum-of-bst",
      "question__hide": false,
      "total_acs": 1102221,
      "total_submitted": 1266550,
      "frontend_question_id": 938,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/range-sum-of-bst",
      "questionId": "975",
      "questionFrontendId": "938",
      "questionTitle": "Range Sum of BST",
      "titleSlug": "range-sum-of-bst",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> node of a binary search tree and two integers <code>low</code> and <code>high</code>, return <em>the sum of values of all nodes with a value in the <strong>inclusive</strong> range </em><code>[low, high]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/bst1.jpg\" style=\"width: 400px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> root = [10,5,15,3,7,null,18], low = 7, high = 15\n<strong>Output:</strong> 32\n<strong>Explanation:</strong> Nodes 7, 10, and 15 are in the range [7, 15]. 7 + 10 + 15 = 32.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/bst2.jpg\" style=\"width: 400px; height: 335px;\" />\n<pre>\n<strong>Input:</strong> root = [10,5,15,3,7,13,18,1,null,6], low = 6, high = 10\n<strong>Output:</strong> 23\n<strong>Explanation:</strong> Nodes 6, 7, and 10 are in the range [6, 10]. 6 + 7 + 10 = 23.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 2 * 10<sup>4</sup>]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= low &lt;= high &lt;= 10<sup>5</sup></code></li>\n\t<li>All <code>Node.val</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[10,5,15,3,7,null,18]\n7\n15\n[10,5,15,3,7,13,18,1,null,6]\n6\n10",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "611",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6966,
      "dislikes": 379,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486681,
      "commentCount": 211,
      "topLevelCommentCount": 133
    },
    "classAndMethodDefinition": "class Solution:\n    def rangeSumBST(self, root: Optional[TreeNode], low: int, high: int) -> int:"
  },
  {
    "stat": {
      "question_id": 882,
      "question__article__live": true,
      "question__article__slug": "peak-index-in-a-mountain-array",
      "question__article__has_video_solution": false,
      "question__title": "Peak Index in a Mountain Array",
      "question__title_slug": "peak-index-in-a-mountain-array",
      "question__hide": false,
      "total_acs": 863717,
      "total_submitted": 1266022,
      "frontend_question_id": 852,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/peak-index-in-a-mountain-array",
      "questionId": "882",
      "questionFrontendId": "852",
      "questionTitle": "Peak Index in a Mountain Array",
      "titleSlug": "peak-index-in-a-mountain-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer <strong>mountain</strong> array <code>arr</code> of length <code>n</code> where the values increase to a <strong>peak element</strong> and then decrease.</p>\n\n<p>Return the index of the peak element.</p>\n\n<p>Your task is to solve it in <code>O(log(n))</code> time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">arr = [0,1,0]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">arr = [0,2,1,0]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">arr = [0,10,5,2]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= arr.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>arr</code> is <strong>guaranteed</strong> to be a mountain array.</li>\n</ul>\n",
      "exampleTestcases": "[0,1,0]\n[0,2,1,0]\n[0,10,5,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1907",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7585,
      "dislikes": 1923,
      "similarQuestions": "[{\"title\": \"Find Peak Element\", \"titleSlug\": \"find-peak-element\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find in Mountain Array\", \"titleSlug\": \"find-in-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Removals to Make Mountain Array\", \"titleSlug\": \"minimum-number-of-removals-to-make-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486588,
      "commentCount": 313,
      "topLevelCommentCount": 164
    },
    "classAndMethodDefinition": "class Solution:\n    def peakIndexInMountainArray(self, arr):"
  },
  {
    "stat": {
      "question_id": 643,
      "question__article__live": true,
      "question__article__slug": "maximum-average-subarray",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Average Subarray I",
      "question__title_slug": "maximum-average-subarray-i",
      "question__hide": false,
      "total_acs": 550241,
      "total_submitted": 1257479,
      "frontend_question_id": 643,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-average-subarray-i",
      "questionId": "643",
      "questionFrontendId": "643",
      "questionTitle": "Maximum Average Subarray I",
      "titleSlug": "maximum-average-subarray-i",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code> consisting of <code>n</code> elements, and an integer <code>k</code>.</p>\n\n<p>Find a contiguous subarray whose <strong>length is equal to</strong> <code>k</code> that has the maximum average value and return <em>this value</em>. Any answer with a calculation error less than <code>10<sup>-5</sup></code> will be accepted.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,12,-5,-6,50,3], k = 4\n<strong>Output:</strong> 12.75000\n<strong>Explanation:</strong> Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5], k = 1\n<strong>Output:</strong> 5.00000\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= k &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,12,-5,-6,50,3]\n4\n[5]\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "221",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3543,
      "dislikes": 328,
      "similarQuestions": "[{\"title\": \"Maximum Average Subarray II\", \"titleSlug\": \"maximum-average-subarray-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"K Radius Subarray Averages\", \"titleSlug\": \"k-radius-subarray-averages\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486366,
      "commentCount": 129,
      "topLevelCommentCount": 75
    },
    "classAndMethodDefinition": "def findMaxAverage(self, nums: List[int], k: int) -> float:\n        "
  },
  {
    "stat": {
      "question_id": 258,
      "question__article__live": true,
      "question__article__slug": "add-digits",
      "question__article__has_video_solution": false,
      "question__title": "Add Digits",
      "question__title_slug": "add-digits",
      "question__hide": false,
      "total_acs": 837108,
      "total_submitted": 1248306,
      "frontend_question_id": 258,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/add-digits",
      "questionId": "258",
      "questionFrontendId": "258",
      "questionTitle": "Add Digits",
      "titleSlug": "add-digits",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>num</code>, repeatedly add all its digits until the result has only one digit, and return it.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 38\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The process is\n38 --&gt; 3 + 8 --&gt; 11\n11 --&gt; 1 + 1 --&gt; 2 \nSince 2 has only one digit, return it.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you do it without any loop/recursion in <code>O(1)</code> runtime?</p>\n",
      "exampleTestcases": "38\n0",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        },
        {
          "name": "Number Theory",
          "slug": "number-theory",
          "translatedName": null
        }
      ],
      "hints": [
        "A naive implementation of the above process is trivial. Could you come up with other methods?",
        "What are all the possible results?",
        "How do they occur, periodically or randomly?",
        "You may find this <a href=\"https://en.wikipedia.org/wiki/Digital_root\" target=\"_blank\">Wikipedia article</a> useful."
      ],
      "solution": {
        "id": "958",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4859,
      "dislikes": 1938,
      "similarQuestions": "[{\"title\": \"Happy Number\", \"titleSlug\": \"happy-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Digits in the Minimum Number\", \"titleSlug\": \"sum-of-digits-in-the-minimum-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Digits of String After Convert\", \"titleSlug\": \"sum-of-digits-of-string-after-convert\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Sum of Four Digit Number After Splitting Digits\", \"titleSlug\": \"minimum-sum-of-four-digit-number-after-splitting-digits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Calculate Digit Sum of a String\", \"titleSlug\": \"calculate-digit-sum-of-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Difference Between Element Sum and Digit Sum of an Array\", \"titleSlug\": \"difference-between-element-sum-and-digit-sum-of-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Alternating Digit Sum\", \"titleSlug\": \"alternating-digit-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485995,
      "commentCount": 123,
      "topLevelCommentCount": 78
    },
    "classAndMethodDefinition": "def addDigits(self, num):\n        while num > 9:"
  },
  {
    "stat": {
      "question_id": 117,
      "question__article__live": true,
      "question__article__slug": "populating-next-right-pointers-in-each-node-ii",
      "question__article__has_video_solution": false,
      "question__title": "Populating Next Right Pointers in Each Node II",
      "question__title_slug": "populating-next-right-pointers-in-each-node-ii",
      "question__hide": false,
      "total_acs": 662161,
      "total_submitted": 1239951,
      "frontend_question_id": 117,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",
      "questionId": "117",
      "questionFrontendId": "117",
      "questionTitle": "Populating Next Right Pointers in Each Node II",
      "titleSlug": "populating-next-right-pointers-in-each-node-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a binary tree</p>\n\n<pre>\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n</pre>\n\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/15/117_sample.png\" style=\"width: 500px; height: 171px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,null,7]\n<strong>Output:</strong> [1,#,2,3,#,4,5,7,#]\n<strong>Explanation: </strong>Given the above binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with &#39;#&#39; signifying the end of each level.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 6000]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow-up:</strong></p>\n\n<ul>\n\t<li>You may only use constant extra space.</li>\n\t<li>The recursive approach is fine. You may assume implicit stack space does not count as extra space for this problem.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5,null,7]\n[]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "832",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5869,
      "dislikes": 323,
      "similarQuestions": "[{\"title\": \"Populating Next Right Pointers in Each Node\", \"titleSlug\": \"populating-next-right-pointers-in-each-node\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485854,
      "commentCount": 99,
      "topLevelCommentCount": 59
    },
    "classAndMethodDefinition": "def connect(self, node):\n        tail = dummy = TreeLinkNode(0)"
  },
  {
    "stat": {
      "question_id": 542,
      "question__article__live": true,
      "question__article__slug": "01-matrix",
      "question__article__has_video_solution": false,
      "question__title": "01 Matrix",
      "question__title_slug": "01-matrix",
      "question__hide": false,
      "total_acs": 609629,
      "total_submitted": 1234946,
      "frontend_question_id": 542,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/01-matrix",
      "questionId": "542",
      "questionFrontendId": "542",
      "questionTitle": "01 Matrix",
      "titleSlug": "01-matrix",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> binary matrix <code>mat</code>, return <em>the distance of the nearest </em><code>0</code><em> for each cell</em>.</p>\n\n<p>The distance between two adjacent cells is <code>1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/24/01-1-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> mat = [[0,0,0],[0,1,0],[0,0,0]]\n<strong>Output:</strong> [[0,0,0],[0,1,0],[0,0,0]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/24/01-2-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> mat = [[0,0,0],[0,1,0],[1,1,1]]\n<strong>Output:</strong> [[0,0,0],[0,1,0],[1,2,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == mat.length</code></li>\n\t<li><code>n == mat[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= m * n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>mat[i][j]</code> is either <code>0</code> or <code>1</code>.</li>\n\t<li>There is at least one <code>0</code> in <code>mat</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[0,0,0],[0,1,0],[0,0,0]]\n[[0,0,0],[0,1,0],[1,1,1]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1965",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9576,
      "dislikes": 423,
      "similarQuestions": "[{\"title\": \"Shortest Path to Get Food\", \"titleSlug\": \"shortest-path-to-get-food\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Remove Adjacent Ones in Matrix\", \"titleSlug\": \"minimum-operations-to-remove-adjacent-ones-in-matrix\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Difference Between Ones and Zeros in Row and Column\", \"titleSlug\": \"difference-between-ones-and-zeros-in-row-and-column\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486271,
      "commentCount": 172,
      "topLevelCommentCount": 94
    },
    "classAndMethodDefinition": "def updateMatrix(self, matrix: List[List[int]]) -> List[List[int]]:\n        # BFS helper #"
  },
  {
    "stat": {
      "question_id": 838,
      "question__article__live": true,
      "question__article__slug": "design-linked-list",
      "question__article__has_video_solution": false,
      "question__title": "Design Linked List",
      "question__title_slug": "design-linked-list",
      "question__hide": false,
      "total_acs": 350590,
      "total_submitted": 1233714,
      "frontend_question_id": 707,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/design-linked-list",
      "questionId": "838",
      "questionFrontendId": "707",
      "questionTitle": "Design Linked List",
      "titleSlug": "design-linked-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Design your implementation of the linked list. You can choose to use a singly or doubly linked list.<br />\nA node in a singly linked list should have two attributes: <code>val</code> and <code>next</code>. <code>val</code> is the value of the current node, and <code>next</code> is a pointer/reference to the next node.<br />\nIf you want to use the doubly linked list, you will need one more attribute <code>prev</code> to indicate the previous node in the linked list. Assume all nodes in the linked list are <strong>0-indexed</strong>.</p>\n\n<p>Implement the <code>MyLinkedList</code> class:</p>\n\n<ul>\n\t<li><code>MyLinkedList()</code> Initializes the <code>MyLinkedList</code> object.</li>\n\t<li><code>int get(int index)</code> Get the value of the <code>index<sup>th</sup></code> node in the linked list. If the index is invalid, return <code>-1</code>.</li>\n\t<li><code>void addAtHead(int val)</code> Add a node of value <code>val</code> before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.</li>\n\t<li><code>void addAtTail(int val)</code> Append a node of value <code>val</code> as the last element of the linked list.</li>\n\t<li><code>void addAtIndex(int index, int val)</code> Add a node of value <code>val</code> before the <code>index<sup>th</sup></code> node in the linked list. If <code>index</code> equals the length of the linked list, the node will be appended to the end of the linked list. If <code>index</code> is greater than the length, the node <strong>will not be inserted</strong>.</li>\n\t<li><code>void deleteAtIndex(int index)</code> Delete the <code>index<sup>th</sup></code> node in the linked list, if the index is valid.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyLinkedList&quot;, &quot;addAtHead&quot;, &quot;addAtTail&quot;, &quot;addAtIndex&quot;, &quot;get&quot;, &quot;deleteAtIndex&quot;, &quot;get&quot;]\n[[], [1], [3], [1, 2], [1], [1], [1]]\n<strong>Output</strong>\n[null, null, null, null, 2, null, 3]\n\n<strong>Explanation</strong>\nMyLinkedList myLinkedList = new MyLinkedList();\nmyLinkedList.addAtHead(1);\nmyLinkedList.addAtTail(3);\nmyLinkedList.addAtIndex(1, 2);    // linked list becomes 1-&gt;2-&gt;3\nmyLinkedList.get(1);              // return 2\nmyLinkedList.deleteAtIndex(1);    // now the linked list is 1-&gt;3\nmyLinkedList.get(1);              // return 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= index, val &lt;= 1000</code></li>\n\t<li>Please do not use the built-in LinkedList library.</li>\n\t<li>At most <code>2000</code> calls will be made to <code>get</code>, <code>addAtHead</code>, <code>addAtTail</code>, <code>addAtIndex</code> and <code>deleteAtIndex</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"MyLinkedList\",\"addAtHead\",\"addAtTail\",\"addAtIndex\",\"get\",\"deleteAtIndex\",\"get\"]\n[[],[1],[3],[1,2],[1],[1],[1]]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "776",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2666,
      "dislikes": 1624,
      "similarQuestions": "[{\"title\": \"Design Skiplist\", \"titleSlug\": \"design-skiplist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486551,
      "commentCount": 90,
      "topLevelCommentCount": 62
    },
    "classAndMethodDefinition": "def __init__(self, val):\n        self.val = val"
  },
  {
    "stat": {
      "question_id": 165,
      "question__article__live": true,
      "question__article__slug": "compare-version-numbers",
      "question__article__has_video_solution": false,
      "question__title": "Compare Version Numbers",
      "question__title_slug": "compare-version-numbers",
      "question__hide": false,
      "total_acs": 508470,
      "total_submitted": 1233012,
      "frontend_question_id": 165,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/compare-version-numbers",
      "questionId": "165",
      "questionFrontendId": "165",
      "questionTitle": "Compare Version Numbers",
      "titleSlug": "compare-version-numbers",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two <strong>version strings</strong>, <code>version1</code> and <code>version2</code>, compare them. A version string consists of <strong>revisions</strong> separated by dots <code>&#39;.&#39;</code>. The <strong>value of the revision</strong> is its <strong>integer conversion</strong> ignoring leading zeros.</p>\n\n<p>To compare version strings, compare their revision values in <strong>left-to-right order</strong>. If one of the version strings has fewer revisions, treat the missing revision values as <code>0</code>.</p>\n\n<p>Return the following:</p>\n\n<ul>\n\t<li>If <code>version1 &lt; version2</code>, return -1.</li>\n\t<li>If <code>version1 &gt; version2</code>, return 1.</li>\n\t<li>Otherwise, return 0.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">version1 = &quot;1.2&quot;, version2 = &quot;1.10&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">-1</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>version1&#39;s second revision is &quot;2&quot; and version2&#39;s second revision is &quot;10&quot;: 2 &lt; 10, so version1 &lt; version2.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">version1 = &quot;1.01&quot;, version2 = &quot;1.001&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Ignoring leading zeroes, both &quot;01&quot; and &quot;001&quot; represent the same integer &quot;1&quot;.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">version1 = &quot;1.0&quot;, version2 = &quot;1.0.0.0&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>version1 has less revisions, which means every missing revision are treated as &quot;0&quot;.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= version1.length, version2.length &lt;= 500</code></li>\n\t<li><code>version1</code> and <code>version2</code>&nbsp;only contain digits and <code>&#39;.&#39;</code>.</li>\n\t<li><code>version1</code> and <code>version2</code>&nbsp;<strong>are valid version numbers</strong>.</li>\n\t<li>All the given revisions in&nbsp;<code>version1</code> and <code>version2</code>&nbsp;can be stored in&nbsp;a&nbsp;<strong>32-bit integer</strong>.</li>\n</ul>\n",
      "exampleTestcases": "\"1.2\"\n\"1.10\"\n\"1.01\"\n\"1.001\"\n\"1.0\"\n\"1.0.0.0\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "You can use two pointers for each version string to traverse them together while comparing the corresponding segments.",
        "Utilize the substring method to extract each version segment delimited by '.'. Ensure you're extracting the segments correctly by adjusting the start and end indices accordingly."
      ],
      "solution": {
        "id": "877",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2649,
      "dislikes": 2738,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485902,
      "commentCount": 266,
      "topLevelCommentCount": 150
    },
    "classAndMethodDefinition": "def compareVersion(self, v1: str, v2: str) -> int:\n        v1, v2 = list(map(int, v1.split(\\'.\\'))), list(map(int, v2.split(\\'.\\')))  "
  },
  {
    "stat": {
      "question_id": 782,
      "question__article__live": true,
      "question__article__slug": "jewels-and-stones",
      "question__article__has_video_solution": false,
      "question__title": "Jewels and Stones",
      "question__title_slug": "jewels-and-stones",
      "question__hide": false,
      "total_acs": 1094929,
      "total_submitted": 1232559,
      "frontend_question_id": 771,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/jewels-and-stones",
      "questionId": "782",
      "questionFrontendId": "771",
      "questionTitle": "Jewels and Stones",
      "titleSlug": "jewels-and-stones",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You&#39;re given strings <code>jewels</code> representing the types of stones that are jewels, and <code>stones</code> representing the stones you have. Each character in <code>stones</code> is a type of stone you have. You want to know how many of the stones you have are also jewels.</p>\n\n<p>Letters are case sensitive, so <code>&quot;a&quot;</code> is considered a different type of stone from <code>&quot;A&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> jewels = \"aA\", stones = \"aAAbbbb\"\n<strong>Output:</strong> 3\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> jewels = \"z\", stones = \"ZZ\"\n<strong>Output:</strong> 0\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;jewels.length, stones.length &lt;= 50</code></li>\n\t<li><code>jewels</code> and <code>stones</code> consist of only English letters.</li>\n\t<li>All the characters of&nbsp;<code>jewels</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "\"aA\"\n\"aAAbbbb\"\n\"z\"\n\"ZZ\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "For each stone, check if it is a jewel."
      ],
      "solution": {
        "id": "404",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5120,
      "dislikes": 596,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486494,
      "commentCount": 77,
      "topLevelCommentCount": 52
    },
    "classAndMethodDefinition": "def numJewelsInStones(self, J, S):\n        return sum(S.count(j) for j in J)"
  },
  {
    "stat": {
      "question_id": 1039,
      "question__article__live": true,
      "question__article__slug": "find-the-town-judge",
      "question__article__has_video_solution": false,
      "question__title": "Find the Town Judge",
      "question__title_slug": "find-the-town-judge",
      "question__hide": false,
      "total_acs": 611494,
      "total_submitted": 1228847,
      "frontend_question_id": 997,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-the-town-judge",
      "questionId": "1039",
      "questionFrontendId": "997",
      "questionTitle": "Find the Town Judge",
      "titleSlug": "find-the-town-judge",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>In a town, there are <code>n</code> people labeled from <code>1</code> to <code>n</code>. There is a rumor that one of these people is secretly the town judge.</p>\n\n<p>If the town judge exists, then:</p>\n\n<ol>\n\t<li>The town judge trusts nobody.</li>\n\t<li>Everybody (except for the town judge) trusts the town judge.</li>\n\t<li>There is exactly one person that satisfies properties <strong>1</strong> and <strong>2</strong>.</li>\n</ol>\n\n<p>You are given an array <code>trust</code> where <code>trust[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> representing that the person labeled <code>a<sub>i</sub></code> trusts the person labeled <code>b<sub>i</sub></code>. If a trust relationship does not exist in <code>trust</code> array, then such a trust relationship does not exist.</p>\n\n<p>Return <em>the label of the town judge if the town judge exists and can be identified, or return </em><code>-1</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, trust = [[1,2]]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, trust = [[1,3],[2,3]]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, trust = [[1,3],[2,3],[3,1]]\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n\t<li><code>0 &lt;= trust.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>trust[i].length == 2</code></li>\n\t<li>All the pairs of <code>trust</code> are <strong>unique</strong>.</li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li><code>1 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt;= n</code></li>\n</ul>\n",
      "exampleTestcases": "2\n[[1,2]]\n3\n[[1,3],[2,3]]\n3\n[[1,3],[2,3],[3,1]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "883",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6647,
      "dislikes": 603,
      "similarQuestions": "[{\"title\": \"Find the Celebrity\", \"titleSlug\": \"find-the-celebrity\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486741,
      "commentCount": 368,
      "topLevelCommentCount": 213
    },
    "classAndMethodDefinition": "class Solution:\n    def findJudge(self, n: int, trust: List[List[int]]) -> int:"
  },
  {
    "stat": {
      "question_id": 647,
      "question__article__live": true,
      "question__article__slug": "palindromic-substrings",
      "question__article__has_video_solution": false,
      "question__title": "Palindromic Substrings",
      "question__title_slug": "palindromic-substrings",
      "question__hide": false,
      "total_acs": 862290,
      "total_submitted": 1221583,
      "frontend_question_id": 647,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/palindromic-substrings",
      "questionId": "647",
      "questionFrontendId": "647",
      "questionTitle": "Palindromic Substrings",
      "titleSlug": "palindromic-substrings",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, return <em>the number of <strong>palindromic substrings</strong> in it</em>.</p>\n\n<p>A string is a <strong>palindrome</strong> when it reads the same backward as forward.</p>\n\n<p>A <strong>substring</strong> is a contiguous sequence of characters within the string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abc&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Three palindromic strings: &quot;a&quot;, &quot;b&quot;, &quot;c&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaa&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Six palindromic strings: &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;aa&quot;, &quot;aa&quot;, &quot;aaa&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abc\"\n\"aaa\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "How can we reuse a previously computed palindrome to compute a larger palindrome?",
        "If “aba” is a palindrome, is “xabax” a palindrome? Similarly is “xabay” a palindrome?",
        "Complexity based hint:</br>\r\nIf we use brute force and check whether for every start and end position a substring is a palindrome we have O(n^2) start - end pairs and O(n) palindromic checks. Can we reduce the time for palindromic checks to O(1) by reusing some previous computation?"
      ],
      "solution": {
        "id": "1065",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10829,
      "dislikes": 239,
      "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486370,
      "commentCount": 172,
      "topLevelCommentCount": 105
    },
    "classAndMethodDefinition": "class Solution:\n    def countSubstrings(self, s: str) -> int:"
  },
  {
    "stat": {
      "question_id": 540,
      "question__article__live": true,
      "question__article__slug": "single-element-in-a-sorted-array",
      "question__article__has_video_solution": false,
      "question__title": "Single Element in a Sorted Array",
      "question__title_slug": "single-element-in-a-sorted-array",
      "question__hide": false,
      "total_acs": 722302,
      "total_submitted": 1219195,
      "frontend_question_id": 540,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/single-element-in-a-sorted-array",
      "questionId": "540",
      "questionFrontendId": "540",
      "questionTitle": "Single Element in a Sorted Array",
      "titleSlug": "single-element-in-a-sorted-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once.</p>\n\n<p>Return <em>the single element that appears only once</em>.</p>\n\n<p>Your solution must run in <code>O(log n)</code> time and <code>O(1)</code> space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,2,3,3,4,4,8,8]\n<strong>Output:</strong> 2\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,3,7,7,10,11,11]\n<strong>Output:</strong> 10\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,2,3,3,4,4,8,8]\n[3,3,7,7,10,11,11]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "808",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11326,
      "dislikes": 196,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486269,
      "commentCount": 206,
      "topLevelCommentCount": 119
    },
    "classAndMethodDefinition": "def singleNonDuplicate(self, nums: List[int]) -> int:\n        left, right = 0, len(nums)-1"
  },
  {
    "stat": {
      "question_id": 658,
      "question__article__live": true,
      "question__article__slug": "find-k-closest-elements",
      "question__article__has_video_solution": false,
      "question__title": "Find K Closest Elements",
      "question__title_slug": "find-k-closest-elements",
      "question__hide": false,
      "total_acs": 580868,
      "total_submitted": 1216655,
      "frontend_question_id": 658,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-k-closest-elements",
      "questionId": "658",
      "questionFrontendId": "658",
      "questionTitle": "Find K Closest Elements",
      "titleSlug": "find-k-closest-elements",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a <strong>sorted</strong> integer array <code>arr</code>, two integers <code>k</code> and <code>x</code>, return the <code>k</code> closest integers to <code>x</code> in the array. The result should also be sorted in ascending order.</p>\n\n<p>An integer <code>a</code> is closer to <code>x</code> than an integer <code>b</code> if:</p>\n\n<ul>\n\t<li><code>|a - x| &lt; |b - x|</code>, or</li>\n\t<li><code>|a - x| == |b - x|</code> and <code>a &lt; b</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> arr = [1,2,3,4,5], k = 4, x = 3\n<strong>Output:</strong> [1,2,3,4]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> arr = [1,2,3,4,5], k = 4, x = -1\n<strong>Output:</strong> [1,2,3,4]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= arr.length</code></li>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>arr</code> is sorted in <strong>ascending</strong> order.</li>\n\t<li><code>-10<sup>4</sup> &lt;= arr[i], x &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5]\n4\n3\n[1,2,3,4,5]\n4\n-1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1144",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8248,
      "dislikes": 707,
      "similarQuestions": "[{\"title\": \"Guess Number Higher or Lower\", \"titleSlug\": \"guess-number-higher-or-lower\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower II\", \"titleSlug\": \"guess-number-higher-or-lower-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Closest Number to Zero\", \"titleSlug\": \"find-closest-number-to-zero\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486381,
      "commentCount": 115,
      "topLevelCommentCount": 77
    },
    "classAndMethodDefinition": "def findClosestElements(self, arr, k, x):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 228,
      "question__article__live": true,
      "question__article__slug": "summary-ranges",
      "question__article__has_video_solution": false,
      "question__title": "Summary Ranges",
      "question__title_slug": "summary-ranges",
      "question__hide": false,
      "total_acs": 623246,
      "total_submitted": 1211582,
      "frontend_question_id": 228,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/summary-ranges",
      "questionId": "228",
      "questionFrontendId": "228",
      "questionTitle": "Summary Ranges",
      "titleSlug": "summary-ranges",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given a <strong>sorted unique</strong> integer array <code>nums</code>.</p>\n\n<p>A <strong>range</strong> <code>[a,b]</code> is the set of all integers from <code>a</code> to <code>b</code> (inclusive).</p>\n\n<p>Return <em>the <strong>smallest sorted</strong> list of ranges that <strong>cover all the numbers in the array exactly</strong></em>. That is, each element of <code>nums</code> is covered by exactly one of the ranges, and there is no integer <code>x</code> such that <code>x</code> is in one of the ranges but not in <code>nums</code>.</p>\n\n<p>Each range <code>[a,b]</code> in the list should be output as:</p>\n\n<ul>\n\t<li><code>&quot;a-&gt;b&quot;</code> if <code>a != b</code></li>\n\t<li><code>&quot;a&quot;</code> if <code>a == b</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,2,4,5,7]\n<strong>Output:</strong> [&quot;0-&gt;2&quot;,&quot;4-&gt;5&quot;,&quot;7&quot;]\n<strong>Explanation:</strong> The ranges are:\n[0,2] --&gt; &quot;0-&gt;2&quot;\n[4,5] --&gt; &quot;4-&gt;5&quot;\n[7,7] --&gt; &quot;7&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,2,3,4,6,8,9]\n<strong>Output:</strong> [&quot;0&quot;,&quot;2-&gt;4&quot;,&quot;6&quot;,&quot;8-&gt;9&quot;]\n<strong>Explanation:</strong> The ranges are:\n[0,0] --&gt; &quot;0&quot;\n[2,4] --&gt; &quot;2-&gt;4&quot;\n[6,6] --&gt; &quot;6&quot;\n[8,9] --&gt; &quot;8-&gt;9&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 20</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>All the values of <code>nums</code> are <strong>unique</strong>.</li>\n\t<li><code>nums</code> is sorted in ascending order.</li>\n</ul>\n",
      "exampleTestcases": "[0,1,2,4,5,7]\n[0,2,3,4,6,8,9]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1864",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4000,
      "dislikes": 2190,
      "similarQuestions": "[{\"title\": \"Missing Ranges\", \"titleSlug\": \"missing-ranges\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Data Stream as Disjoint Intervals\", \"titleSlug\": \"data-stream-as-disjoint-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Maximal Uncovered Ranges\", \"titleSlug\": \"find-maximal-uncovered-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485965,
      "commentCount": 165,
      "topLevelCommentCount": 91
    },
    "classAndMethodDefinition": "def summaryRanges(self, nums):\n        ranges = []"
  },
  {
    "stat": {
      "question_id": 783,
      "question__article__live": true,
      "question__article__slug": "search-in-a-bst",
      "question__article__has_video_solution": false,
      "question__title": "Search in a Binary Search Tree",
      "question__title_slug": "search-in-a-binary-search-tree",
      "question__hide": false,
      "total_acs": 956714,
      "total_submitted": 1188376,
      "frontend_question_id": 700,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/search-in-a-binary-search-tree",
      "questionId": "783",
      "questionFrontendId": "700",
      "questionTitle": "Search in a Binary Search Tree",
      "titleSlug": "search-in-a-binary-search-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given the <code>root</code> of a binary search tree (BST) and an integer <code>val</code>.</p>\n\n<p>Find the node in the BST that the node&#39;s value equals <code>val</code> and return the subtree rooted with that node. If such a node does not exist, return <code>null</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/12/tree1.jpg\" style=\"width: 422px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [4,2,7,1,3], val = 2\n<strong>Output:</strong> [2,1,3]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/12/tree2.jpg\" style=\"width: 422px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [4,2,7,1,3], val = 5\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 5000]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>7</sup></code></li>\n\t<li><code>root</code> is a binary search tree.</li>\n\t<li><code>1 &lt;= val &lt;= 10<sup>7</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[4,2,7,1,3]\n2\n[4,2,7,1,3]\n5",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "770",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5983,
      "dislikes": 194,
      "similarQuestions": "[{\"title\": \"Closest Binary Search Tree Value\", \"titleSlug\": \"closest-binary-search-tree-value\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Insert into a Binary Search Tree\", \"titleSlug\": \"insert-into-a-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Closest Nodes Queries in a Binary Search Tree\", \"titleSlug\": \"closest-nodes-queries-in-a-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486495,
      "commentCount": 63,
      "topLevelCommentCount": 40
    },
    "classAndMethodDefinition": "def recursive(self, root, val):\n        def rec(root):"
  },
  {
    "stat": {
      "question_id": 257,
      "question__article__live": true,
      "question__article__slug": "binary-tree-paths",
      "question__article__has_video_solution": false,
      "question__title": "Binary Tree Paths",
      "question__title_slug": "binary-tree-paths",
      "question__hide": false,
      "total_acs": 765132,
      "total_submitted": 1185248,
      "frontend_question_id": 257,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-tree-paths",
      "questionId": "257",
      "questionFrontendId": "257",
      "questionTitle": "Binary Tree Paths",
      "titleSlug": "binary-tree-paths",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>all root-to-leaf paths in <strong>any order</strong></em>.</p>\n\n<p>A <strong>leaf</strong> is a node with no children.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/12/paths-tree.jpg\" style=\"width: 207px; height: 293px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,null,5]\n<strong>Output:</strong> [&quot;1-&gt;2-&gt;5&quot;,&quot;1-&gt;3&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [&quot;1&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,null,5]\n[1]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "617",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6614,
      "dislikes": 301,
      "similarQuestions": "[{\"title\": \"Path Sum II\", \"titleSlug\": \"path-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest String Starting From Leaf\", \"titleSlug\": \"smallest-string-starting-from-leaf\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Step-By-Step Directions From a Binary Tree Node to Another\", \"titleSlug\": \"step-by-step-directions-from-a-binary-tree-node-to-another\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485994,
      "commentCount": 72,
      "topLevelCommentCount": 51
    },
    "classAndMethodDefinition": "def binaryTreePaths1(self, root):\n        if not root:"
  },
  {
    "stat": {
      "question_id": 222,
      "question__article__live": true,
      "question__article__slug": "count-complete-tree-nodes",
      "question__article__has_video_solution": false,
      "question__title": "Count Complete Tree Nodes",
      "question__title_slug": "count-complete-tree-nodes",
      "question__hide": false,
      "total_acs": 793153,
      "total_submitted": 1184659,
      "frontend_question_id": 222,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/count-complete-tree-nodes",
      "questionId": "222",
      "questionFrontendId": "222",
      "questionTitle": "Count Complete Tree Nodes",
      "titleSlug": "count-complete-tree-nodes",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a <strong>complete</strong> binary tree, return the number of the nodes in the tree.</p>\n\n<p>According to <strong><a href=\"http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees\" target=\"_blank\">Wikipedia</a></strong>, every level, except possibly the last, is completely filled in a complete binary tree, and all nodes in the last level are as far left as possible. It can have between <code>1</code> and <code>2<sup>h</sup></code> nodes inclusive at the last level <code>h</code>.</p>\n\n<p>Design an algorithm that runs in less than&nbsp;<code data-stringify-type=\"code\">O(n)</code>&nbsp;time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/14/complete.jpg\" style=\"width: 372px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,6]\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 5 * 10<sup>4</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li>The tree is guaranteed to be <strong>complete</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5,6]\n[]\n[1]",
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "741",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8711,
      "dislikes": 524,
      "similarQuestions": "[{\"title\": \"Closest Binary Search Tree Value\", \"titleSlug\": \"closest-binary-search-tree-value\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485959,
      "commentCount": 148,
      "topLevelCommentCount": 86
    },
    "classAndMethodDefinition": "def countNodes(self, root):\n                if not root:"
  },
  {
    "stat": {
      "question_id": 789,
      "question__article__live": true,
      "question__article__slug": "kth-largest-element-in-a-stream",
      "question__article__has_video_solution": false,
      "question__title": "Kth Largest Element in a Stream",
      "question__title_slug": "kth-largest-element-in-a-stream",
      "question__hide": false,
      "total_acs": 697120,
      "total_submitted": 1178134,
      "frontend_question_id": 703,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/kth-largest-element-in-a-stream",
      "questionId": "789",
      "questionFrontendId": "703",
      "questionTitle": "Kth Largest Element in a Stream",
      "titleSlug": "kth-largest-element-in-a-stream",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are part of a university admissions office and need to keep track of the <code>kth</code> highest test score from applicants in real-time. This helps to determine cut-off marks for interviews and admissions dynamically as new applicants submit their scores.</p>\n\n<p>You are tasked to implement a class which, for a given integer&nbsp;<code>k</code>, maintains a stream of test scores and continuously returns the&nbsp;<code>k</code>th highest test score&nbsp;<strong>after</strong>&nbsp;a new score has been submitted. More specifically, we are looking for the <code>k</code>th highest score in the sorted list of all scores.</p>\n\n<p>Implement the&nbsp;<code>KthLargest</code> class:</p>\n\n<ul>\n\t<li><code>KthLargest(int k, int[] nums)</code> Initializes the object with the integer <code>k</code> and the stream of test scores&nbsp;<code>nums</code>.</li>\n\t<li><code>int add(int val)</code> Adds a new test score&nbsp;<code>val</code> to the stream and returns the element representing the <code>k<sup>th</sup></code> largest element in the pool of test scores so far.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong><br />\n<span class=\"example-io\">[&quot;KthLargest&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;]<br />\n[[3, [4, 5, 8, 2]], [3], [5], [10], [9], [4]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[null, 4, 5, 5, 8, 8]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>KthLargest kthLargest = new KthLargest(3, [4, 5, 8, 2]);<br />\nkthLargest.add(3); // return 4<br />\nkthLargest.add(5); // return 5<br />\nkthLargest.add(10); // return 5<br />\nkthLargest.add(9); // return 8<br />\nkthLargest.add(4); // return 8</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong><br />\n<span class=\"example-io\">[&quot;KthLargest&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;]<br />\n[[4, [7, 7, 7, 7, 8, 3]], [2], [10], [9], [9]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[null, 7, 7, 7, 8]</span></p>\n\n<p><strong>Explanation:</strong></p>\nKthLargest kthLargest = new KthLargest(4, [7, 7, 7, 7, 8, 3]);<br />\nkthLargest.add(2); // return 7<br />\nkthLargest.add(10); // return 7<br />\nkthLargest.add(9); // return 7<br />\nkthLargest.add(9); // return 8</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= nums.length + 1</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= val &lt;= 10<sup>4</sup></code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>add</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"KthLargest\",\"add\",\"add\",\"add\",\"add\",\"add\"]\n[[3,[4,5,8,2]],[3],[5],[10],[9],[4]]\n[\"KthLargest\",\"add\",\"add\",\"add\",\"add\"]\n[[4,[7,7,7,7,8,3]],[2],[10],[9],[9]]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        },
        {
          "name": "Data Stream",
          "slug": "data-stream",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2399",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5849,
      "dislikes": 3734,
      "similarQuestions": "[{\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Finding MK Average\", \"titleSlug\": \"finding-mk-average\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Sequentially Ordinal Rank Tracker\", \"titleSlug\": \"sequentially-ordinal-rank-tracker\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486501,
      "commentCount": 275,
      "topLevelCommentCount": 177
    },
    "classAndMethodDefinition": "class KthLargest(object):\n"
  },
  {
    "stat": {
      "question_id": 443,
      "question__article__live": true,
      "question__article__slug": "string-compression",
      "question__article__has_video_solution": false,
      "question__title": "String Compression",
      "question__title_slug": "string-compression",
      "question__hide": false,
      "total_acs": 650823,
      "total_submitted": 1171673,
      "frontend_question_id": 443,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/string-compression",
      "questionId": "443",
      "questionFrontendId": "443",
      "questionTitle": "String Compression",
      "titleSlug": "string-compression",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of characters <code>chars</code>, compress it using the following algorithm:</p>\n\n<p>Begin with an empty string <code>s</code>. For each group of <strong>consecutive repeating characters</strong> in <code>chars</code>:</p>\n\n<ul>\n\t<li>If the group&#39;s length is <code>1</code>, append the character to <code>s</code>.</li>\n\t<li>Otherwise, append the character followed by the group&#39;s length.</li>\n</ul>\n\n<p>The compressed string <code>s</code> <strong>should not be returned separately</strong>, but instead, be stored <strong>in the input character array <code>chars</code></strong>. Note that group lengths that are <code>10</code> or longer will be split into multiple characters in <code>chars</code>.</p>\n\n<p>After you are done <strong>modifying the input array,</strong> return <em>the new length of the array</em>.</p>\n\n<p>You must write an algorithm that uses only constant extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> chars = [&quot;a&quot;,&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;c&quot;,&quot;c&quot;,&quot;c&quot;]\n<strong>Output:</strong> Return 6, and the first 6 characters of the input array should be: [&quot;a&quot;,&quot;2&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;]\n<strong>Explanation:</strong> The groups are &quot;aa&quot;, &quot;bb&quot;, and &quot;ccc&quot;. This compresses to &quot;a2b2c3&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> chars = [&quot;a&quot;]\n<strong>Output:</strong> Return 1, and the first character of the input array should be: [&quot;a&quot;]\n<strong>Explanation:</strong> The only group is &quot;a&quot;, which remains uncompressed since it&#39;s a single character.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> chars = [&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;]\n<strong>Output:</strong> Return 4, and the first 4 characters of the input array should be: [&quot;a&quot;,&quot;b&quot;,&quot;1&quot;,&quot;2&quot;].\n<strong>Explanation:</strong> The groups are &quot;a&quot; and &quot;bbbbbbbbbbbb&quot;. This compresses to &quot;ab12&quot;.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= chars.length &lt;= 2000</code></li>\n\t<li><code>chars[i]</code> is a lowercase English letter, uppercase English letter, digit, or symbol.</li>\n</ul>\n",
      "exampleTestcases": "[\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n[\"a\"]\n[\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "How do you know if you are at the end of a consecutive group of characters?"
      ],
      "solution": {
        "id": "1698",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5106,
      "dislikes": 8012,
      "similarQuestions": "[{\"title\": \"Count and Say\", \"titleSlug\": \"count-and-say\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Encode and Decode Strings\", \"titleSlug\": \"encode-and-decode-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Compressed String Iterator\", \"titleSlug\": \"design-compressed-string-iterator\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Decompress Run-Length Encoded List\", \"titleSlug\": \"decompress-run-length-encoded-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"String Compression III\", \"titleSlug\": \"string-compression-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Better Compression of String\", \"titleSlug\": \"better-compression-of-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486174,
      "commentCount": 425,
      "topLevelCommentCount": 304
    },
    "classAndMethodDefinition": "class Solution:\n  def compress(self, chars: List[str]) -> int:"
  },
  {
    "stat": {
      "question_id": 86,
      "question__article__live": true,
      "question__article__slug": "partition-list",
      "question__article__has_video_solution": false,
      "question__title": "Partition List",
      "question__title_slug": "partition-list",
      "question__hide": false,
      "total_acs": 662487,
      "total_submitted": 1160961,
      "frontend_question_id": 86,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/partition-list",
      "questionId": "86",
      "questionFrontendId": "86",
      "questionTitle": "Partition List",
      "titleSlug": "partition-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a linked list and a value <code>x</code>, partition it such that all nodes <strong>less than</strong> <code>x</code> come before nodes <strong>greater than or equal</strong> to <code>x</code>.</p>\n\n<p>You should <strong>preserve</strong> the original relative order of the nodes in each of the two partitions.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/partition.jpg\" style=\"width: 662px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [1,4,3,2,5,2], x = 3\n<strong>Output:</strong> [1,2,2,4,3,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [2,1], x = 2\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[0, 200]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n\t<li><code>-200 &lt;= x &lt;= 200</code></li>\n</ul>\n",
      "exampleTestcases": "[1,4,3,2,5,2]\n3\n[2,1]\n2",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "654",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7386,
      "dislikes": 884,
      "similarQuestions": "[{\"title\": \"Partition Array According to Given Pivot\", \"titleSlug\": \"partition-array-according-to-given-pivot\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485823,
      "commentCount": 189,
      "topLevelCommentCount": 112
    },
    "classAndMethodDefinition": "def partition(self, head, x):\n        h1 = l1 = ListNode(0)"
  },
  {
    "stat": {
      "question_id": 435,
      "question__article__live": true,
      "question__article__slug": "non-overlapping-intervals",
      "question__article__has_video_solution": false,
      "question__title": "Non-overlapping Intervals",
      "question__title_slug": "non-overlapping-intervals",
      "question__hide": false,
      "total_acs": 626378,
      "total_submitted": 1160493,
      "frontend_question_id": 435,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/non-overlapping-intervals",
      "questionId": "435",
      "questionFrontendId": "435",
      "questionTitle": "Non-overlapping Intervals",
      "titleSlug": "non-overlapping-intervals",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of intervals <code>intervals</code> where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>, return <em>the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,2],[2,3],[3,4],[1,3]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> [1,3] can be removed and the rest of the intervals are non-overlapping.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,2],[1,2],[1,2]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You need to remove two [1,2] to make the rest of the intervals non-overlapping.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,2],[2,3]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> You don&#39;t need to remove any of the intervals since they&#39;re already non-overlapping.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= intervals.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>-5 * 10<sup>4</sup> &lt;= start<sub>i</sub> &lt; end<sub>i</sub> &lt;= 5 * 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2],[2,3],[3,4],[1,3]]\n[[1,2],[1,2],[1,2]]\n[[1,2],[2,3]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1948",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8219,
      "dislikes": 224,
      "similarQuestions": "[{\"title\": \"Minimum Number of Arrows to Burst Balloons\", \"titleSlug\": \"minimum-number-of-arrows-to-burst-balloons\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Determine if Two Events Have Conflict\", \"titleSlug\": \"determine-if-two-events-have-conflict\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486166,
      "commentCount": 157,
      "topLevelCommentCount": 79
    },
    "classAndMethodDefinition": "class Solution:\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:"
  },
  {
    "stat": {
      "question_id": 1528,
      "question__article__live": true,
      "question__article__slug": "kids-with-the-greatest-number-of-candies",
      "question__article__has_video_solution": false,
      "question__title": "Kids With the Greatest Number of Candies",
      "question__title_slug": "kids-with-the-greatest-number-of-candies",
      "question__hide": false,
      "total_acs": 1006232,
      "total_submitted": 1147474,
      "frontend_question_id": 1431,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/kids-with-the-greatest-number-of-candies",
      "questionId": "1528",
      "questionFrontendId": "1431",
      "questionTitle": "Kids With the Greatest Number of Candies",
      "titleSlug": "kids-with-the-greatest-number-of-candies",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> kids with candies. You are given an integer array <code>candies</code>, where each <code>candies[i]</code> represents the number of candies the <code>i<sup>th</sup></code> kid has, and an integer <code>extraCandies</code>, denoting the number of extra candies that you have.</p>\n\n<p>Return <em>a boolean array </em><code>result</code><em> of length </em><code>n</code><em>, where </em><code>result[i]</code><em> is </em><code>true</code><em> if, after giving the </em><code>i<sup>th</sup></code><em> kid all the </em><code>extraCandies</code><em>, they will have the <strong>greatest</strong> number of candies among all the kids</em><em>, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>Note that <strong>multiple</strong> kids can have the <strong>greatest</strong> number of candies.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> candies = [2,3,5,1,3], extraCandies = 3\n<strong>Output:</strong> [true,true,true,false,true] \n<strong>Explanation:</strong> If you give all extraCandies to:\n- Kid 1, they will have 2 + 3 = 5 candies, which is the greatest among the kids.\n- Kid 2, they will have 3 + 3 = 6 candies, which is the greatest among the kids.\n- Kid 3, they will have 5 + 3 = 8 candies, which is the greatest among the kids.\n- Kid 4, they will have 1 + 3 = 4 candies, which is not the greatest among the kids.\n- Kid 5, they will have 3 + 3 = 6 candies, which is the greatest among the kids.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> candies = [4,2,1,1,2], extraCandies = 1\n<strong>Output:</strong> [true,false,false,false,false] \n<strong>Explanation:</strong> There is only 1 extra candy.\nKid 1 will always have the greatest number of candies, even if a different kid is given the extra candy.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> candies = [12,1,12], extraCandies = 10\n<strong>Output:</strong> [true,false,true]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == candies.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= candies[i] &lt;= 100</code></li>\n\t<li><code>1 &lt;= extraCandies &lt;= 50</code></li>\n</ul>\n",
      "exampleTestcases": "[2,3,5,1,3]\n3\n[4,2,1,1,2]\n1\n[12,1,12]\n10",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [
        "For each kid check if candies[i] + extraCandies ≥ maximum in Candies[i]."
      ],
      "solution": {
        "id": "1795",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4483,
      "dislikes": 568,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487220,
      "commentCount": 252,
      "topLevelCommentCount": 160
    },
    "classAndMethodDefinition": "class Solution(object):\n    def kidsWithCandies(self, candies, extraCandies):"
  },
  {
    "stat": {
      "question_id": 173,
      "question__article__live": true,
      "question__article__slug": "binary-search-tree-iterator",
      "question__article__has_video_solution": false,
      "question__title": "Binary Search Tree Iterator",
      "question__title_slug": "binary-search-tree-iterator",
      "question__hide": false,
      "total_acs": 831277,
      "total_submitted": 1139746,
      "frontend_question_id": 173,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-search-tree-iterator",
      "questionId": "173",
      "questionFrontendId": "173",
      "questionTitle": "Binary Search Tree Iterator",
      "titleSlug": "binary-search-tree-iterator",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Implement the <code>BSTIterator</code> class that represents an iterator over the <strong><a href=\"https://en.wikipedia.org/wiki/Tree_traversal#In-order_(LNR)\" target=\"_blank\">in-order traversal</a></strong> of a binary search tree (BST):</p>\n\n<ul>\n\t<li><code>BSTIterator(TreeNode root)</code> Initializes an object of the <code>BSTIterator</code> class. The <code>root</code> of the BST is given as part of the constructor. The pointer should be initialized to a non-existent number smaller than any element in the BST.</li>\n\t<li><code>boolean hasNext()</code> Returns <code>true</code> if there exists a number in the traversal to the right of the pointer, otherwise returns <code>false</code>.</li>\n\t<li><code>int next()</code> Moves the pointer to the right, then returns the number at the pointer.</li>\n</ul>\n\n<p>Notice that by initializing the pointer to a non-existent smallest number, the first call to <code>next()</code> will return the smallest element in the BST.</p>\n\n<p>You may assume that <code>next()</code> calls will always be valid. That is, there will be at least a next number in the in-order traversal when <code>next()</code> is called.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/25/bst-tree.png\" style=\"width: 189px; height: 178px;\" />\n<pre>\n<strong>Input</strong>\n[&quot;BSTIterator&quot;, &quot;next&quot;, &quot;next&quot;, &quot;hasNext&quot;, &quot;next&quot;, &quot;hasNext&quot;, &quot;next&quot;, &quot;hasNext&quot;, &quot;next&quot;, &quot;hasNext&quot;]\n[[[7, 3, 15, null, null, 9, 20]], [], [], [], [], [], [], [], [], []]\n<strong>Output</strong>\n[null, 3, 7, true, 9, true, 15, true, 20, false]\n\n<strong>Explanation</strong>\nBSTIterator bSTIterator = new BSTIterator([7, 3, 15, null, null, 9, 20]);\nbSTIterator.next();    // return 3\nbSTIterator.next();    // return 7\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 9\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 15\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 20\nbSTIterator.hasNext(); // return False\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>5</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>6</sup></code></li>\n\t<li>At most <code>10<sup>5</sup></code> calls will be made to <code>hasNext</code>, and <code>next</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Could you implement <code>next()</code> and <code>hasNext()</code> to run in average <code>O(1)</code> time and use&nbsp;<code>O(h)</code> memory, where <code>h</code> is the height of the tree?</li>\n</ul>\n",
      "exampleTestcases": "[\"BSTIterator\",\"next\",\"next\",\"hasNext\",\"next\",\"hasNext\",\"next\",\"hasNext\",\"next\",\"hasNext\"]\n[[[7,3,15,null,null,9,20]],[],[],[],[],[],[],[],[],[]]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        },
        {
          "name": "Iterator",
          "slug": "iterator",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "737",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8605,
      "dislikes": 513,
      "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Peeking Iterator\", \"titleSlug\": \"peeking-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Inorder Successor in BST\", \"titleSlug\": \"inorder-successor-in-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Search Tree Iterator II\", \"titleSlug\": \"binary-search-tree-iterator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485910,
      "commentCount": 70,
      "topLevelCommentCount": 40
    },
    "classAndMethodDefinition": "def __init__(self, root):\n            self.stack = list()"
  },
  {
    "stat": {
      "question_id": 51,
      "question__article__live": true,
      "question__article__slug": "n-queens",
      "question__article__has_video_solution": false,
      "question__title": "N-Queens",
      "question__title_slug": "n-queens",
      "question__hide": false,
      "total_acs": 794698,
      "total_submitted": 1139110,
      "frontend_question_id": 51,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/n-queens",
      "questionId": "51",
      "questionFrontendId": "51",
      "questionTitle": "N-Queens",
      "titleSlug": "n-queens",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>The <strong>n-queens</strong> puzzle is the problem of placing <code>n</code> queens on an <code>n x n</code> chessboard such that no two queens attack each other.</p>\n\n<p>Given an integer <code>n</code>, return <em>all distinct solutions to the <strong>n-queens puzzle</strong></em>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>Each solution contains a distinct board configuration of the n-queens&#39; placement, where <code>&#39;Q&#39;</code> and <code>&#39;.&#39;</code> both indicate a queen and an empty space, respectively.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/queens.jpg\" style=\"width: 600px; height: 268px;\" />\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> [[&quot;.Q..&quot;,&quot;...Q&quot;,&quot;Q...&quot;,&quot;..Q.&quot;],[&quot;..Q.&quot;,&quot;Q...&quot;,&quot;...Q&quot;,&quot;.Q..&quot;]]\n<strong>Explanation:</strong> There exist two distinct solutions to the 4-queens puzzle as shown above\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> [[&quot;Q&quot;]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 9</code></li>\n</ul>\n",
      "exampleTestcases": "4\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1141",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 12504,
      "dislikes": 292,
      "similarQuestions": "[{\"title\": \"N-Queens II\", \"titleSlug\": \"n-queens-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Grid Illumination\", \"titleSlug\": \"grid-illumination\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485788,
      "commentCount": 136,
      "topLevelCommentCount": 85
    },
    "classAndMethodDefinition": "def solveNQueens(self, n):\n        def DFS(queens, xy_dif, xy_sum):"
  },
  {
    "stat": {
      "question_id": 225,
      "question__article__live": true,
      "question__article__slug": "implement-stack-using-queues",
      "question__article__has_video_solution": false,
      "question__title": "Implement Stack using Queues",
      "question__title_slug": "implement-stack-using-queues",
      "question__hide": false,
      "total_acs": 738525,
      "total_submitted": 1136002,
      "frontend_question_id": 225,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/implement-stack-using-queues",
      "questionId": "225",
      "questionFrontendId": "225",
      "questionTitle": "Implement Stack using Queues",
      "titleSlug": "implement-stack-using-queues",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Implement a last-in-first-out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal stack (<code>push</code>, <code>top</code>, <code>pop</code>, and <code>empty</code>).</p>\n\n<p>Implement the <code>MyStack</code> class:</p>\n\n<ul>\n\t<li><code>void push(int x)</code> Pushes element x to the top of the stack.</li>\n\t<li><code>int pop()</code> Removes the element on the top of the stack and returns it.</li>\n\t<li><code>int top()</code> Returns the element on the top of the stack.</li>\n\t<li><code>boolean empty()</code> Returns <code>true</code> if the stack is empty, <code>false</code> otherwise.</li>\n</ul>\n\n<p><b>Notes:</b></p>\n\n<ul>\n\t<li>You must use <strong>only</strong> standard operations of a queue, which means that only <code>push to back</code>, <code>peek/pop from front</code>, <code>size</code> and <code>is empty</code> operations are valid.</li>\n\t<li>Depending on your language, the queue may not be supported natively. You may simulate a queue using a list or deque (double-ended queue) as long as you use only a queue&#39;s standard operations.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyStack&quot;, &quot;push&quot;, &quot;push&quot;, &quot;top&quot;, &quot;pop&quot;, &quot;empty&quot;]\n[[], [1], [2], [], [], []]\n<strong>Output</strong>\n[null, null, null, 2, 2, false]\n\n<strong>Explanation</strong>\nMyStack myStack = new MyStack();\nmyStack.push(1);\nmyStack.push(2);\nmyStack.top(); // return 2\nmyStack.pop(); // return 2\nmyStack.empty(); // return False\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= x &lt;= 9</code></li>\n\t<li>At most <code>100</code> calls will be made to <code>push</code>, <code>pop</code>, <code>top</code>, and <code>empty</code>.</li>\n\t<li>All the calls to <code>pop</code> and <code>top</code> are valid.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow-up:</strong> Can you implement the stack using only one queue?</p>\n",
      "exampleTestcases": "[\"MyStack\",\"push\",\"push\",\"top\",\"pop\",\"empty\"]\n[[],[1],[2],[],[],[]]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "41",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6138,
      "dislikes": 1212,
      "similarQuestions": "[{\"title\": \"Implement Queue using Stacks\", \"titleSlug\": \"implement-queue-using-stacks\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485962,
      "commentCount": 104,
      "topLevelCommentCount": 58
    },
    "classAndMethodDefinition": "def __init__(self):\n            self._queue = collections.deque()"
  },
  {
    "stat": {
      "question_id": 220,
      "question__article__live": true,
      "question__article__slug": "contains-duplicate-iii",
      "question__article__has_video_solution": false,
      "question__title": "Contains Duplicate III",
      "question__title_slug": "contains-duplicate-iii",
      "question__hide": false,
      "total_acs": 259850,
      "total_submitted": 1131926,
      "frontend_question_id": 220,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/contains-duplicate-iii",
      "questionId": "220",
      "questionFrontendId": "220",
      "questionTitle": "Contains Duplicate III",
      "titleSlug": "contains-duplicate-iii",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code> and two integers <code>indexDiff</code> and <code>valueDiff</code>.</p>\n\n<p>Find a pair of indices <code>(i, j)</code> such that:</p>\n\n<ul>\n\t<li><code>i != j</code>,</li>\n\t<li><code>abs(i - j) &lt;= indexDiff</code>.</li>\n\t<li><code>abs(nums[i] - nums[j]) &lt;= valueDiff</code>, and</li>\n</ul>\n\n<p>Return <code>true</code><em> if such pair exists or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1], indexDiff = 3, valueDiff = 0\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We can choose (i, j) = (0, 3).\nWe satisfy the three conditions:\ni != j --&gt; 0 != 3\nabs(i - j) &lt;= indexDiff --&gt; abs(0 - 3) &lt;= 3\nabs(nums[i] - nums[j]) &lt;= valueDiff --&gt; abs(1 - 1) &lt;= 0\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5,9,1,5,9], indexDiff = 2, valueDiff = 3\n<strong>Output:</strong> false\n<strong>Explanation:</strong> After trying all the possible pairs (i, j), we cannot satisfy the three conditions, so we return false.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= indexDiff &lt;= nums.length</code></li>\n\t<li><code>0 &lt;= valueDiff &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,1]\n3\n0\n[1,5,9,1,5,9]\n2\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort",
          "translatedName": null
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set",
          "translatedName": null
        }
      ],
      "hints": [
        "Time complexity O(n logk)  - This will give an indication that sorting is involved for k elements.",
        "Use already existing state to evaluate next state  -  Like, a set of k sorted numbers are only needed to be tracked. When we are processing the next number in array, then we can utilize the existing sorted state and it is not necessary to sort next overlapping set of k numbers again."
      ],
      "solution": {
        "id": "25",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1021,
      "dislikes": 89,
      "similarQuestions": "[{\"title\": \"Contains Duplicate\", \"titleSlug\": \"contains-duplicate\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Contains Duplicate II\", \"titleSlug\": \"contains-duplicate-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485957,
      "commentCount": 85,
      "topLevelCommentCount": 50
    },
    "classAndMethodDefinition": "def containsNearbyAlmostDuplicate(self, nums, k, t):\n        if t < 0: return False"
  },
  {
    "stat": {
      "question_id": 224,
      "question__article__live": true,
      "question__article__slug": "basic-calculator",
      "question__article__has_video_solution": false,
      "question__title": "Basic Calculator",
      "question__title_slug": "basic-calculator",
      "question__hide": false,
      "total_acs": 494604,
      "total_submitted": 1128069,
      "frontend_question_id": 224,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/basic-calculator",
      "questionId": "224",
      "questionFrontendId": "224",
      "questionTitle": "Basic Calculator",
      "titleSlug": "basic-calculator",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> representing a valid expression, implement a basic calculator to evaluate it, and return <em>the result of the evaluation</em>.</p>\n\n<p><strong>Note:</strong> You are <strong>not</strong> allowed to use any built-in function which evaluates strings as mathematical expressions, such as <code>eval()</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;1 + 1&quot;\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot; 2-1 + 2 &quot;\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(1+(4+5+2)-3)+(6+8)&quot;\n<strong>Output:</strong> 23\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 3 * 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of digits, <code>&#39;+&#39;</code>, <code>&#39;-&#39;</code>, <code>&#39;(&#39;</code>, <code>&#39;)&#39;</code>, and <code>&#39; &#39;</code>.</li>\n\t<li><code>s</code> represents a valid expression.</li>\n\t<li><code>&#39;+&#39;</code> is <strong>not</strong> used as a unary operation (i.e., <code>&quot;+1&quot;</code> and <code>&quot;+(2 + 3)&quot;</code> is invalid).</li>\n\t<li><code>&#39;-&#39;</code> could be used as a unary operation (i.e., <code>&quot;-1&quot;</code> and <code>&quot;-(2 + 3)&quot;</code> is valid).</li>\n\t<li>There will be no two consecutive operators in the input.</li>\n\t<li>Every number and running calculation will fit in a signed 32-bit integer.</li>\n</ul>\n",
      "exampleTestcases": "\"1 + 1\"\n\" 2-1 + 2 \"\n\"(1+(4+5+2)-3)+(6+8)\"",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "744",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6350,
      "dislikes": 504,
      "similarQuestions": "[{\"title\": \"Evaluate Reverse Polish Notation\", \"titleSlug\": \"evaluate-reverse-polish-notation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator II\", \"titleSlug\": \"basic-calculator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Different Ways to Add Parentheses\", \"titleSlug\": \"different-ways-to-add-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator III\", \"titleSlug\": \"basic-calculator-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"The Score of Students Solving Math Expression\", \"titleSlug\": \"the-score-of-students-solving-math-expression\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimize Result by Adding Parentheses to Expression\", \"titleSlug\": \"minimize-result-by-adding-parentheses-to-expression\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485961,
      "commentCount": 136,
      "topLevelCommentCount": 94
    },
    "classAndMethodDefinition": "def calculate(self, s):\n        total = 0"
  },
  {
    "stat": {
      "question_id": 557,
      "question__article__live": true,
      "question__article__slug": "reverse-words-in-a-string-iii",
      "question__article__has_video_solution": false,
      "question__title": "Reverse Words in a String III",
      "question__title_slug": "reverse-words-in-a-string-iii",
      "question__hide": false,
      "total_acs": 935170,
      "total_submitted": 1123179,
      "frontend_question_id": 557,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-words-in-a-string-iii",
      "questionId": "557",
      "questionFrontendId": "557",
      "questionTitle": "Reverse Words in a String III",
      "titleSlug": "reverse-words-in-a-string-iii",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Let&#39;s take LeetCode contest&quot;\n<strong>Output:</strong> &quot;s&#39;teL ekat edoCteeL tsetnoc&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Mr Ding&quot;\n<strong>Output:</strong> &quot;rM gniD&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> contains printable <strong>ASCII</strong> characters.</li>\n\t<li><code>s</code> does not contain any leading or trailing spaces.</li>\n\t<li>There is <strong>at least one</strong> word in <code>s</code>.</li>\n\t<li>All the words in <code>s</code> are separated by a single space.</li>\n</ul>\n",
      "exampleTestcases": "\"Let's take LeetCode contest\"\n\"Mr Ding\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1472",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5941,
      "dislikes": 250,
      "similarQuestions": "[{\"title\": \"Reverse String II\", \"titleSlug\": \"reverse-string-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486286,
      "commentCount": 112,
      "topLevelCommentCount": 88
    },
    "classAndMethodDefinition": "class Solution:\n    def reverseWords(self, s: str) -> str:"
  },
  {
    "stat": {
      "question_id": 188,
      "question__article__live": true,
      "question__article__slug": "best-time-to-buy-and-sell-stock-iv",
      "question__article__has_video_solution": false,
      "question__title": "Best Time to Buy and Sell Stock IV",
      "question__title_slug": "best-time-to-buy-and-sell-stock-iv",
      "question__hide": false,
      "total_acs": 496685,
      "total_submitted": 1120723,
      "frontend_question_id": 188,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",
      "questionId": "188",
      "questionFrontendId": "188",
      "questionTitle": "Best Time to Buy and Sell Stock IV",
      "titleSlug": "best-time-to-buy-and-sell-stock-iv",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day, and an integer <code>k</code>.</p>\n\n<p>Find the maximum profit you can achieve. You may complete at most <code>k</code> transactions: i.e. you may buy at most <code>k</code> times and sell at most <code>k</code> times.</p>\n\n<p><strong>Note:</strong> You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 2, prices = [2,4,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 2, prices = [3,2,6,5,0,3]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4. Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= 100</code></li>\n\t<li><code>1 &lt;= prices.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= prices[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "2\n[2,4,1]\n2\n[3,2,6,5,0,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "980",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7467,
      "dislikes": 210,
      "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Profit From Trading Stocks\", \"titleSlug\": \"maximum-profit-from-trading-stocks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485925,
      "commentCount": 73,
      "topLevelCommentCount": 44
    },
    "classAndMethodDefinition": "class DoubleLinkListNode:\n    def __init__(self, ind, pre = None, next = None):"
  },
  {
    "stat": {
      "question_id": 96,
      "question__article__live": true,
      "question__article__slug": "unique-binary-search-trees",
      "question__article__has_video_solution": false,
      "question__title": "Unique Binary Search Trees",
      "question__title_slug": "unique-binary-search-trees",
      "question__hide": false,
      "total_acs": 688833,
      "total_submitted": 1120485,
      "frontend_question_id": 96,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/unique-binary-search-trees",
      "questionId": "96",
      "questionFrontendId": "96",
      "questionTitle": "Unique Binary Search Trees",
      "titleSlug": "unique-binary-search-trees",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em>the number of structurally unique <strong>BST&#39;</strong>s (binary search trees) which has exactly </em><code>n</code><em> nodes of unique values from</em> <code>1</code> <em>to</em> <code>n</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg\" style=\"width: 600px; height: 148px;\" />\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 19</code></li>\n</ul>\n",
      "exampleTestcases": "3\n1",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "555",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10400,
      "dislikes": 407,
      "similarQuestions": "[{\"title\": \"Unique Binary Search Trees II\", \"titleSlug\": \"unique-binary-search-trees-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485833,
      "commentCount": 64,
      "topLevelCommentCount": 39
    },
    "classAndMethodDefinition": "def numTrees(self, n: int) -> int:\n        self.table = [-1] * (n+1)"
  },
  {
    "stat": {
      "question_id": 171,
      "question__article__live": true,
      "question__article__slug": "excel-sheet-column-number",
      "question__article__has_video_solution": false,
      "question__title": "Excel Sheet Column Number",
      "question__title_slug": "excel-sheet-column-number",
      "question__hide": false,
      "total_acs": 715289,
      "total_submitted": 1111237,
      "frontend_question_id": 171,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/excel-sheet-column-number",
      "questionId": "171",
      "questionFrontendId": "171",
      "questionTitle": "Excel Sheet Column Number",
      "titleSlug": "excel-sheet-column-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>columnTitle</code> that represents the column title as appears in an Excel sheet, return <em>its corresponding column number</em>.</p>\n\n<p>For example:</p>\n\n<pre>\nA -&gt; 1\nB -&gt; 2\nC -&gt; 3\n...\nZ -&gt; 26\nAA -&gt; 27\nAB -&gt; 28 \n...\n</pre>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> columnTitle = &quot;A&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> columnTitle = &quot;AB&quot;\n<strong>Output:</strong> 28\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> columnTitle = &quot;ZY&quot;\n<strong>Output:</strong> 701\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= columnTitle.length &lt;= 7</code></li>\n\t<li><code>columnTitle</code> consists only of uppercase English letters.</li>\n\t<li><code>columnTitle</code> is in the range <code>[&quot;A&quot;, &quot;FXSHRXW&quot;]</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"A\"\n\"AB\"\n\"ZY\"",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "966",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4792,
      "dislikes": 371,
      "similarQuestions": "[{\"title\": \"Excel Sheet Column Title\", \"titleSlug\": \"excel-sheet-column-title\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Cells in a Range on an Excel Sheet\", \"titleSlug\": \"cells-in-a-range-on-an-excel-sheet\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485908,
      "commentCount": 50,
      "topLevelCommentCount": 27
    },
    "classAndMethodDefinition": "def titleToNumber(self, columnTitle: str) -> int:\n        ans, pos = 0, 0"
  },
  {
    "stat": {
      "question_id": 621,
      "question__article__live": true,
      "question__article__slug": "task-scheduler",
      "question__article__has_video_solution": false,
      "question__title": "Task Scheduler",
      "question__title_slug": "task-scheduler",
      "question__hide": false,
      "total_acs": 669617,
      "total_submitted": 1110580,
      "frontend_question_id": 621,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/task-scheduler",
      "questionId": "621",
      "questionFrontendId": "621",
      "questionTitle": "Task Scheduler",
      "titleSlug": "task-scheduler",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of CPU <code>tasks</code>, each represented by letters&nbsp;A&nbsp;to Z, and a cooling time, <code>n</code>. Each cycle or interval allows the completion of one task. Tasks can be completed in any order, but there&#39;s a constraint: <strong>identical</strong> tasks must be separated by at least <code>n</code> intervals due to cooling time.</p>\n\n<p>​Return the <em>minimum number of intervals</em> required to complete all tasks.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\" style=\"\n    border-color: var(--border-tertiary);\n    border-left-width: 2px;\n    color: var(--text-secondary);\n    font-size: .875rem;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    overflow: visible;\n    padding-left: 1rem;\n\">\n<p><strong>Input:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 2</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\" style=\"\nfont-family: Menlo,sans-serif;\nfont-size: 0.85rem;\n\">8</span></p>\n\n<p><strong>Explanation:</strong> A possible sequence is: A -&gt; B -&gt; idle -&gt; A -&gt; B -&gt; idle -&gt; A -&gt; B.</p>\n\n<p>After completing task A, you must wait two cycles before doing A again. The same applies to task B. In the 3<sup>rd</sup> interval, neither A nor B can be done, so you idle. By the 4<sup>th</sup> cycle, you can do A again as 2 intervals have passed.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\" style=\"\n    border-color: var(--border-tertiary);\n    border-left-width: 2px;\n    color: var(--text-secondary);\n    font-size: .875rem;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    overflow: visible;\n    padding-left: 1rem;\n\">\n<p><strong>Input:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">tasks = [&quot;A&quot;,&quot;C&quot;,&quot;A&quot;,&quot;B&quot;,&quot;D&quot;,&quot;B&quot;], n = 1</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">6</span></p>\n\n<p><strong>Explanation:</strong> A possible sequence is: A -&gt; B -&gt; C -&gt; D -&gt; A -&gt; B.</p>\n\n<p>With a cooling interval of 1, you can repeat a task after just one other task.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\" style=\"\n    border-color: var(--border-tertiary);\n    border-left-width: 2px;\n    color: var(--text-secondary);\n    font-size: .875rem;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    overflow: visible;\n    padding-left: 1rem;\n\">\n<p><strong>Input:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;, &quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 3</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">10</span></p>\n\n<p><strong>Explanation:</strong> A possible sequence is: A -&gt; B -&gt; idle -&gt; idle -&gt; A -&gt; B -&gt; idle -&gt; idle -&gt; A -&gt; B.</p>\n\n<p>There are only two types of tasks, A and B, which need to be separated by 3 intervals. This leads to idling twice between repetitions of these tasks.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= tasks.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>tasks[i]</code> is an uppercase English letter.</li>\n\t<li><code>0 &lt;= n &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"]\n2\n[\"A\",\"C\",\"A\",\"B\",\"D\",\"B\"]\n1\n[\"A\",\"A\",\"A\", \"B\",\"B\",\"B\"]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [
        "There are many different solutions for this problem, including a greedy algorithm.",
        "For every cycle, find the most frequent letter that can be placed in this cycle. After placing, decrease the frequency of that letter by one."
      ],
      "solution": {
        "id": "2271",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10559,
      "dislikes": 2085,
      "similarQuestions": "[{\"title\": \"Rearrange String k Distance Apart\", \"titleSlug\": \"rearrange-string-k-distance-apart\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Reorganize String\", \"titleSlug\": \"reorganize-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Weeks for Which You Can Work\", \"titleSlug\": \"maximum-number-of-weeks-for-which-you-can-work\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Minimum Time to Finish All Jobs II\", \"titleSlug\": \"find-minimum-time-to-finish-all-jobs-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Task Scheduler II\", \"titleSlug\": \"task-scheduler-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486346,
      "commentCount": 212,
      "topLevelCommentCount": 133
    },
    "classAndMethodDefinition": "def leastInterval(self, tasks: List[str], n: int) -> int:\n        ## RC ##"
  },
  {
    "stat": {
      "question_id": 1371,
      "question__article__live": true,
      "question__article__slug": "minimum-remove-to-make-valid-parentheses",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Remove to Make Valid Parentheses",
      "question__title_slug": "minimum-remove-to-make-valid-parentheses",
      "question__hide": false,
      "total_acs": 768599,
      "total_submitted": 1110397,
      "frontend_question_id": 1249,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses",
      "questionId": "1371",
      "questionFrontendId": "1249",
      "questionTitle": "Minimum Remove to Make Valid Parentheses",
      "titleSlug": "minimum-remove-to-make-valid-parentheses",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <font face=\"monospace\">s</font> of <code>&#39;(&#39;</code> , <code>&#39;)&#39;</code> and lowercase English characters.</p>\n\n<p>Your task is to remove the minimum number of parentheses ( <code>&#39;(&#39;</code> or <code>&#39;)&#39;</code>, in any positions ) so that the resulting <em>parentheses string</em> is valid and return <strong>any</strong> valid string.</p>\n\n<p>Formally, a <em>parentheses string</em> is valid if and only if:</p>\n\n<ul>\n\t<li>It is the empty string, contains only lowercase characters, or</li>\n\t<li>It can be written as <code>AB</code> (<code>A</code> concatenated with <code>B</code>), where <code>A</code> and <code>B</code> are valid strings, or</li>\n\t<li>It can be written as <code>(A)</code>, where <code>A</code> is a valid string.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;lee(t(c)o)de)&quot;\n<strong>Output:</strong> &quot;lee(t(c)o)de&quot;\n<strong>Explanation:</strong> &quot;lee(t(co)de)&quot; , &quot;lee(t(c)ode)&quot; would also be accepted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a)b(c)d&quot;\n<strong>Output:</strong> &quot;ab(c)d&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;))((&quot;\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> An empty string is also valid.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is either&nbsp;<code>&#39;(&#39;</code> , <code>&#39;)&#39;</code>, or lowercase English letter.</li>\n</ul>\n",
      "exampleTestcases": "\"lee(t(c)o)de)\"\n\"a)b(c)d\"\n\"))((\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [
        "Each prefix of a balanced parentheses has a number of open parentheses greater or equal than closed parentheses, similar idea with each suffix.",
        "Check the array from left to right, remove characters that do not meet the property mentioned above, same idea in backward way."
      ],
      "solution": {
        "id": "822",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6906,
      "dislikes": 146,
      "similarQuestions": "[{\"title\": \"Minimum Number of Swaps to Make the String Balanced\", \"titleSlug\": \"minimum-number-of-swaps-to-make-the-string-balanced\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check if a Parentheses String Can Be Valid\", \"titleSlug\": \"check-if-a-parentheses-string-can-be-valid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487064,
      "commentCount": 172,
      "topLevelCommentCount": 89
    },
    "classAndMethodDefinition": "def minRemoveToMakeValid(self, s: str) -> str:\n    s = list(s)"
  },
  {
    "stat": {
      "question_id": 496,
      "question__article__live": true,
      "question__article__slug": "greater-element-i",
      "question__article__has_video_solution": false,
      "question__title": "Next Greater Element I",
      "question__title_slug": "next-greater-element-i",
      "question__hide": false,
      "total_acs": 802640,
      "total_submitted": 1100317,
      "frontend_question_id": 496,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/next-greater-element-i",
      "questionId": "496",
      "questionFrontendId": "496",
      "questionTitle": "Next Greater Element I",
      "titleSlug": "next-greater-element-i",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>The <strong>next greater element</strong> of some element <code>x</code> in an array is the <strong>first greater</strong> element that is <strong>to the right</strong> of <code>x</code> in the same array.</p>\n\n<p>You are given two <strong>distinct 0-indexed</strong> integer arrays <code>nums1</code> and <code>nums2</code>, where <code>nums1</code> is a subset of <code>nums2</code>.</p>\n\n<p>For each <code>0 &lt;= i &lt; nums1.length</code>, find the index <code>j</code> such that <code>nums1[i] == nums2[j]</code> and determine the <strong>next greater element</strong> of <code>nums2[j]</code> in <code>nums2</code>. If there is no next greater element, then the answer for this query is <code>-1</code>.</p>\n\n<p>Return <em>an array </em><code>ans</code><em> of length </em><code>nums1.length</code><em> such that </em><code>ans[i]</code><em> is the <strong>next greater element</strong> as described above.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [4,1,2], nums2 = [1,3,4,2]\n<strong>Output:</strong> [-1,3,-1]\n<strong>Explanation:</strong> The next greater element for each value of nums1 is as follows:\n- 4 is underlined in nums2 = [1,3,<u>4</u>,2]. There is no next greater element, so the answer is -1.\n- 1 is underlined in nums2 = [<u>1</u>,3,4,2]. The next greater element is 3.\n- 2 is underlined in nums2 = [1,3,4,<u>2</u>]. There is no next greater element, so the answer is -1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [2,4], nums2 = [1,2,3,4]\n<strong>Output:</strong> [3,-1]\n<strong>Explanation:</strong> The next greater element for each value of nums1 is as follows:\n- 2 is underlined in nums2 = [1,<u>2</u>,3,4]. The next greater element is 3.\n- 4 is underlined in nums2 = [1,2,3,<u>4</u>]. There is no next greater element, so the answer is -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length &lt;= nums2.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums1[i], nums2[i] &lt;= 10<sup>4</sup></code></li>\n\t<li>All integers in <code>nums1</code> and <code>nums2</code> are <strong>unique</strong>.</li>\n\t<li>All the integers of <code>nums1</code> also appear in <code>nums2</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you find an <code>O(nums1.length + nums2.length)</code> solution?",
      "exampleTestcases": "[4,1,2]\n[1,3,4,2]\n[2,4]\n[1,2,3,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "87",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8114,
      "dislikes": 783,
      "similarQuestions": "[{\"title\": \"Next Greater Element II\", \"titleSlug\": \"next-greater-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element III\", \"titleSlug\": \"next-greater-element-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Daily Temperatures\", \"titleSlug\": \"daily-temperatures\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sum of Subarray Ranges\", \"titleSlug\": \"sum-of-subarray-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sum of Total Strength of Wizards\", \"titleSlug\": \"sum-of-total-strength-of-wizards\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element IV\", \"titleSlug\": \"next-greater-element-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Remove Nodes From Linked List\", \"titleSlug\": \"remove-nodes-from-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Missing Integer Greater Than Sequential Prefix Sum\", \"titleSlug\": \"smallest-missing-integer-greater-than-sequential-prefix-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486226,
      "commentCount": 213,
      "topLevelCommentCount": 161
    },
    "classAndMethodDefinition": "def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\n\\tif not nums2:"
  },
  {
    "stat": {
      "question_id": 172,
      "question__article__live": true,
      "question__article__slug": "factorial-trailing-zeroes",
      "question__article__has_video_solution": false,
      "question__title": "Factorial Trailing Zeroes",
      "question__title_slug": "factorial-trailing-zeroes",
      "question__hide": false,
      "total_acs": 480741,
      "total_submitted": 1098232,
      "frontend_question_id": 172,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/factorial-trailing-zeroes",
      "questionId": "172",
      "questionFrontendId": "172",
      "questionTitle": "Factorial Trailing Zeroes",
      "titleSlug": "factorial-trailing-zeroes",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em>the number of trailing zeroes in </em><code>n!</code>.</p>\n\n<p>Note that <code>n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> 3! = 6, no trailing zero.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 5! = 120, one trailing zero.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you write a solution that works in logarithmic time complexity?</p>\n",
      "exampleTestcases": "3\n5\n0",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "908",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3228,
      "dislikes": 1957,
      "similarQuestions": "[{\"title\": \"Number of Digit One\", \"titleSlug\": \"number-of-digit-one\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Preimage Size of Factorial Zeroes Function\", \"titleSlug\": \"preimage-size-of-factorial-zeroes-function\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Abbreviating the Product of a Range\", \"titleSlug\": \"abbreviating-the-product-of-a-range\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Trailing Zeros in a Cornered Path\", \"titleSlug\": \"maximum-trailing-zeros-in-a-cornered-path\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485909,
      "commentCount": 77,
      "topLevelCommentCount": 46
    },
    "classAndMethodDefinition": "def trailingZeroes(self, n):\n            r = 0"
  },
  {
    "stat": {
      "question_id": 692,
      "question__article__live": true,
      "question__article__slug": "top-k-frequent-words",
      "question__article__has_video_solution": false,
      "question__title": "Top K Frequent Words",
      "question__title_slug": "top-k-frequent-words",
      "question__hide": false,
      "total_acs": 637050,
      "total_submitted": 1091253,
      "frontend_question_id": 692,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/top-k-frequent-words",
      "questionId": "692",
      "questionFrontendId": "692",
      "questionTitle": "Top K Frequent Words",
      "titleSlug": "top-k-frequent-words",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of strings <code>words</code> and an integer <code>k</code>, return <em>the </em><code>k</code><em> most frequent strings</em>.</p>\n\n<p>Return the answer <strong>sorted</strong> by <strong>the frequency</strong> from highest to lowest. Sort the words with the same frequency by their <strong>lexicographical order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;i&quot;,&quot;love&quot;,&quot;leetcode&quot;,&quot;i&quot;,&quot;love&quot;,&quot;coding&quot;], k = 2\n<strong>Output:</strong> [&quot;i&quot;,&quot;love&quot;]\n<strong>Explanation:</strong> &quot;i&quot; and &quot;love&quot; are the two most frequent words.\nNote that &quot;i&quot; comes before &quot;love&quot; due to a lower alphabetical order.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;the&quot;,&quot;day&quot;,&quot;is&quot;,&quot;sunny&quot;,&quot;the&quot;,&quot;the&quot;,&quot;the&quot;,&quot;sunny&quot;,&quot;is&quot;,&quot;is&quot;], k = 4\n<strong>Output:</strong> [&quot;the&quot;,&quot;is&quot;,&quot;sunny&quot;,&quot;day&quot;]\n<strong>Explanation:</strong> &quot;the&quot;, &quot;is&quot;, &quot;sunny&quot; and &quot;day&quot; are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 10</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n\t<li><code>k</code> is in the range <code>[1, The number of <strong>unique</strong> words[i]]</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow-up:</strong> Could you solve it in <code>O(n log(k))</code> time and <code>O(n)</code> extra space?</p>\n",
      "exampleTestcases": "[\"i\",\"love\",\"leetcode\",\"i\",\"love\",\"coding\"]\n2\n[\"the\",\"day\",\"is\",\"sunny\",\"the\",\"the\",\"the\",\"sunny\",\"is\",\"is\"]\n4",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1546",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7672,
      "dislikes": 346,
      "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"K Closest Points to Origin\", \"titleSlug\": \"k-closest-points-to-origin\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sort Features by Popularity\", \"titleSlug\": \"sort-features-by-popularity\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sender With Largest Word Count\", \"titleSlug\": \"sender-with-largest-word-count\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Pairs in Array\", \"titleSlug\": \"maximum-number-of-pairs-in-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486415,
      "commentCount": 48,
      "topLevelCommentCount": 34
    },
    "classAndMethodDefinition": "def __init__(self, word, freq):\n        self.word = word"
  },
  {
    "stat": {
      "question_id": 941,
      "question__article__live": true,
      "question__article__slug": "sort-array-by-parity",
      "question__article__has_video_solution": false,
      "question__title": "Sort Array By Parity",
      "question__title_slug": "sort-array-by-parity",
      "question__hide": false,
      "total_acs": 827525,
      "total_submitted": 1085354,
      "frontend_question_id": 905,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sort-array-by-parity",
      "questionId": "941",
      "questionFrontendId": "905",
      "questionTitle": "Sort Array By Parity",
      "titleSlug": "sort-array-by-parity",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, move all the even integers at the beginning of the array followed by all the odd integers.</p>\n\n<p>Return <em><strong>any array</strong> that satisfies this condition</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,2,4]\n<strong>Output:</strong> [2,4,3,1]\n<strong>Explanation:</strong> The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 5000</code></li>\n</ul>\n",
      "exampleTestcases": "[3,1,2,4]\n[0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "559",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5390,
      "dislikes": 149,
      "similarQuestions": "[{\"title\": \"Sort Even and Odd Indices Independently\", \"titleSlug\": \"sort-even-and-odd-indices-independently\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Number After Digit Swaps by Parity\", \"titleSlug\": \"largest-number-after-digit-swaps-by-parity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486648,
      "commentCount": 97,
      "topLevelCommentCount": 67
    },
    "classAndMethodDefinition": "class Solution:\n    def sortArrayByParity(self, nums: List[int]) -> List[int]:"
  },
  {
    "stat": {
      "question_id": 665,
      "question__article__live": true,
      "question__article__slug": "non-decreasing-array",
      "question__article__has_video_solution": false,
      "question__title": "Non-decreasing Array",
      "question__title_slug": "non-decreasing-array",
      "question__hide": false,
      "total_acs": 267942,
      "total_submitted": 1079513,
      "frontend_question_id": 665,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/non-decreasing-array",
      "questionId": "665",
      "questionFrontendId": "665",
      "questionTitle": "Non-decreasing Array",
      "titleSlug": "non-decreasing-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code> with <code>n</code> integers, your task is to check if it could become non-decreasing by modifying <strong>at most one element</strong>.</p>\n\n<p>We define an array is non-decreasing if <code>nums[i] &lt;= nums[i + 1]</code> holds for every <code>i</code> (<strong>0-based</strong>) such that (<code>0 &lt;= i &lt;= n - 2</code>).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You could modify the first 4 to 1 to get a non-decreasing array.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,1]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You cannot get a non-decreasing array by modifying at most one element.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[4,2,3]\n[4,2,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1126",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5729,
      "dislikes": 778,
      "similarQuestions": "[{\"title\": \"Make Array Non-decreasing or Non-increasing\", \"titleSlug\": \"make-array-non-decreasing-or-non-increasing\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Good Days to Rob the Bank\", \"titleSlug\": \"find-good-days-to-rob-the-bank\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486388,
      "commentCount": 45,
      "topLevelCommentCount": 30
    },
    "classAndMethodDefinition": "def checkPossibility(self, N: List[int]) -> bool:\n        err = 0"
  },
  {
    "stat": {
      "question_id": 451,
      "question__article__live": true,
      "question__article__slug": "sort-characters-by-frequency",
      "question__article__has_video_solution": false,
      "question__title": "Sort Characters By Frequency",
      "question__title_slug": "sort-characters-by-frequency",
      "question__hide": false,
      "total_acs": 786748,
      "total_submitted": 1078401,
      "frontend_question_id": 451,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sort-characters-by-frequency",
      "questionId": "451",
      "questionFrontendId": "451",
      "questionTitle": "Sort Characters By Frequency",
      "titleSlug": "sort-characters-by-frequency",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, sort it in <strong>decreasing order</strong> based on the <strong>frequency</strong> of the characters. The <strong>frequency</strong> of a character is the number of times it appears in the string.</p>\n\n<p>Return <em>the sorted string</em>. If there are multiple answers, return <em>any of them</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;tree&quot;\n<strong>Output:</strong> &quot;eert&quot;\n<strong>Explanation:</strong> &#39;e&#39; appears twice while &#39;r&#39; and &#39;t&#39; both appear once.\nSo &#39;e&#39; must appear before both &#39;r&#39; and &#39;t&#39;. Therefore &quot;eetr&quot; is also a valid answer.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cccaaa&quot;\n<strong>Output:</strong> &quot;aaaccc&quot;\n<strong>Explanation:</strong> Both &#39;c&#39; and &#39;a&#39; appear three times, so both &quot;cccaaa&quot; and &quot;aaaccc&quot; are valid answers.\nNote that &quot;cacaca&quot; is incorrect, as the same characters must be together.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Aabb&quot;\n<strong>Output:</strong> &quot;bbAa&quot;\n<strong>Explanation:</strong> &quot;bbaA&quot; is also a valid answer, but &quot;Aabb&quot; is incorrect.\nNote that &#39;A&#39; and &#39;a&#39; are treated as two different characters.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 * 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of uppercase and lowercase English letters and digits.</li>\n</ul>\n",
      "exampleTestcases": "\"tree\"\n\"cccaaa\"\n\"Aabb\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "884",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8357,
      "dislikes": 293,
      "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"First Unique Character in a String\", \"titleSlug\": \"first-unique-character-in-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort Array by Increasing Frequency\", \"titleSlug\": \"sort-array-by-increasing-frequency\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Percentage of Letter in String\", \"titleSlug\": \"percentage-of-letter-in-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Pairs in Array\", \"titleSlug\": \"maximum-number-of-pairs-in-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Most Frequent Even Element\", \"titleSlug\": \"most-frequent-even-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Of Similar Strings\", \"titleSlug\": \"count-pairs-of-similar-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486182,
      "commentCount": 203,
      "topLevelCommentCount": 117
    },
    "classAndMethodDefinition": "class Solution:\n    def frequencySort(self, s: str) -> str:"
  },
  {
    "stat": {
      "question_id": 154,
      "question__article__live": true,
      "question__article__slug": "find-minimum-in-rotated-sorted-array-ii",
      "question__article__has_video_solution": false,
      "question__title": "Find Minimum in Rotated Sorted Array II",
      "question__title_slug": "find-minimum-in-rotated-sorted-array-ii",
      "question__hide": false,
      "total_acs": 470972,
      "total_submitted": 1077299,
      "frontend_question_id": 154,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii",
      "questionId": "154",
      "questionFrontendId": "154",
      "questionTitle": "Find Minimum in Rotated Sorted Array II",
      "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Suppose an array of length <code>n</code> sorted in ascending order is <strong>rotated</strong> between <code>1</code> and <code>n</code> times. For example, the array <code>nums = [0,1,4,4,5,6,7]</code> might become:</p>\n\n<ul>\n\t<li><code>[4,5,6,7,0,1,4]</code> if it was rotated <code>4</code> times.</li>\n\t<li><code>[0,1,4,4,5,6,7]</code> if it was rotated <code>7</code> times.</li>\n</ul>\n\n<p>Notice that <strong>rotating</strong> an array <code>[a[0], a[1], a[2], ..., a[n-1]]</code> 1 time results in the array <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code>.</p>\n\n<p>Given the sorted rotated array <code>nums</code> that may contain <strong>duplicates</strong>, return <em>the minimum element of this array</em>.</p>\n\n<p>You must decrease the overall operation steps as much as possible.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5]\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,2,0,1]\n<strong>Output:</strong> 0\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5000</code></li>\n\t<li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li>\n\t<li><code>nums</code> is sorted and rotated between <code>1</code> and <code>n</code> times.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> This problem is similar to&nbsp;<a href=\"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/\" target=\"_blank\">Find Minimum in Rotated Sorted Array</a>, but&nbsp;<code>nums</code> may contain <strong>duplicates</strong>. Would this affect the runtime complexity? How and why?</p>\n\n<p>&nbsp;</p>\n",
      "exampleTestcases": "[1,3,5]\n[2,2,2,0,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "820",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4708,
      "dislikes": 489,
      "similarQuestions": "[{\"title\": \"Find Minimum in Rotated Sorted Array\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485891,
      "commentCount": 95,
      "topLevelCommentCount": 69
    },
    "classAndMethodDefinition": "def findMin(self, nums):\n        lo, hi = 0, len(nums) - 1"
  },
  {
    "stat": {
      "question_id": 1171,
      "question__article__live": true,
      "question__article__slug": "shortest-path-in-a-binary-matrix",
      "question__article__has_video_solution": false,
      "question__title": "Shortest Path in Binary Matrix",
      "question__title_slug": "shortest-path-in-binary-matrix",
      "question__hide": false,
      "total_acs": 515453,
      "total_submitted": 1073361,
      "frontend_question_id": 1091,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/shortest-path-in-binary-matrix",
      "questionId": "1171",
      "questionFrontendId": "1091",
      "questionTitle": "Shortest Path in Binary Matrix",
      "titleSlug": "shortest-path-in-binary-matrix",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>n x n</code> binary matrix <code>grid</code>, return <em>the length of the shortest <strong>clear path</strong> in the matrix</em>. If there is no clear path, return <code>-1</code>.</p>\n\n<p>A <strong>clear path</strong> in a binary matrix is a path from the <strong>top-left</strong> cell (i.e., <code>(0, 0)</code>) to the <strong>bottom-right</strong> cell (i.e., <code>(n - 1, n - 1)</code>) such that:</p>\n\n<ul>\n\t<li>All the visited cells of the path are <code>0</code>.</li>\n\t<li>All the adjacent cells of the path are <strong>8-directionally</strong> connected (i.e., they are different and they share an edge or a corner).</li>\n</ul>\n\n<p>The <strong>length of a clear path</strong> is the number of visited cells of this path.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/example1_1.png\" style=\"width: 500px; height: 234px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,1],[1,0]]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/example2_1.png\" style=\"height: 216px; width: 500px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,0,0],[1,1,0],[1,1,0]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0,0],[1,1,0],[1,1,0]]\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>grid[i][j] is 0 or 1</code></li>\n</ul>\n",
      "exampleTestcases": "[[0,1],[1,0]]\n[[0,0,0],[1,1,0],[1,1,0]]\n[[1,0,0],[1,1,0],[1,1,0]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "Do a breadth first search to find the shortest path."
      ],
      "solution": {
        "id": "1049",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6578,
      "dislikes": 241,
      "similarQuestions": "[{\"title\": \"Paths in Matrix Whose Sum Is Divisible by K\", \"titleSlug\": \"paths-in-matrix-whose-sum-is-divisible-by-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486870,
      "commentCount": 177,
      "topLevelCommentCount": 90
    },
    "classAndMethodDefinition": "def shortestPathBinaryMatrix(self, grid):\n        shortest_path = a_star_graph_search("
  },
  {
    "stat": {
      "question_id": 801,
      "question__article__live": true,
      "question__article__slug": "is-graph-bipartite",
      "question__article__has_video_solution": false,
      "question__title": "Is Graph Bipartite?",
      "question__title_slug": "is-graph-bipartite",
      "question__hide": false,
      "total_acs": 604323,
      "total_submitted": 1073235,
      "frontend_question_id": 785,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/is-graph-bipartite",
      "questionId": "801",
      "questionFrontendId": "785",
      "questionTitle": "Is Graph Bipartite?",
      "titleSlug": "is-graph-bipartite",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is an <strong>undirected</strong> graph with <code>n</code> nodes, where each node is numbered between <code>0</code> and <code>n - 1</code>. You are given a 2D array <code>graph</code>, where <code>graph[u]</code> is an array of nodes that node <code>u</code> is adjacent to. More formally, for each <code>v</code> in <code>graph[u]</code>, there is an undirected edge between node <code>u</code> and node <code>v</code>. The graph has the following properties:</p>\n\n<ul>\n\t<li>There are no self-edges (<code>graph[u]</code> does not contain <code>u</code>).</li>\n\t<li>There are no parallel edges (<code>graph[u]</code> does not contain duplicate values).</li>\n\t<li>If <code>v</code> is in <code>graph[u]</code>, then <code>u</code> is in <code>graph[v]</code> (the graph is undirected).</li>\n\t<li>The graph may not be connected, meaning there may be two nodes <code>u</code> and <code>v</code> such that there is no path between them.</li>\n</ul>\n\n<p>A graph is <strong>bipartite</strong> if the nodes can be partitioned into two independent sets <code>A</code> and <code>B</code> such that <strong>every</strong> edge in the graph connects a node in set <code>A</code> and a node in set <code>B</code>.</p>\n\n<p>Return <code>true</code><em> if and only if it is <strong>bipartite</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/21/bi2.jpg\" style=\"width: 222px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> graph = [[1,2,3],[0,2],[0,1,3],[0,2]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no way to partition the nodes into two independent sets such that every edge connects a node in one and a node in the other.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/21/bi1.jpg\" style=\"width: 222px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> graph = [[1,3],[0,2],[1,3],[0,2]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We can partition the nodes into two sets: {0, 2} and {1, 3}.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>graph.length == n</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>0 &lt;= graph[u].length &lt; n</code></li>\n\t<li><code>0 &lt;= graph[u][i] &lt;= n - 1</code></li>\n\t<li><code>graph[u]</code>&nbsp;does not contain&nbsp;<code>u</code>.</li>\n\t<li>All the values of <code>graph[u]</code> are <strong>unique</strong>.</li>\n\t<li>If <code>graph[u]</code> contains <code>v</code>, then <code>graph[v]</code> contains <code>u</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[1,2,3],[0,2],[0,1,3],[0,2]]\n[[1,3],[0,2],[1,3],[0,2]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "417",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8332,
      "dislikes": 387,
      "similarQuestions": "[{\"title\": \"Divide Nodes Into the Maximum Number of Groups\", \"titleSlug\": \"divide-nodes-into-the-maximum-number-of-groups\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486513,
      "commentCount": 151,
      "topLevelCommentCount": 86
    },
    "classAndMethodDefinition": "from typing import List\nfrom collections import deque"
  },
  {
    "stat": {
      "question_id": 106,
      "question__article__live": true,
      "question__article__slug": "construct-binary-tree-from-inorder-and-postorder-traversal",
      "question__article__has_video_solution": false,
      "question__title": "Construct Binary Tree from Inorder and Postorder Traversal",
      "question__title_slug": "construct-binary-tree-from-inorder-and-postorder-traversal",
      "question__hide": false,
      "total_acs": 686753,
      "total_submitted": 1071904,
      "frontend_question_id": 106,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",
      "questionId": "106",
      "questionFrontendId": "106",
      "questionTitle": "Construct Binary Tree from Inorder and Postorder Traversal",
      "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two integer arrays <code>inorder</code> and <code>postorder</code> where <code>inorder</code> is the inorder traversal of a binary tree and <code>postorder</code> is the postorder traversal of the same tree, construct and return <em>the binary tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]\n<strong>Output:</strong> [3,9,20,null,null,15,7]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> inorder = [-1], postorder = [-1]\n<strong>Output:</strong> [-1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= inorder.length &lt;= 3000</code></li>\n\t<li><code>postorder.length == inorder.length</code></li>\n\t<li><code>-3000 &lt;= inorder[i], postorder[i] &lt;= 3000</code></li>\n\t<li><code>inorder</code> and <code>postorder</code> consist of <strong>unique</strong> values.</li>\n\t<li>Each value of <code>postorder</code> also appears in <code>inorder</code>.</li>\n\t<li><code>inorder</code> is <strong>guaranteed</strong> to be the inorder traversal of the tree.</li>\n\t<li><code>postorder</code> is <strong>guaranteed</strong> to be the postorder traversal of the tree.</li>\n</ul>\n",
      "exampleTestcases": "[9,3,15,20,7]\n[9,15,7,20,3]\n[-1]\n[-1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "732",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8075,
      "dislikes": 132,
      "similarQuestions": "[{\"title\": \"Construct Binary Tree from Preorder and Inorder Traversal\", \"titleSlug\": \"construct-binary-tree-from-preorder-and-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485843,
      "commentCount": 94,
      "topLevelCommentCount": 66
    },
    "classAndMethodDefinition": "class Solution(object):\n    def buildTree(self, inorder, postorder):"
  },
  {
    "stat": {
      "question_id": 442,
      "question__article__live": true,
      "question__article__slug": "find-all-duplicates-in-an-array",
      "question__article__has_video_solution": false,
      "question__title": "Find All Duplicates in an Array",
      "question__title_slug": "find-all-duplicates-in-an-array",
      "question__hide": false,
      "total_acs": 813516,
      "total_submitted": 1071722,
      "frontend_question_id": 442,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-all-duplicates-in-an-array",
      "questionId": "442",
      "questionFrontendId": "442",
      "questionTitle": "Find All Duplicates in an Array",
      "titleSlug": "find-all-duplicates-in-an-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> of length <code>n</code> where all the integers of <code>nums</code> are in the range <code>[1, n]</code> and each integer appears <strong>once</strong> or <strong>twice</strong>, return <em>an array of all the integers that appears <strong>twice</strong></em>.</p>\n\n<p>You must write an algorithm that runs in <code>O(n)</code> time and uses only <em>constant</em> auxiliary space, excluding the space needed to store the output</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [4,3,2,7,8,2,3,1]\n<strong>Output:</strong> [2,3]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong> [1]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> []\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= n</code></li>\n\t<li>Each element in <code>nums</code> appears <strong>once</strong> or <strong>twice</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[4,3,2,7,8,2,3,1]\n[1,1,2]\n[1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "952",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10492,
      "dislikes": 406,
      "similarQuestions": "[{\"title\": \"Find All Numbers Disappeared in an Array\", \"titleSlug\": \"find-all-numbers-disappeared-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Distances\", \"titleSlug\": \"sum-of-distances\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486173,
      "commentCount": 402,
      "topLevelCommentCount": 205
    },
    "classAndMethodDefinition": "class Solution:\n    def findDuplicates(self, nums: List[int]) -> List[int]:"
  },
  {
    "stat": {
      "question_id": 450,
      "question__article__live": true,
      "question__article__slug": "delete-node-in-a-bst",
      "question__article__has_video_solution": false,
      "question__title": "Delete Node in a BST",
      "question__title_slug": "delete-node-in-a-bst",
      "question__hide": false,
      "total_acs": 555626,
      "total_submitted": 1070894,
      "frontend_question_id": 450,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/delete-node-in-a-bst",
      "questionId": "450",
      "questionFrontendId": "450",
      "questionTitle": "Delete Node in a BST",
      "titleSlug": "delete-node-in-a-bst",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return <em>the <strong>root node reference</strong> (possibly updated) of the BST</em>.</p>\n\n<p>Basically, the deletion can be divided into two stages:</p>\n\n<ol>\n\t<li>Search for a node to remove.</li>\n\t<li>If the node is found, delete the node.</li>\n</ol>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg\" style=\"width: 800px; height: 214px;\" />\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 3\n<strong>Output:</strong> [5,4,6,2,null,null,7]\n<strong>Explanation:</strong> Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is [5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is [5,2,6,null,4,null,7] and it&#39;s also accepted.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg\" style=\"width: 350px; height: 255px;\" />\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 0\n<strong>Output:</strong> [5,3,6,2,4,null,7]\n<strong>Explanation:</strong> The tree does not contain a node with value = 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [], key = 0\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li>Each node has a <strong>unique</strong> value.</li>\n\t<li><code>root</code> is a valid binary search tree.</li>\n\t<li><code>-10<sup>5</sup> &lt;= key &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you solve it with time complexity <code>O(height of tree)</code>?</p>\n",
      "exampleTestcases": "[5,3,6,2,4,null,7]\n3\n[5,3,6,2,4,null,7]\n0\n[]\n0",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "722",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9208,
      "dislikes": 290,
      "similarQuestions": "[{\"title\": \"Split BST\", \"titleSlug\": \"split-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486181,
      "commentCount": 127,
      "topLevelCommentCount": 93
    },
    "classAndMethodDefinition": "def deleteNode(self, root, key):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 645,
      "question__article__live": true,
      "question__article__slug": "set-mismatch",
      "question__article__has_video_solution": false,
      "question__title": "Set Mismatch",
      "question__title_slug": "set-mismatch",
      "question__hide": false,
      "total_acs": 471097,
      "total_submitted": 1057640,
      "frontend_question_id": 645,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/set-mismatch",
      "questionId": "645",
      "questionFrontendId": "645",
      "questionTitle": "Set Mismatch",
      "titleSlug": "set-mismatch",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You have a set of integers <code>s</code>, which originally contains all the numbers from <code>1</code> to <code>n</code>. Unfortunately, due to some error, one of the numbers in <code>s</code> got duplicated to another number in the set, which results in <strong>repetition of one</strong> number and <strong>loss of another</strong> number.</p>\n\n<p>You are given an integer array <code>nums</code> representing the data status of this set after the error.</p>\n\n<p>Find the number that occurs twice and the number that is missing and return <em>them in the form of an array</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,2,4]\n<strong>Output:</strong> [2,3]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1]\n<strong>Output:</strong> [1,2]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,2,4]\n[1,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "224",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4765,
      "dislikes": 1164,
      "similarQuestions": "[{\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486368,
      "commentCount": 253,
      "topLevelCommentCount": 132
    },
    "classAndMethodDefinition": "class Solution:\n    def findErrorNums(self, nums):"
  },
  {
    "stat": {
      "question_id": 404,
      "question__article__live": true,
      "question__article__slug": "sum-of-left-leaves",
      "question__article__has_video_solution": false,
      "question__title": "Sum of Left Leaves",
      "question__title_slug": "sum-of-left-leaves",
      "question__hide": false,
      "total_acs": 644363,
      "total_submitted": 1057503,
      "frontend_question_id": 404,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sum-of-left-leaves",
      "questionId": "404",
      "questionFrontendId": "404",
      "questionTitle": "Sum of Left Leaves",
      "titleSlug": "sum-of-left-leaves",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>the sum of all left leaves.</em></p>\n\n<p>A <strong>leaf</strong> is a node with no children. A <strong>left leaf</strong> is a leaf that is the left child of another node.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/08/leftsum-tree.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> 24\n<strong>Explanation:</strong> There are two left leaves in the binary tree, with values 9 and 15 respectively.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 1000]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,null,null,15,7]\n[1]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "936",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5496,
      "dislikes": 311,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486141,
      "commentCount": 141,
      "topLevelCommentCount": 81
    },
    "classAndMethodDefinition": "class Solution:\n    def sumOfLeftLeaves(self, root: Optional[TreeNode]) -> int:"
  },
  {
    "stat": {
      "question_id": 1791,
      "question__article__live": true,
      "question__article__slug": "richest-customer-wealth",
      "question__article__has_video_solution": true,
      "question__title": "Richest Customer Wealth",
      "question__title_slug": "richest-customer-wealth",
      "question__hide": false,
      "total_acs": 931623,
      "total_submitted": 1055979,
      "frontend_question_id": 1672,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/richest-customer-wealth",
      "questionId": "1791",
      "questionFrontendId": "1672",
      "questionTitle": "Richest Customer Wealth",
      "titleSlug": "richest-customer-wealth",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>m x n</code> integer grid <code>accounts</code> where <code>accounts[i][j]</code> is the amount of money the <code>i​​​​​<sup>​​​​​​th</sup>​​​​</code> customer has in the <code>j​​​​​<sup>​​​​​​th</sup></code>​​​​ bank. Return<em> the <strong>wealth</strong> that the richest customer has.</em></p>\n\n<p>A customer&#39;s <strong>wealth</strong> is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum <strong>wealth</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> accounts = [[1,2,3],[3,2,1]]\n<strong>Output:</strong> 6\n<strong>Explanation</strong><strong>:</strong>\n<code>1st customer has wealth = 1 + 2 + 3 = 6\n</code><code>2nd customer has wealth = 3 + 2 + 1 = 6\n</code>Both customers are considered the richest with a wealth of 6 each, so return 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> accounts = [[1,5],[7,3],[3,5]]\n<strong>Output:</strong> 10\n<strong>Explanation</strong>: \n1st customer has wealth = 6\n2nd customer has wealth = 10 \n3rd customer has wealth = 8\nThe 2nd customer is the richest with a wealth of 10.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> accounts = [[2,8,7],[7,1,3],[1,9,5]]\n<strong>Output:</strong> 17\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m ==&nbsp;accounts.length</code></li>\n\t<li><code>n ==&nbsp;accounts[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\n\t<li><code>1 &lt;= accounts[i][j] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2,3],[3,2,1]]\n[[1,5],[7,3],[3,5]]\n[[2,8,7],[7,1,3],[1,9,5]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "Calculate the wealth of each customer",
        "Find the maximum element in array."
      ],
      "solution": {
        "id": "1291",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4379,
      "dislikes": 367,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487463,
      "commentCount": 83,
      "topLevelCommentCount": 64
    },
    "classAndMethodDefinition": "def maximumWealth(self, accounts: List[List[int]]) -> int:\n\\tmaxWealth = 0"
  },
  {
    "stat": {
      "question_id": 518,
      "question__article__live": true,
      "question__article__slug": "coin-change-ii",
      "question__article__has_video_solution": false,
      "question__title": "Coin Change II",
      "question__title_slug": "coin-change-ii",
      "question__hide": false,
      "total_acs": 677356,
      "total_submitted": 1048386,
      "frontend_question_id": 518,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/coin-change-ii",
      "questionId": "518",
      "questionFrontendId": "518",
      "questionTitle": "Coin Change II",
      "titleSlug": "coin-change-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>coins</code> representing coins of different denominations and an integer <code>amount</code> representing a total amount of money.</p>\n\n<p>Return <em>the number of combinations that make up that amount</em>. If that amount of money cannot be made up by any combination of the coins, return <code>0</code>.</p>\n\n<p>You may assume that you have an infinite number of each kind of coin.</p>\n\n<p>The answer is <strong>guaranteed</strong> to fit into a signed <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> amount = 5, coins = [1,2,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> there are four ways to make up the amount:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> amount = 3, coins = [2]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> the amount of 3 cannot be made up just with coins of 2.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> amount = 10, coins = [10]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= coins.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= coins[i] &lt;= 5000</code></li>\n\t<li>All the values of <code>coins</code> are <strong>unique</strong>.</li>\n\t<li><code>0 &lt;= amount &lt;= 5000</code></li>\n</ul>\n",
      "exampleTestcases": "5\n[1,2,5]\n3\n[2]\n10\n[10]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1986",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9408,
      "dislikes": 169,
      "similarQuestions": "[{\"title\": \"Maximum Value of K Coins From Piles\", \"titleSlug\": \"maximum-value-of-k-coins-from-piles\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Ways to Earn Points\", \"titleSlug\": \"number-of-ways-to-earn-points\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count of Sub-Multisets With Bounded Sum\", \"titleSlug\": \"count-of-sub-multisets-with-bounded-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Length of the Longest Subsequence That Sums to Target\", \"titleSlug\": \"length-of-the-longest-subsequence-that-sums-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"The Number of Ways to Make the Sum\", \"titleSlug\": \"the-number-of-ways-to-make-the-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486247,
      "commentCount": 147,
      "topLevelCommentCount": 84
    },
    "classAndMethodDefinition": "def change(self, amount, coins):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 678,
      "question__article__live": true,
      "question__article__slug": "valid-parenthesis-string",
      "question__article__has_video_solution": false,
      "question__title": "Valid Parenthesis String",
      "question__title_slug": "valid-parenthesis-string",
      "question__hide": false,
      "total_acs": 400008,
      "total_submitted": 1047410,
      "frontend_question_id": 678,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-parenthesis-string",
      "questionId": "678",
      "questionFrontendId": "678",
      "questionTitle": "Valid Parenthesis String",
      "titleSlug": "valid-parenthesis-string",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> containing only three types of characters: <code>&#39;(&#39;</code>, <code>&#39;)&#39;</code> and <code>&#39;*&#39;</code>, return <code>true</code> <em>if</em> <code>s</code> <em>is <strong>valid</strong></em>.</p>\n\n<p>The following rules define a <strong>valid</strong> string:</p>\n\n<ul>\n\t<li>Any left parenthesis <code>&#39;(&#39;</code> must have a corresponding right parenthesis <code>&#39;)&#39;</code>.</li>\n\t<li>Any right parenthesis <code>&#39;)&#39;</code> must have a corresponding left parenthesis <code>&#39;(&#39;</code>.</li>\n\t<li>Left parenthesis <code>&#39;(&#39;</code> must go before the corresponding right parenthesis <code>&#39;)&#39;</code>.</li>\n\t<li><code>&#39;*&#39;</code> could be treated as a single right parenthesis <code>&#39;)&#39;</code> or a single left parenthesis <code>&#39;(&#39;</code> or an empty string <code>&quot;&quot;</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"()\"\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"(*)\"\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"(*))\"\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s[i]</code> is <code>&#39;(&#39;</code>, <code>&#39;)&#39;</code> or <code>&#39;*&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"()\"\n\"(*)\"\n\"(*))\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [
        "Use backtracking to explore all possible combinations of treating '*' as either '(', ')', or an empty string. If any combination leads to a valid string, return true.",
        "DP[i][j] represents whether the substring s[i:j] is valid.",
        "Keep track of the count of open parentheses encountered so far. If you encounter a close parenthesis, it should balance with an open parenthesis. Utilize a stack to handle this effectively.",
        "How about using 2 stacks instead of 1? Think about it."
      ],
      "solution": {
        "id": "2279",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6207,
      "dislikes": 193,
      "similarQuestions": "[{\"title\": \"Special Binary String\", \"titleSlug\": \"special-binary-string\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Check if a Parentheses String Can Be Valid\", \"titleSlug\": \"check-if-a-parentheses-string-can-be-valid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486401,
      "commentCount": 265,
      "topLevelCommentCount": 146
    },
    "classAndMethodDefinition": "class Solution:\n    def checkValidString(self, s: str) -> bool:"
  },
  {
    "stat": {
      "question_id": 107,
      "question__article__live": true,
      "question__article__slug": "binary-tree-level-order-traversal-ii",
      "question__article__has_video_solution": false,
      "question__title": "Binary Tree Level Order Traversal II",
      "question__title_slug": "binary-tree-level-order-traversal-ii",
      "question__hide": false,
      "total_acs": 670387,
      "total_submitted": 1044638,
      "frontend_question_id": 107,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii",
      "questionId": "107",
      "questionFrontendId": "107",
      "questionTitle": "Binary Tree Level Order Traversal II",
      "titleSlug": "binary-tree-level-order-traversal-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>the bottom-up level order traversal of its nodes&#39; values</em>. (i.e., from left to right, level by level from leaf to root).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [[15,7],[9,20],[3]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,null,null,15,7]\n[1]\n[]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "955",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4888,
      "dislikes": 323,
      "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Average of Levels in Binary Tree\", \"titleSlug\": \"average-of-levels-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485844,
      "commentCount": 44,
      "topLevelCommentCount": 29
    },
    "classAndMethodDefinition": "def levelOrderBottom1(self, root):\n        res = []"
  },
  {
    "stat": {
      "question_id": 1146,
      "question__article__live": true,
      "question__article__slug": "greatest-common-divisor-of-strings",
      "question__article__has_video_solution": false,
      "question__title": "Greatest Common Divisor of Strings",
      "question__title_slug": "greatest-common-divisor-of-strings",
      "question__hide": false,
      "total_acs": 537245,
      "total_submitted": 1038941,
      "frontend_question_id": 1071,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/greatest-common-divisor-of-strings",
      "questionId": "1146",
      "questionFrontendId": "1071",
      "questionTitle": "Greatest Common Divisor of Strings",
      "titleSlug": "greatest-common-divisor-of-strings",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>For two strings <code>s</code> and <code>t</code>, we say &quot;<code>t</code> divides <code>s</code>&quot; if and only if <code>s = t + t + t + ... + t + t</code> (i.e., <code>t</code> is concatenated with itself one or more times).</p>\n\n<p>Given two strings <code>str1</code> and <code>str2</code>, return <em>the largest string </em><code>x</code><em> such that </em><code>x</code><em> divides both </em><code>str1</code><em> and </em><code>str2</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> str1 = &quot;ABCABC&quot;, str2 = &quot;ABC&quot;\n<strong>Output:</strong> &quot;ABC&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> str1 = &quot;ABABAB&quot;, str2 = &quot;ABAB&quot;\n<strong>Output:</strong> &quot;AB&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> str1 = &quot;LEET&quot;, str2 = &quot;CODE&quot;\n<strong>Output:</strong> &quot;&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= str1.length, str2.length &lt;= 1000</code></li>\n\t<li><code>str1</code> and <code>str2</code> consist of English uppercase letters.</li>\n</ul>\n",
      "exampleTestcases": "\"ABCABC\"\n\"ABC\"\n\"ABABAB\"\n\"ABAB\"\n\"LEET\"\n\"CODE\"",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "The greatest common divisor must be a prefix of each string, so we can try all prefixes."
      ],
      "solution": {
        "id": "1679",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5218,
      "dislikes": 1370,
      "similarQuestions": "[{\"title\": \"Find Greatest Common Divisor of Array\", \"titleSlug\": \"find-greatest-common-divisor-of-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Smallest Even Multiple\", \"titleSlug\": \"smallest-even-multiple\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486846,
      "commentCount": 505,
      "topLevelCommentCount": 293
    },
    "classAndMethodDefinition": "class Solution:\n    def gcdOfStrings(self, str1: str, str2: str) -> str:"
  },
  {
    "stat": {
      "question_id": 332,
      "question__article__live": true,
      "question__article__slug": "reconstruct-itinerary",
      "question__article__has_video_solution": false,
      "question__title": "Reconstruct Itinerary",
      "question__title_slug": "reconstruct-itinerary",
      "question__hide": false,
      "total_acs": 444747,
      "total_submitted": 1027529,
      "frontend_question_id": 332,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reconstruct-itinerary",
      "questionId": "332",
      "questionFrontendId": "332",
      "questionTitle": "Reconstruct Itinerary",
      "titleSlug": "reconstruct-itinerary",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given a list of airline <code>tickets</code> where <code>tickets[i] = [from<sub>i</sub>, to<sub>i</sub>]</code> represent the departure and the arrival airports of one flight. Reconstruct the itinerary in order and return it.</p>\n\n<p>All of the tickets belong to a man who departs from <code>&quot;JFK&quot;</code>, thus, the itinerary must begin with <code>&quot;JFK&quot;</code>. If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string.</p>\n\n<ul>\n\t<li>For example, the itinerary <code>[&quot;JFK&quot;, &quot;LGA&quot;]</code> has a smaller lexical order than <code>[&quot;JFK&quot;, &quot;LGB&quot;]</code>.</li>\n</ul>\n\n<p>You may assume all tickets form at least one valid itinerary. You must use all the tickets once and only once.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/14/itinerary1-graph.jpg\" style=\"width: 382px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> tickets = [[&quot;MUC&quot;,&quot;LHR&quot;],[&quot;JFK&quot;,&quot;MUC&quot;],[&quot;SFO&quot;,&quot;SJC&quot;],[&quot;LHR&quot;,&quot;SFO&quot;]]\n<strong>Output:</strong> [&quot;JFK&quot;,&quot;MUC&quot;,&quot;LHR&quot;,&quot;SFO&quot;,&quot;SJC&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/14/itinerary2-graph.jpg\" style=\"width: 222px; height: 230px;\" />\n<pre>\n<strong>Input:</strong> tickets = [[&quot;JFK&quot;,&quot;SFO&quot;],[&quot;JFK&quot;,&quot;ATL&quot;],[&quot;SFO&quot;,&quot;ATL&quot;],[&quot;ATL&quot;,&quot;JFK&quot;],[&quot;ATL&quot;,&quot;SFO&quot;]]\n<strong>Output:</strong> [&quot;JFK&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;SFO&quot;]\n<strong>Explanation:</strong> Another possible reconstruction is [&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;ATL&quot;,&quot;SFO&quot;] but it is larger in lexical order.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= tickets.length &lt;= 300</code></li>\n\t<li><code>tickets[i].length == 2</code></li>\n\t<li><code>from<sub>i</sub>.length == 3</code></li>\n\t<li><code>to<sub>i</sub>.length == 3</code></li>\n\t<li><code>from<sub>i</sub></code> and <code>to<sub>i</sub></code> consist of uppercase English letters.</li>\n\t<li><code>from<sub>i</sub> != to<sub>i</sub></code></li>\n</ul>\n",
      "exampleTestcases": "[[\"MUC\",\"LHR\"],[\"JFK\",\"MUC\"],[\"SFO\",\"SJC\"],[\"LHR\",\"SFO\"]]\n[[\"JFK\",\"SFO\"],[\"JFK\",\"ATL\"],[\"SFO\",\"ATL\"],[\"ATL\",\"JFK\"],[\"ATL\",\"SFO\"]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Eulerian Circuit",
          "slug": "eulerian-circuit",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "875",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5913,
      "dislikes": 1875,
      "similarQuestions": "[{\"title\": \"Longest Common Subpath\", \"titleSlug\": \"longest-common-subpath\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Valid Arrangement of Pairs\", \"titleSlug\": \"valid-arrangement-of-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486069,
      "commentCount": 180,
      "topLevelCommentCount": 107
    },
    "classAndMethodDefinition": "def find_itinerary(tickets)\n      tickets = tickets.sort.reverse.group_by(&:first)"
  },
  {
    "stat": {
      "question_id": 1046,
      "question__article__live": true,
      "question__article__slug": "max-consecutive-ones-iii",
      "question__article__has_video_solution": false,
      "question__title": "Max Consecutive Ones III",
      "question__title_slug": "max-consecutive-ones-iii",
      "question__hide": false,
      "total_acs": 656433,
      "total_submitted": 1026864,
      "frontend_question_id": 1004,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/max-consecutive-ones-iii",
      "questionId": "1046",
      "questionFrontendId": "1004",
      "questionTitle": "Max Consecutive Ones III",
      "titleSlug": "max-consecutive-ones-iii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a binary array <code>nums</code> and an integer <code>k</code>, return <em>the maximum number of consecutive </em><code>1</code><em>&#39;s in the array if you can flip at most</em> <code>k</code> <code>0</code>&#39;s.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> [1,1,1,0,0,<u><strong>1</strong>,1,1,1,1,<strong>1</strong></u>]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> [0,0,<u>1,1,<strong>1</strong>,<strong>1</strong>,1,1,1,<strong>1</strong>,1,1</u>,0,0,0,1,1,1,1]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\n\t<li><code>0 &lt;= k &lt;= nums.length</code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,1,0,0,0,1,1,1,1,0]\n2\n[0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [
        "One thing's for sure, we will only flip a zero if it extends an existing window of 1s. Otherwise, there's no point in doing it, right? Think Sliding Window!",
        "Since we know this problem can be solved using the sliding window construct, we might as well focus in that direction for hints. Basically, in a given window, we can never have > K zeros, right?",
        "We don't have a fixed size window in this case. The window size can grow and shrink depending upon the number of zeros we have (we don't actually have to flip the zeros here!).",
        "The way to shrink or expand a window would be based on the number of zeros that can still be flipped and so on."
      ],
      "solution": {
        "id": "799",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8710,
      "dislikes": 140,
      "similarQuestions": "[{\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Repeating Character Replacement\", \"titleSlug\": \"longest-repeating-character-replacement\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones\", \"titleSlug\": \"max-consecutive-ones\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones II\", \"titleSlug\": \"max-consecutive-ones-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximize the Confusion of an Exam\", \"titleSlug\": \"maximize-the-confusion-of-an-exam\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Recolors to Get K Consecutive Black Blocks\", \"titleSlug\": \"minimum-recolors-to-get-k-consecutive-black-blocks\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longest Nice Subarray\", \"titleSlug\": \"longest-nice-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Sum of Distinct Subarrays With Length K\", \"titleSlug\": \"maximum-sum-of-distinct-subarrays-with-length-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Enemy Forts That Can Be Captured\", \"titleSlug\": \"maximum-enemy-forts-that-can-be-captured\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486748,
      "commentCount": 81,
      "topLevelCommentCount": 56
    },
    "classAndMethodDefinition": "class Solution:\n    def longestOnes(self, nums: List[int], k: int) -> int:"
  },
  {
    "stat": {
      "question_id": 912,
      "question__article__live": true,
      "question__article__slug": "random-pick-with-weight",
      "question__article__has_video_solution": false,
      "question__title": "Random Pick with Weight",
      "question__title_slug": "random-pick-with-weight",
      "question__hide": false,
      "total_acs": 484062,
      "total_submitted": 1026810,
      "frontend_question_id": 528,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/random-pick-with-weight",
      "questionId": "912",
      "questionFrontendId": "528",
      "questionTitle": "Random Pick with Weight",
      "titleSlug": "random-pick-with-weight",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a <strong>0-indexed</strong> array of positive integers <code>w</code> where <code>w[i]</code> describes the <strong>weight</strong> of the <code>i<sup>th</sup></code> index.</p>\n\n<p>You need to implement the function <code>pickIndex()</code>, which <strong>randomly</strong> picks an index in the range <code>[0, w.length - 1]</code> (<strong>inclusive</strong>) and returns it. The <strong>probability</strong> of picking an index <code>i</code> is <code>w[i] / sum(w)</code>.</p>\n\n<ul>\n\t<li>For example, if <code>w = [1, 3]</code>, the probability of picking index <code>0</code> is <code>1 / (1 + 3) = 0.25</code> (i.e., <code>25%</code>), and the probability of picking index <code>1</code> is <code>3 / (1 + 3) = 0.75</code> (i.e., <code>75%</code>).</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Solution&quot;,&quot;pickIndex&quot;]\n[[[1]],[]]\n<strong>Output</strong>\n[null,0]\n\n<strong>Explanation</strong>\nSolution solution = new Solution([1]);\nsolution.pickIndex(); // return 0. The only option is to return 0 since there is only one element in w.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Solution&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;]\n[[[1,3]],[],[],[],[],[]]\n<strong>Output</strong>\n[null,1,1,1,1,0]\n\n<strong>Explanation</strong>\nSolution solution = new Solution([1, 3]);\nsolution.pickIndex(); // return 1. It is returning the second element (index = 1) that has a probability of 3/4.\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 0. It is returning the first element (index = 0) that has a probability of 1/4.\n\nSince this is a randomization problem, multiple answers are allowed.\nAll of the following outputs can be considered correct:\n[null,1,1,1,1,0]\n[null,1,1,1,1,1]\n[null,1,1,1,0,0]\n[null,1,1,1,0,1]\n[null,1,0,1,0,0]\n......\nand so on.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= w.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= w[i] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>pickIndex</code> will be called at most <code>10<sup>4</sup></code> times.</li>\n</ul>\n",
      "exampleTestcases": "[\"Solution\",\"pickIndex\"]\n[[[1]],[]]\n[\"Solution\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\"]\n[[[1,3]],[],[],[],[],[]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        },
        {
          "name": "Randomized",
          "slug": "randomized",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "946",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1928,
      "dislikes": 853,
      "similarQuestions": "[{\"title\": \"Random Pick Index\", \"titleSlug\": \"random-pick-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Random Pick with Blacklist\", \"titleSlug\": \"random-pick-with-blacklist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Random Point in Non-overlapping Rectangles\", \"titleSlug\": \"random-point-in-non-overlapping-rectangles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486619,
      "commentCount": 104,
      "topLevelCommentCount": 73
    },
    "classAndMethodDefinition": "def __init__(self, w: List[int]):\n        self.w = w"
  },
  {
    "stat": {
      "question_id": 37,
      "question__article__live": true,
      "question__article__slug": "sudoku-solver",
      "question__article__has_video_solution": false,
      "question__title": "Sudoku Solver",
      "question__title_slug": "sudoku-solver",
      "question__hide": false,
      "total_acs": 639373,
      "total_submitted": 1021406,
      "frontend_question_id": 37,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sudoku-solver",
      "questionId": "37",
      "questionFrontendId": "37",
      "questionTitle": "Sudoku Solver",
      "titleSlug": "sudoku-solver",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Write a program to solve a Sudoku puzzle by filling the empty cells.</p>\n\n<p>A sudoku solution must satisfy <strong>all of the following rules</strong>:</p>\n\n<ol>\n\t<li>Each of the digits <code>1-9</code> must occur exactly once in each row.</li>\n\t<li>Each of the digits <code>1-9</code> must occur exactly once in each column.</li>\n\t<li>Each of the digits <code>1-9</code> must occur exactly once in each of the 9 <code>3x3</code> sub-boxes of the grid.</li>\n</ol>\n\n<p>The <code>&#39;.&#39;</code> character indicates empty cells.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\" style=\"height:250px; width:250px\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;5&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;],[&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;],[&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;],[&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;],[&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]]\n<strong>Output:</strong> [[&quot;5&quot;,&quot;3&quot;,&quot;4&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;1&quot;,&quot;2&quot;],[&quot;6&quot;,&quot;7&quot;,&quot;2&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;3&quot;,&quot;4&quot;,&quot;8&quot;],[&quot;1&quot;,&quot;9&quot;,&quot;8&quot;,&quot;3&quot;,&quot;4&quot;,&quot;2&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;],[&quot;8&quot;,&quot;5&quot;,&quot;9&quot;,&quot;7&quot;,&quot;6&quot;,&quot;1&quot;,&quot;4&quot;,&quot;2&quot;,&quot;3&quot;],[&quot;4&quot;,&quot;2&quot;,&quot;6&quot;,&quot;8&quot;,&quot;5&quot;,&quot;3&quot;,&quot;7&quot;,&quot;9&quot;,&quot;1&quot;],[&quot;7&quot;,&quot;1&quot;,&quot;3&quot;,&quot;9&quot;,&quot;2&quot;,&quot;4&quot;,&quot;8&quot;,&quot;5&quot;,&quot;6&quot;],[&quot;9&quot;,&quot;6&quot;,&quot;1&quot;,&quot;5&quot;,&quot;3&quot;,&quot;7&quot;,&quot;2&quot;,&quot;8&quot;,&quot;4&quot;],[&quot;2&quot;,&quot;8&quot;,&quot;7&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;6&quot;,&quot;3&quot;,&quot;5&quot;],[&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;2&quot;,&quot;8&quot;,&quot;6&quot;,&quot;1&quot;,&quot;7&quot;,&quot;9&quot;]]\n<strong>Explanation:</strong>&nbsp;The input board is shown above and the only valid solution is shown below:\n\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Sudoku-by-L2G-20050714_solution.svg/250px-Sudoku-by-L2G-20050714_solution.svg.png\" style=\"height:250px; width:250px\" />\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>board.length == 9</code></li>\n\t<li><code>board[i].length == 9</code></li>\n\t<li><code>board[i][j]</code> is a digit or <code>&#39;.&#39;</code>.</li>\n\t<li>It is <strong>guaranteed</strong> that the input board has only one solution.</li>\n</ul>\n",
      "exampleTestcases": "[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "709",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9612,
      "dislikes": 265,
      "similarQuestions": "[{\"title\": \"Valid Sudoku\", \"titleSlug\": \"valid-sudoku\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Paths III\", \"titleSlug\": \"unique-paths-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485774,
      "commentCount": 134,
      "topLevelCommentCount": 85
    },
    "classAndMethodDefinition": "def solveSudoku(self, board: List[List[str]]) -> None:\n        n = 9"
  },
  {
    "stat": {
      "question_id": 378,
      "question__article__live": true,
      "question__article__slug": "kth-smallest-element-in-a-sorted-matrix",
      "question__article__has_video_solution": false,
      "question__title": "Kth Smallest Element in a Sorted Matrix",
      "question__title_slug": "kth-smallest-element-in-a-sorted-matrix",
      "question__hide": false,
      "total_acs": 636735,
      "total_submitted": 1015139,
      "frontend_question_id": 378,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix",
      "questionId": "378",
      "questionFrontendId": "378",
      "questionTitle": "Kth Smallest Element in a Sorted Matrix",
      "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>n x n</code> <code>matrix</code> where each of the rows and columns is sorted in ascending order, return <em>the</em> <code>k<sup>th</sup></code> <em>smallest element in the matrix</em>.</p>\n\n<p>Note that it is the <code>k<sup>th</sup></code> smallest element <strong>in the sorted order</strong>, not the <code>k<sup>th</sup></code> <strong>distinct</strong> element.</p>\n\n<p>You must find a solution with a memory complexity better than <code>O(n<sup>2</sup>)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[1,5,9],[10,11,13],[12,13,15]], k = 8\n<strong>Output:</strong> 13\n<strong>Explanation:</strong> The elements in the matrix are [1,5,9,10,11,12,13,<u><strong>13</strong></u>,15], and the 8<sup>th</sup> smallest number is 13\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[-5]], k = 1\n<strong>Output:</strong> -5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == matrix.length == matrix[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 300</code></li>\n\t<li><code>-10<sup>9</sup> &lt;= matrix[i][j] &lt;= 10<sup>9</sup></code></li>\n\t<li>All the rows and columns of <code>matrix</code> are <strong>guaranteed</strong> to be sorted in <strong>non-decreasing order</strong>.</li>\n\t<li><code>1 &lt;= k &lt;= n<sup>2</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Could you solve the problem with a constant memory (i.e., <code>O(1)</code> memory complexity)?</li>\n\t<li>Could you solve the problem in <code>O(n)</code> time complexity? The solution may be too advanced for an interview but you may find reading <a href=\"http://www.cse.yorku.ca/~andy/pubs/X+Y.pdf\" target=\"_blank\">this paper</a> fun.</li>\n</ul>\n",
      "exampleTestcases": "[[1,5,9],[10,11,13],[12,13,15]]\n8\n[[-5]]\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "941",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9958,
      "dislikes": 353,
      "similarQuestions": "[{\"title\": \"Find K Pairs with Smallest Sums\", \"titleSlug\": \"find-k-pairs-with-smallest-sums\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Number in Multiplication Table\", \"titleSlug\": \"kth-smallest-number-in-multiplication-table\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"K-th Smallest Prime Fraction\", \"titleSlug\": \"k-th-smallest-prime-fraction\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486115,
      "commentCount": 58,
      "topLevelCommentCount": 36
    },
    "classAndMethodDefinition": "def kthSmallest(self, matrix: List[List[int]], k: int) -> int:\n        temp = []"
  },
  {
    "stat": {
      "question_id": 329,
      "question__article__live": true,
      "question__article__slug": "longest-increasing-path-in-a-matrix",
      "question__article__has_video_solution": false,
      "question__title": "Longest Increasing Path in a Matrix",
      "question__title_slug": "longest-increasing-path-in-a-matrix",
      "question__hide": false,
      "total_acs": 548280,
      "total_submitted": 1014991,
      "frontend_question_id": 329,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix",
      "questionId": "329",
      "questionFrontendId": "329",
      "questionTitle": "Longest Increasing Path in a Matrix",
      "titleSlug": "longest-increasing-path-in-a-matrix",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> integers <code>matrix</code>, return <em>the length of the longest increasing path in </em><code>matrix</code>.</p>\n\n<p>From each cell, you can either move in four directions: left, right, up, or down. You <strong>may not</strong> move <strong>diagonally</strong> or move <strong>outside the boundary</strong> (i.e., wrap-around is not allowed).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/05/grid1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[9,9,4],[6,6,8],[2,1,1]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest increasing path is <code>[1, 2, 6, 9]</code>.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/27/tmp-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[3,4,5],[3,2,6],[2,2,1]]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>The longest increasing path is <code>[3, 4, 5, 6]</code>. Moving diagonally is not allowed.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[1]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>0 &lt;= matrix[i][j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[[9,9,4],[6,6,8],[2,1,1]]\n[[3,4,5],[3,2,6],[2,2,1]]\n[[1]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort",
          "translatedName": null
        },
        {
          "name": "Memoization",
          "slug": "memoization",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "70",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8995,
      "dislikes": 136,
      "similarQuestions": "[{\"title\": \"Number of Increasing Paths in a Grid\", \"titleSlug\": \"number-of-increasing-paths-in-a-grid\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486066,
      "commentCount": 65,
      "topLevelCommentCount": 46
    },
    "classAndMethodDefinition": "def longestIncreasingPath(self, matrix):\n        def dfs(i, j):"
  },
  {
    "stat": {
      "question_id": 459,
      "question__article__live": true,
      "question__article__slug": "repeated-substring-pattern",
      "question__article__has_video_solution": false,
      "question__title": "Repeated Substring Pattern",
      "question__title_slug": "repeated-substring-pattern",
      "question__hide": false,
      "total_acs": 469350,
      "total_submitted": 1014900,
      "frontend_question_id": 459,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/repeated-substring-pattern",
      "questionId": "459",
      "questionFrontendId": "459",
      "questionTitle": "Repeated Substring Pattern",
      "titleSlug": "repeated-substring-pattern",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abab&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> It is the substring &quot;ab&quot; twice.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aba&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcabcabcabc&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> It is the substring &quot;abc&quot; four times or the substring &quot;abcabc&quot; twice.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abab\"\n\"aba\"\n\"abcabcabcabc\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "String Matching",
          "slug": "string-matching",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1981",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6419,
      "dislikes": 523,
      "similarQuestions": "[{\"title\": \"Find the Index of the First Occurrence in a String\", \"titleSlug\": \"find-the-index-of-the-first-occurrence-in-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Repeated String Match\", \"titleSlug\": \"repeated-string-match\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486190,
      "commentCount": 202,
      "topLevelCommentCount": 97
    },
    "classAndMethodDefinition": "def repeatedSubstringPattern(self, s: str) -> bool:\n        n = len(s)"
  },
  {
    "stat": {
      "question_id": 85,
      "question__article__live": true,
      "question__article__slug": "maximal-rectangle",
      "question__article__has_video_solution": false,
      "question__title": "Maximal Rectangle",
      "question__title_slug": "maximal-rectangle",
      "question__hide": false,
      "total_acs": 517164,
      "total_submitted": 1004448,
      "frontend_question_id": 85,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximal-rectangle",
      "questionId": "85",
      "questionFrontendId": "85",
      "questionTitle": "Maximal Rectangle",
      "titleSlug": "maximal-rectangle",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given a <code>rows x cols</code>&nbsp;binary <code>matrix</code> filled with <code>0</code>&#39;s and <code>1</code>&#39;s, find the largest rectangle containing only <code>1</code>&#39;s and return <em>its area</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/14/maximal.jpg\" style=\"width: 402px; height: 322px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],[&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],[&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;]]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The maximal rectangle is shown in the above picture.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[&quot;0&quot;]]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[&quot;1&quot;]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>rows == matrix.length</code></li>\n\t<li><code>cols == matrix[i].length</code></li>\n\t<li><code>1 &lt;= row, cols &lt;= 200</code></li>\n\t<li><code>matrix[i][j]</code> is <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]\n[[\"0\"]]\n[[\"1\"]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "712",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10650,
      "dislikes": 185,
      "similarQuestions": "[{\"title\": \"Largest Rectangle in Histogram\", \"titleSlug\": \"largest-rectangle-in-histogram\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximal Square\", \"titleSlug\": \"maximal-square\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485822,
      "commentCount": 198,
      "topLevelCommentCount": 130
    },
    "classAndMethodDefinition": "def maximalRectangle(self, matrix):\n        if not matrix or not matrix[0]:"
  },
  {
    "stat": {
      "question_id": 1127,
      "question__article__live": true,
      "question__article__slug": "last-stone-weight",
      "question__article__has_video_solution": false,
      "question__title": "Last Stone Weight",
      "question__title_slug": "last-stone-weight",
      "question__hide": false,
      "total_acs": 657746,
      "total_submitted": 1002992,
      "frontend_question_id": 1046,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/last-stone-weight",
      "questionId": "1127",
      "questionFrontendId": "1046",
      "questionTitle": "Last Stone Weight",
      "titleSlug": "last-stone-weight",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an array of integers <code>stones</code> where <code>stones[i]</code> is the weight of the <code>i<sup>th</sup></code> stone.</p>\n\n<p>We are playing a game with the stones. On each turn, we choose the <strong>heaviest two stones</strong> and smash them together. Suppose the heaviest two stones have weights <code>x</code> and <code>y</code> with <code>x &lt;= y</code>. The result of this smash is:</p>\n\n<ul>\n\t<li>If <code>x == y</code>, both stones are destroyed, and</li>\n\t<li>If <code>x != y</code>, the stone of weight <code>x</code> is destroyed, and the stone of weight <code>y</code> has new weight <code>y - x</code>.</li>\n</ul>\n\n<p>At the end of the game, there is <strong>at most one</strong> stone left.</p>\n\n<p>Return <em>the weight of the last remaining stone</em>. If there are no stones left, return <code>0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [2,7,4,1,8,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> \nWe combine 7 and 8 to get 1 so the array converts to [2,4,1,1,1] then,\nwe combine 2 and 4 to get 2 so the array converts to [2,1,1,1] then,\nwe combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\nwe combine 1 and 1 to get 0 so the array converts to [1] then that&#39;s the value of the last stone.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 30</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[2,7,4,1,8,1]\n[1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [
        "Simulate the process.  We can do it with a heap, or by sorting some list of stones every time we take a turn."
      ],
      "solution": {
        "id": "930",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6050,
      "dislikes": 126,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486827,
      "commentCount": 58,
      "topLevelCommentCount": 38
    },
    "classAndMethodDefinition": "def lastStoneWeight(self, stones: List[int]) -> int:\n        stones.sort()"
  },
  {
    "stat": {
      "question_id": 68,
      "question__article__live": true,
      "question__article__slug": "text-justification",
      "question__article__has_video_solution": false,
      "question__title": "Text Justification",
      "question__title_slug": "text-justification",
      "question__hide": false,
      "total_acs": 448792,
      "total_submitted": 1000588,
      "frontend_question_id": 68,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/text-justification",
      "questionId": "68",
      "questionFrontendId": "68",
      "questionTitle": "Text Justification",
      "titleSlug": "text-justification",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an array of strings <code>words</code> and a width <code>maxWidth</code>, format the text such that each line has exactly <code>maxWidth</code> characters and is fully (left and right) justified.</p>\n\n<p>You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces <code>&#39; &#39;</code> when necessary so that each line has exactly <code>maxWidth</code> characters.</p>\n\n<p>Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line does not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.</p>\n\n<p>For the last line of text, it should be left-justified, and no extra space is inserted between words.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A word is defined as a character sequence consisting of non-space characters only.</li>\n\t<li>Each word&#39;s length is guaranteed to be greater than <code>0</code> and not exceed <code>maxWidth</code>.</li>\n\t<li>The input array <code>words</code> contains at least one word.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;This&quot;, &quot;is&quot;, &quot;an&quot;, &quot;example&quot;, &quot;of&quot;, &quot;text&quot;, &quot;justification.&quot;], maxWidth = 16\n<strong>Output:</strong>\n[\n&nbsp; &nbsp;&quot;This &nbsp; &nbsp;is &nbsp; &nbsp;an&quot;,\n&nbsp; &nbsp;&quot;example &nbsp;of text&quot;,\n&nbsp; &nbsp;&quot;justification. &nbsp;&quot;\n]</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;What&quot;,&quot;must&quot;,&quot;be&quot;,&quot;acknowledgment&quot;,&quot;shall&quot;,&quot;be&quot;], maxWidth = 16\n<strong>Output:</strong>\n[\n&nbsp; &quot;What &nbsp; must &nbsp; be&quot;,\n&nbsp; &quot;acknowledgment &nbsp;&quot;,\n&nbsp; &quot;shall be &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]\n<strong>Explanation:</strong> Note that the last line is &quot;shall be    &quot; instead of &quot;shall     be&quot;, because the last line must be left-justified instead of fully-justified.\nNote that the second line is also left-justified because it contains only one word.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;Science&quot;,&quot;is&quot;,&quot;what&quot;,&quot;we&quot;,&quot;understand&quot;,&quot;well&quot;,&quot;enough&quot;,&quot;to&quot;,&quot;explain&quot;,&quot;to&quot;,&quot;a&quot;,&quot;computer.&quot;,&quot;Art&quot;,&quot;is&quot;,&quot;everything&quot;,&quot;else&quot;,&quot;we&quot;,&quot;do&quot;], maxWidth = 20\n<strong>Output:</strong>\n[\n&nbsp; &quot;Science &nbsp;is &nbsp;what we&quot;,\n  &quot;understand &nbsp; &nbsp; &nbsp;well&quot;,\n&nbsp; &quot;enough to explain to&quot;,\n&nbsp; &quot;a &nbsp;computer. &nbsp;Art is&quot;,\n&nbsp; &quot;everything &nbsp;else &nbsp;we&quot;,\n&nbsp; &quot;do &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\n\t<li><code>words[i]</code> consists of only English letters and symbols.</li>\n\t<li><code>1 &lt;= maxWidth &lt;= 100</code></li>\n\t<li><code>words[i].length &lt;= maxWidth</code></li>\n</ul>\n",
      "exampleTestcases": "[\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"]\n16\n[\"What\",\"must\",\"be\",\"acknowledgment\",\"shall\",\"be\"]\n16\n[\"Science\",\"is\",\"what\",\"we\",\"understand\",\"well\",\"enough\",\"to\",\"explain\",\"to\",\"a\",\"computer.\",\"Art\",\"is\",\"everything\",\"else\",\"we\",\"do\"]\n20",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1929",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3764,
      "dislikes": 4789,
      "similarQuestions": "[{\"title\": \"Rearrange Spaces Between Words\", \"titleSlug\": \"rearrange-spaces-between-words\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Divide a String Into Groups of Size k\", \"titleSlug\": \"divide-a-string-into-groups-of-size-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Split Message Based on Limit\", \"titleSlug\": \"split-message-based-on-limit\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485805,
      "commentCount": 166,
      "topLevelCommentCount": 120
    },
    "classAndMethodDefinition": "def fullJustify(self, words, maxWidth):\n        res, cur, num_of_letters = [], [], 0"
  },
  {
    "stat": {
      "question_id": 617,
      "question__article__live": true,
      "question__article__slug": "merge-two-binary-trees",
      "question__article__has_video_solution": false,
      "question__title": "Merge Two Binary Trees",
      "question__title_slug": "merge-two-binary-trees",
      "question__hide": false,
      "total_acs": 791202,
      "total_submitted": 1000463,
      "frontend_question_id": 617,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/merge-two-binary-trees",
      "questionId": "617",
      "questionFrontendId": "617",
      "questionTitle": "Merge Two Binary Trees",
      "titleSlug": "merge-two-binary-trees",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given two binary trees <code>root1</code> and <code>root2</code>.</p>\n\n<p>Imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not. You need to merge the two trees into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of the new tree.</p>\n\n<p>Return <em>the merged tree</em>.</p>\n\n<p><strong>Note:</strong> The merging process must start from the root nodes of both trees.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/05/merge.jpg\" style=\"width: 600px; height: 163px;\" />\n<pre>\n<strong>Input:</strong> root1 = [1,3,2,5], root2 = [2,1,3,null,4,null,7]\n<strong>Output:</strong> [3,4,5,5,4,null,7]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root1 = [1], root2 = [1,2]\n<strong>Output:</strong> [2,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in both trees is in the range <code>[0, 2000]</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,2,5]\n[2,1,3,null,4,null,7]\n[1]\n[1,2]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "163",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8796,
      "dislikes": 301,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486342,
      "commentCount": 30,
      "topLevelCommentCount": 22
    },
    "classAndMethodDefinition": "def mergeTrees(self, t1, t2):\n        if t1 and t2:"
  },
  {
    "stat": {
      "question_id": 137,
      "question__article__live": true,
      "question__article__slug": "single-number-ii",
      "question__article__has_video_solution": false,
      "question__title": "Single Number II",
      "question__title_slug": "single-number-ii",
      "question__hide": false,
      "total_acs": 633147,
      "total_submitted": 995124,
      "frontend_question_id": 137,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/single-number-ii",
      "questionId": "137",
      "questionFrontendId": "137",
      "questionTitle": "Single Number II",
      "titleSlug": "single-number-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> where&nbsp;every element appears <strong>three times</strong> except for one, which appears <strong>exactly once</strong>. <em>Find the single element and return it</em>.</p>\n\n<p>You must&nbsp;implement a solution with a linear runtime complexity and use&nbsp;only constant&nbsp;extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,3,2]\n<strong>Output:</strong> 3\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,0,1,0,1,99]\n<strong>Output:</strong> 99\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>Each element in <code>nums</code> appears exactly <strong>three times</strong> except for one element which appears <strong>once</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[2,2,3,2]\n[0,1,0,1,0,1,99]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1947",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7983,
      "dislikes": 699,
      "similarQuestions": "[{\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Single Number III\", \"titleSlug\": \"single-number-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the XOR of Numbers Which Appear Twice\", \"titleSlug\": \"find-the-xor-of-numbers-which-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485874,
      "commentCount": 254,
      "topLevelCommentCount": 121
    },
    "classAndMethodDefinition": "class Solution:\n    def singleNumber(self, nums):"
  },
  {
    "stat": {
      "question_id": 441,
      "question__article__live": true,
      "question__article__slug": "arranging-coins",
      "question__article__has_video_solution": false,
      "question__title": "Arranging Coins",
      "question__title_slug": "arranging-coins",
      "question__hide": false,
      "total_acs": 463648,
      "total_submitted": 990614,
      "frontend_question_id": 441,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/arranging-coins",
      "questionId": "441",
      "questionFrontendId": "441",
      "questionTitle": "Arranging Coins",
      "titleSlug": "arranging-coins",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You have <code>n</code> coins and you want to build a staircase with these coins. The staircase consists of <code>k</code> rows where the <code>i<sup>th</sup></code> row has exactly <code>i</code> coins. The last row of the staircase <strong>may be</strong> incomplete.</p>\n\n<p>Given the integer <code>n</code>, return <em>the number of <strong>complete rows</strong> of the staircase you will build</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/09/arrangecoins1-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Because the 3<sup>rd</sup> row is incomplete, we return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/09/arrangecoins2-grid.jpg\" style=\"width: 333px; height: 333px;\" />\n<pre>\n<strong>Input:</strong> n = 8\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Because the 4<sup>th</sup> row is incomplete, we return 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "5\n8",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "916",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3894,
      "dislikes": 1333,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486172,
      "commentCount": 76,
      "topLevelCommentCount": 49
    },
    "classAndMethodDefinition": "def arrangeCoins(self, n: int) -> int:        \n        i=0"
  },
  {
    "stat": {
      "question_id": 1468,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Check If N and Its Double Exist",
      "question__title_slug": "check-if-n-and-its-double-exist",
      "question__hide": false,
      "total_acs": 368317,
      "total_submitted": 984468,
      "frontend_question_id": 1346,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/check-if-n-and-its-double-exist",
      "questionId": "1468",
      "questionFrontendId": "1346",
      "questionTitle": "Check If N and Its Double Exist",
      "titleSlug": "check-if-n-and-its-double-exist",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>arr</code> of integers, check if there exist two indices <code>i</code> and <code>j</code> such that :</p>\n\n<ul>\n\t<li><code>i != j</code></li>\n\t<li><code>0 &lt;= i, j &lt; arr.length</code></li>\n\t<li><code>arr[i] == 2 * arr[j]</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [10,2,5,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> For i = 0 and j = 2, arr[i] == 10 == 2 * 5 == 2 * arr[j]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,1,7,11]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no i and j that satisfy the conditions.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= arr.length &lt;= 500</code></li>\n\t<li><code>-10<sup>3</sup> &lt;= arr[i] &lt;= 10<sup>3</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[10,2,5,3]\n[3,1,7,11]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "Loop from i = 0 to arr.length, maintaining in a hashTable the array elements from [0, i - 1].",
        "On each step of the loop check if we have seen the element 2 * arr[i] so far or arr[i] / 2 was seen if arr[i] % 2 == 0."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 1929,
      "dislikes": 207,
      "similarQuestions": "[{\"title\": \"Keep Multiplying Found Values by Two\", \"titleSlug\": \"keep-multiplying-found-values-by-two\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487160,
      "commentCount": 81,
      "topLevelCommentCount": 36
    },
    "classAndMethodDefinition": "def checkIfExist(self, arr: List[int]) -> bool:\n        arr.sort()"
  },
  {
    "stat": {
      "question_id": 744,
      "question__article__live": true,
      "question__article__slug": "network-delay-time",
      "question__article__has_video_solution": false,
      "question__title": "Network Delay Time",
      "question__title_slug": "network-delay-time",
      "question__hide": false,
      "total_acs": 540036,
      "total_submitted": 982888,
      "frontend_question_id": 743,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/network-delay-time",
      "questionId": "744",
      "questionFrontendId": "743",
      "questionTitle": "Network Delay Time",
      "titleSlug": "network-delay-time",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a network of <code>n</code> nodes, labeled from <code>1</code> to <code>n</code>. You are also given <code>times</code>, a list of travel times as directed edges <code>times[i] = (u<sub>i</sub>, v<sub>i</sub>, w<sub>i</sub>)</code>, where <code>u<sub>i</sub></code> is the source node, <code>v<sub>i</sub></code> is the target node, and <code>w<sub>i</sub></code> is the time it takes for a signal to travel from source to target.</p>\n\n<p>We will send a signal from a given node <code>k</code>. Return <em>the <strong>minimum</strong> time it takes for all the</em> <code>n</code> <em>nodes to receive the signal</em>. If it is impossible for all the <code>n</code> nodes to receive the signal, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/23/931_example_1.png\" style=\"width: 217px; height: 239px;\" />\n<pre>\n<strong>Input:</strong> times = [[2,1,1],[2,3,1],[3,4,1]], n = 4, k = 2\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> times = [[1,2,1]], n = 2, k = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> times = [[1,2,1]], n = 2, k = 2\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= times.length &lt;= 6000</code></li>\n\t<li><code>times[i].length == 3</code></li>\n\t<li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li><code>0 &lt;= w<sub>i</sub> &lt;= 100</code></li>\n\t<li>All the pairs <code>(u<sub>i</sub>, v<sub>i</sub>)</code> are <strong>unique</strong>. (i.e., no multiple edges.)</li>\n</ul>\n",
      "exampleTestcases": "[[2,1,1],[2,3,1],[3,4,1]]\n4\n2\n[[1,2,1]]\n2\n1\n[[1,2,1]]\n2\n2",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path",
          "translatedName": null
        }
      ],
      "hints": [
        "We visit each node at some time, and if that time is better than the fastest time we've reached this node, we travel along outgoing edges in sorted order.  Alternatively, we could use Dijkstra's algorithm."
      ],
      "solution": {
        "id": "1306",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7487,
      "dislikes": 369,
      "similarQuestions": "[{\"title\": \"The Time When the Network Becomes Idle\", \"titleSlug\": \"the-time-when-the-network-becomes-idle\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Second Minimum Time to Reach Destination\", \"titleSlug\": \"second-minimum-time-to-reach-destination\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486456,
      "commentCount": 81,
      "topLevelCommentCount": 44
    },
    "classAndMethodDefinition": "def networkDelayTime(self, times, N, K):\n        q, t, adj = [(0, K)], {}, collections.defaultdict(list)"
  },
  {
    "stat": {
      "question_id": 633,
      "question__article__live": true,
      "question__article__slug": "sum-of-square-numbers",
      "question__article__has_video_solution": false,
      "question__title": "Sum of Square Numbers",
      "question__title_slug": "sum-of-square-numbers",
      "question__hide": false,
      "total_acs": 358332,
      "total_submitted": 979227,
      "frontend_question_id": 633,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sum-of-square-numbers",
      "questionId": "633",
      "questionFrontendId": "633",
      "questionTitle": "Sum of Square Numbers",
      "titleSlug": "sum-of-square-numbers",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a non-negative integer <code>c</code>, decide whether there&#39;re two integers <code>a</code> and <code>b</code> such that <code>a<sup>2</sup> + b<sup>2</sup> = c</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> c = 5\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 1 * 1 + 2 * 2 = 5\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> c = 3\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= c &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "5\n3",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "192",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3214,
      "dislikes": 607,
      "similarQuestions": "[{\"title\": \"Valid Perfect Square\", \"titleSlug\": \"valid-perfect-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Squares of Special Elements \", \"titleSlug\": \"sum-of-squares-of-special-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486357,
      "commentCount": 313,
      "topLevelCommentCount": 158
    },
    "classAndMethodDefinition": "class Solution(object):\n    def judgeSquareSum(self, c):"
  },
  {
    "stat": {
      "question_id": 525,
      "question__article__live": true,
      "question__article__slug": "contiguous-array",
      "question__article__has_video_solution": false,
      "question__title": "Contiguous Array",
      "question__title_slug": "contiguous-array",
      "question__hide": false,
      "total_acs": 479324,
      "total_submitted": 979203,
      "frontend_question_id": 525,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/contiguous-array",
      "questionId": "525",
      "questionFrontendId": "525",
      "questionTitle": "Contiguous Array",
      "titleSlug": "contiguous-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a binary array <code>nums</code>, return <em>the maximum length of a contiguous subarray with an equal number of </em><code>0</code><em> and </em><code>1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> [0, 1] is the longest contiguous subarray with an equal number of 0 and 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,0]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\n</ul>\n",
      "exampleTestcases": "[0,1]\n[0,1,0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "94",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7996,
      "dislikes": 386,
      "similarQuestions": "[{\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All Possible Stable Binary Arrays I\", \"titleSlug\": \"find-all-possible-stable-binary-arrays-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All Possible Stable Binary Arrays II\", \"titleSlug\": \"find-all-possible-stable-binary-arrays-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486254,
      "commentCount": 197,
      "topLevelCommentCount": 97
    },
    "classAndMethodDefinition": "def findMaxLength(self, nums: List[int]) -> int:\n        max_length =0"
  },
  {
    "stat": {
      "question_id": 371,
      "question__article__live": true,
      "question__article__slug": "sum-of-two-integers",
      "question__article__has_video_solution": false,
      "question__title": "Sum of Two Integers",
      "question__title_slug": "sum-of-two-integers",
      "question__hide": false,
      "total_acs": 511565,
      "total_submitted": 975834,
      "frontend_question_id": 371,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sum-of-two-integers",
      "questionId": "371",
      "questionFrontendId": "371",
      "questionTitle": "Sum of Two Integers",
      "titleSlug": "sum-of-two-integers",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two integers <code>a</code> and <code>b</code>, return <em>the sum of the two integers without using the operators</em> <code>+</code> <em>and</em> <code>-</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> a = 1, b = 2\n<strong>Output:</strong> 3\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> a = 2, b = 3\n<strong>Output:</strong> 5\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-1000 &lt;= a, b &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "1\n2\n2\n3",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "962",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4239,
      "dislikes": 5565,
      "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486108,
      "commentCount": 120,
      "topLevelCommentCount": 76
    },
    "classAndMethodDefinition": "def getSum(a, b):\n\\tif b == 0: return a"
  },
  {
    "stat": {
      "question_id": 745,
      "question__article__live": true,
      "question__article__slug": "find-smallest-letter-greater-than-target",
      "question__article__has_video_solution": false,
      "question__title": "Find Smallest Letter Greater Than Target",
      "question__title_slug": "find-smallest-letter-greater-than-target",
      "question__hide": false,
      "total_acs": 513054,
      "total_submitted": 973643,
      "frontend_question_id": 744,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-smallest-letter-greater-than-target",
      "questionId": "745",
      "questionFrontendId": "744",
      "questionTitle": "Find Smallest Letter Greater Than Target",
      "titleSlug": "find-smallest-letter-greater-than-target",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an array of characters <code>letters</code> that is sorted in <strong>non-decreasing order</strong>, and a character <code>target</code>. There are <strong>at least two different</strong> characters in <code>letters</code>.</p>\n\n<p>Return <em>the smallest character in </em><code>letters</code><em> that is lexicographically greater than </em><code>target</code>. If such a character does not exist, return the first character in <code>letters</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> letters = [&quot;c&quot;,&quot;f&quot;,&quot;j&quot;], target = &quot;a&quot;\n<strong>Output:</strong> &quot;c&quot;\n<strong>Explanation:</strong> The smallest character that is lexicographically greater than &#39;a&#39; in letters is &#39;c&#39;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> letters = [&quot;c&quot;,&quot;f&quot;,&quot;j&quot;], target = &quot;c&quot;\n<strong>Output:</strong> &quot;f&quot;\n<strong>Explanation:</strong> The smallest character that is lexicographically greater than &#39;c&#39; in letters is &#39;f&#39;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> letters = [&quot;x&quot;,&quot;x&quot;,&quot;y&quot;,&quot;y&quot;], target = &quot;z&quot;\n<strong>Output:</strong> &quot;x&quot;\n<strong>Explanation:</strong> There are no characters in letters that is lexicographically greater than &#39;z&#39; so we return letters[0].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= letters.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>letters[i]</code> is a lowercase English letter.</li>\n\t<li><code>letters</code> is sorted in <strong>non-decreasing</strong> order.</li>\n\t<li><code>letters</code> contains at least two different characters.</li>\n\t<li><code>target</code> is a lowercase English letter.</li>\n</ul>\n",
      "exampleTestcases": "[\"c\",\"f\",\"j\"]\n\"a\"\n[\"c\",\"f\",\"j\"]\n\"c\"\n[\"x\",\"x\",\"y\",\"y\"]\n\"z\"",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [
        "Try to find whether each of 26 next letters are in the given string array."
      ],
      "solution": {
        "id": "1855",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4460,
      "dislikes": 2197,
      "similarQuestions": "[{\"title\": \"Count Elements With Strictly Smaller and Greater Elements \", \"titleSlug\": \"count-elements-with-strictly-smaller-and-greater-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486457,
      "commentCount": 129,
      "topLevelCommentCount": 85
    },
    "classAndMethodDefinition": "def nextGreatestLetter(self, letters, target):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 1023,
      "question__article__live": true,
      "question__article__slug": "time-based-key-value-store",
      "question__article__has_video_solution": false,
      "question__title": "Time Based Key-Value Store",
      "question__title_slug": "time-based-key-value-store",
      "question__hide": false,
      "total_acs": 478466,
      "total_submitted": 970882,
      "frontend_question_id": 981,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/time-based-key-value-store",
      "questionId": "1023",
      "questionFrontendId": "981",
      "questionTitle": "Time Based Key-Value Store",
      "titleSlug": "time-based-key-value-store",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Design a time-based key-value data structure that can store multiple values for the same key at different time stamps and retrieve the key&#39;s value at a certain timestamp.</p>\n\n<p>Implement the <code>TimeMap</code> class:</p>\n\n<ul>\n\t<li><code>TimeMap()</code> Initializes the object of the data structure.</li>\n\t<li><code>void set(String key, String value, int timestamp)</code> Stores the key <code>key</code> with the value <code>value</code> at the given time <code>timestamp</code>.</li>\n\t<li><code>String get(String key, int timestamp)</code> Returns a value such that <code>set</code> was called previously, with <code>timestamp_prev &lt;= timestamp</code>. If there are multiple such values, it returns the value associated with the largest <code>timestamp_prev</code>. If there are no values, it returns <code>&quot;&quot;</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;TimeMap&quot;, &quot;set&quot;, &quot;get&quot;, &quot;get&quot;, &quot;set&quot;, &quot;get&quot;, &quot;get&quot;]\n[[], [&quot;foo&quot;, &quot;bar&quot;, 1], [&quot;foo&quot;, 1], [&quot;foo&quot;, 3], [&quot;foo&quot;, &quot;bar2&quot;, 4], [&quot;foo&quot;, 4], [&quot;foo&quot;, 5]]\n<strong>Output</strong>\n[null, null, &quot;bar&quot;, &quot;bar&quot;, null, &quot;bar2&quot;, &quot;bar2&quot;]\n\n<strong>Explanation</strong>\nTimeMap timeMap = new TimeMap();\ntimeMap.set(&quot;foo&quot;, &quot;bar&quot;, 1);  // store the key &quot;foo&quot; and value &quot;bar&quot; along with timestamp = 1.\ntimeMap.get(&quot;foo&quot;, 1);         // return &quot;bar&quot;\ntimeMap.get(&quot;foo&quot;, 3);         // return &quot;bar&quot;, since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 is &quot;bar&quot;.\ntimeMap.set(&quot;foo&quot;, &quot;bar2&quot;, 4); // store the key &quot;foo&quot; and value &quot;bar2&quot; along with timestamp = 4.\ntimeMap.get(&quot;foo&quot;, 4);         // return &quot;bar2&quot;\ntimeMap.get(&quot;foo&quot;, 5);         // return &quot;bar2&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= key.length, value.length &lt;= 100</code></li>\n\t<li><code>key</code> and <code>value</code> consist of lowercase English letters and digits.</li>\n\t<li><code>1 &lt;= timestamp &lt;= 10<sup>7</sup></code></li>\n\t<li>All the timestamps <code>timestamp</code> of <code>set</code> are strictly increasing.</li>\n\t<li>At most <code>2 * 10<sup>5</sup></code> calls will be made to <code>set</code> and <code>get</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"TimeMap\",\"set\",\"get\",\"get\",\"set\",\"get\",\"get\"]\n[[],[\"foo\",\"bar\",1],[\"foo\",1],[\"foo\",3],[\"foo\",\"bar2\",4],[\"foo\",4],[\"foo\",5]]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1554",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4812,
      "dislikes": 595,
      "similarQuestions": "[{\"title\": \"Stock Price Fluctuation \", \"titleSlug\": \"stock-price-fluctuation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486725,
      "commentCount": 115,
      "topLevelCommentCount": 72
    },
    "classAndMethodDefinition": "def __init__(self):\n        self.dic = {}"
  },
  {
    "stat": {
      "question_id": 940,
      "question__article__live": true,
      "question__article__slug": "fruit-into-baskets",
      "question__article__has_video_solution": false,
      "question__title": "Fruit Into Baskets",
      "question__title_slug": "fruit-into-baskets",
      "question__hide": false,
      "total_acs": 434170,
      "total_submitted": 968615,
      "frontend_question_id": 904,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/fruit-into-baskets",
      "questionId": "940",
      "questionFrontendId": "904",
      "questionTitle": "Fruit Into Baskets",
      "titleSlug": "fruit-into-baskets",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array <code>fruits</code> where <code>fruits[i]</code> is the <strong>type</strong> of fruit the <code>i<sup>th</sup></code> tree produces.</p>\n\n<p>You want to collect as much fruit as possible. However, the owner has some strict rules that you must follow:</p>\n\n<ul>\n\t<li>You only have <strong>two</strong> baskets, and each basket can only hold a <strong>single type</strong> of fruit. There is no limit on the amount of fruit each basket can hold.</li>\n\t<li>Starting from any tree of your choice, you must pick <strong>exactly one fruit</strong> from <strong>every</strong> tree (including the start tree) while moving to the right. The picked fruits must fit in one of your baskets.</li>\n\t<li>Once you reach a tree with fruit that cannot fit in your baskets, you must stop.</li>\n</ul>\n\n<p>Given the integer array <code>fruits</code>, return <em>the <strong>maximum</strong> number of fruits you can pick</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> fruits = [<u>1,2,1</u>]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can pick from all 3 trees.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> fruits = [0,<u>1,2,2</u>]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can pick from trees [1,2,2].\nIf we had started at the first tree, we would only pick from trees [0,1].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> fruits = [1,<u>2,3,2,2</u>]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> We can pick from trees [2,3,2,2].\nIf we had started at the first tree, we would only pick from trees [1,2].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= fruits.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= fruits[i] &lt; fruits.length</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,1]\n[0,1,2,2]\n[1,2,3,2,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1662",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4709,
      "dislikes": 352,
      "similarQuestions": "[{\"title\": \"Longest Nice Subarray\", \"titleSlug\": \"longest-nice-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486647,
      "commentCount": 215,
      "topLevelCommentCount": 94
    },
    "classAndMethodDefinition": "class Solution:\n  def totalFruit(self, tree: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 455,
      "question__article__live": true,
      "question__article__slug": "assign-cookies",
      "question__article__has_video_solution": false,
      "question__title": "Assign Cookies",
      "question__title_slug": "assign-cookies",
      "question__hide": false,
      "total_acs": 510411,
      "total_submitted": 962298,
      "frontend_question_id": 455,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/assign-cookies",
      "questionId": "455",
      "questionFrontendId": "455",
      "questionTitle": "Assign Cookies",
      "titleSlug": "assign-cookies",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.</p>\n\n<p>Each child <code>i</code> has a greed factor <code>g[i]</code>, which is the minimum size of a cookie that the child will be content with; and each cookie <code>j</code> has a size <code>s[j]</code>. If <code>s[j] &gt;= g[i]</code>, we can assign the cookie <code>j</code> to the child <code>i</code>, and the child <code>i</code> will be content. Your goal is to maximize the number of your content children and output the maximum number.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> g = [1,2,3], s = [1,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\nYou need to output 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> g = [1,2], s = [1,2,3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \nYou have 3 cookies and their sizes are big enough to gratify all of the children, \nYou need to output 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= g.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= s.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= g[i], s[j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as <a href=\"https://leetcode.com/problems/maximum-matching-of-players-with-trainers/description/\" target=\"_blank\"> 2410: Maximum Matching of Players With Trainers.</a></p>\n",
      "exampleTestcases": "[1,2,3]\n[1,1]\n[1,2]\n[1,2,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2217",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4007,
      "dislikes": 377,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486186,
      "commentCount": 366,
      "topLevelCommentCount": 237
    },
    "classAndMethodDefinition": "class Solution(object):\n    def findContentChildren(self, g, s):"
  },
  {
    "stat": {
      "question_id": 1029,
      "question__article__live": true,
      "question__article__slug": "vertical-order-traversal-of-a-binary-tree",
      "question__article__has_video_solution": true,
      "question__title": "Vertical Order Traversal of a Binary Tree",
      "question__title_slug": "vertical-order-traversal-of-a-binary-tree",
      "question__hide": false,
      "total_acs": 467114,
      "total_submitted": 960024,
      "frontend_question_id": 987,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",
      "questionId": "1029",
      "questionFrontendId": "987",
      "questionTitle": "Vertical Order Traversal of a Binary Tree",
      "titleSlug": "vertical-order-traversal-of-a-binary-tree",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, calculate the <strong>vertical order traversal</strong> of the binary tree.</p>\n\n<p>For each node at position <code>(row, col)</code>, its left and right children will be at positions <code>(row + 1, col - 1)</code> and <code>(row + 1, col + 1)</code> respectively. The root of the tree is at <code>(0, 0)</code>.</p>\n\n<p>The <strong>vertical order traversal</strong> of a binary tree is a list of top-to-bottom orderings for each column index starting from the leftmost column and ending on the rightmost column. There may be multiple nodes in the same row and same column. In such a case, sort these nodes by their values.</p>\n\n<p>Return <em>the <strong>vertical order traversal</strong> of the binary tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/29/vtree1.jpg\" style=\"width: 431px; height: 304px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [[9],[3,15],[20],[7]]\n<strong>Explanation:</strong>\nColumn -1: Only node 9 is in this column.\nColumn 0: Nodes 3 and 15 are in this column in that order from top to bottom.\nColumn 1: Only node 20 is in this column.\nColumn 2: Only node 7 is in this column.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/29/vtree2.jpg\" style=\"width: 512px; height: 304px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,6,7]\n<strong>Output:</strong> [[4],[2],[1,5,6],[3],[7]]\n<strong>Explanation:</strong>\nColumn -2: Only node 4 is in this column.\nColumn -1: Only node 2 is in this column.\nColumn 0: Nodes 1, 5, and 6 are in this column.\n          1 is at the top, so it comes first.\n          5 and 6 are at the same position (2, 0), so we order them by their value, 5 before 6.\nColumn 1: Only node 3 is in this column.\nColumn 2: Only node 7 is in this column.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/29/vtree3.jpg\" style=\"width: 512px; height: 304px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,6,5,7]\n<strong>Output:</strong> [[4],[2],[1,5,6],[3],[7]]\n<strong>Explanation:</strong>\nThis case is the exact same as example 2, but with nodes 5 and 6 swapped.\nNote that the solution remains the same since 5 and 6 are in the same location and should be ordered by their values.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 1000]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,null,null,15,7]\n[1,2,3,4,5,6,7]\n[1,2,3,4,6,5,7]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "947",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7676,
      "dislikes": 4334,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486731,
      "commentCount": 151,
      "topLevelCommentCount": 115
    },
    "classAndMethodDefinition": "def helper(self, placement,level, root, dic):\n        if(not root):"
  },
  {
    "stat": {
      "question_id": 662,
      "question__article__live": true,
      "question__article__slug": "maximum-width-of-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Width of Binary Tree",
      "question__title_slug": "maximum-width-of-binary-tree",
      "question__hide": false,
      "total_acs": 409134,
      "total_submitted": 947494,
      "frontend_question_id": 662,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-width-of-binary-tree",
      "questionId": "662",
      "questionFrontendId": "662",
      "questionTitle": "Maximum Width of Binary Tree",
      "titleSlug": "maximum-width-of-binary-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>the <strong>maximum width</strong> of the given tree</em>.</p>\n\n<p>The <strong>maximum width</strong> of a tree is the maximum <strong>width</strong> among all levels.</p>\n\n<p>The <strong>width</strong> of one level is defined as the length between the end-nodes (the leftmost and rightmost non-null nodes), where the null nodes between the end-nodes that would be present in a complete binary tree extending down to that level are also counted into the length calculation.</p>\n\n<p>It is <strong>guaranteed</strong> that the answer will in the range of a <strong>32-bit</strong> signed integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/03/width1-tree.jpg\" style=\"width: 359px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [1,3,2,5,3,null,9]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The maximum width exists in the third level with length 4 (5,3,null,9).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/14/maximum-width-of-binary-tree-v3.jpg\" style=\"width: 442px; height: 422px;\" />\n<pre>\n<strong>Input:</strong> root = [1,3,2,5,null,null,9,6,null,7]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> The maximum width exists in the fourth level with length 7 (6,null,null,null,null,null,7).\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/03/width3-tree.jpg\" style=\"width: 289px; height: 299px;\" />\n<pre>\n<strong>Input:</strong> root = [1,3,2,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The maximum width exists in the second level with length 2 (3,2).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 3000]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,2,5,3,null,9]\n[1,3,2,5,null,null,9,6,null,7]\n[1,3,2,5]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "965",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8819,
      "dislikes": 1220,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486385,
      "commentCount": 151,
      "topLevelCommentCount": 101
    },
    "classAndMethodDefinition": "class Solution:\n    def widthOfBinaryTree(self, root: TreeNode) -> int:"
  },
  {
    "stat": {
      "question_id": 93,
      "question__article__live": true,
      "question__article__slug": "restore-ip-addresses",
      "question__article__has_video_solution": false,
      "question__title": "Restore IP Addresses",
      "question__title_slug": "restore-ip-addresses",
      "question__hide": false,
      "total_acs": 479208,
      "total_submitted": 941961,
      "frontend_question_id": 93,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/restore-ip-addresses",
      "questionId": "93",
      "questionFrontendId": "93",
      "questionTitle": "Restore IP Addresses",
      "titleSlug": "restore-ip-addresses",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A <strong>valid IP address</strong> consists of exactly four integers separated by single dots. Each integer is between <code>0</code> and <code>255</code> (<strong>inclusive</strong>) and cannot have leading zeros.</p>\n\n<ul>\n\t<li>For example, <code>&quot;0.1.2.201&quot;</code> and <code>&quot;192.168.1.1&quot;</code> are <strong>valid</strong> IP addresses, but <code>&quot;0.011.255.245&quot;</code>, <code>&quot;192.168.1.312&quot;</code> and <code>&quot;192.168@1.1&quot;</code> are <strong>invalid</strong> IP addresses.</li>\n</ul>\n\n<p>Given a string <code>s</code> containing only digits, return <em>all possible valid IP addresses that can be formed by inserting dots into </em><code>s</code>. You are <strong>not</strong> allowed to reorder or remove any digits in <code>s</code>. You may return the valid IP addresses in <strong>any</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;25525511135&quot;\n<strong>Output:</strong> [&quot;255.255.11.135&quot;,&quot;255.255.111.35&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0000&quot;\n<strong>Output:</strong> [&quot;0.0.0.0&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;101023&quot;\n<strong>Output:</strong> [&quot;1.0.10.23&quot;,&quot;1.0.102.3&quot;,&quot;10.1.0.23&quot;,&quot;10.10.2.3&quot;,&quot;101.0.2.3&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 20</code></li>\n\t<li><code>s</code> consists of digits only.</li>\n</ul>\n",
      "exampleTestcases": "\"25525511135\"\n\"0000\"\n\"101023\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1629",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5255,
      "dislikes": 792,
      "similarQuestions": "[{\"title\": \"IP to CIDR\", \"titleSlug\": \"ip-to-cidr\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485830,
      "commentCount": 113,
      "topLevelCommentCount": 71
    },
    "classAndMethodDefinition": "def restoreIpAddresses(self, s):\n        res = []"
  },
  {
    "stat": {
      "question_id": 2058,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Concatenation of Array",
      "question__title_slug": "concatenation-of-array",
      "question__hide": false,
      "total_acs": 848301,
      "total_submitted": 941708,
      "frontend_question_id": 1929,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/concatenation-of-array",
      "questionId": "2058",
      "questionFrontendId": "1929",
      "questionTitle": "Concatenation of Array",
      "titleSlug": "concatenation-of-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> of length <code>n</code>, you want to create an array <code>ans</code> of length <code>2n</code> where <code>ans[i] == nums[i]</code> and <code>ans[i + n] == nums[i]</code> for <code>0 &lt;= i &lt; n</code> (<strong>0-indexed</strong>).</p>\n\n<p>Specifically, <code>ans</code> is the <strong>concatenation</strong> of two <code>nums</code> arrays.</p>\n\n<p>Return <em>the array </em><code>ans</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1]\n<strong>Output:</strong> [1,2,1,1,2,1]\n<strong>Explanation:</strong> The array ans is formed as follows:\n- ans = [nums[0],nums[1],nums[2],nums[0],nums[1],nums[2]]\n- ans = [1,2,1,1,2,1]</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,2,1]\n<strong>Output:</strong> [1,3,2,1,1,3,2,1]\n<strong>Explanation:</strong> The array ans is formed as follows:\n- ans = [nums[0],nums[1],nums[2],nums[3],nums[0],nums[1],nums[2],nums[3]]\n- ans = [1,3,2,1,1,3,2,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,1]\n[1,3,2,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "Build an array of size 2 * n and assign num[i] to ans[i] and ans[i + n]"
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 3367,
      "dislikes": 398,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487714,
      "commentCount": 153,
      "topLevelCommentCount": 108
    },
    "classAndMethodDefinition": "def getConcatenation(self, nums: List[int]) -> List[int]:\n        result = []"
  },
  {
    "stat": {
      "question_id": 990,
      "question__article__live": true,
      "question__article__slug": "verifying-an-alien-dictionary",
      "question__article__has_video_solution": false,
      "question__title": "Verifying an Alien Dictionary",
      "question__title_slug": "verifying-an-alien-dictionary",
      "question__hide": false,
      "total_acs": 518330,
      "total_submitted": 939417,
      "frontend_question_id": 953,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/verifying-an-alien-dictionary",
      "questionId": "990",
      "questionFrontendId": "953",
      "questionTitle": "Verifying an Alien Dictionary",
      "titleSlug": "verifying-an-alien-dictionary",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>In an alien language, surprisingly, they also use English lowercase letters, but possibly in a different <code>order</code>. The <code>order</code> of the alphabet is some permutation of lowercase letters.</p>\n\n<p>Given a sequence of <code>words</code> written in the alien language, and the <code>order</code> of the alphabet, return <code>true</code> if and only if the given <code>words</code> are sorted lexicographically in this alien language.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;hello&quot;,&quot;leetcode&quot;], order = &quot;hlabcdefgijkmnopqrstuvwxyz&quot;\n<strong>Output:</strong> true\n<strong>Explanation: </strong>As &#39;h&#39; comes before &#39;l&#39; in this language, then the sequence is sorted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;word&quot;,&quot;world&quot;,&quot;row&quot;], order = &quot;worldabcefghijkmnpqstuvxyz&quot;\n<strong>Output:</strong> false\n<strong>Explanation: </strong>As &#39;d&#39; comes after &#39;l&#39; in this language, then words[0] &gt; words[1], hence the sequence is unsorted.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;apple&quot;,&quot;app&quot;], order = &quot;abcdefghijklmnopqrstuvwxyz&quot;\n<strong>Output:</strong> false\n<strong>Explanation: </strong>The first three characters &quot;app&quot; match, and the second string is shorter (in size.) According to lexicographical rules &quot;apple&quot; &gt; &quot;app&quot;, because &#39;l&#39; &gt; &#39;&empty;&#39;, where &#39;&empty;&#39; is defined as the blank character which is less than any other character (<a href=\"https://en.wikipedia.org/wiki/Lexicographical_order\" target=\"_blank\">More info</a>).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\n\t<li><code>order.length == 26</code></li>\n\t<li>All characters in <code>words[i]</code> and <code>order</code> are English lowercase letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"hello\",\"leetcode\"]\n\"hlabcdefgijkmnopqrstuvwxyz\"\n[\"word\",\"world\",\"row\"]\n\"worldabcefghijkmnpqstuvxyz\"\n[\"apple\",\"app\"]\n\"abcdefghijklmnopqrstuvwxyz\"",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1122",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4897,
      "dislikes": 1634,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486696,
      "commentCount": 211,
      "topLevelCommentCount": 129
    },
    "classAndMethodDefinition": "def isAlienSorted(self, W: List[str], O: str) -> bool:\n        alpha = {O[i]: i for i in range(len(O))}"
  },
  {
    "stat": {
      "question_id": 452,
      "question__article__live": true,
      "question__article__slug": "minimum-number-of-arrows-to-burst-balloons",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Number of Arrows to Burst Balloons",
      "question__title_slug": "minimum-number-of-arrows-to-burst-balloons",
      "question__hide": false,
      "total_acs": 556736,
      "total_submitted": 938905,
      "frontend_question_id": 452,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons",
      "questionId": "452",
      "questionFrontendId": "452",
      "questionTitle": "Minimum Number of Arrows to Burst Balloons",
      "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are some spherical balloons taped onto a flat wall that represents the XY-plane. The balloons are represented as a 2D integer array <code>points</code> where <code>points[i] = [x<sub>start</sub>, x<sub>end</sub>]</code> denotes a balloon whose <strong>horizontal diameter</strong> stretches between <code>x<sub>start</sub></code> and <code>x<sub>end</sub></code>. You do not know the exact y-coordinates of the balloons.</p>\n\n<p>Arrows can be shot up <strong>directly vertically</strong> (in the positive y-direction) from different points along the x-axis. A balloon with <code>x<sub>start</sub></code> and <code>x<sub>end</sub></code> is <strong>burst</strong> by an arrow shot at <code>x</code> if <code>x<sub>start</sub> &lt;= x &lt;= x<sub>end</sub></code>. There is <strong>no limit</strong> to the number of arrows that can be shot. A shot arrow keeps traveling up infinitely, bursting any balloons in its path.</p>\n\n<p>Given the array <code>points</code>, return <em>the <strong>minimum</strong> number of arrows that must be shot to burst all balloons</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[10,16],[2,8],[1,6],[7,12]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The balloons can be burst by 2 arrows:\n- Shoot an arrow at x = 6, bursting the balloons [2,8] and [1,6].\n- Shoot an arrow at x = 11, bursting the balloons [10,16] and [7,12].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[1,2],[3,4],[5,6],[7,8]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> One arrow needs to be shot for each balloon for a total of 4 arrows.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[1,2],[2,3],[3,4],[4,5]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The balloons can be burst by 2 arrows:\n- Shoot an arrow at x = 2, bursting the balloons [1,2] and [2,3].\n- Shoot an arrow at x = 4, bursting the balloons [3,4] and [4,5].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= points.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= x<sub>start</sub> &lt; x<sub>end</sub> &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[[10,16],[2,8],[1,6],[7,12]]\n[[1,2],[3,4],[5,6],[7,8]]\n[[1,2],[2,3],[3,4],[4,5]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "725",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7499,
      "dislikes": 244,
      "similarQuestions": "[{\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-overlapping Intervals\", \"titleSlug\": \"non-overlapping-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486183,
      "commentCount": 354,
      "topLevelCommentCount": 201
    },
    "classAndMethodDefinition": "def findMinArrowShots(self, segments):\n        segments.sort(key=lambda p: p[1])"
  },
  {
    "stat": {
      "question_id": 309,
      "question__article__live": true,
      "question__article__slug": "best-time-to-buy-and-sell-stock-with-cooldown",
      "question__article__has_video_solution": false,
      "question__title": "Best Time to Buy and Sell Stock with Cooldown",
      "question__title_slug": "best-time-to-buy-and-sell-stock-with-cooldown",
      "question__hide": false,
      "total_acs": 549795,
      "total_submitted": 931824,
      "frontend_question_id": 309,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",
      "questionId": "309",
      "questionFrontendId": "309",
      "questionTitle": "Best Time to Buy and Sell Stock with Cooldown",
      "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p>\n\n<p>Find the maximum profit you can achieve. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times) with the following restrictions:</p>\n\n<ul>\n\t<li>After you sell your stock, you cannot buy stock on the next day (i.e., cooldown one day).</li>\n</ul>\n\n<p><strong>Note:</strong> You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [1,2,3,0,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> transactions = [buy, sell, cooldown, buy, sell]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= prices.length &lt;= 5000</code></li>\n\t<li><code>0 &lt;= prices[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,0,2]\n[1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "942",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9434,
      "dislikes": 324,
      "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486046,
      "commentCount": 108,
      "topLevelCommentCount": 58
    },
    "classAndMethodDefinition": "def maxProfit(self, prices):\n        if len(prices) < 2:"
  },
  {
    "stat": {
      "question_id": 653,
      "question__article__live": true,
      "question__article__slug": "two-sum-iv",
      "question__article__has_video_solution": false,
      "question__title": "Two Sum IV - Input is a BST",
      "question__title_slug": "two-sum-iv-input-is-a-bst",
      "question__hide": false,
      "total_acs": 572245,
      "total_submitted": 930132,
      "frontend_question_id": 653,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst",
      "questionId": "653",
      "questionFrontendId": "653",
      "questionTitle": "Two Sum IV - Input is a BST",
      "titleSlug": "two-sum-iv-input-is-a-bst",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary search tree and an integer <code>k</code>, return <code>true</code> <em>if there exist two elements in the BST such that their sum is equal to</em> <code>k</code>, <em>or</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/21/sum_tree_1.jpg\" style=\"width: 400px; height: 229px;\" />\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], k = 9\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/21/sum_tree_2.jpg\" style=\"width: 400px; height: 229px;\" />\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], k = 28\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li><code>root</code> is guaranteed to be a <strong>valid</strong> binary search tree.</li>\n\t<li><code>-10<sup>5</sup> &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[5,3,6,2,4,null,7]\n9\n[5,3,6,2,4,null,7]\n28",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "226",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6782,
      "dislikes": 272,
      "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum BSTs\", \"titleSlug\": \"two-sum-bsts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486376,
      "commentCount": 68,
      "topLevelCommentCount": 42
    },
    "classAndMethodDefinition": "def findTarget(self, root, k):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 1635,
      "question__article__live": true,
      "question__article__slug": "number-of-good-pairs",
      "question__article__has_video_solution": false,
      "question__title": "Number of Good Pairs",
      "question__title_slug": "number-of-good-pairs",
      "question__hide": false,
      "total_acs": 827389,
      "total_submitted": 927218,
      "frontend_question_id": 1512,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-good-pairs",
      "questionId": "1635",
      "questionFrontendId": "1512",
      "questionTitle": "Number of Good Pairs",
      "titleSlug": "number-of-good-pairs",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code>, return <em>the number of <strong>good pairs</strong></em>.</p>\n\n<p>A pair <code>(i, j)</code> is called <em>good</em> if <code>nums[i] == nums[j]</code> and <code>i</code> &lt; <code>j</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1,1,3]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Each pair in the array are <em>good</em>.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,1,1,3]\n[1,1,1,1]\n[1,2,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [
        "Count how many times each number appears. If a number appears n times, then n * (n – 1) // 2 good pairs can be made with this number."
      ],
      "solution": {
        "id": "2064",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5461,
      "dislikes": 258,
      "similarQuestions": "[{\"title\": \"Number of Pairs of Interchangeable Rectangles\", \"titleSlug\": \"number-of-pairs-of-interchangeable-rectangles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Substrings That Begin and End With the Same Letter\", \"titleSlug\": \"substrings-that-begin-and-end-with-the-same-letter\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487309,
      "commentCount": 161,
      "topLevelCommentCount": 98
    },
    "classAndMethodDefinition": "class Solution:\n    def numIdenticalPairs(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 310,
      "question__article__live": true,
      "question__article__slug": "minimum-height-trees",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Height Trees",
      "question__title_slug": "minimum-height-trees",
      "question__hide": false,
      "total_acs": 387476,
      "total_submitted": 925949,
      "frontend_question_id": 310,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-height-trees",
      "questionId": "310",
      "questionFrontendId": "310",
      "questionTitle": "Minimum Height Trees",
      "titleSlug": "minimum-height-trees",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A tree is an undirected graph in which any two vertices are connected by&nbsp;<i>exactly</i>&nbsp;one path. In other words, any connected graph without simple cycles is a tree.</p>\n\n<p>Given a tree of <code>n</code> nodes&nbsp;labelled from <code>0</code> to <code>n - 1</code>, and an array of&nbsp;<code>n - 1</code>&nbsp;<code>edges</code> where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that there is an undirected edge between the two nodes&nbsp;<code>a<sub>i</sub></code> and&nbsp;<code>b<sub>i</sub></code> in the tree,&nbsp;you can choose any node of the tree as the root. When you select a node <code>x</code> as the root, the result tree has height <code>h</code>. Among all possible rooted trees, those with minimum height (i.e. <code>min(h)</code>)&nbsp; are called <strong>minimum height trees</strong> (MHTs).</p>\n\n<p>Return <em>a list of all <strong>MHTs&#39;</strong> root labels</em>.&nbsp;You can return the answer in <strong>any order</strong>.</p>\n\n<p>The <strong>height</strong> of a rooted tree is the number of edges on the longest downward path between the root and a leaf.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/01/e1.jpg\" style=\"width: 800px; height: 213px;\" />\n<pre>\n<strong>Input:</strong> n = 4, edges = [[1,0],[1,2],[1,3]]\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> As shown, the height of the tree is 1 when the root is the node with label 1 which is the only MHT.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/01/e2.jpg\" style=\"width: 800px; height: 321px;\" />\n<pre>\n<strong>Input:</strong> n = 6, edges = [[3,0],[3,1],[3,2],[3,4],[5,4]]\n<strong>Output:</strong> [3,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>edges.length == n - 1</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; n</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>All the pairs <code>(a<sub>i</sub>, b<sub>i</sub>)</code> are distinct.</li>\n\t<li>The given input is <strong>guaranteed</strong> to be a tree and there will be <strong>no repeated</strong> edges.</li>\n</ul>\n",
      "exampleTestcases": "4\n[[1,0],[1,2],[1,3]]\n6\n[[3,0],[3,1],[3,2],[3,4],[5,4]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort",
          "translatedName": null
        }
      ],
      "hints": [
        "How many MHTs can a graph have at most?"
      ],
      "solution": {
        "id": "1029",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8283,
      "dislikes": 383,
      "similarQuestions": "[{\"title\": \"Course Schedule\", \"titleSlug\": \"course-schedule\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Collect Coins in a Tree\", \"titleSlug\": \"collect-coins-in-a-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Pairs of Connectable Servers in a Weighted Tree Network\", \"titleSlug\": \"count-pairs-of-connectable-servers-in-a-weighted-tree-network\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Minimum Diameter After Merging Two Trees\", \"titleSlug\": \"find-minimum-diameter-after-merging-two-trees\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486047,
      "commentCount": 222,
      "topLevelCommentCount": 126
    },
    "classAndMethodDefinition": "def findMinHeightTrees(self, n, edges):\n        if n == 1: return [0] "
  },
  {
    "stat": {
      "question_id": 377,
      "question__article__live": true,
      "question__article__slug": "combination-sum-iv",
      "question__article__has_video_solution": false,
      "question__title": "Combination Sum IV",
      "question__title_slug": "combination-sum-iv",
      "question__hide": false,
      "total_acs": 502242,
      "total_submitted": 925578,
      "frontend_question_id": 377,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/combination-sum-iv",
      "questionId": "377",
      "questionFrontendId": "377",
      "questionTitle": "Combination Sum IV",
      "titleSlug": "combination-sum-iv",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of <strong>distinct</strong> integers <code>nums</code> and a target integer <code>target</code>, return <em>the number of possible combinations that add up to</em>&nbsp;<code>target</code>.</p>\n\n<p>The test cases are generated so that the answer can fit in a <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3], target = 4\n<strong>Output:</strong> 7\n<strong>Explanation:</strong>\nThe possible combination ways are:\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\nNote that different sequences are counted as different combinations.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [9], target = 3\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 200</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li>All the elements of <code>nums</code> are <strong>unique</strong>.</li>\n\t<li><code>1 &lt;= target &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> What if negative numbers are allowed in the given array? How does it change the problem? What limitation we need to add to the question to allow negative numbers?</p>\n",
      "exampleTestcases": "[1,2,3]\n4\n[9]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1093",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7417,
      "dislikes": 664,
      "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ways to Express an Integer as Sum of Powers\", \"titleSlug\": \"ways-to-express-an-integer-as-sum-of-powers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486114,
      "commentCount": 185,
      "topLevelCommentCount": 95
    },
    "classAndMethodDefinition": "def combinationSum4(self, nums: List[int], target: int) -> int:\n        dp = [0] * (target + 1)"
  },
  {
    "stat": {
      "question_id": 166,
      "question__article__live": true,
      "question__article__slug": "fraction-to-recurring-decimal",
      "question__article__has_video_solution": false,
      "question__title": "Fraction to Recurring Decimal",
      "question__title_slug": "fraction-to-recurring-decimal",
      "question__hide": false,
      "total_acs": 233948,
      "total_submitted": 923968,
      "frontend_question_id": 166,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/fraction-to-recurring-decimal",
      "questionId": "166",
      "questionFrontendId": "166",
      "questionTitle": "Fraction to Recurring Decimal",
      "titleSlug": "fraction-to-recurring-decimal",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two integers representing the <code>numerator</code> and <code>denominator</code> of a fraction, return <em>the fraction in string format</em>.</p>\n\n<p>If the fractional part is repeating, enclose the repeating part in parentheses.</p>\n\n<p>If multiple answers are possible, return <strong>any of them</strong>.</p>\n\n<p>It is <strong>guaranteed</strong> that the length of the answer string is less than <code>10<sup>4</sup></code> for all the given inputs.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> numerator = 1, denominator = 2\n<strong>Output:</strong> &quot;0.5&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> numerator = 2, denominator = 1\n<strong>Output:</strong> &quot;2&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> numerator = 4, denominator = 333\n<strong>Output:</strong> &quot;0.(012)&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;=&nbsp;numerator, denominator &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>denominator != 0</code></li>\n</ul>\n",
      "exampleTestcases": "1\n2\n2\n1\n4\n333",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "No scary math, just apply elementary math knowledge. Still remember how to perform a <i>long division</i>?",
        "Try a long division on 4/9, the repeating part is obvious. Now try 4/333. Do you see a pattern?",
        "Notice that once the remainder starts repeating, so does the divided result.",
        "Be wary of edge cases! List out as many test cases as you can think of and test your code thoroughly."
      ],
      "solution": {
        "id": "19",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2100,
      "dislikes": 3681,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485903,
      "commentCount": 42,
      "topLevelCommentCount": 34
    },
    "classAndMethodDefinition": "def fractionToDecimal(self, numerator, denominator):\n        n, remainder = divmod(abs(numerator), abs(denominator))"
  },
  {
    "stat": {
      "question_id": 115,
      "question__article__live": true,
      "question__article__slug": "distinct-subsequences",
      "question__article__has_video_solution": false,
      "question__title": "Distinct Subsequences",
      "question__title_slug": "distinct-subsequences",
      "question__hide": false,
      "total_acs": 444327,
      "total_submitted": 923661,
      "frontend_question_id": 115,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/distinct-subsequences",
      "questionId": "115",
      "questionFrontendId": "115",
      "questionTitle": "Distinct Subsequences",
      "titleSlug": "distinct-subsequences",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given two strings s and t, return <i>the number of distinct</i> <b><i>subsequences</i></b><i> of </i>s<i> which equals </i>t.</p>\n\n<p>The test cases are generated so that the answer fits on a 32-bit signed integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;rabbbit&quot;, t = &quot;rabbit&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nAs shown below, there are 3 ways you can generate &quot;rabbit&quot; from s.\n<code><strong><u>rabb</u></strong>b<strong><u>it</u></strong></code>\n<code><strong><u>ra</u></strong>b<strong><u>bbit</u></strong></code>\n<code><strong><u>rab</u></strong>b<strong><u>bit</u></strong></code>\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;babgbag&quot;, t = &quot;bag&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nAs shown below, there are 5 ways you can generate &quot;bag&quot; from s.\n<code><strong><u>ba</u></strong>b<u><strong>g</strong></u>bag</code>\n<code><strong><u>ba</u></strong>bgba<strong><u>g</u></strong></code>\n<code><u><strong>b</strong></u>abgb<strong><u>ag</u></strong></code>\n<code>ba<u><strong>b</strong></u>gb<u><strong>ag</strong></u></code>\n<code>babg<strong><u>bag</u></strong></code></pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, t.length &lt;= 1000</code></li>\n\t<li><code>s</code> and <code>t</code> consist of English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"rabbbit\"\n\"rabbit\"\n\"babgbag\"\n\"bag\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "931",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6698,
      "dislikes": 292,
      "similarQuestions": "[{\"title\": \"Number of Unique Good Subsequences\", \"titleSlug\": \"number-of-unique-good-subsequences\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485852,
      "commentCount": 166,
      "topLevelCommentCount": 98
    },
    "classAndMethodDefinition": "def numDistinct(self, s, t):\n        dp = [[0] * (len(s) + 1) for _ in range(len(t) + 1)]"
  },
  {
    "stat": {
      "question_id": 264,
      "question__article__live": true,
      "question__article__slug": "ugly-number-ii",
      "question__article__has_video_solution": false,
      "question__title": "Ugly Number II",
      "question__title_slug": "ugly-number-ii",
      "question__hide": false,
      "total_acs": 452716,
      "total_submitted": 921720,
      "frontend_question_id": 264,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/ugly-number-ii",
      "questionId": "264",
      "questionFrontendId": "264",
      "questionTitle": "Ugly Number II",
      "titleSlug": "ugly-number-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>An <strong>ugly number</strong> is a positive integer whose prime factors are limited to <code>2</code>, <code>3</code>, and <code>5</code>.</p>\n\n<p>Given an integer <code>n</code>, return <em>the</em> <code>n<sup>th</sup></code> <em><strong>ugly number</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> [1, 2, 3, 4, 5, 6, 8, 9, 10, 12] is the sequence of the first 10 ugly numbers.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1690</code></li>\n</ul>\n",
      "exampleTestcases": "10\n1",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [
        "The naive approach is to call <code>isUgly</code> for every number until you reach the n<sup>th</sup> one. Most numbers are <i>not</i> ugly. Try to focus your effort on generating only the ugly ones.",
        "An ugly number must be multiplied by either 2, 3, or 5 from a smaller ugly number.",
        "The key is how to maintain the order of the ugly numbers. Try a similar approach of merging from three sorted lists: L<sub>1</sub>, L<sub>2</sub>, and L<sub>3</sub>.",
        "Assume you have U<sub>k</sub>, the k<sup>th</sup> ugly number. Then U<sub>k+1</sub> must be Min(L<sub>1</sub> * 2, L<sub>2</sub> * 3, L<sub>3</sub> * 5)."
      ],
      "solution": {
        "id": "2409",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6517,
      "dislikes": 393,
      "similarQuestions": "[{\"title\": \"Merge k Sorted Lists\", \"titleSlug\": \"merge-k-sorted-lists\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ugly Number\", \"titleSlug\": \"ugly-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Perfect Squares\", \"titleSlug\": \"perfect-squares\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Super Ugly Number\", \"titleSlug\": \"super-ugly-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ugly Number III\", \"titleSlug\": \"ugly-number-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486001,
      "commentCount": 263,
      "topLevelCommentCount": 134
    },
    "classAndMethodDefinition": "def nthUglyNumber(self, n):\n        ugly = [1]"
  },
  {
    "stat": {
      "question_id": 817,
      "question__article__live": true,
      "question__article__slug": "design-hashmap",
      "question__article__has_video_solution": false,
      "question__title": "Design HashMap",
      "question__title_slug": "design-hashmap",
      "question__hide": false,
      "total_acs": 602275,
      "total_submitted": 918201,
      "frontend_question_id": 706,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/design-hashmap",
      "questionId": "817",
      "questionFrontendId": "706",
      "questionTitle": "Design HashMap",
      "titleSlug": "design-hashmap",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Design a HashMap without using any built-in hash table libraries.</p>\n\n<p>Implement the <code>MyHashMap</code> class:</p>\n\n<ul>\n\t<li><code>MyHashMap()</code> initializes the object with an empty map.</li>\n\t<li><code>void put(int key, int value)</code> inserts a <code>(key, value)</code> pair into the HashMap. If the <code>key</code> already exists in the map, update the corresponding <code>value</code>.</li>\n\t<li><code>int get(int key)</code> returns the <code>value</code> to which the specified <code>key</code> is mapped, or <code>-1</code> if this map contains no mapping for the <code>key</code>.</li>\n\t<li><code>void remove(key)</code> removes the <code>key</code> and its corresponding <code>value</code> if the map contains the mapping for the <code>key</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyHashMap&quot;, &quot;put&quot;, &quot;put&quot;, &quot;get&quot;, &quot;get&quot;, &quot;put&quot;, &quot;get&quot;, &quot;remove&quot;, &quot;get&quot;]\n[[], [1, 1], [2, 2], [1], [3], [2, 1], [2], [2], [2]]\n<strong>Output</strong>\n[null, null, null, 1, -1, null, 1, null, -1]\n\n<strong>Explanation</strong>\nMyHashMap myHashMap = new MyHashMap();\nmyHashMap.put(1, 1); // The map is now [[1,1]]\nmyHashMap.put(2, 2); // The map is now [[1,1], [2,2]]\nmyHashMap.get(1);    // return 1, The map is now [[1,1], [2,2]]\nmyHashMap.get(3);    // return -1 (i.e., not found), The map is now [[1,1], [2,2]]\nmyHashMap.put(2, 1); // The map is now [[1,1], [2,1]] (i.e., update the existing value)\nmyHashMap.get(2);    // return 1, The map is now [[1,1], [2,1]]\nmyHashMap.remove(2); // remove the mapping for 2, The map is now [[1,1]]\nmyHashMap.get(2);    // return -1 (i.e., not found), The map is now [[1,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= key, value &lt;= 10<sup>6</sup></code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>put</code>, <code>get</code>, and <code>remove</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"MyHashMap\",\"put\",\"put\",\"get\",\"get\",\"put\",\"get\",\"remove\",\"get\"]\n[[],[1,1],[2,2],[1],[3],[2,1],[2],[2],[2]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Hash Function",
          "slug": "hash-function",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "842",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5119,
      "dislikes": 468,
      "similarQuestions": "[{\"title\": \"Design HashSet\", \"titleSlug\": \"design-hashset\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Design Skiplist\", \"titleSlug\": \"design-skiplist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486529,
      "commentCount": 146,
      "topLevelCommentCount": 80
    },
    "classAndMethodDefinition": "def __init__(self):\n        self.data = [None] * 1000001"
  },
  {
    "stat": {
      "question_id": 1421,
      "question__article__live": true,
      "question__article__slug": "find-numbers-with-even-number-of-digits",
      "question__article__has_video_solution": false,
      "question__title": "Find Numbers with Even Number of Digits",
      "question__title_slug": "find-numbers-with-even-number-of-digits",
      "question__hide": false,
      "total_acs": 708410,
      "total_submitted": 914901,
      "frontend_question_id": 1295,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-numbers-with-even-number-of-digits",
      "questionId": "1421",
      "questionFrontendId": "1295",
      "questionTitle": "Find Numbers with Even Number of Digits",
      "titleSlug": "find-numbers-with-even-number-of-digits",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code> of integers, return how many of them contain an <strong>even number</strong> of digits.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [12,345,2,6,7896]\n<strong>Output:</strong> 2\n<strong>Explanation: \n</strong>12 contains 2 digits (even number of digits).&nbsp;\n345 contains 3 digits (odd number of digits).&nbsp;\n2 contains 1 digit (odd number of digits).&nbsp;\n6 contains 1 digit (odd number of digits).&nbsp;\n7896 contains 4 digits (even number of digits).&nbsp;\nTherefore only 12 and 7896 contain an even number of digits.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [555,901,482,1771]\n<strong>Output:</strong> 1 \n<strong>Explanation: </strong>\nOnly 1771 contains an even number of digits.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[12,345,2,6,7896]\n[555,901,482,1771]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [
        "How to compute the number of digits of a number ?",
        "Divide the number by 10 again and again to get the number of digits."
      ],
      "solution": {
        "id": "2048",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2396,
      "dislikes": 129,
      "similarQuestions": "[{\"title\": \"Finding 3-Digit Even Numbers\", \"titleSlug\": \"finding-3-digit-even-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Even and Odd Bits\", \"titleSlug\": \"number-of-even-and-odd-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find if Digit Game Can Be Won\", \"titleSlug\": \"find-if-digit-game-can-be-won\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487113,
      "commentCount": 38,
      "topLevelCommentCount": 34
    },
    "classAndMethodDefinition": "def findNumbers(self, nums: List[int]) -> int:\n        return len([i for i in nums if len(str(i)) % 2 == 0])"
  },
  {
    "stat": {
      "question_id": 301,
      "question__article__live": true,
      "question__article__slug": "remove-invalid-parentheses",
      "question__article__has_video_solution": false,
      "question__title": "Remove Invalid Parentheses",
      "question__title_slug": "remove-invalid-parentheses",
      "question__hide": false,
      "total_acs": 441902,
      "total_submitted": 911262,
      "frontend_question_id": 301,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-invalid-parentheses",
      "questionId": "301",
      "questionFrontendId": "301",
      "questionTitle": "Remove Invalid Parentheses",
      "titleSlug": "remove-invalid-parentheses",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> that contains parentheses and letters, remove the minimum number of invalid parentheses to make the input string valid.</p>\n\n<p>Return <em>a list of <strong>unique strings</strong> that are valid with the minimum number of removals</em>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;()())()&quot;\n<strong>Output:</strong> [&quot;(())()&quot;,&quot;()()()&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(a)())()&quot;\n<strong>Output:</strong> [&quot;(a())()&quot;,&quot;(a)()()&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;)(&quot;\n<strong>Output:</strong> [&quot;&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 25</code></li>\n\t<li><code>s</code> consists of lowercase English letters and parentheses <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code>.</li>\n\t<li>There will be at most <code>20</code> parentheses in <code>s</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"()())()\"\n\"(a)())()\"\n\")(\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        }
      ],
      "hints": [
        "Since we do not know which brackets can be removed, we try all the options! We can use recursion.",
        "In the recursion, for each bracket, we can either use it or remove it.",
        "Recursion will generate all the valid parentheses strings but we want the ones with the least number of parentheses deleted.",
        "We can count the number of invalid brackets to be deleted and only generate the valid strings in the recusrion."
      ],
      "solution": {
        "id": "577",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5868,
      "dislikes": 287,
      "similarQuestions": "[{\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Swaps to Make the String Balanced\", \"titleSlug\": \"minimum-number-of-swaps-to-make-the-string-balanced\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486038,
      "commentCount": 35,
      "topLevelCommentCount": 22
    },
    "classAndMethodDefinition": "def removeInvalidParentheses(self, s):\n        level = {s}"
  },
  {
    "stat": {
      "question_id": 581,
      "question__article__live": true,
      "question__article__slug": "shortest-unsorted-continous-subarray",
      "question__article__has_video_solution": false,
      "question__title": "Shortest Unsorted Continuous Subarray",
      "question__title_slug": "shortest-unsorted-continuous-subarray",
      "question__hide": false,
      "total_acs": 335913,
      "total_submitted": 907189,
      "frontend_question_id": 581,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray",
      "questionId": "581",
      "questionFrontendId": "581",
      "questionTitle": "Shortest Unsorted Continuous Subarray",
      "titleSlug": "shortest-unsorted-continuous-subarray",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, you need to find one <b>continuous subarray</b> such that if you only sort this subarray in non-decreasing order, then the whole array will be sorted in non-decreasing order.</p>\n\n<p>Return <em>the shortest such subarray and output its length</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,6,4,8,10,9,15]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Can you solve it in <code>O(n)</code> time complexity?",
      "exampleTestcases": "[2,6,4,8,10,9,15]\n[1,2,3,4]\n[1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "136",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7763,
      "dislikes": 262,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486308,
      "commentCount": 26,
      "topLevelCommentCount": 21
    },
    "classAndMethodDefinition": "def findUnsortedSubarray(self, N: List[int]) -> int:\n        lenN, left, right = len(N) - 1, -1, -1"
  },
  {
    "stat": {
      "question_id": 417,
      "question__article__live": true,
      "question__article__slug": "pacific-atlantic-water-flow",
      "question__article__has_video_solution": false,
      "question__title": "Pacific Atlantic Water Flow",
      "question__title_slug": "pacific-atlantic-water-flow",
      "question__hide": false,
      "total_acs": 503974,
      "total_submitted": 902080,
      "frontend_question_id": 417,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/pacific-atlantic-water-flow",
      "questionId": "417",
      "questionFrontendId": "417",
      "questionTitle": "Pacific Atlantic Water Flow",
      "titleSlug": "pacific-atlantic-water-flow",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is an <code>m x n</code> rectangular island that borders both the <strong>Pacific Ocean</strong> and <strong>Atlantic Ocean</strong>. The <strong>Pacific Ocean</strong> touches the island&#39;s left and top edges, and the <strong>Atlantic Ocean</strong> touches the island&#39;s right and bottom edges.</p>\n\n<p>The island is partitioned into a grid of square cells. You are given an <code>m x n</code> integer matrix <code>heights</code> where <code>heights[r][c]</code> represents the <strong>height above sea level</strong> of the cell at coordinate <code>(r, c)</code>.</p>\n\n<p>The island receives a lot of rain, and the rain water can flow to neighboring cells directly north, south, east, and west if the neighboring cell&#39;s height is <strong>less than or equal to</strong> the current cell&#39;s height. Water can flow from any cell adjacent to an ocean into the ocean.</p>\n\n<p>Return <em>a <strong>2D list</strong> of grid coordinates </em><code>result</code><em> where </em><code>result[i] = [r<sub>i</sub>, c<sub>i</sub>]</code><em> denotes that rain water can flow from cell </em><code>(r<sub>i</sub>, c<sub>i</sub>)</code><em> to <strong>both</strong> the Pacific and Atlantic oceans</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/06/08/waterflow-grid.jpg\" style=\"width: 400px; height: 400px;\" />\n<pre>\n<strong>Input:</strong> heights = [[1,2,2,3,5],[3,2,3,4,4],[2,4,5,3,1],[6,7,1,4,5],[5,1,1,2,4]]\n<strong>Output:</strong> [[0,4],[1,3],[1,4],[2,2],[3,0],[3,1],[4,0]]\n<strong>Explanation:</strong> The following cells can flow to the Pacific and Atlantic oceans, as shown below:\n[0,4]: [0,4] -&gt; Pacific Ocean \n&nbsp;      [0,4] -&gt; Atlantic Ocean\n[1,3]: [1,3] -&gt; [0,3] -&gt; Pacific Ocean \n&nbsp;      [1,3] -&gt; [1,4] -&gt; Atlantic Ocean\n[1,4]: [1,4] -&gt; [1,3] -&gt; [0,3] -&gt; Pacific Ocean \n&nbsp;      [1,4] -&gt; Atlantic Ocean\n[2,2]: [2,2] -&gt; [1,2] -&gt; [0,2] -&gt; Pacific Ocean \n&nbsp;      [2,2] -&gt; [2,3] -&gt; [2,4] -&gt; Atlantic Ocean\n[3,0]: [3,0] -&gt; Pacific Ocean \n&nbsp;      [3,0] -&gt; [4,0] -&gt; Atlantic Ocean\n[3,1]: [3,1] -&gt; [3,0] -&gt; Pacific Ocean \n&nbsp;      [3,1] -&gt; [4,1] -&gt; Atlantic Ocean\n[4,0]: [4,0] -&gt; Pacific Ocean \n       [4,0] -&gt; Atlantic Ocean\nNote that there are other possible paths for these cells to flow to the Pacific and Atlantic oceans.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [[1]]\n<strong>Output:</strong> [[0,0]]\n<strong>Explanation:</strong> The water can flow from the only cell to the Pacific and Atlantic oceans.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == heights.length</code></li>\n\t<li><code>n == heights[r].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>0 &lt;= heights[r][c] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2,2,3,5],[3,2,3,4,4],[2,4,5,3,1],[6,7,1,4,5],[5,1,1,2,4]]\n[[1]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1113",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7455,
      "dislikes": 1495,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486154,
      "commentCount": 152,
      "topLevelCommentCount": 98
    },
    "classAndMethodDefinition": "def pacificAtlantic(self, matrix: List[List[int]]) -> List[List[int]]:\n    if not matrix:"
  },
  {
    "stat": {
      "question_id": 463,
      "question__article__live": true,
      "question__article__slug": "island-perimeter",
      "question__article__has_video_solution": false,
      "question__title": "Island Perimeter",
      "question__title_slug": "island-perimeter",
      "question__hide": false,
      "total_acs": 658081,
      "total_submitted": 901027,
      "frontend_question_id": 463,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/island-perimeter",
      "questionId": "463",
      "questionFrontendId": "463",
      "questionTitle": "Island Perimeter",
      "titleSlug": "island-perimeter",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given <code>row x col</code> <code>grid</code> representing a map where <code>grid[i][j] = 1</code> represents&nbsp;land and <code>grid[i][j] = 0</code> represents water.</p>\n\n<p>Grid cells are connected <strong>horizontally/vertically</strong> (not diagonally). The <code>grid</code> is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells).</p>\n\n<p>The island doesn&#39;t have &quot;lakes&quot;, meaning the water inside isn&#39;t connected to the water around the island. One cell is a square with side length 1. The grid is rectangular, width and height don&#39;t exceed 100. Determine the perimeter of the island.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/island.png\" style=\"width: 221px; height: 213px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,1,0,0],[1,1,1,0],[0,1,0,0],[1,1,0,0]]\n<strong>Output:</strong> 16\n<strong>Explanation:</strong> The perimeter is the 16 yellow stripes in the image above.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0]]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>row == grid.length</code></li>\n\t<li><code>col == grid[i].length</code></li>\n\t<li><code>1 &lt;= row, col &lt;= 100</code></li>\n\t<li><code>grid[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n\t<li>There is exactly one island in <code>grid</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[0,1,0,0],[1,1,1,0],[0,1,0,0],[1,1,0,0]]\n[[1]]\n[[1,0]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "961",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6858,
      "dislikes": 390,
      "similarQuestions": "[{\"title\": \"Max Area of Island\", \"titleSlug\": \"max-area-of-island\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flood Fill\", \"titleSlug\": \"flood-fill\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Coloring A Border\", \"titleSlug\": \"coloring-a-border\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486194,
      "commentCount": 244,
      "topLevelCommentCount": 132
    },
    "classAndMethodDefinition": "class Solution:\n    def islandPerimeter(self, grid: List[List[int]]) -> int:"
  },
  {
    "stat": {
      "question_id": 1319,
      "question__article__live": true,
      "question__article__slug": "unique-number-of-occurrences",
      "question__article__has_video_solution": true,
      "question__title": "Unique Number of Occurrences",
      "question__title_slug": "unique-number-of-occurrences",
      "question__hide": false,
      "total_acs": 687039,
      "total_submitted": 887120,
      "frontend_question_id": 1207,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/unique-number-of-occurrences",
      "questionId": "1319",
      "questionFrontendId": "1207",
      "questionTitle": "Unique Number of Occurrences",
      "titleSlug": "unique-number-of-occurrences",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>arr</code>, return <code>true</code> <em>if the number of occurrences of each value in the array is <strong>unique</strong> or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,2,1,1,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [-3,0,1,-3,1,1,1,-3,10,0]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= arr[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,2,1,1,3]\n[1,2]\n[-3,0,1,-3,1,1,1,-3,10,0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        }
      ],
      "hints": [
        "Find the number of occurrences of each element in the array using a hash map.",
        "Iterate through the hash map and check if there is a repeated value."
      ],
      "solution": {
        "id": "1593",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5105,
      "dislikes": 137,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487013,
      "commentCount": 358,
      "topLevelCommentCount": 207
    },
    "classAndMethodDefinition": "class Solution:\n    def uniqueOccurrences(self, arr: List[int]) -> bool:"
  },
  {
    "stat": {
      "question_id": 99,
      "question__article__live": true,
      "question__article__slug": "recover-binary-search-tree",
      "question__article__has_video_solution": false,
      "question__title": "Recover Binary Search Tree",
      "question__title_slug": "recover-binary-search-tree",
      "question__hide": false,
      "total_acs": 478970,
      "total_submitted": 885194,
      "frontend_question_id": 99,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/recover-binary-search-tree",
      "questionId": "99",
      "questionFrontendId": "99",
      "questionTitle": "Recover Binary Search Tree",
      "titleSlug": "recover-binary-search-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given the <code>root</code> of a binary search tree (BST), where the values of <strong>exactly</strong> two nodes of the tree were swapped by mistake. <em>Recover the tree without changing its structure</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/28/recover1.jpg\" style=\"width: 422px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [1,3,null,null,2]\n<strong>Output:</strong> [3,1,null,null,2]\n<strong>Explanation:</strong> 3 cannot be a left child of 1 because 3 &gt; 1. Swapping 1 and 3 makes the BST valid.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/28/recover2.jpg\" style=\"width: 581px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,1,4,null,null,2]\n<strong>Output:</strong> [2,1,4,null,null,3]\n<strong>Explanation:</strong> 2 cannot be in the right subtree of 3 because 2 &lt; 3. Swapping 2 and 3 makes the BST valid.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 1000]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> A solution using <code>O(n)</code> space is pretty straight-forward. Could you devise a constant <code>O(1)</code> space solution?",
      "exampleTestcases": "[1,3,null,null,2]\n[3,1,4,null,null,2]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "746",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7954,
      "dislikes": 260,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485836,
      "commentCount": 77,
      "topLevelCommentCount": 49
    },
    "classAndMethodDefinition": "def __init__(self, val, left=None, right=None):\n            self.val = val"
  },
  {
    "stat": {
      "question_id": 303,
      "question__article__live": true,
      "question__article__slug": "range-sum-query-immutable",
      "question__article__has_video_solution": true,
      "question__title": "Range Sum Query - Immutable",
      "question__title_slug": "range-sum-query-immutable",
      "question__hide": false,
      "total_acs": 569607,
      "total_submitted": 880381,
      "frontend_question_id": 303,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/range-sum-query-immutable",
      "questionId": "303",
      "questionFrontendId": "303",
      "questionTitle": "Range Sum Query - Immutable",
      "titleSlug": "range-sum-query-immutable",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, handle multiple queries of the following type:</p>\n\n<ol>\n\t<li>Calculate the <strong>sum</strong> of the elements of <code>nums</code> between indices <code>left</code> and <code>right</code> <strong>inclusive</strong> where <code>left &lt;= right</code>.</li>\n</ol>\n\n<p>Implement the <code>NumArray</code> class:</p>\n\n<ul>\n\t<li><code>NumArray(int[] nums)</code> Initializes the object with the integer array <code>nums</code>.</li>\n\t<li><code>int sumRange(int left, int right)</code> Returns the <strong>sum</strong> of the elements of <code>nums</code> between indices <code>left</code> and <code>right</code> <strong>inclusive</strong> (i.e. <code>nums[left] + nums[left + 1] + ... + nums[right]</code>).</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;NumArray&quot;, &quot;sumRange&quot;, &quot;sumRange&quot;, &quot;sumRange&quot;]\n[[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]\n<strong>Output</strong>\n[null, 1, -1, -3]\n\n<strong>Explanation</strong>\nNumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);\nnumArray.sumRange(0, 2); // return (-2) + 0 + 3 = 1\nnumArray.sumRange(2, 5); // return 3 + (-5) + 2 + (-1) = -1\nnumArray.sumRange(0, 5); // return (-2) + 0 + 3 + (-5) + 2 + (-1) = -3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= left &lt;= right &lt; nums.length</code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>sumRange</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"NumArray\",\"sumRange\",\"sumRange\",\"sumRange\"]\n[[[-2,0,3,-5,2,-1]],[0,2],[2,5],[0,5]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "9",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3267,
      "dislikes": 1916,
      "similarQuestions": "[{\"title\": \"Range Sum Query 2D - Immutable\", \"titleSlug\": \"range-sum-query-2d-immutable\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query - Mutable\", \"titleSlug\": \"range-sum-query-mutable\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486040,
      "commentCount": 41,
      "topLevelCommentCount": 23
    },
    "classAndMethodDefinition": "def __init__(self, nums: List[int]):\n        self.sum = []"
  },
  {
    "stat": {
      "question_id": 60,
      "question__article__live": true,
      "question__article__slug": "permutation-sequence",
      "question__article__has_video_solution": false,
      "question__title": "Permutation Sequence",
      "question__title_slug": "permutation-sequence",
      "question__hide": false,
      "total_acs": 420209,
      "total_submitted": 876673,
      "frontend_question_id": 60,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/permutation-sequence",
      "questionId": "60",
      "questionFrontendId": "60",
      "questionTitle": "Permutation Sequence",
      "titleSlug": "permutation-sequence",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>The set <code>[1, 2, 3, ...,&nbsp;n]</code> contains a total of <code>n!</code> unique permutations.</p>\n\n<p>By listing and labeling all of the permutations in order, we get the following sequence for <code>n = 3</code>:</p>\n\n<ol>\n\t<li><code>&quot;123&quot;</code></li>\n\t<li><code>&quot;132&quot;</code></li>\n\t<li><code>&quot;213&quot;</code></li>\n\t<li><code>&quot;231&quot;</code></li>\n\t<li><code>&quot;312&quot;</code></li>\n\t<li><code>&quot;321&quot;</code></li>\n</ol>\n\n<p>Given <code>n</code> and <code>k</code>, return the <code>k<sup>th</sup></code> permutation sequence.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 3\n<strong>Output:</strong> \"213\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 4, k = 9\n<strong>Output:</strong> \"2314\"\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 1\n<strong>Output:</strong> \"123\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 9</code></li>\n\t<li><code>1 &lt;= k &lt;= n!</code></li>\n</ul>\n",
      "exampleTestcases": "3\n3\n4\n9\n3\n1",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "850",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6716,
      "dislikes": 482,
      "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485797,
      "commentCount": 81,
      "topLevelCommentCount": 45
    },
    "classAndMethodDefinition": "def getPermutation(self, n, k):\n            numbers = range(1, n+1)"
  },
  {
    "stat": {
      "question_id": 109,
      "question__article__live": true,
      "question__article__slug": "convert-sorted-list-to-binary-search-tree",
      "question__article__has_video_solution": false,
      "question__title": "Convert Sorted List to Binary Search Tree",
      "question__title_slug": "convert-sorted-list-to-binary-search-tree",
      "question__hide": false,
      "total_acs": 545783,
      "total_submitted": 871438,
      "frontend_question_id": 109,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",
      "questionId": "109",
      "questionFrontendId": "109",
      "questionTitle": "Convert Sorted List to Binary Search Tree",
      "titleSlug": "convert-sorted-list-to-binary-search-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a singly linked list where elements are sorted in <strong>ascending order</strong>, convert <em>it to a </em><span data-keyword=\"height-balanced\"><strong><em>height-balanced</em></strong></span> <em>binary search tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/linked.jpg\" style=\"width: 500px; height: 388px;\" />\n<pre>\n<strong>Input:</strong> head = [-10,-3,0,5,9]\n<strong>Output:</strong> [0,-3,9,-10,null,5]\n<strong>Explanation:</strong> One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in <code>head</code> is in the range <code>[0, 2 * 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[-10,-3,0,5,9]\n[]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "614",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7485,
      "dislikes": 162,
      "similarQuestions": "[{\"title\": \"Convert Sorted Array to Binary Search Tree\", \"titleSlug\": \"convert-sorted-array-to-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Create Binary Tree From Descriptions\", \"titleSlug\": \"create-binary-tree-from-descriptions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485846,
      "commentCount": 98,
      "topLevelCommentCount": 51
    },
    "classAndMethodDefinition": "def sortedListToBST(self, head):\n        if not head:"
  },
  {
    "stat": {
      "question_id": 201,
      "question__article__live": true,
      "question__article__slug": "bitwise-and-of-numbers-range",
      "question__article__has_video_solution": false,
      "question__title": "Bitwise AND of Numbers Range",
      "question__title_slug": "bitwise-and-of-numbers-range",
      "question__hide": false,
      "total_acs": 411260,
      "total_submitted": 871230,
      "frontend_question_id": 201,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/bitwise-and-of-numbers-range",
      "questionId": "201",
      "questionFrontendId": "201",
      "questionTitle": "Bitwise AND of Numbers Range",
      "titleSlug": "bitwise-and-of-numbers-range",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two integers <code>left</code> and <code>right</code> that represent the range <code>[left, right]</code>, return <em>the bitwise AND of all numbers in this range, inclusive</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> left = 5, right = 7\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> left = 0, right = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> left = 1, right = 2147483647\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= left &lt;= right &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "5\n7\n0\n0\n1\n2147483647",
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "866",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4025,
      "dislikes": 303,
      "similarQuestions": "[{\"title\": \"Longest Nice Subarray\", \"titleSlug\": \"longest-nice-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485938,
      "commentCount": 130,
      "topLevelCommentCount": 76
    },
    "classAndMethodDefinition": "class Solution:\n    def rangeBitwiseAnd(self, left: int, right: int) -> int:"
  },
  {
    "stat": {
      "question_id": 132,
      "question__article__live": true,
      "question__article__slug": "palindrome-partitioning-ii",
      "question__article__has_video_solution": false,
      "question__title": "Palindrome Partitioning II",
      "question__title_slug": "palindrome-partitioning-ii",
      "question__hide": false,
      "total_acs": 298202,
      "total_submitted": 870025,
      "frontend_question_id": 132,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/palindrome-partitioning-ii",
      "questionId": "132",
      "questionFrontendId": "132",
      "questionTitle": "Palindrome Partitioning II",
      "titleSlug": "palindrome-partitioning-ii",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, partition <code>s</code> such that every <span data-keyword=\"substring-nonempty\">substring</span> of the partition is a <span data-keyword=\"palindrome-string\">palindrome</span>.</p>\n\n<p>Return <em>the <strong>minimum</strong> cuts needed for a palindrome partitioning of</em> <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aab&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The palindrome partitioning [&quot;aa&quot;,&quot;b&quot;] could be produced using 1 cut.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ab&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 2000</code></li>\n\t<li><code>s</code> consists of lowercase English letters only.</li>\n</ul>\n",
      "exampleTestcases": "\"aab\"\n\"a\"\n\"ab\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1151",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5488,
      "dislikes": 139,
      "similarQuestions": "[{\"title\": \"Palindrome Partitioning\", \"titleSlug\": \"palindrome-partitioning\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Partitioning IV\", \"titleSlug\": \"palindrome-partitioning-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Non-overlapping Palindrome Substrings\", \"titleSlug\": \"maximum-number-of-non-overlapping-palindrome-substrings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Great Partitions\", \"titleSlug\": \"number-of-great-partitions\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485869,
      "commentCount": 93,
      "topLevelCommentCount": 52
    },
    "classAndMethodDefinition": "def minCut(self, s):\n        # acceleration"
  },
  {
    "stat": {
      "question_id": 1128,
      "question__article__live": true,
      "question__article__slug": "remove-all-adjacent-duplicates-in-string",
      "question__article__has_video_solution": false,
      "question__title": "Remove All Adjacent Duplicates In String",
      "question__title_slug": "remove-all-adjacent-duplicates-in-string",
      "question__hide": false,
      "total_acs": 606988,
      "total_submitted": 866993,
      "frontend_question_id": 1047,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",
      "questionId": "1128",
      "questionFrontendId": "1047",
      "questionTitle": "Remove All Adjacent Duplicates In String",
      "titleSlug": "remove-all-adjacent-duplicates-in-string",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code> consisting of lowercase English letters. A <strong>duplicate removal</strong> consists of choosing two <strong>adjacent</strong> and <strong>equal</strong> letters and removing them.</p>\n\n<p>We repeatedly make <strong>duplicate removals</strong> on <code>s</code> until we no longer can.</p>\n\n<p>Return <em>the final string after all such duplicate removals have been made</em>. It can be proven that the answer is <strong>unique</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abbaca&quot;\n<strong>Output:</strong> &quot;ca&quot;\n<strong>Explanation:</strong> \nFor example, in &quot;abbaca&quot; we could remove &quot;bb&quot; since the letters are adjacent and equal, and this is the only possible move.  The result of this move is that the string is &quot;aaca&quot;, of which only &quot;aa&quot; is possible, so the final string is &quot;ca&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;azxxzy&quot;\n<strong>Output:</strong> &quot;ay&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abbaca\"\n\"azxxzy\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [
        "Use a stack to process everything greedily."
      ],
      "solution": {
        "id": "743",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6626,
      "dislikes": 260,
      "similarQuestions": "[{\"title\": \"Remove All Adjacent Duplicates in String II\", \"titleSlug\": \"remove-all-adjacent-duplicates-in-string-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Removing Stars From a String\", \"titleSlug\": \"removing-stars-from-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimize String Length\", \"titleSlug\": \"minimize-string-length\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486828,
      "commentCount": 145,
      "topLevelCommentCount": 100
    },
    "classAndMethodDefinition": "def removeDuplicates(self, s: str) -> str:\n        stack=[s[0]]"
  },
  {
    "stat": {
      "question_id": 2121,
      "question__article__live": true,
      "question__article__slug": "find-if-path-exists-in-graph",
      "question__article__has_video_solution": false,
      "question__title": "Find if Path Exists in Graph",
      "question__title_slug": "find-if-path-exists-in-graph",
      "question__hide": false,
      "total_acs": 464033,
      "total_submitted": 859594,
      "frontend_question_id": 1971,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-if-path-exists-in-graph",
      "questionId": "2121",
      "questionFrontendId": "1971",
      "questionTitle": "Find if Path Exists in Graph",
      "titleSlug": "find-if-path-exists-in-graph",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>There is a <strong>bi-directional</strong> graph with <code>n</code> vertices, where each vertex is labeled from <code>0</code> to <code>n - 1</code> (<strong>inclusive</strong>). The edges in the graph are represented as a 2D integer array <code>edges</code>, where each <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code> denotes a bi-directional edge between vertex <code>u<sub>i</sub></code> and vertex <code>v<sub>i</sub></code>. Every vertex pair is connected by <strong>at most one</strong> edge, and no vertex has an edge to itself.</p>\n\n<p>You want to determine if there is a <strong>valid path</strong> that exists from vertex <code>source</code> to vertex <code>destination</code>.</p>\n\n<p>Given <code>edges</code> and the integers <code>n</code>, <code>source</code>, and <code>destination</code>, return <code>true</code><em> if there is a <strong>valid path</strong> from </em><code>source</code><em> to </em><code>destination</code><em>, or </em><code>false</code><em> otherwise</em><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/14/validpath-ex1.png\" style=\"width: 141px; height: 121px;\" />\n<pre>\n<strong>Input:</strong> n = 3, edges = [[0,1],[1,2],[2,0]], source = 0, destination = 2\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There are two paths from vertex 0 to vertex 2:\n- 0 &rarr; 1 &rarr; 2\n- 0 &rarr; 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/14/validpath-ex2.png\" style=\"width: 281px; height: 141px;\" />\n<pre>\n<strong>Input:</strong> n = 6, edges = [[0,1],[0,2],[3,5],[5,4],[4,3]], source = 0, destination = 5\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no path from vertex 0 to vertex 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= edges.length &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>0 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n - 1</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li><code>0 &lt;= source, destination &lt;= n - 1</code></li>\n\t<li>There are no duplicate edges.</li>\n\t<li>There are no self edges.</li>\n</ul>\n",
      "exampleTestcases": "3\n[[0,1],[1,2],[2,0]]\n0\n2\n6\n[[0,1],[0,2],[3,5],[5,4],[4,3]]\n0\n5",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1587",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3893,
      "dislikes": 225,
      "similarQuestions": "[{\"title\": \"Valid Arrangement of Pairs\", \"titleSlug\": \"valid-arrangement-of-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Paths in Maze That Lead to Same Room\", \"titleSlug\": \"paths-in-maze-that-lead-to-same-room\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487777,
      "commentCount": 313,
      "topLevelCommentCount": 177
    },
    "classAndMethodDefinition": "class Solution:\n    def validPath(self, n: int, edges: List[List[int]], source: int, destination: int) -> bool:"
  },
  {
    "stat": {
      "question_id": 59,
      "question__article__live": true,
      "question__article__slug": "spiral-matrix-ii",
      "question__article__has_video_solution": false,
      "question__title": "Spiral Matrix II",
      "question__title_slug": "spiral-matrix-ii",
      "question__hide": false,
      "total_acs": 607106,
      "total_submitted": 844150,
      "frontend_question_id": 59,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/spiral-matrix-ii",
      "questionId": "59",
      "questionFrontendId": "59",
      "questionTitle": "Spiral Matrix II",
      "titleSlug": "spiral-matrix-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a positive integer <code>n</code>, generate an <code>n x n</code> <code>matrix</code> filled with elements from <code>1</code> to <code>n<sup>2</sup></code> in spiral order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> [[1,2,3],[8,9,4],[7,6,5]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n</ul>\n",
      "exampleTestcases": "3\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1003",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6432,
      "dislikes": 265,
      "similarQuestions": "[{\"title\": \"Spiral Matrix\", \"titleSlug\": \"spiral-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Spiral Matrix III\", \"titleSlug\": \"spiral-matrix-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Spiral Matrix IV\", \"titleSlug\": \"spiral-matrix-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485796,
      "commentCount": 67,
      "topLevelCommentCount": 56
    },
    "classAndMethodDefinition": "def generateMatrix(self, n):\n        A, lo = [], n*n+1"
  },
  {
    "stat": {
      "question_id": 1168,
      "question__article__live": true,
      "question__article__slug": "duplicate-zeros",
      "question__article__has_video_solution": false,
      "question__title": "Duplicate Zeros",
      "question__title_slug": "duplicate-zeros",
      "question__hide": false,
      "total_acs": 439258,
      "total_submitted": 842770,
      "frontend_question_id": 1089,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/duplicate-zeros",
      "questionId": "1168",
      "questionFrontendId": "1089",
      "questionTitle": "Duplicate Zeros",
      "titleSlug": "duplicate-zeros",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a fixed-length integer array <code>arr</code>, duplicate each occurrence of zero, shifting the remaining elements to the right.</p>\n\n<p><strong>Note</strong> that elements beyond the length of the original array are not written. Do the above modifications to the input array in place and do not return anything.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,0,2,3,0,4,5,0]\n<strong>Output:</strong> [1,0,0,2,3,0,0,4]\n<strong>Explanation:</strong> After calling your function, the input array is modified to: [1,0,0,2,3,0,0,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3]\n<strong>Output:</strong> [1,2,3]\n<strong>Explanation:</strong> After calling your function, the input array is modified to: [1,2,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 9</code></li>\n</ul>\n",
      "exampleTestcases": "[1,0,2,3,0,4,5,0]\n[1,2,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [
        "This is a great introductory problem for understanding and working with the concept of in-place operations. The problem statement clearly states that we are to modify the array in-place. That does not mean we cannot use another array. We just don't have to return anything.",
        "A better way to solve this would be without using additional space. The only reason the problem statement allows you to make modifications in place is that it hints at avoiding any additional memory.",
        "The main problem with not using additional memory is that we might override elements due to the zero duplication requirement of the problem statement. How do we get around that?",
        "If we had enough space available, we would be able to accommodate all the elements properly. The new length would be the original length of the array plus the number of zeros. Can we use this information somehow to solve the problem?"
      ],
      "solution": {
        "id": "774",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2621,
      "dislikes": 756,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486867,
      "commentCount": 84,
      "topLevelCommentCount": 57
    },
    "classAndMethodDefinition": "def duplicateZeros(self, arr: List[int]) -> None:\n        zeroes = arr.count(0)"
  },
  {
    "stat": {
      "question_id": 516,
      "question__article__live": true,
      "question__article__slug": "longest-palindromic-subsequence",
      "question__article__has_video_solution": false,
      "question__title": "Longest Palindromic Subsequence",
      "question__title_slug": "longest-palindromic-subsequence",
      "question__hide": false,
      "total_acs": 526821,
      "total_submitted": 834936,
      "frontend_question_id": 516,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-palindromic-subsequence",
      "questionId": "516",
      "questionFrontendId": "516",
      "questionTitle": "Longest Palindromic Subsequence",
      "titleSlug": "longest-palindromic-subsequence",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, find <em>the longest palindromic <strong>subsequence</strong>&#39;s length in</em> <code>s</code>.</p>\n\n<p>A <strong>subsequence</strong> is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bbbab&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> One possible longest palindromic subsequence is &quot;bbbb&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cbbd&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> One possible longest palindromic subsequence is &quot;bb&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consists only of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"bbbab\"\n\"cbbd\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1804",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9610,
      "dislikes": 330,
      "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindromic Substrings\", \"titleSlug\": \"palindromic-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Different Palindromic Subsequences\", \"titleSlug\": \"count-different-palindromic-subsequences\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Common Subsequence\", \"titleSlug\": \"longest-common-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Palindromic Subsequence II\", \"titleSlug\": \"longest-palindromic-subsequence-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximize Palindrome Length From Subsequences\", \"titleSlug\": \"maximize-palindrome-length-from-subsequences\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Product of the Length of Two Palindromic Subsequences\", \"titleSlug\": \"maximum-product-of-the-length-of-two-palindromic-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486245,
      "commentCount": 139,
      "topLevelCommentCount": 80
    },
    "classAndMethodDefinition": "class Solution(object):\n    def longestPalindromeSubseq(self, s):"
  },
  {
    "stat": {
      "question_id": 837,
      "question__article__live": true,
      "question__article__slug": "most-common-word",
      "question__article__has_video_solution": false,
      "question__title": "Most Common Word",
      "question__title_slug": "most-common-word",
      "question__hide": false,
      "total_acs": 368663,
      "total_submitted": 831689,
      "frontend_question_id": 819,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/most-common-word",
      "questionId": "837",
      "questionFrontendId": "819",
      "questionTitle": "Most Common Word",
      "titleSlug": "most-common-word",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>paragraph</code> and a string array of the banned words <code>banned</code>, return <em>the most frequent word that is not banned</em>. It is <strong>guaranteed</strong> there is <strong>at least one word</strong> that is not banned, and that the answer is <strong>unique</strong>.</p>\n\n<p>The words in <code>paragraph</code> are <strong>case-insensitive</strong> and the answer should be returned in <strong>lowercase</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> paragraph = &quot;Bob hit a ball, the hit BALL flew far after it was hit.&quot;, banned = [&quot;hit&quot;]\n<strong>Output:</strong> &quot;ball&quot;\n<strong>Explanation:</strong> \n&quot;hit&quot; occurs 3 times, but it is a banned word.\n&quot;ball&quot; occurs twice (and no other word does), so it is the most frequent non-banned word in the paragraph. \nNote that words in the paragraph are not case sensitive,\nthat punctuation is ignored (even if adjacent to words, such as &quot;ball,&quot;), \nand that &quot;hit&quot; isn&#39;t the answer even though it occurs more because it is banned.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> paragraph = &quot;a.&quot;, banned = []\n<strong>Output:</strong> &quot;a&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= paragraph.length &lt;= 1000</code></li>\n\t<li>paragraph consists of English letters, space <code>&#39; &#39;</code>, or one of the symbols: <code>&quot;!?&#39;,;.&quot;</code>.</li>\n\t<li><code>0 &lt;= banned.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= banned[i].length &lt;= 10</code></li>\n\t<li><code>banned[i]</code> consists of only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"Bob hit a ball, the hit BALL flew far after it was hit.\"\n[\"hit\"]\n\"a.\"\n[]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "976",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1712,
      "dislikes": 3062,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486550,
      "commentCount": 39,
      "topLevelCommentCount": 28
    },
    "classAndMethodDefinition": "def mostCommonWord(self, paragraph, banned):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 1444,
      "question__article__live": true,
      "question__article__slug": "number-of-steps-to-reduce-a-number-to-zero",
      "question__article__has_video_solution": true,
      "question__title": "Number of Steps to Reduce a Number to Zero",
      "question__title_slug": "number-of-steps-to-reduce-a-number-to-zero",
      "question__hide": false,
      "total_acs": 706241,
      "total_submitted": 827952,
      "frontend_question_id": 1342,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero",
      "questionId": "1444",
      "questionFrontendId": "1342",
      "questionTitle": "Number of Steps to Reduce a Number to Zero",
      "titleSlug": "number-of-steps-to-reduce-a-number-to-zero",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>num</code>, return <em>the number of steps to reduce it to zero</em>.</p>\n\n<p>In one step, if the current number is even, you have to divide it by <code>2</code>, otherwise, you have to subtract <code>1</code> from it.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 14\n<strong>Output:</strong> 6\n<strong>Explanation:</strong>&nbsp;\nStep 1) 14 is even; divide by 2 and obtain 7.&nbsp;\nStep 2) 7 is odd; subtract 1 and obtain 6.\nStep 3) 6 is even; divide by 2 and obtain 3.&nbsp;\nStep 4) 3 is odd; subtract 1 and obtain 2.&nbsp;\nStep 5) 2 is even; divide by 2 and obtain 1.&nbsp;\nStep 6) 1 is odd; subtract 1 and obtain 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 8\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>&nbsp;\nStep 1) 8 is even; divide by 2 and obtain 4.&nbsp;\nStep 2) 4 is even; divide by 2 and obtain 2.&nbsp;\nStep 3) 2 is even; divide by 2 and obtain 1.&nbsp;\nStep 4) 1 is odd; subtract 1 and obtain 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 123\n<strong>Output:</strong> 12\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "14\n8\n123",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [
        "Simulate the process to get the final answer."
      ],
      "solution": {
        "id": "892",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3975,
      "dislikes": 170,
      "similarQuestions": "[{\"title\": \"Minimum Moves to Reach Target Score\", \"titleSlug\": \"minimum-moves-to-reach-target-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Operations to Obtain Zero\", \"titleSlug\": \"count-operations-to-obtain-zero\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487136,
      "commentCount": 46,
      "topLevelCommentCount": 33
    },
    "classAndMethodDefinition": "def numberOfSteps (self, num: int) -> int:\n        count = 0"
  },
  {
    "stat": {
      "question_id": 713,
      "question__article__live": true,
      "question__article__slug": "subarray-product-less-than-k",
      "question__article__has_video_solution": false,
      "question__title": "Subarray Product Less Than K",
      "question__title_slug": "subarray-product-less-than-k",
      "question__hide": false,
      "total_acs": 427125,
      "total_submitted": 825714,
      "frontend_question_id": 713,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/subarray-product-less-than-k",
      "questionId": "713",
      "questionFrontendId": "713",
      "questionTitle": "Subarray Product Less Than K",
      "titleSlug": "subarray-product-less-than-k",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code> and an integer <code>k</code>, return <em>the number of contiguous subarrays where the product of all the elements in the subarray is strictly less than </em><code>k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,5,2,6], k = 100\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> The 8 subarrays that have product less than 100 are:\n[10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6]\nNote that [10, 5, 2] is not included as the product of 100 is not strictly less than k.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3], k = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[10,5,2,6]\n100\n[1,2,3]\n0",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [
        "For each j, let opt(j) be the smallest i so that nums[i] * nums[i+1] * ... * nums[j] is less than k.  opt is an increasing function."
      ],
      "solution": {
        "id": "2274",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6875,
      "dislikes": 220,
      "similarQuestions": "[{\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Smooth Descent Periods of a Stock\", \"titleSlug\": \"number-of-smooth-descent-periods-of-a-stock\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486425,
      "commentCount": 181,
      "topLevelCommentCount": 101
    },
    "classAndMethodDefinition": "class Solution:\n    def numSubarrayProductLessThanK(self, nums: List[int], k: int) -> int:"
  },
  {
    "stat": {
      "question_id": 1580,
      "question__article__live": true,
      "question__article__slug": "shuffle-the-array",
      "question__article__has_video_solution": false,
      "question__title": "Shuffle the Array",
      "question__title_slug": "shuffle-the-array",
      "question__hide": false,
      "total_acs": 729546,
      "total_submitted": 823320,
      "frontend_question_id": 1470,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/shuffle-the-array",
      "questionId": "1580",
      "questionFrontendId": "1470",
      "questionTitle": "Shuffle the Array",
      "titleSlug": "shuffle-the-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the array <code>nums</code> consisting of <code>2n</code> elements in the form <code>[x<sub>1</sub>,x<sub>2</sub>,...,x<sub>n</sub>,y<sub>1</sub>,y<sub>2</sub>,...,y<sub>n</sub>]</code>.</p>\r\n\r\n<p><em>Return the array in the form</em> <code>[x<sub>1</sub>,y<sub>1</sub>,x<sub>2</sub>,y<sub>2</sub>,...,x<sub>n</sub>,y<sub>n</sub>]</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [2,5,1,3,4,7], n = 3\r\n<strong>Output:</strong> [2,3,5,4,1,7] \r\n<strong>Explanation:</strong> Since x<sub>1</sub>=2, x<sub>2</sub>=5, x<sub>3</sub>=1, y<sub>1</sub>=3, y<sub>2</sub>=4, y<sub>3</sub>=7 then the answer is [2,3,5,4,1,7].\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,2,3,4,4,3,2,1], n = 4\r\n<strong>Output:</strong> [1,4,2,3,3,2,4,1]\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,1,2,2], n = 2\r\n<strong>Output:</strong> [1,2,1,2]\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\r\n\t<li><code>nums.length == 2n</code></li>\r\n\t<li><code>1 &lt;= nums[i] &lt;= 10^3</code></li>\r\n</ul>",
      "exampleTestcases": "[2,5,1,3,4,7]\n3\n[1,2,3,4,4,3,2,1]\n4\n[1,1,2,2]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [
        "Use two pointers to create the new array of 2n elements. The first starting at the beginning and the other starting at (n+1)th position. Alternate between them and create the new array."
      ],
      "solution": {
        "id": "1668",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5782,
      "dislikes": 310,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487271,
      "commentCount": 180,
      "topLevelCommentCount": 110
    },
    "classAndMethodDefinition": "def shuffle(self, nums: List[int], n: int) -> List[int]:\n \\xA0 \\xA0 \\xA0 \\xA0res = []"
  },
  {
    "stat": {
      "question_id": 532,
      "question__article__live": true,
      "question__article__slug": "k-diff-pairs-in-an-array",
      "question__article__has_video_solution": false,
      "question__title": "K-diff Pairs in an Array",
      "question__title_slug": "k-diff-pairs-in-an-array",
      "question__hide": false,
      "total_acs": 352572,
      "total_submitted": 813376,
      "frontend_question_id": 532,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/k-diff-pairs-in-an-array",
      "questionId": "532",
      "questionFrontendId": "532",
      "questionTitle": "K-diff Pairs in an Array",
      "titleSlug": "k-diff-pairs-in-an-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code> and an integer <code>k</code>, return <em>the number of <b>unique</b> k-diff pairs in the array</em>.</p>\n\n<p>A <strong>k-diff</strong> pair is an integer pair <code>(nums[i], nums[j])</code>, where the following are true:</p>\n\n<ul>\n\t<li><code>0 &lt;= i, j &lt; nums.length</code></li>\n\t<li><code>i != j</code></li>\n\t<li><code>|nums[i] - nums[j]| == k</code></li>\n</ul>\n\n<p><strong>Notice</strong> that <code>|val|</code> denotes the absolute value of <code>val</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,4,1,5], k = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two 2-diff pairs in the array, (1, 3) and (3, 5).\nAlthough we have two 1s in the input, we should only return the number of <strong>unique</strong> pairs.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5], k = 1\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,1,5,4], k = 0\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> There is one 0-diff pair in the array, (1, 1).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>7</sup> &lt;= nums[i] &lt;= 10<sup>7</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>7</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,1,4,1,5]\n2\n[1,2,3,4,5]\n1\n[1,3,1,5,4]\n0",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "973",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3889,
      "dislikes": 2256,
      "similarQuestions": "[{\"title\": \"Minimum Absolute Difference in BST\", \"titleSlug\": \"minimum-absolute-difference-in-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Product of Two Sorted Arrays\", \"titleSlug\": \"kth-smallest-product-of-two-sorted-arrays\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Number of Bad Pairs\", \"titleSlug\": \"count-number-of-bad-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs Satisfying Inequality\", \"titleSlug\": \"number-of-pairs-satisfying-inequality\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Absolute Difference Between Elements With Constraint\", \"titleSlug\": \"minimum-absolute-difference-between-elements-with-constraint\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486261,
      "commentCount": 32,
      "topLevelCommentCount": 22
    },
    "classAndMethodDefinition": "def findPairs(self, nums: List[int], k: int) -> int:\n        cnt=0"
  },
  {
    "stat": {
      "question_id": 2216,
      "question__article__live": true,
      "question__article__slug": "delete-the-middle-node-of-a-linked-list",
      "question__article__has_video_solution": false,
      "question__title": "Delete the Middle Node of a Linked List",
      "question__title_slug": "delete-the-middle-node-of-a-linked-list",
      "question__hide": false,
      "total_acs": 482928,
      "total_submitted": 811009,
      "frontend_question_id": 2095,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list",
      "questionId": "2216",
      "questionFrontendId": "2095",
      "questionTitle": "Delete the Middle Node of a Linked List",
      "titleSlug": "delete-the-middle-node-of-a-linked-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given the <code>head</code> of a linked list. <strong>Delete</strong> the <strong>middle node</strong>, and return <em>the</em> <code>head</code> <em>of the modified linked list</em>.</p>\n\n<p>The <strong>middle node</strong> of a linked list of size <code>n</code> is the <code>&lfloor;n / 2&rfloor;<sup>th</sup></code> node from the <b>start</b> using <strong>0-based indexing</strong>, where <code>&lfloor;x&rfloor;</code> denotes the largest integer less than or equal to <code>x</code>.</p>\n\n<ul>\n\t<li>For <code>n</code> = <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, and <code>5</code>, the middle nodes are <code>0</code>, <code>1</code>, <code>1</code>, <code>2</code>, and <code>2</code>, respectively.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/11/16/eg1drawio.png\" style=\"width: 500px; height: 77px;\" />\n<pre>\n<strong>Input:</strong> head = [1,3,4,7,1,2,6]\n<strong>Output:</strong> [1,3,4,1,2,6]\n<strong>Explanation:</strong>\nThe above figure represents the given linked list. The indices of the nodes are written below.\nSince n = 7, node 3 with value 7 is the middle node, which is marked in red.\nWe return the new list after removing this node. \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/11/16/eg2drawio.png\" style=\"width: 250px; height: 43px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4]\n<strong>Output:</strong> [1,2,4]\n<strong>Explanation:</strong>\nThe above figure represents the given linked list.\nFor n = 4, node 2 with value 3 is the middle node, which is marked in red.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/11/16/eg3drawio.png\" style=\"width: 150px; height: 58px;\" />\n<pre>\n<strong>Input:</strong> head = [2,1]\n<strong>Output:</strong> [2]\n<strong>Explanation:</strong>\nThe above figure represents the given linked list.\nFor n = 2, node 1 with value 1 is the middle node, which is marked in red.\nNode 0 with value 2 is the only node remaining after removing node 1.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[1, 10<sup>5</sup>]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,4,7,1,2,6]\n[1,2,3,4]\n[2,1]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [
        "If a point with a speed s moves n units in a given time, a point with speed 2 * s will move 2 * n units at the same time. Can you use this to find the middle node of a linked list?",
        "If you are given the middle node, the node before it, and the node after it, how can you modify the linked list?"
      ],
      "solution": {
        "id": "1583",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4217,
      "dislikes": 81,
      "similarQuestions": "[{\"title\": \"Remove Nth Node From End of List\", \"titleSlug\": \"remove-nth-node-from-end-of-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reorder List\", \"titleSlug\": \"reorder-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Remove Linked List Elements\", \"titleSlug\": \"remove-linked-list-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Middle of the Linked List\", \"titleSlug\": \"middle-of-the-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487872,
      "commentCount": 63,
      "topLevelCommentCount": 46
    },
    "classAndMethodDefinition": "# Definition for singly-linked list.\n# class ListNode(object):"
  },
  {
    "stat": {
      "question_id": 399,
      "question__article__live": true,
      "question__article__slug": "evaluate-division",
      "question__article__has_video_solution": false,
      "question__title": "Evaluate Division",
      "question__title_slug": "evaluate-division",
      "question__hide": false,
      "total_acs": 503334,
      "total_submitted": 810025,
      "frontend_question_id": 399,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/evaluate-division",
      "questionId": "399",
      "questionFrontendId": "399",
      "questionTitle": "Evaluate Division",
      "titleSlug": "evaluate-division",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of variable pairs <code>equations</code> and an array of real numbers <code>values</code>, where <code>equations[i] = [A<sub>i</sub>, B<sub>i</sub>]</code> and <code>values[i]</code> represent the equation <code>A<sub>i</sub> / B<sub>i</sub> = values[i]</code>. Each <code>A<sub>i</sub></code> or <code>B<sub>i</sub></code> is a string that represents a single variable.</p>\n\n<p>You are also given some <code>queries</code>, where <code>queries[j] = [C<sub>j</sub>, D<sub>j</sub>]</code> represents the <code>j<sup>th</sup></code> query where you must find the answer for <code>C<sub>j</sub> / D<sub>j</sub> = ?</code>.</p>\n\n<p>Return <em>the answers to all queries</em>. If a single answer cannot be determined, return <code>-1.0</code>.</p>\n\n<p><strong>Note:</strong> The input is always valid. You may assume that evaluating the queries will not result in division by zero and that there is no contradiction.</p>\n\n<p><strong>Note:&nbsp;</strong>The variables that do not occur in the list of equations are undefined, so the answer cannot be determined for them.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> equations = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;c&quot;]], values = [2.0,3.0], queries = [[&quot;a&quot;,&quot;c&quot;],[&quot;b&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;e&quot;],[&quot;a&quot;,&quot;a&quot;],[&quot;x&quot;,&quot;x&quot;]]\n<strong>Output:</strong> [6.00000,0.50000,-1.00000,1.00000,-1.00000]\n<strong>Explanation:</strong> \nGiven: <em>a / b = 2.0</em>, <em>b / c = 3.0</em>\nqueries are: <em>a / c = ?</em>, <em>b / a = ?</em>, <em>a / e = ?</em>, <em>a / a = ?</em>, <em>x / x = ? </em>\nreturn: [6.0, 0.5, -1.0, 1.0, -1.0 ]\nnote: x is undefined =&gt; -1.0</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> equations = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;c&quot;],[&quot;bc&quot;,&quot;cd&quot;]], values = [1.5,2.5,5.0], queries = [[&quot;a&quot;,&quot;c&quot;],[&quot;c&quot;,&quot;b&quot;],[&quot;bc&quot;,&quot;cd&quot;],[&quot;cd&quot;,&quot;bc&quot;]]\n<strong>Output:</strong> [3.75000,0.40000,5.00000,0.20000]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> equations = [[&quot;a&quot;,&quot;b&quot;]], values = [0.5], queries = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;c&quot;],[&quot;x&quot;,&quot;y&quot;]]\n<strong>Output:</strong> [0.50000,2.00000,-1.00000,-1.00000]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= equations.length &lt;= 20</code></li>\n\t<li><code>equations[i].length == 2</code></li>\n\t<li><code>1 &lt;= A<sub>i</sub>.length, B<sub>i</sub>.length &lt;= 5</code></li>\n\t<li><code>values.length == equations.length</code></li>\n\t<li><code>0.0 &lt; values[i] &lt;= 20.0</code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 20</code></li>\n\t<li><code>queries[i].length == 2</code></li>\n\t<li><code>1 &lt;= C<sub>j</sub>.length, D<sub>j</sub>.length &lt;= 5</code></li>\n\t<li><code>A<sub>i</sub>, B<sub>i</sub>, C<sub>j</sub>, D<sub>j</sub></code> consist of lower case English letters and digits.</li>\n</ul>\n",
      "exampleTestcases": "[[\"a\",\"b\"],[\"b\",\"c\"]]\n[2.0,3.0]\n[[\"a\",\"c\"],[\"b\",\"a\"],[\"a\",\"e\"],[\"a\",\"a\"],[\"x\",\"x\"]]\n[[\"a\",\"b\"],[\"b\",\"c\"],[\"bc\",\"cd\"]]\n[1.5,2.5,5.0]\n[[\"a\",\"c\"],[\"c\",\"b\"],[\"bc\",\"cd\"],[\"cd\",\"bc\"]]\n[[\"a\",\"b\"]]\n[0.5]\n[[\"a\",\"b\"],[\"b\",\"a\"],[\"a\",\"c\"],[\"x\",\"y\"]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path",
          "translatedName": null
        }
      ],
      "hints": [
        "Do you recognize this as a graph problem?"
      ],
      "solution": {
        "id": "1007",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9360,
      "dislikes": 949,
      "similarQuestions": "[{\"title\": \"Check for Contradictions in Equations\", \"titleSlug\": \"check-for-contradictions-in-equations\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486136,
      "commentCount": 258,
      "topLevelCommentCount": 163
    },
    "classAndMethodDefinition": "def calcEquation(equations, values, queries):\n\\tG = collections.defaultdict(dict)"
  },
  {
    "stat": {
      "question_id": 95,
      "question__article__live": true,
      "question__article__slug": "unique-binary-search-trees-ii",
      "question__article__has_video_solution": false,
      "question__title": "Unique Binary Search Trees II",
      "question__title_slug": "unique-binary-search-trees-ii",
      "question__hide": false,
      "total_acs": 467376,
      "total_submitted": 798466,
      "frontend_question_id": 95,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/unique-binary-search-trees-ii",
      "questionId": "95",
      "questionFrontendId": "95",
      "questionTitle": "Unique Binary Search Trees II",
      "titleSlug": "unique-binary-search-trees-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, return <em>all the structurally unique <strong>BST&#39;</strong>s (binary search trees), which has exactly </em><code>n</code><em> nodes of unique values from</em> <code>1</code> <em>to</em> <code>n</code>. Return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg\" style=\"width: 600px; height: 148px;\" />\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> [[1,null,2,null,3],[1,null,3,2],[2,1,3],[3,1,null,null,2],[3,2,null,1]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n",
      "exampleTestcases": "3\n1",
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1968",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7592,
      "dislikes": 527,
      "similarQuestions": "[{\"title\": \"Unique Binary Search Trees\", \"titleSlug\": \"unique-binary-search-trees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Different Ways to Add Parentheses\", \"titleSlug\": \"different-ways-to-add-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485832,
      "commentCount": 114,
      "topLevelCommentCount": 62
    },
    "classAndMethodDefinition": "def generateTrees(self, n):\n        def node(val, left, right):"
  },
  {
    "stat": {
      "question_id": 187,
      "question__article__live": true,
      "question__article__slug": "repeated-dna-sequences",
      "question__article__has_video_solution": false,
      "question__title": "Repeated DNA Sequences",
      "question__title_slug": "repeated-dna-sequences",
      "question__hide": false,
      "total_acs": 395370,
      "total_submitted": 798413,
      "frontend_question_id": 187,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/repeated-dna-sequences",
      "questionId": "187",
      "questionFrontendId": "187",
      "questionTitle": "Repeated DNA Sequences",
      "titleSlug": "repeated-dna-sequences",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>The <strong>DNA sequence</strong> is composed of a series of nucleotides abbreviated as <code>&#39;A&#39;</code>, <code>&#39;C&#39;</code>, <code>&#39;G&#39;</code>, and <code>&#39;T&#39;</code>.</p>\n\n<ul>\n\t<li>For example, <code>&quot;ACGAATTCCG&quot;</code> is a <strong>DNA sequence</strong>.</li>\n</ul>\n\n<p>When studying <strong>DNA</strong>, it is useful to identify repeated sequences within the DNA.</p>\n\n<p>Given a string <code>s</code> that represents a <strong>DNA sequence</strong>, return all the <strong><code>10</code>-letter-long</strong> sequences (substrings) that occur more than once in a DNA molecule. You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\"\n<strong>Output:</strong> [\"AAAAACCCCC\",\"CCCCCAAAAA\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"AAAAAAAAAAAAA\"\n<strong>Output:</strong> [\"AAAAAAAAAA\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is either <code>&#39;A&#39;</code>, <code>&#39;C&#39;</code>, <code>&#39;G&#39;</code>, or <code>&#39;T&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\"\n\"AAAAAAAAAAAAA\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash",
          "translatedName": null
        },
        {
          "name": "Hash Function",
          "slug": "hash-function",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "769",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3344,
      "dislikes": 537,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485924,
      "commentCount": 72,
      "topLevelCommentCount": 42
    },
    "classAndMethodDefinition": "def findRepeatedDnaSequences(self, s):\n            sequences = collections.defaultdict(int) #set '0' as the default value for non-existing keys"
  },
  {
    "stat": {
      "question_id": 445,
      "question__article__live": true,
      "question__article__slug": "add-two-numbers-ii",
      "question__article__has_video_solution": false,
      "question__title": "Add Two Numbers II",
      "question__title_slug": "add-two-numbers-ii",
      "question__hide": false,
      "total_acs": 488755,
      "total_submitted": 796674,
      "frontend_question_id": 445,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/add-two-numbers-ii",
      "questionId": "445",
      "questionFrontendId": "445",
      "questionTitle": "Add Two Numbers II",
      "titleSlug": "add-two-numbers-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given two <strong>non-empty</strong> linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.</p>\n\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/09/sumii-linked-list.jpg\" style=\"width: 523px; height: 342px;\" />\n<pre>\n<strong>Input:</strong> l1 = [7,2,4,3], l2 = [5,6,4]\n<strong>Output:</strong> [7,8,0,7]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> l1 = [2,4,3], l2 = [5,6,4]\n<strong>Output:</strong> [8,0,7]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> l1 = [0], l2 = [0]\n<strong>Output:</strong> [0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in each linked list is in the range <code>[1, 100]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n\t<li>It is guaranteed that the list represents a number that does not have leading zeros.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong>&nbsp;Could you solve it without reversing the input lists?</p>\n",
      "exampleTestcases": "[7,2,4,3]\n[5,6,4]\n[2,4,3]\n[5,6,4]\n[0]\n[0]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1939",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5901,
      "dislikes": 289,
      "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Two Polynomials Represented as Linked Lists\", \"titleSlug\": \"add-two-polynomials-represented-as-linked-lists\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486176,
      "commentCount": 128,
      "topLevelCommentCount": 51
    },
    "classAndMethodDefinition": "class Solution:\n    def reverseList(self, head: ListNode) -> ListNode:"
  },
  {
    "stat": {
      "question_id": 373,
      "question__article__live": true,
      "question__article__slug": "find-k-pairs-with-smallest-sums",
      "question__article__has_video_solution": false,
      "question__title": "Find K Pairs with Smallest Sums",
      "question__title_slug": "find-k-pairs-with-smallest-sums",
      "question__hide": false,
      "total_acs": 317296,
      "total_submitted": 791006,
      "frontend_question_id": 373,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums",
      "questionId": "373",
      "questionFrontendId": "373",
      "questionTitle": "Find K Pairs with Smallest Sums",
      "titleSlug": "find-k-pairs-with-smallest-sums",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given two integer arrays <code>nums1</code> and <code>nums2</code> sorted in <strong>non-decreasing&nbsp;order</strong> and an integer <code>k</code>.</p>\n\n<p>Define a pair <code>(u, v)</code> which consists of one element from the first array and one element from the second array.</p>\n\n<p>Return <em>the</em> <code>k</code> <em>pairs</em> <code>(u<sub>1</sub>, v<sub>1</sub>), (u<sub>2</sub>, v<sub>2</sub>), ..., (u<sub>k</sub>, v<sub>k</sub>)</code> <em>with the smallest sums</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,7,11], nums2 = [2,4,6], k = 3\n<strong>Output:</strong> [[1,2],[1,4],[1,6]]\n<strong>Explanation:</strong> The first 3 pairs are returned from the sequence: [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,1,2], nums2 = [1,2,3], k = 2\n<strong>Output:</strong> [[1,1],[1,1]]\n<strong>Explanation:</strong> The first 2 pairs are returned from the sequence: [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums1[i], nums2[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>nums1</code> and <code>nums2</code> both are sorted in <strong>non-decreasing order</strong>.</li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>4</sup></code></li>\n\t<li><code>k &lt;=&nbsp;nums1.length *&nbsp;nums2.length</code></li>\n</ul>\n",
      "exampleTestcases": "[1,7,11]\n[2,4,6]\n3\n[1,1,2]\n[1,2,3]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1845",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6310,
      "dislikes": 453,
      "similarQuestions": "[{\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Product of Two Sorted Arrays\", \"titleSlug\": \"kth-smallest-product-of-two-sorted-arrays\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486110,
      "commentCount": 145,
      "topLevelCommentCount": 84
    },
    "classAndMethodDefinition": "def kSmallestPairs(self, nums1, nums2, k):\n        return sorted(itertools.product(nums1, nums2), key=sum)[:k]"
  },
  {
    "stat": {
      "question_id": 520,
      "question__article__live": true,
      "question__article__slug": "detect-capital",
      "question__article__has_video_solution": false,
      "question__title": "Detect Capital",
      "question__title_slug": "detect-capital",
      "question__hide": false,
      "total_acs": 446132,
      "total_submitted": 790985,
      "frontend_question_id": 520,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/detect-capital",
      "questionId": "520",
      "questionFrontendId": "520",
      "questionTitle": "Detect Capital",
      "titleSlug": "detect-capital",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>We define the usage of capitals in a word to be right when one of the following cases holds:</p>\n\n<ul>\n\t<li>All letters in this word are capitals, like <code>&quot;USA&quot;</code>.</li>\n\t<li>All letters in this word are not capitals, like <code>&quot;leetcode&quot;</code>.</li>\n\t<li>Only the first letter in this word is capital, like <code>&quot;Google&quot;</code>.</li>\n</ul>\n\n<p>Given a string <code>word</code>, return <code>true</code> if the usage of capitals in it is right.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> word = \"USA\"\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> word = \"FlaG\"\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 100</code></li>\n\t<li><code>word</code> consists of lowercase and uppercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"USA\"\n\"FlaG\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "975",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3411,
      "dislikes": 461,
      "similarQuestions": "[{\"title\": \"Capitalize the Title\", \"titleSlug\": \"capitalize-the-title\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count the Number of Special Characters II\", \"titleSlug\": \"count-the-number-of-special-characters-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count the Number of Special Characters I\", \"titleSlug\": \"count-the-number-of-special-characters-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486249,
      "commentCount": 115,
      "topLevelCommentCount": 82
    },
    "classAndMethodDefinition": "def detectCapitalUse(self, word: str) -> bool:\n        if len(word) < 2: return True"
  },
  {
    "stat": {
      "question_id": 216,
      "question__article__live": true,
      "question__article__slug": "combination-sum-iii",
      "question__article__has_video_solution": false,
      "question__title": "Combination Sum III",
      "question__title_slug": "combination-sum-iii",
      "question__hide": false,
      "total_acs": 556092,
      "total_submitted": 789482,
      "frontend_question_id": 216,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/combination-sum-iii",
      "questionId": "216",
      "questionFrontendId": "216",
      "questionTitle": "Combination Sum III",
      "titleSlug": "combination-sum-iii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Find all valid combinations of <code>k</code> numbers that sum up to <code>n</code> such that the following conditions are true:</p>\n\n<ul>\n\t<li>Only numbers <code>1</code> through <code>9</code> are used.</li>\n\t<li>Each number is used <strong>at most once</strong>.</li>\n</ul>\n\n<p>Return <em>a list of all possible valid combinations</em>. The list must not contain the same combination twice, and the combinations may be returned in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 3, n = 7\n<strong>Output:</strong> [[1,2,4]]\n<strong>Explanation:</strong>\n1 + 2 + 4 = 7\nThere are no other valid combinations.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 3, n = 9\n<strong>Output:</strong> [[1,2,6],[1,3,5],[2,3,4]]\n<strong>Explanation:</strong>\n1 + 2 + 6 = 9\n1 + 3 + 5 = 9\n2 + 3 + 4 = 9\nThere are no other valid combinations.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 4, n = 1\n<strong>Output:</strong> []\n<strong>Explanation:</strong> There are no valid combinations.\nUsing 4 different numbers in the range [1,9], the smallest sum we can get is 1+2+3+4 = 10 and since 10 &gt; 1, there are no valid combination.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= k &lt;= 9</code></li>\n\t<li><code>1 &lt;= n &lt;= 60</code></li>\n</ul>\n",
      "exampleTestcases": "3\n7\n3\n9\n4\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "993",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6053,
      "dislikes": 113,
      "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485953,
      "commentCount": 78,
      "topLevelCommentCount": 51
    },
    "classAndMethodDefinition": "def combinationSum3(self, k, n):\n        ret = []"
  },
  {
    "stat": {
      "question_id": 456,
      "question__article__live": true,
      "question__article__slug": "132-pattern",
      "question__article__has_video_solution": true,
      "question__title": "132 Pattern",
      "question__title_slug": "132-pattern",
      "question__hide": false,
      "total_acs": 265916,
      "total_submitted": 786794,
      "frontend_question_id": 456,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/132-pattern",
      "questionId": "456",
      "questionFrontendId": "456",
      "questionTitle": "132 Pattern",
      "titleSlug": "132-pattern",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of <code>n</code> integers <code>nums</code>, a <strong>132 pattern</strong> is a subsequence of three integers <code>nums[i]</code>, <code>nums[j]</code> and <code>nums[k]</code> such that <code>i &lt; j &lt; k</code> and <code>nums[i] &lt; nums[k] &lt; nums[j]</code>.</p>\n\n<p>Return <code>true</code><em> if there is a <strong>132 pattern</strong> in </em><code>nums</code><em>, otherwise, return </em><code>false</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no 132 pattern in the sequence.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,4,2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There is a 132 pattern in the sequence: [1, 4, 2].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,3,2,0]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4]\n[3,1,4,2]\n[-1,3,2,0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "189",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7231,
      "dislikes": 438,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486187,
      "commentCount": 222,
      "topLevelCommentCount": 111
    },
    "classAndMethodDefinition": "def find132pattern(self, nums: List[int]) -> bool:\n        stack, third = [], float(\\'-inf\\')"
  },
  {
    "stat": {
      "question_id": 784,
      "question__article__live": true,
      "question__article__slug": "insert-into-a-bst",
      "question__article__has_video_solution": false,
      "question__title": "Insert into a Binary Search Tree",
      "question__title_slug": "insert-into-a-binary-search-tree",
      "question__hide": false,
      "total_acs": 575883,
      "total_submitted": 781684,
      "frontend_question_id": 701,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/insert-into-a-binary-search-tree",
      "questionId": "784",
      "questionFrontendId": "701",
      "questionTitle": "Insert into a Binary Search Tree",
      "titleSlug": "insert-into-a-binary-search-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given the <code>root</code> node of a binary search tree (BST) and a <code>value</code> to insert into the tree. Return <em>the root node of the BST after the insertion</em>. It is <strong>guaranteed</strong> that the new value does not exist in the original BST.</p>\n\n<p><strong>Notice</strong>&nbsp;that there may exist&nbsp;multiple valid ways for the&nbsp;insertion, as long as the tree remains a BST after insertion. You can return <strong>any of them</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/insertbst.jpg\" style=\"width: 752px; height: 221px;\" />\n<pre>\n<strong>Input:</strong> root = [4,2,7,1,3], val = 5\n<strong>Output:</strong> [4,2,7,1,3,5]\n<strong>Explanation:</strong> Another accepted tree is:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/bst.jpg\" style=\"width: 352px; height: 301px;\" />\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [40,20,60,10,30,50,70], val = 25\n<strong>Output:</strong> [40,20,60,10,30,50,70,null,null,25]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [4,2,7,1,3,null,null,null,null,null,null], val = 5\n<strong>Output:</strong> [4,2,7,1,3,5]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in&nbsp;the tree will be in the range <code>[0,&nbsp;10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>8</sup> &lt;= Node.val &lt;= 10<sup>8</sup></code></li>\n\t<li>All the values <code>Node.val</code> are <strong>unique</strong>.</li>\n\t<li><code>-10<sup>8</sup> &lt;= val &lt;= 10<sup>8</sup></code></li>\n\t<li>It&#39;s <strong>guaranteed</strong> that <code>val</code> does not exist in the original BST.</li>\n</ul>\n",
      "exampleTestcases": "[4,2,7,1,3]\n5\n[40,20,60,10,30,50,70]\n25\n[4,2,7,1,3,null,null,null,null,null,null]\n5",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "720",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5884,
      "dislikes": 178,
      "similarQuestions": "[{\"title\": \"Search in a Binary Search Tree\", \"titleSlug\": \"search-in-a-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486496,
      "commentCount": 44,
      "topLevelCommentCount": 38
    },
    "classAndMethodDefinition": "def insertIntoBST(self, root, val):\n        if root is None: return TreeNode(val)"
  },
  {
    "stat": {
      "question_id": 1646,
      "question__article__live": true,
      "question__article__slug": "kth-missing-positive-number",
      "question__article__has_video_solution": false,
      "question__title": "Kth Missing Positive Number",
      "question__title_slug": "kth-missing-positive-number",
      "question__hide": false,
      "total_acs": 473413,
      "total_submitted": 781008,
      "frontend_question_id": 1539,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/kth-missing-positive-number",
      "questionId": "1646",
      "questionFrontendId": "1539",
      "questionTitle": "Kth Missing Positive Number",
      "titleSlug": "kth-missing-positive-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>arr</code> of positive integers sorted in a <strong>strictly increasing order</strong>, and an integer <code>k</code>.</p>\n\n<p>Return <em>the</em> <code>k<sup>th</sup></code> <em><strong>positive</strong> integer that is <strong>missing</strong> from this array.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,3,4,7,11], k = 5\n<strong>Output:</strong> 9\n<strong>Explanation: </strong>The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5<sup>th</sup>&nbsp;missing positive integer is 9.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,4], k = 2\n<strong>Output:</strong> 6\n<strong>Explanation: </strong>The missing positive integers are [5,6,7,...]. The 2<sup>nd</sup> missing positive integer is 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 1000</code></li>\n\t<li><code>1 &lt;= k &lt;= 1000</code></li>\n\t<li><code>arr[i] &lt; arr[j]</code> for <code>1 &lt;= i &lt; j &lt;= arr.length</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<p>Could you solve this problem in less than O(n) complexity?</p>\n",
      "exampleTestcases": "[2,3,4,7,11]\n5\n[1,2,3,4]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [
        "Keep track of how many positive numbers are missing as you scan the array."
      ],
      "solution": {
        "id": "1059",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6718,
      "dislikes": 461,
      "similarQuestions": "[{\"title\": \"Append K Integers With Minimal Sum\", \"titleSlug\": \"append-k-integers-with-minimal-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487320,
      "commentCount": 197,
      "topLevelCommentCount": 148
    },
    "classAndMethodDefinition": "class Solution(object):\n    def findKthPositive(self, arr, k):"
  },
  {
    "stat": {
      "question_id": 461,
      "question__article__live": true,
      "question__article__slug": "hamming-distance",
      "question__article__has_video_solution": false,
      "question__title": "Hamming Distance",
      "question__title_slug": "hamming-distance",
      "question__hide": false,
      "total_acs": 588626,
      "total_submitted": 778899,
      "frontend_question_id": 461,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/hamming-distance",
      "questionId": "461",
      "questionFrontendId": "461",
      "questionTitle": "Hamming Distance",
      "titleSlug": "hamming-distance",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>The <a href=\"https://en.wikipedia.org/wiki/Hamming_distance\" target=\"_blank\">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\n\n<p>Given two integers <code>x</code> and <code>y</code>, return <em>the <strong>Hamming distance</strong> between them</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 1, y = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\n1   (0 0 0 1)\n4   (0 1 0 0)\n       &uarr;   &uarr;\nThe above arrows point to positions where the corresponding bits are different.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 3, y = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;=&nbsp;x, y &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "1\n4\n3\n1",
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "849",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3849,
      "dislikes": 218,
      "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Total Hamming Distance\", \"titleSlug\": \"total-hamming-distance\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486192,
      "commentCount": 25,
      "topLevelCommentCount": 24
    },
    "classAndMethodDefinition": "def hammingDistance(self, x, y):\n        return bin(x^y).count(\\'1\\')"
  },
  {
    "stat": {
      "question_id": 315,
      "question__article__live": true,
      "question__article__slug": "count-of-smaller-numbers-after-self",
      "question__article__has_video_solution": false,
      "question__title": "Count of Smaller Numbers After Self",
      "question__title_slug": "count-of-smaller-numbers-after-self",
      "question__hide": false,
      "total_acs": 329981,
      "total_submitted": 775121,
      "frontend_question_id": 315,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/count-of-smaller-numbers-after-self",
      "questionId": "315",
      "questionFrontendId": "315",
      "questionTitle": "Count of Smaller Numbers After Self",
      "titleSlug": "count-of-smaller-numbers-after-self",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return<em> an integer array </em><code>counts</code><em> where </em><code>counts[i]</code><em> is the number of smaller elements to the right of </em><code>nums[i]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,2,6,1]\n<strong>Output:</strong> [2,1,1,0]\n<strong>Explanation:</strong>\nTo the right of 5 there are <b>2</b> smaller elements (2 and 1).\nTo the right of 2 there is only <b>1</b> smaller element (1).\nTo the right of 6 there is <b>1</b> smaller element (1).\nTo the right of 1 there is <b>0</b> smaller element.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1]\n<strong>Output:</strong> [0]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,-1]\n<strong>Output:</strong> [0,0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[5,2,6,1]\n[-1]\n[-1,-1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree",
          "translatedName": null
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree",
          "translatedName": null
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort",
          "translatedName": null
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1138",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8853,
      "dislikes": 244,
      "similarQuestions": "[{\"title\": \"Count of Range Sum\", \"titleSlug\": \"count-of-range-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Queue Reconstruction by Height\", \"titleSlug\": \"queue-reconstruction-by-height\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Pairs\", \"titleSlug\": \"reverse-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"How Many Numbers Are Smaller Than the Current Number\", \"titleSlug\": \"how-many-numbers-are-smaller-than-the-current-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Good Triplets in an Array\", \"titleSlug\": \"count-good-triplets-in-an-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count the Number of K-Big Indices\", \"titleSlug\": \"count-the-number-of-k-big-indices\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486052,
      "commentCount": 44,
      "topLevelCommentCount": 29
    },
    "classAndMethodDefinition": "def countSmaller(self, nums):\n        def sort(enum):"
  },
  {
    "stat": {
      "question_id": 1205,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Defanging an IP Address",
      "question__title_slug": "defanging-an-ip-address",
      "question__hide": false,
      "total_acs": 684609,
      "total_submitted": 766603,
      "frontend_question_id": 1108,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/defanging-an-ip-address",
      "questionId": "1205",
      "questionFrontendId": "1108",
      "questionTitle": "Defanging an IP Address",
      "titleSlug": "defanging-an-ip-address",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a valid (IPv4) IP <code>address</code>, return a defanged version of that IP address.</p>\r\n\r\n<p>A <em>defanged&nbsp;IP address</em>&nbsp;replaces every period <code>&quot;.&quot;</code> with <code>&quot;[.]&quot;</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n<pre><strong>Input:</strong> address = \"1.1.1.1\"\r\n<strong>Output:</strong> \"1[.]1[.]1[.]1\"\r\n</pre><p><strong class=\"example\">Example 2:</strong></p>\r\n<pre><strong>Input:</strong> address = \"255.100.50.0\"\r\n<strong>Output:</strong> \"255[.]100[.]50[.]0\"\r\n</pre>\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The given <code>address</code> is a valid IPv4 address.</li>\r\n</ul>",
      "exampleTestcases": "\"1.1.1.1\"\n\"255.100.50.0\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": null,
      "companyTagStats": null,
      "likes": 2131,
      "dislikes": 1758,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486904,
      "commentCount": 74,
      "topLevelCommentCount": 53
    },
    "classAndMethodDefinition": "def defangIPaddr(self, address: str) -> str:\n\\t\\treturn address.replace(\\'.\\', \\'[.]\\')"
  },
  {
    "stat": {
      "question_id": 628,
      "question__article__live": true,
      "question__article__slug": "maximmum-product-of-three-numbers",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Product of Three Numbers",
      "question__title_slug": "maximum-product-of-three-numbers",
      "question__hide": false,
      "total_acs": 345465,
      "total_submitted": 764318,
      "frontend_question_id": 628,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-product-of-three-numbers",
      "questionId": "628",
      "questionFrontendId": "628",
      "questionTitle": "Maximum Product of Three Numbers",
      "titleSlug": "maximum-product-of-three-numbers",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, <em>find three numbers whose product is maximum and return the maximum product</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> 6\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> 24\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [-1,-2,-3]\n<strong>Output:</strong> -6\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;=&nbsp;10<sup>4</sup></code></li>\n\t<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[1,2,3,4]\n[-1,-2,-3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "186",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4230,
      "dislikes": 680,
      "similarQuestions": "[{\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486352,
      "commentCount": 73,
      "topLevelCommentCount": 42
    },
    "classAndMethodDefinition": "class Solution:\n    def maximumProduct(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 1544,
      "question__article__live": true,
      "question__article__slug": "count-good-nodes-in-binary-tree",
      "question__article__has_video_solution": true,
      "question__title": "Count Good Nodes in Binary Tree",
      "question__title_slug": "count-good-nodes-in-binary-tree",
      "question__hide": false,
      "total_acs": 555586,
      "total_submitted": 760603,
      "frontend_question_id": 1448,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/count-good-nodes-in-binary-tree",
      "questionId": "1544",
      "questionFrontendId": "1448",
      "questionTitle": "Count Good Nodes in Binary Tree",
      "titleSlug": "count-good-nodes-in-binary-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a binary tree <code>root</code>, a node <em>X</em> in the tree is named&nbsp;<strong>good</strong> if in the path from root to <em>X</em> there are no nodes with a value <em>greater than</em> X.</p>\r\n\r\n<p>Return the number of <strong>good</strong> nodes in the binary tree.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/02/test_sample_1.png\" style=\"width: 263px; height: 156px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [3,1,4,3,null,1,5]\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> Nodes in blue are <strong>good</strong>.\r\nRoot Node (3) is always a good node.\r\nNode 4 -&gt; (3,4) is the maximum value in the path starting from the root.\r\nNode 5 -&gt; (3,4,5) is the maximum value in the path\r\nNode 3 -&gt; (3,1,3) is the maximum value in the path.</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/02/test_sample_2.png\" style=\"width: 157px; height: 161px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [3,3,null,4,2]\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> Node 2 -&gt; (3, 3, 2) is not good, because &quot;3&quot; is higher than it.</pre>\r\n\r\n<p><strong class=\"example\">Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [1]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> Root is considered as <strong>good</strong>.</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes in the binary tree is in the range&nbsp;<code>[1, 10^5]</code>.</li>\r\n\t<li>Each node&#39;s value is between <code>[-10^4, 10^4]</code>.</li>\r\n</ul>",
      "exampleTestcases": "[3,1,4,3,null,1,5]\n[3,3,null,4,2]\n[1]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [
        "Use DFS (Depth First Search) to traverse the tree, and constantly keep track of the current path maximum."
      ],
      "solution": {
        "id": "1154",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5875,
      "dislikes": 175,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487235,
      "commentCount": 79,
      "topLevelCommentCount": 46
    },
    "classAndMethodDefinition": "def goodNodes(self, root: TreeNode) -> int:\n        def solve(root,val):"
  },
  {
    "stat": {
      "question_id": 299,
      "question__article__live": true,
      "question__article__slug": "bulls-and-cows",
      "question__article__has_video_solution": false,
      "question__title": "Bulls and Cows",
      "question__title_slug": "bulls-and-cows",
      "question__hide": false,
      "total_acs": 383610,
      "total_submitted": 758395,
      "frontend_question_id": 299,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/bulls-and-cows",
      "questionId": "299",
      "questionFrontendId": "299",
      "questionTitle": "Bulls and Cows",
      "titleSlug": "bulls-and-cows",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are playing the <strong><a href=\"https://en.wikipedia.org/wiki/Bulls_and_Cows\" target=\"_blank\">Bulls and Cows</a></strong> game with your friend.</p>\n\n<p>You write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:</p>\n\n<ul>\n\t<li>The number of &quot;bulls&quot;, which are digits in the guess that are in the correct position.</li>\n\t<li>The number of &quot;cows&quot;, which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.</li>\n</ul>\n\n<p>Given the secret number <code>secret</code> and your friend&#39;s guess <code>guess</code>, return <em>the hint for your friend&#39;s guess</em>.</p>\n\n<p>The hint should be formatted as <code>&quot;xAyB&quot;</code>, where <code>x</code> is the number of bulls and <code>y</code> is the number of cows. Note that both <code>secret</code> and <code>guess</code> may contain duplicate digits.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1807&quot;, guess = &quot;7810&quot;\n<strong>Output:</strong> &quot;1A3B&quot;\n<strong>Explanation:</strong> Bulls are connected with a &#39;|&#39; and cows are underlined:\n&quot;1807&quot;\n  |\n&quot;<u>7</u>8<u>10</u>&quot;</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1123&quot;, guess = &quot;0111&quot;\n<strong>Output:</strong> &quot;1A1B&quot;\n<strong>Explanation:</strong> Bulls are connected with a &#39;|&#39; and cows are underlined:\n&quot;1123&quot;        &quot;1123&quot;\n  |      or     |\n&quot;01<u>1</u>1&quot;        &quot;011<u>1</u>&quot;\nNote that only one of the two unmatched 1s is counted as a cow since the non-bull digits can only be rearranged to allow one 1 to be a bull.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= secret.length, guess.length &lt;= 1000</code></li>\n\t<li><code>secret.length == guess.length</code></li>\n\t<li><code>secret</code> and <code>guess</code> consist of digits only.</li>\n</ul>\n",
      "exampleTestcases": "\"1807\"\n\"7810\"\n\"1123\"\n\"0111\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "987",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2442,
      "dislikes": 1783,
      "similarQuestions": "[{\"title\": \"Make Number of Distinct Characters Equal\", \"titleSlug\": \"make-number-of-distinct-characters-equal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486036,
      "commentCount": 47,
      "topLevelCommentCount": 41
    },
    "classAndMethodDefinition": "def getHint(self, secret, guess):\n        bulls = sum(map(operator.eq, secret, guess))"
  },
  {
    "stat": {
      "question_id": 778,
      "question__article__live": true,
      "question__article__slug": "reorganize-string",
      "question__article__has_video_solution": false,
      "question__title": "Reorganize String",
      "question__title_slug": "reorganize-string",
      "question__hide": false,
      "total_acs": 415487,
      "total_submitted": 756130,
      "frontend_question_id": 767,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reorganize-string",
      "questionId": "778",
      "questionFrontendId": "767",
      "questionTitle": "Reorganize String",
      "titleSlug": "reorganize-string",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, rearrange the characters of <code>s</code> so that any two adjacent characters are not the same.</p>\n\n<p>Return <em>any possible rearrangement of</em> <code>s</code> <em>or return</em> <code>&quot;&quot;</code> <em>if not possible</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aab\"\n<strong>Output:</strong> \"aba\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"aaab\"\n<strong>Output:</strong> \"\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 500</code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"aab\"\n\"aaab\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [
        "Alternate placing the most common letters."
      ],
      "solution": {
        "id": "1979",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8539,
      "dislikes": 258,
      "similarQuestions": "[{\"title\": \"Rearrange String k Distance Apart\", \"titleSlug\": \"rearrange-string-k-distance-apart\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Task Scheduler\", \"titleSlug\": \"task-scheduler\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Happy String\", \"titleSlug\": \"longest-happy-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486490,
      "commentCount": 94,
      "topLevelCommentCount": 55
    },
    "classAndMethodDefinition": "def reorganizeString(S):   \n\\tif not S:"
  },
  {
    "stat": {
      "question_id": 889,
      "question__article__live": true,
      "question__article__slug": "buddy-strings",
      "question__article__has_video_solution": false,
      "question__title": "Buddy Strings",
      "question__title_slug": "buddy-strings",
      "question__hide": false,
      "total_acs": 249884,
      "total_submitted": 753035,
      "frontend_question_id": 859,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/buddy-strings",
      "questionId": "889",
      "questionFrontendId": "859",
      "questionTitle": "Buddy Strings",
      "titleSlug": "buddy-strings",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>s</code> and <code>goal</code>, return <code>true</code><em> if you can swap two letters in </em><code>s</code><em> so the result is equal to </em><code>goal</code><em>, otherwise, return </em><code>false</code><em>.</em></p>\n\n<p>Swapping letters is defined as taking two indices <code>i</code> and <code>j</code> (0-indexed) such that <code>i != j</code> and swapping the characters at <code>s[i]</code> and <code>s[j]</code>.</p>\n\n<ul>\n\t<li>For example, swapping at indices <code>0</code> and <code>2</code> in <code>&quot;abcd&quot;</code> results in <code>&quot;cbad&quot;</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ab&quot;, goal = &quot;ba&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can swap s[0] = &#39;a&#39; and s[1] = &#39;b&#39; to get &quot;ba&quot;, which is equal to goal.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ab&quot;, goal = &quot;ab&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The only letters you can swap are s[0] = &#39;a&#39; and s[1] = &#39;b&#39;, which results in &quot;ba&quot; != goal.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, goal = &quot;aa&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can swap s[0] = &#39;a&#39; and s[1] = &#39;a&#39; to get &quot;aa&quot;, which is equal to goal.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, goal.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> and <code>goal</code> consist of lowercase letters.</li>\n</ul>\n",
      "exampleTestcases": "\"ab\"\n\"ba\"\n\"ab\"\n\"ab\"\n\"aa\"\n\"aa\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1930",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3189,
      "dislikes": 1800,
      "similarQuestions": "[{\"title\": \"Determine if Two Strings Are Close\", \"titleSlug\": \"determine-if-two-strings-are-close\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check if One String Swap Can Make Strings Equal\", \"titleSlug\": \"check-if-one-string-swap-can-make-strings-equal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Make Number of Distinct Characters Equal\", \"titleSlug\": \"make-number-of-distinct-characters-equal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486595,
      "commentCount": 180,
      "topLevelCommentCount": 108
    },
    "classAndMethodDefinition": "class Solution:\n    def buddyStrings(self, s: str, goal: str) -> bool:"
  },
  {
    "stat": {
      "question_id": 637,
      "question__article__live": true,
      "question__article__slug": "average-of-levels-in-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Average of Levels in Binary Tree",
      "question__title_slug": "average-of-levels-in-binary-tree",
      "question__hide": false,
      "total_acs": 548959,
      "total_submitted": 750514,
      "frontend_question_id": 637,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/average-of-levels-in-binary-tree",
      "questionId": "637",
      "questionFrontendId": "637",
      "questionTitle": "Average of Levels in Binary Tree",
      "titleSlug": "average-of-levels-in-binary-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "Given the <code>root</code> of a binary tree, return <em>the average value of the nodes on each level in the form of an array</em>. Answers within <code>10<sup>-5</sup></code> of the actual answer will be accepted.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/09/avg1-tree.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [3.00000,14.50000,11.00000]\nExplanation: The average value of nodes on level 0 is 3, on level 1 is 14.5, and on level 2 is 11.\nHence return [3, 14.5, 11].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/09/avg2-tree.jpg\" style=\"width: 292px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,15,7]\n<strong>Output:</strong> [3.00000,14.50000,11.00000]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[3,9,20,null,null,15,7]\n[3,9,20,15,7]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "197",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5285,
      "dislikes": 328,
      "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Level Order Traversal II\", \"titleSlug\": \"binary-tree-level-order-traversal-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486361,
      "commentCount": 49,
      "topLevelCommentCount": 26
    },
    "classAndMethodDefinition": "def averageOfLevels(self, root: TreeNode) -> List[float]:\n        q, ans = [root], []"
  },
  {
    "stat": {
      "question_id": 967,
      "question__article__live": true,
      "question__article__slug": "minimum-falling-path-sum",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Falling Path Sum",
      "question__title_slug": "minimum-falling-path-sum",
      "question__hide": false,
      "total_acs": 470981,
      "total_submitted": 748570,
      "frontend_question_id": 931,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-falling-path-sum",
      "questionId": "967",
      "questionFrontendId": "931",
      "questionTitle": "Minimum Falling Path Sum",
      "titleSlug": "minimum-falling-path-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>n x n</code> array of integers <code>matrix</code>, return <em>the <strong>minimum sum</strong> of any <strong>falling path</strong> through</em> <code>matrix</code>.</p>\n\n<p>A <strong>falling path</strong> starts at any element in the first row and chooses the element in the next row that is either directly below or diagonally left/right. Specifically, the next element from position <code>(row, col)</code> will be <code>(row + 1, col - 1)</code>, <code>(row + 1, col)</code>, or <code>(row + 1, col + 1)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/11/03/failing1-grid.jpg\" style=\"width: 499px; height: 500px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[2,1,3],[6,5,4],[7,8,9]]\n<strong>Output:</strong> 13\n<strong>Explanation:</strong> There are two falling paths with a minimum sum as shown.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/11/03/failing2-grid.jpg\" style=\"width: 164px; height: 365px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[-19,57],[-40,-5]]\n<strong>Output:</strong> -59\n<strong>Explanation:</strong> The falling path with a minimum sum is shown.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == matrix.length == matrix[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>-100 &lt;= matrix[i][j] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[[2,1,3],[6,5,4],[7,8,9]]\n[[-19,57],[-40,-5]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1448",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6389,
      "dislikes": 163,
      "similarQuestions": "[{\"title\": \"Minimum Falling Path Sum II\", \"titleSlug\": \"minimum-falling-path-sum-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486674,
      "commentCount": 336,
      "topLevelCommentCount": 165
    },
    "classAndMethodDefinition": "class Solution:\n    def minFallingPathSum(self, A: List[List[int]]) -> int:"
  },
  {
    "stat": {
      "question_id": 943,
      "question__article__live": true,
      "question__article__slug": "sum-of-subarray-minimums",
      "question__article__has_video_solution": false,
      "question__title": "Sum of Subarray Minimums",
      "question__title_slug": "sum-of-subarray-minimums",
      "question__hide": false,
      "total_acs": 278628,
      "total_submitted": 747855,
      "frontend_question_id": 907,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sum-of-subarray-minimums",
      "questionId": "943",
      "questionFrontendId": "907",
      "questionTitle": "Sum of Subarray Minimums",
      "titleSlug": "sum-of-subarray-minimums",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers arr, find the sum of <code>min(b)</code>, where <code>b</code> ranges over every (contiguous) subarray of <code>arr</code>. Since the answer may be large, return the answer <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,1,2,4]\n<strong>Output:</strong> 17\n<strong>Explanation:</strong> \nSubarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \nMinimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.\nSum is 17.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [11,81,94,43,3]\n<strong>Output:</strong> 444\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 3 * 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,1,2,4]\n[11,81,94,43,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1584",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8148,
      "dislikes": 635,
      "similarQuestions": "[{\"title\": \"Sum of Subarray Ranges\", \"titleSlug\": \"sum-of-subarray-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sum of Total Strength of Wizards\", \"titleSlug\": \"sum-of-total-strength-of-wizards\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486650,
      "commentCount": 413,
      "topLevelCommentCount": 229
    },
    "classAndMethodDefinition": "def sumSubarrayMins(self, A: List[int]) -> int:\n        A = [0]+A"
  },
  {
    "stat": {
      "question_id": 965,
      "question__article__live": true,
      "question__article__slug": "unique-email-addresses",
      "question__article__has_video_solution": false,
      "question__title": "Unique Email Addresses",
      "question__title_slug": "unique-email-addresses",
      "question__hide": false,
      "total_acs": 500945,
      "total_submitted": 744455,
      "frontend_question_id": 929,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/unique-email-addresses",
      "questionId": "965",
      "questionFrontendId": "929",
      "questionTitle": "Unique Email Addresses",
      "titleSlug": "unique-email-addresses",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Every <strong>valid email</strong> consists of a <strong>local name</strong> and a <strong>domain name</strong>, separated by the <code>&#39;@&#39;</code> sign. Besides lowercase letters, the email may contain one or more <code>&#39;.&#39;</code> or <code>&#39;+&#39;</code>.</p>\n\n<ul>\n\t<li>For example, in <code>&quot;alice@leetcode.com&quot;</code>, <code>&quot;alice&quot;</code> is the <strong>local name</strong>, and <code>&quot;leetcode.com&quot;</code> is the <strong>domain name</strong>.</li>\n</ul>\n\n<p>If you add periods <code>&#39;.&#39;</code> between some characters in the <strong>local name</strong> part of an email address, mail sent there will be forwarded to the same address without dots in the local name. Note that this rule <strong>does not apply</strong> to <strong>domain names</strong>.</p>\n\n<ul>\n\t<li>For example, <code>&quot;alice.z@leetcode.com&quot;</code> and <code>&quot;alicez@leetcode.com&quot;</code> forward to the same email address.</li>\n</ul>\n\n<p>If you add a plus <code>&#39;+&#39;</code> in the <strong>local name</strong>, everything after the first plus sign <strong>will be ignored</strong>. This allows certain emails to be filtered. Note that this rule <strong>does not apply</strong> to <strong>domain names</strong>.</p>\n\n<ul>\n\t<li>For example, <code>&quot;m.y+name@email.com&quot;</code> will be forwarded to <code>&quot;my@email.com&quot;</code>.</li>\n</ul>\n\n<p>It is possible to use both of these rules at the same time.</p>\n\n<p>Given an array of strings <code>emails</code> where we send one email to each <code>emails[i]</code>, return <em>the number of different addresses that actually receive mails</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> emails = [&quot;test.email+alex@leetcode.com&quot;,&quot;test.e.mail+bob.cathy@leetcode.com&quot;,&quot;testemail+david@lee.tcode.com&quot;]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> &quot;testemail@leetcode.com&quot; and &quot;testemail@lee.tcode.com&quot; actually receive mails.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> emails = [&quot;a@leetcode.com&quot;,&quot;b@leetcode.com&quot;,&quot;c@leetcode.com&quot;]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= emails.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= emails[i].length &lt;= 100</code></li>\n\t<li><code>emails[i]</code> consist of lowercase English letters, <code>&#39;+&#39;</code>, <code>&#39;.&#39;</code> and <code>&#39;@&#39;</code>.</li>\n\t<li>Each <code>emails[i]</code> contains exactly one <code>&#39;@&#39;</code> character.</li>\n\t<li>All local and domain names are non-empty.</li>\n\t<li>Local names do not start with a <code>&#39;+&#39;</code> character.</li>\n\t<li>Domain names end with the <code>&quot;.com&quot;</code> suffix.</li>\n</ul>\n",
      "exampleTestcases": "[\"test.email+alex@leetcode.com\",\"test.e.mail+bob.cathy@leetcode.com\",\"testemail+david@lee.tcode.com\"]\n[\"a@leetcode.com\",\"b@leetcode.com\",\"c@leetcode.com\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1161",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2697,
      "dislikes": 344,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486672,
      "commentCount": 31,
      "topLevelCommentCount": 17
    },
    "classAndMethodDefinition": "def numUniqueEmails(self, emails: List[str]) -> int:\n        def parse(email):"
  },
  {
    "stat": {
      "question_id": 932,
      "question__article__live": true,
      "question__article__slug": "monotonic-array",
      "question__article__has_video_solution": false,
      "question__title": "Monotonic Array",
      "question__title_slug": "monotonic-array",
      "question__hide": false,
      "total_acs": 451603,
      "total_submitted": 736388,
      "frontend_question_id": 896,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/monotonic-array",
      "questionId": "932",
      "questionFrontendId": "896",
      "questionTitle": "Monotonic Array",
      "titleSlug": "monotonic-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>An array is <strong>monotonic</strong> if it is either monotone increasing or monotone decreasing.</p>\n\n<p>An array <code>nums</code> is monotone increasing if for all <code>i &lt;= j</code>, <code>nums[i] &lt;= nums[j]</code>. An array <code>nums</code> is monotone decreasing if for all <code>i &lt;= j</code>, <code>nums[i] &gt;= nums[j]</code>.</p>\n\n<p>Given an integer array <code>nums</code>, return <code>true</code><em> if the given array is monotonic, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,2,3]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [6,5,4,4]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,2]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,2,3]\n[6,5,4,4]\n[1,3,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "546",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3068,
      "dislikes": 96,
      "similarQuestions": "[{\"title\": \"Count Hills and Valleys in an Array\", \"titleSlug\": \"count-hills-and-valleys-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Count of Monotonic Pairs I\", \"titleSlug\": \"find-the-count-of-monotonic-pairs-i\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486639,
      "commentCount": 111,
      "topLevelCommentCount": 59
    },
    "classAndMethodDefinition": "def isMonotonic(self, nums: List[int]) -> bool:\n        if len(nums) < 2:"
  },
  {
    "stat": {
      "question_id": 337,
      "question__article__live": true,
      "question__article__slug": "house-robber-iii",
      "question__article__has_video_solution": false,
      "question__title": "House Robber III",
      "question__title_slug": "house-robber-iii",
      "question__hide": false,
      "total_acs": 395885,
      "total_submitted": 727666,
      "frontend_question_id": 337,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/house-robber-iii",
      "questionId": "337",
      "questionFrontendId": "337",
      "questionTitle": "House Robber III",
      "titleSlug": "house-robber-iii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>The thief has found himself a new place for his thievery again. There is only one entrance to this area, called <code>root</code>.</p>\n\n<p>Besides the <code>root</code>, each house has one and only one parent house. After a tour, the smart thief realized that all houses in this place form a binary tree. It will automatically contact the police if <strong>two directly-linked houses were broken into on the same night</strong>.</p>\n\n<p>Given the <code>root</code> of the binary tree, return <em>the maximum amount of money the thief can rob <strong>without alerting the police</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/10/rob1-tree.jpg\" style=\"width: 277px; height: 293px;\" />\n<pre>\n<strong>Input:</strong> root = [3,2,3,null,3,null,1]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/10/rob2-tree.jpg\" style=\"width: 357px; height: 293px;\" />\n<pre>\n<strong>Input:</strong> root = [3,4,5,1,3,null,1]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> Maximum amount of money the thief can rob = 4 + 5 = 9.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,2,3,null,3,null,1]\n[3,4,5,1,3,null,1]",
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1017",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8548,
      "dislikes": 143,
      "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486074,
      "commentCount": 82,
      "topLevelCommentCount": 61
    },
    "classAndMethodDefinition": "def __init__(self, x):\n#         self.val = x"
  },
  {
    "stat": {
      "question_id": 904,
      "question__article__live": true,
      "question__article__slug": "leaf-similar-trees",
      "question__article__has_video_solution": false,
      "question__title": "Leaf-Similar Trees",
      "question__title_slug": "leaf-similar-trees",
      "question__hide": false,
      "total_acs": 509509,
      "total_submitted": 727307,
      "frontend_question_id": 872,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/leaf-similar-trees",
      "questionId": "904",
      "questionFrontendId": "872",
      "questionTitle": "Leaf-Similar Trees",
      "titleSlug": "leaf-similar-trees",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Consider all the leaves of a binary tree, from&nbsp;left to right order, the values of those&nbsp;leaves form a <strong>leaf value sequence</strong><em>.</em></p>\n\n<p><img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/16/tree.png\" style=\"width: 400px; height: 336px;\" /></p>\n\n<p>For example, in the given tree above, the leaf value sequence is <code>(6, 7, 4, 9, 8)</code>.</p>\n\n<p>Two binary trees are considered <em>leaf-similar</em>&nbsp;if their leaf value sequence is the same.</p>\n\n<p>Return <code>true</code> if and only if the two given trees with head nodes <code>root1</code> and <code>root2</code> are leaf-similar.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/03/leaf-similar-1.jpg\" style=\"width: 600px; height: 237px;\" />\n<pre>\n<strong>Input:</strong> root1 = [3,5,1,6,2,9,8,null,null,7,4], root2 = [3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/03/leaf-similar-2.jpg\" style=\"width: 300px; height: 110px;\" />\n<pre>\n<strong>Input:</strong> root1 = [1,2,3], root2 = [1,3,2]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in each tree will be in the range <code>[1, 200]</code>.</li>\n\t<li>Both of the given trees will have values in the range <code>[0, 200]</code>.</li>\n</ul>\n",
      "exampleTestcases": "[3,5,1,6,2,9,8,null,null,7,4]\n[3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]\n[1,2,3]\n[1,3,2]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "511",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4133,
      "dislikes": 116,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486611,
      "commentCount": 205,
      "topLevelCommentCount": 103
    },
    "classAndMethodDefinition": "def leafSimilar(self, root1: TreeNode, root2: TreeNode) -> bool:\n"
  },
  {
    "stat": {
      "question_id": 698,
      "question__article__live": true,
      "question__article__slug": "partition-to-k-equal-sum-subsets",
      "question__article__has_video_solution": false,
      "question__title": "Partition to K Equal Sum Subsets",
      "question__title_slug": "partition-to-k-equal-sum-subsets",
      "question__hide": false,
      "total_acs": 277157,
      "total_submitted": 726040,
      "frontend_question_id": 698,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets",
      "questionId": "698",
      "questionFrontendId": "698",
      "questionTitle": "Partition to K Equal Sum Subsets",
      "titleSlug": "partition-to-k-equal-sum-subsets",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <code>true</code> if it is possible to divide this array into <code>k</code> non-empty subsets whose sums are all equal.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,3,2,3,5,2,1], k = 4\n<strong>Output:</strong> true\n<strong>Explanation:</strong> It is possible to divide it into 4 subsets (5), (1, 4), (2,3), (2,3) with equal sums.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], k = 3\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 16</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li>The frequency of each element is in the range <code>[1, 4]</code>.</li>\n</ul>\n",
      "exampleTestcases": "[4,3,2,3,5,2,1]\n4\n[1,2,3,4]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Memoization",
          "slug": "memoization",
          "translatedName": null
        },
        {
          "name": "Bitmask",
          "slug": "bitmask",
          "translatedName": null
        }
      ],
      "hints": [
        "We can figure out what target each subset must sum to.  Then, let's recursively search, where at each call to our function, we choose which of k subsets the next value will join."
      ],
      "solution": {
        "id": "1198",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7159,
      "dislikes": 516,
      "similarQuestions": "[{\"title\": \"Partition Equal Subset Sum\", \"titleSlug\": \"partition-equal-subset-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Fair Distribution of Cookies\", \"titleSlug\": \"fair-distribution-of-cookies\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Ways to Partition an Array\", \"titleSlug\": \"maximum-number-of-ways-to-partition-an-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Rows Covered by Columns\", \"titleSlug\": \"maximum-rows-covered-by-columns\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486421,
      "commentCount": 93,
      "topLevelCommentCount": 65
    },
    "classAndMethodDefinition": "def canPartitionKSubsets(self, nums: List[int], k: int) -> bool:\n\\ttotal = sum(nums)"
  },
  {
    "stat": {
      "question_id": 721,
      "question__article__live": true,
      "question__article__slug": "accounts-merge",
      "question__article__has_video_solution": false,
      "question__title": "Accounts Merge",
      "question__title_slug": "accounts-merge",
      "question__hide": false,
      "total_acs": 419648,
      "total_submitted": 725700,
      "frontend_question_id": 721,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/accounts-merge",
      "questionId": "721",
      "questionFrontendId": "721",
      "questionTitle": "Accounts Merge",
      "titleSlug": "accounts-merge",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a list of <code>accounts</code> where each element <code>accounts[i]</code> is a list of strings, where the first element <code>accounts[i][0]</code> is a name, and the rest of the elements are <strong>emails</strong> representing emails of the account.</p>\n\n<p>Now, we would like to merge these accounts. Two accounts definitely belong to the same person if there is some common email to both accounts. Note that even if two accounts have the same name, they may belong to different people as people could have the same name. A person can have any number of accounts initially, but all of their accounts definitely have the same name.</p>\n\n<p>After merging the accounts, return the accounts in the following format: the first element of each account is the name, and the rest of the elements are emails <strong>in sorted order</strong>. The accounts themselves can be returned in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> accounts = [[&quot;John&quot;,&quot;johnsmith@mail.com&quot;,&quot;john_newyork@mail.com&quot;],[&quot;John&quot;,&quot;johnsmith@mail.com&quot;,&quot;john00@mail.com&quot;],[&quot;Mary&quot;,&quot;mary@mail.com&quot;],[&quot;John&quot;,&quot;johnnybravo@mail.com&quot;]]\n<strong>Output:</strong> [[&quot;John&quot;,&quot;john00@mail.com&quot;,&quot;john_newyork@mail.com&quot;,&quot;johnsmith@mail.com&quot;],[&quot;Mary&quot;,&quot;mary@mail.com&quot;],[&quot;John&quot;,&quot;johnnybravo@mail.com&quot;]]\n<strong>Explanation:</strong>\nThe first and second John&#39;s are the same person as they have the common email &quot;johnsmith@mail.com&quot;.\nThe third John and Mary are different people as none of their email addresses are used by other accounts.\nWe could return these lists in any order, for example the answer [[&#39;Mary&#39;, &#39;mary@mail.com&#39;], [&#39;John&#39;, &#39;johnnybravo@mail.com&#39;], \n[&#39;John&#39;, &#39;john00@mail.com&#39;, &#39;john_newyork@mail.com&#39;, &#39;johnsmith@mail.com&#39;]] would still be accepted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> accounts = [[&quot;Gabe&quot;,&quot;Gabe0@m.co&quot;,&quot;Gabe3@m.co&quot;,&quot;Gabe1@m.co&quot;],[&quot;Kevin&quot;,&quot;Kevin3@m.co&quot;,&quot;Kevin5@m.co&quot;,&quot;Kevin0@m.co&quot;],[&quot;Ethan&quot;,&quot;Ethan5@m.co&quot;,&quot;Ethan4@m.co&quot;,&quot;Ethan0@m.co&quot;],[&quot;Hanzo&quot;,&quot;Hanzo3@m.co&quot;,&quot;Hanzo1@m.co&quot;,&quot;Hanzo0@m.co&quot;],[&quot;Fern&quot;,&quot;Fern5@m.co&quot;,&quot;Fern1@m.co&quot;,&quot;Fern0@m.co&quot;]]\n<strong>Output:</strong> [[&quot;Ethan&quot;,&quot;Ethan0@m.co&quot;,&quot;Ethan4@m.co&quot;,&quot;Ethan5@m.co&quot;],[&quot;Gabe&quot;,&quot;Gabe0@m.co&quot;,&quot;Gabe1@m.co&quot;,&quot;Gabe3@m.co&quot;],[&quot;Hanzo&quot;,&quot;Hanzo0@m.co&quot;,&quot;Hanzo1@m.co&quot;,&quot;Hanzo3@m.co&quot;],[&quot;Kevin&quot;,&quot;Kevin0@m.co&quot;,&quot;Kevin3@m.co&quot;,&quot;Kevin5@m.co&quot;],[&quot;Fern&quot;,&quot;Fern0@m.co&quot;,&quot;Fern1@m.co&quot;,&quot;Fern5@m.co&quot;]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= accounts.length &lt;= 1000</code></li>\n\t<li><code>2 &lt;= accounts[i].length &lt;= 10</code></li>\n\t<li><code>1 &lt;= accounts[i][j].length &lt;= 30</code></li>\n\t<li><code>accounts[i][0]</code> consists of English letters.</li>\n\t<li><code>accounts[i][j] (for j &gt; 0)</code> is a valid email.</li>\n</ul>\n",
      "exampleTestcases": "[[\"John\",\"johnsmith@mail.com\",\"john_newyork@mail.com\"],[\"John\",\"johnsmith@mail.com\",\"john00@mail.com\"],[\"Mary\",\"mary@mail.com\"],[\"John\",\"johnnybravo@mail.com\"]]\n[[\"Gabe\",\"Gabe0@m.co\",\"Gabe3@m.co\",\"Gabe1@m.co\"],[\"Kevin\",\"Kevin3@m.co\",\"Kevin5@m.co\",\"Kevin0@m.co\"],[\"Ethan\",\"Ethan5@m.co\",\"Ethan4@m.co\",\"Ethan0@m.co\"],[\"Hanzo\",\"Hanzo3@m.co\",\"Hanzo1@m.co\",\"Hanzo0@m.co\"],[\"Fern\",\"Fern5@m.co\",\"Fern1@m.co\",\"Fern0@m.co\"]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "For every pair of emails in the same account, draw an edge between those emails.  The problem is about enumerating the connected components of this graph."
      ],
      "solution": {
        "id": "1207",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6821,
      "dislikes": 1172,
      "similarQuestions": "[{\"title\": \"Redundant Connection\", \"titleSlug\": \"redundant-connection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity\", \"titleSlug\": \"sentence-similarity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity II\", \"titleSlug\": \"sentence-similarity-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486433,
      "commentCount": 126,
      "topLevelCommentCount": 91
    },
    "classAndMethodDefinition": "def __init__(self, N):\n        self.parents = list(range(N))"
  },
  {
    "stat": {
      "question_id": 893,
      "question__article__live": true,
      "question__article__slug": "all-nodes-distance-k-in-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "All Nodes Distance K in Binary Tree",
      "question__title_slug": "all-nodes-distance-k-in-binary-tree",
      "question__hide": false,
      "total_acs": 469847,
      "total_submitted": 723380,
      "frontend_question_id": 863,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",
      "questionId": "893",
      "questionFrontendId": "863",
      "questionTitle": "All Nodes Distance K in Binary Tree",
      "titleSlug": "all-nodes-distance-k-in-binary-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, the value of a target node <code>target</code>, and an integer <code>k</code>, return <em>an array of the values of all nodes that have a distance </em><code>k</code><em> from the target node.</em></p>\n\n<p>You can return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/28/sketch0.png\" style=\"width: 500px; height: 429px;\" />\n<pre>\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], target = 5, k = 2\n<strong>Output:</strong> [7,4,1]\nExplanation: The nodes that are a distance 2 from the target node (with value 5) have values 7, 4, and 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1], target = 1, k = 3\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 500]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 500</code></li>\n\t<li>All the values <code>Node.val</code> are <strong>unique</strong>.</li>\n\t<li><code>target</code> is the value of one of the nodes in the tree.</li>\n\t<li><code>0 &lt;= k &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[3,5,1,6,2,0,8,null,null,7,4]\n5\n2\n[1]\n1\n3",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1903",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 11054,
      "dislikes": 234,
      "similarQuestions": "[{\"title\": \"Amount of Time for Binary Tree to Be Infected\", \"titleSlug\": \"amount-of-time-for-binary-tree-to-be-infected\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486600,
      "commentCount": 158,
      "topLevelCommentCount": 90
    },
    "classAndMethodDefinition": "class Solution:\n    def distanceK(self, root: TreeNode, target: TreeNode, k: int) -> List[int]:"
  },
  {
    "stat": {
      "question_id": 917,
      "question__article__live": true,
      "question__article__slug": "boats-to-save-people",
      "question__article__has_video_solution": false,
      "question__title": "Boats to Save People",
      "question__title_slug": "boats-to-save-people",
      "question__hide": false,
      "total_acs": 428988,
      "total_submitted": 720109,
      "frontend_question_id": 881,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/boats-to-save-people",
      "questionId": "917",
      "questionFrontendId": "881",
      "questionTitle": "Boats to Save People",
      "titleSlug": "boats-to-save-people",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array <code>people</code> where <code>people[i]</code> is the weight of the <code>i<sup>th</sup></code> person, and an <strong>infinite number of boats</strong> where each boat can carry a maximum weight of <code>limit</code>. Each boat carries at most two people at the same time, provided the sum of the weight of those people is at most <code>limit</code>.</p>\n\n<p>Return <em>the minimum number of boats to carry every given person</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> people = [1,2], limit = 3\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 1 boat (1, 2)\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> people = [3,2,2,1], limit = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 3 boats (1, 2), (2) and (3)\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> people = [3,5,3,4], limit = 5\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> 4 boats (3), (3), (4), (5)\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= people.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= people[i] &lt;= limit &lt;= 3 * 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2]\n3\n[3,2,2,1]\n3\n[3,5,3,4]\n5",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "525",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6438,
      "dislikes": 161,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486624,
      "commentCount": 327,
      "topLevelCommentCount": 185
    },
    "classAndMethodDefinition": "class Solution:\n    def numRescueBoats(self, people: List[int], limit: int) -> int:"
  },
  {
    "stat": {
      "question_id": 341,
      "question__article__live": true,
      "question__article__slug": "flatten-nested-iterator",
      "question__article__has_video_solution": false,
      "question__title": "Flatten Nested List Iterator",
      "question__title_slug": "flatten-nested-list-iterator",
      "question__hide": false,
      "total_acs": 461926,
      "total_submitted": 713527,
      "frontend_question_id": 341,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/flatten-nested-list-iterator",
      "questionId": "341",
      "questionFrontendId": "341",
      "questionTitle": "Flatten Nested List Iterator",
      "titleSlug": "flatten-nested-list-iterator",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a nested list of integers <code>nestedList</code>. Each element is either an integer or a list whose elements may also be integers or other lists. Implement an iterator to flatten it.</p>\n\n<p>Implement the <code>NestedIterator</code> class:</p>\n\n<ul>\n\t<li><code>NestedIterator(List&lt;NestedInteger&gt; nestedList)</code> Initializes the iterator with the nested list <code>nestedList</code>.</li>\n\t<li><code>int next()</code> Returns the next integer in the nested list.</li>\n\t<li><code>boolean hasNext()</code> Returns <code>true</code> if there are still some integers in the nested list and <code>false</code> otherwise.</li>\n</ul>\n\n<p>Your code will be tested with the following pseudocode:</p>\n\n<pre>\ninitialize iterator with nestedList\nres = []\nwhile iterator.hasNext()\n    append iterator.next() to the end of res\nreturn res\n</pre>\n\n<p>If <code>res</code> matches the expected flattened list, then your code will be judged as correct.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nestedList = [[1,1],2,[1,1]]\n<strong>Output:</strong> [1,1,2,1,1]\n<strong>Explanation:</strong> By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nestedList = [1,[4,[6]]]\n<strong>Output:</strong> [1,4,6]\n<strong>Explanation:</strong> By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nestedList.length &lt;= 500</code></li>\n\t<li>The values of the integers in the nested list is in the range <code>[-10<sup>6</sup>, 10<sup>6</sup>]</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[1,1],2,[1,1]]\n[1,[4,[6]]]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        },
        {
          "name": "Iterator",
          "slug": "iterator",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "917",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4898,
      "dislikes": 1759,
      "similarQuestions": "[{\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Mini Parser\", \"titleSlug\": \"mini-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Array Nesting\", \"titleSlug\": \"array-nesting\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486078,
      "commentCount": 91,
      "topLevelCommentCount": 55
    },
    "classAndMethodDefinition": "def __init__(self, nestedList):\n            self.stack = [[nestedList, 0]]"
  },
  {
    "stat": {
      "question_id": 289,
      "question__article__live": true,
      "question__article__slug": "game-of-life",
      "question__article__has_video_solution": true,
      "question__title": "Game of Life",
      "question__title_slug": "game-of-life",
      "question__hide": false,
      "total_acs": 498023,
      "total_submitted": 712123,
      "frontend_question_id": 289,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/game-of-life",
      "questionId": "289",
      "questionFrontendId": "289",
      "questionTitle": "Game of Life",
      "titleSlug": "game-of-life",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>According to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" target=\"_blank\">Wikipedia&#39;s article</a>: &quot;The <b>Game of Life</b>, also known simply as <b>Life</b>, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.&quot;</p>\n\n<p>The board is made up of an <code>m x n</code> grid of cells, where each cell has an initial state: <b>live</b> (represented by a <code>1</code>) or <b>dead</b> (represented by a <code>0</code>). Each cell interacts with its <a href=\"https://en.wikipedia.org/wiki/Moore_neighborhood\" target=\"_blank\">eight neighbors</a> (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):</p>\n\n<ol>\n\t<li>Any live cell with fewer than two live neighbors dies as if caused by under-population.</li>\n\t<li>Any live cell with two or three live neighbors lives on to the next generation.</li>\n\t<li>Any live cell with more than three live neighbors dies, as if by over-population.</li>\n\t<li>Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</li>\n</ol>\n\n<p><span>The next state is created by applying the above rules simultaneously to every cell in the current state, where births and deaths occur simultaneously. Given the current state of the <code>m x n</code> grid <code>board</code>, return <em>the next state</em>.</span></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/26/grid1.jpg\" style=\"width: 562px; height: 322px;\" />\n<pre>\n<strong>Input:</strong> board = [[0,1,0],[0,0,1],[1,1,1],[0,0,0]]\n<strong>Output:</strong> [[0,0,0],[1,0,1],[0,1,1],[0,1,0]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/26/grid2.jpg\" style=\"width: 402px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> board = [[1,1],[1,0]]\n<strong>Output:</strong> [[1,1],[1,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == board.length</code></li>\n\t<li><code>n == board[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 25</code></li>\n\t<li><code>board[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Could you solve it in-place? Remember that the board needs to be updated simultaneously: You cannot update some cells first and then use their updated values to update other cells.</li>\n\t<li>In this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches upon the border of the array (i.e., live cells reach the border). How would you address these problems?</li>\n</ul>\n",
      "exampleTestcases": "[[0,1,0],[0,0,1],[1,1,1],[0,0,0]]\n[[1,1],[1,0]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "729",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6385,
      "dislikes": 577,
      "similarQuestions": "[{\"title\": \"Set Matrix Zeroes\", \"titleSlug\": \"set-matrix-zeroes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486026,
      "commentCount": 72,
      "topLevelCommentCount": 48
    },
    "classAndMethodDefinition": "def gameOfLifeInfinite(self, live):\n        ctr = collections.Counter((I, J)"
  },
  {
    "stat": {
      "question_id": 530,
      "question__article__live": true,
      "question__article__slug": "minimum-absolute-difference-in-bst",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Absolute Difference in BST",
      "question__title_slug": "minimum-absolute-difference-in-bst",
      "question__hide": false,
      "total_acs": 415684,
      "total_submitted": 710622,
      "frontend_question_id": 530,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-absolute-difference-in-bst",
      "questionId": "530",
      "questionFrontendId": "530",
      "questionTitle": "Minimum Absolute Difference in BST",
      "titleSlug": "minimum-absolute-difference-in-bst",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a Binary Search Tree (BST), return <em>the minimum absolute difference between the values of any two different nodes in the tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/05/bst1.jpg\" style=\"width: 292px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> root = [4,2,6,1,3]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/05/bst2.jpg\" style=\"width: 282px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> root = [1,0,48,null,null,12,49]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 10<sup>4</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as 783: <a href=\"https://leetcode.com/problems/minimum-distance-between-bst-nodes/\" target=\"_blank\">https://leetcode.com/problems/minimum-distance-between-bst-nodes/</a></p>\n",
      "exampleTestcases": "[4,2,6,1,3]\n[1,0,48,null,null,12,49]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1840",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4410,
      "dislikes": 229,
      "similarQuestions": "[{\"title\": \"K-diff Pairs in an Array\", \"titleSlug\": \"k-diff-pairs-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486259,
      "commentCount": 107,
      "topLevelCommentCount": 56
    },
    "classAndMethodDefinition": "def getMinimumDifference(self, root):\n        def fn(node, lo, hi):"
  },
  {
    "stat": {
      "question_id": 147,
      "question__article__live": true,
      "question__article__slug": "insertion-sort-list",
      "question__article__has_video_solution": true,
      "question__title": "Insertion Sort List",
      "question__title_slug": "insertion-sort-list",
      "question__hide": false,
      "total_acs": 385710,
      "total_submitted": 708754,
      "frontend_question_id": 147,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/insertion-sort-list",
      "questionId": "147",
      "questionFrontendId": "147",
      "questionTitle": "Insertion Sort List",
      "titleSlug": "insertion-sort-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>head</code> of a singly linked list, sort the list using <strong>insertion sort</strong>, and return <em>the sorted list&#39;s head</em>.</p>\n\n<p>The steps of the <strong>insertion sort</strong> algorithm:</p>\n\n<ol>\n\t<li>Insertion sort iterates, consuming one input element each repetition and growing a sorted output list.</li>\n\t<li>At each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list and inserts it there.</li>\n\t<li>It repeats until no input elements remain.</li>\n</ol>\n\n<p>The following is a graphical example of the insertion sort algorithm. The partially sorted list (black) initially contains only the first element in the list. One element (red) is removed from the input data and inserted in-place into the sorted list with each iteration.</p>\n<img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Insertion-sort-example-300px.gif\" style=\"height:180px; width:300px\" />\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/04/sort1linked-list.jpg\" style=\"width: 422px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [4,2,1,3]\n<strong>Output:</strong> [1,2,3,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/04/sort2linked-list.jpg\" style=\"width: 542px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> head = [-1,5,3,4,0]\n<strong>Output:</strong> [-1,0,3,4,5]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[1, 5000]</code>.</li>\n\t<li><code>-5000 &lt;= Node.val &lt;= 5000</code></li>\n</ul>\n",
      "exampleTestcases": "[4,2,1,3]\n[-1,5,3,4,0]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1021",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3125,
      "dislikes": 867,
      "similarQuestions": "[{\"title\": \"Sort List\", \"titleSlug\": \"sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insert into a Sorted Circular Linked List\", \"titleSlug\": \"insert-into-a-sorted-circular-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485884,
      "commentCount": 33,
      "topLevelCommentCount": 29
    },
    "classAndMethodDefinition": "def insertionSortList(self, head):\n        p = dummy = ListNode(0)"
  },
  {
    "stat": {
      "question_id": 768,
      "question__article__live": true,
      "question__article__slug": "partition-labels",
      "question__article__has_video_solution": false,
      "question__title": "Partition Labels",
      "question__title_slug": "partition-labels",
      "question__hide": false,
      "total_acs": 557317,
      "total_submitted": 696786,
      "frontend_question_id": 763,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/partition-labels",
      "questionId": "768",
      "questionFrontendId": "763",
      "questionTitle": "Partition Labels",
      "titleSlug": "partition-labels",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code>. We want to partition the string into as many parts as possible so that each letter appears in at most one part.</p>\n\n<p>Note that the partition is done so that after concatenating all the parts in order, the resultant string should be <code>s</code>.</p>\n\n<p>Return <em>a list of integers representing the size of these parts</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ababcbacadefegdehijhklij&quot;\n<strong>Output:</strong> [9,7,8]\n<strong>Explanation:</strong>\nThe partition is &quot;ababcbaca&quot;, &quot;defegde&quot;, &quot;hijhklij&quot;.\nThis is a partition so that each letter appears in at most one part.\nA partition like &quot;ababcbacadefegde&quot;, &quot;hijhklij&quot; is incorrect, because it splits s into less parts.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;eccbbbbdec&quot;\n<strong>Output:</strong> [10]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 500</code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"ababcbacadefegdehijhklij\"\n\"eccbbbbdec\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [
        "Try to greedily choose the smallest partition that includes the first letter.  If you have something like \"abaccbdeffed\", then you might need to add b.  You can use an map like \"last['b'] = 5\" to help you expand the width of your partition."
      ],
      "solution": {
        "id": "374",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 10319,
      "dislikes": 401,
      "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Optimal Partition of String\", \"titleSlug\": \"optimal-partition-of-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486480,
      "commentCount": 83,
      "topLevelCommentCount": 52
    },
    "classAndMethodDefinition": "def partitionLabels(self, S):\n        result, last_seen, max_last_seen, count = [], {}, 0, 0"
  },
  {
    "stat": {
      "question_id": 292,
      "question__article__live": true,
      "question__article__slug": "nim-game",
      "question__article__has_video_solution": false,
      "question__title": "Nim Game",
      "question__title_slug": "nim-game",
      "question__hide": false,
      "total_acs": 396148,
      "total_submitted": 692613,
      "frontend_question_id": 292,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/nim-game",
      "questionId": "292",
      "questionFrontendId": "292",
      "questionTitle": "Nim Game",
      "titleSlug": "nim-game",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are playing the following Nim Game with your friend:</p>\n\n<ul>\n\t<li>Initially, there is a heap of stones on the table.</li>\n\t<li>You and your friend will alternate taking turns, and <strong>you go first</strong>.</li>\n\t<li>On each turn, the person whose turn it is will remove 1 to 3 stones from the heap.</li>\n\t<li>The one who removes the last stone is the winner.</li>\n</ul>\n\n<p>Given <code>n</code>, the number of stones in the heap, return <code>true</code><em> if you can win the game assuming both you and your friend play optimally, otherwise return </em><code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> false\n<strong>Explanation:</strong> These are the possible outcomes:\n1. You remove 1 stone. Your friend removes 3 stones, including the last stone. Your friend wins.\n2. You remove 2 stones. Your friend removes 2 stones, including the last stone. Your friend wins.\n3. You remove 3 stones. Your friend removes the last stone. Your friend wins.\nIn all outcomes, your friend wins.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "4\n1\n2",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser",
          "translatedName": null
        },
        {
          "name": "Game Theory",
          "slug": "game-theory",
          "translatedName": null
        }
      ],
      "hints": [
        "If there are 5 stones in the heap, could you figure out a way to remove the stones such that you will always be the winner?"
      ],
      "solution": {
        "id": "31",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1737,
      "dislikes": 2701,
      "similarQuestions": "[{\"title\": \"Flip Game II\", \"titleSlug\": \"flip-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486029,
      "commentCount": 79,
      "topLevelCommentCount": 53
    },
    "classAndMethodDefinition": "def canWinNim(self, n: int) -> bool:        \n        if n <= 3:"
  },
  {
    "stat": {
      "question_id": 1129,
      "question__article__live": true,
      "question__article__slug": "longest-string-chain",
      "question__article__has_video_solution": false,
      "question__title": "Longest String Chain",
      "question__title_slug": "longest-string-chain",
      "question__hide": false,
      "total_acs": 424686,
      "total_submitted": 692407,
      "frontend_question_id": 1048,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-string-chain",
      "questionId": "1129",
      "questionFrontendId": "1048",
      "questionTitle": "Longest String Chain",
      "titleSlug": "longest-string-chain",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of <code>words</code> where each word consists of lowercase English letters.</p>\n\n<p><code>word<sub>A</sub></code> is a <strong>predecessor</strong> of <code>word<sub>B</sub></code> if and only if we can insert <strong>exactly one</strong> letter anywhere in <code>word<sub>A</sub></code> <strong>without changing the order of the other characters</strong> to make it equal to <code>word<sub>B</sub></code>.</p>\n\n<ul>\n\t<li>For example, <code>&quot;abc&quot;</code> is a <strong>predecessor</strong> of <code>&quot;ab<u>a</u>c&quot;</code>, while <code>&quot;cba&quot;</code> is not a <strong>predecessor</strong> of <code>&quot;bcad&quot;</code>.</li>\n</ul>\n\n<p>A <strong>word chain</strong><em> </em>is a sequence of words <code>[word<sub>1</sub>, word<sub>2</sub>, ..., word<sub>k</sub>]</code> with <code>k &gt;= 1</code>, where <code>word<sub>1</sub></code> is a <strong>predecessor</strong> of <code>word<sub>2</sub></code>, <code>word<sub>2</sub></code> is a <strong>predecessor</strong> of <code>word<sub>3</sub></code>, and so on. A single word is trivially a <strong>word chain</strong> with <code>k == 1</code>.</p>\n\n<p>Return <em>the <strong>length</strong> of the <strong>longest possible word chain</strong> with words chosen from the given list of </em><code>words</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;a&quot;,&quot;b&quot;,&quot;ba&quot;,&quot;bca&quot;,&quot;bda&quot;,&quot;bdca&quot;]\n<strong>Output:</strong> 4\n<strong>Explanation</strong>: One of the longest word chains is [&quot;a&quot;,&quot;<u>b</u>a&quot;,&quot;b<u>d</u>a&quot;,&quot;bd<u>c</u>a&quot;].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;xbc&quot;,&quot;pcxbcf&quot;,&quot;xb&quot;,&quot;cxbc&quot;,&quot;pcxbc&quot;]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> All the words can be put in a word chain [&quot;xb&quot;, &quot;xb<u>c</u>&quot;, &quot;<u>c</u>xbc&quot;, &quot;<u>p</u>cxbc&quot;, &quot;pcxbc<u>f</u>&quot;].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;abcd&quot;,&quot;dbqca&quot;]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The trivial word chain [&quot;abcd&quot;] is one of the longest word chains.\n[&quot;abcd&quot;,&quot;dbqca&quot;] is not a valid word chain because the ordering of the letters is changed.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 16</code></li>\n\t<li><code>words[i]</code> only consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"a\",\"b\",\"ba\",\"bca\",\"bda\",\"bdca\"]\n[\"xbc\",\"pcxbcf\",\"xb\",\"cxbc\",\"pcxbc\"]\n[\"abcd\",\"dbqca\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "Instead of adding a character, try deleting a character to form a chain in reverse.",
        "For each word in order of length, for each word2 which is word with one character removed, length[word2] = max(length[word2], length[word] + 1)."
      ],
      "solution": {
        "id": "1140",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7330,
      "dislikes": 255,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486829,
      "commentCount": 96,
      "topLevelCommentCount": 62
    },
    "classAndMethodDefinition": "def longestStrChain(self, words: List[str]) -> int:\n        words.sort(key=len)"
  },
  {
    "stat": {
      "question_id": 1630,
      "question__article__live": true,
      "question__article__slug": "count-odd-numbers-in-an-interval-range",
      "question__article__has_video_solution": false,
      "question__title": "Count Odd Numbers in an Interval Range",
      "question__title_slug": "count-odd-numbers-in-an-interval-range",
      "question__hide": false,
      "total_acs": 345835,
      "total_submitted": 691788,
      "frontend_question_id": 1523,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/count-odd-numbers-in-an-interval-range",
      "questionId": "1630",
      "questionFrontendId": "1523",
      "questionTitle": "Count Odd Numbers in an Interval Range",
      "titleSlug": "count-odd-numbers-in-an-interval-range",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two non-negative integers <code>low</code> and <code><font face=\"monospace\">high</font></code>. Return the <em>count of odd numbers between </em><code>low</code><em> and </em><code><font face=\"monospace\">high</font></code><em>&nbsp;(inclusive)</em>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> low = 3, high = 7\r\n<strong>Output:</strong> 3\r\n<b>Explanation: </b>The odd numbers between 3 and 7 are [3,5,7].</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> low = 8, high = 10\r\n<strong>Output:</strong> 1\r\n<b>Explanation: </b>The odd numbers between 8 and 10 are [9].</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= low &lt;= high&nbsp;&lt;= 10^9</code></li>\r\n</ul>",
      "exampleTestcases": "3\n7\n8\n10",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [
        "If the range (high - low + 1) is even, the number of even and odd numbers in this range will be the same.",
        "If the range (high - low + 1) is odd, the solution will depend on the parity of high and low."
      ],
      "solution": {
        "id": "1660",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2747,
      "dislikes": 158,
      "similarQuestions": "[{\"title\": \"Check if Bitwise OR Has Trailing Zeros\", \"titleSlug\": \"check-if-bitwise-or-has-trailing-zeros\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487304,
      "commentCount": 162,
      "topLevelCommentCount": 111
    },
    "classAndMethodDefinition": "class Solution:\n    def countOdds(self, low: int, high: int) -> int:"
  },
  {
    "stat": {
      "question_id": 218,
      "question__article__live": true,
      "question__article__slug": "the-skyline-problem",
      "question__article__has_video_solution": false,
      "question__title": "The Skyline Problem",
      "question__title_slug": "the-skyline-problem",
      "question__hide": false,
      "total_acs": 296964,
      "total_submitted": 690479,
      "frontend_question_id": 218,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/the-skyline-problem",
      "questionId": "218",
      "questionFrontendId": "218",
      "questionTitle": "The Skyline Problem",
      "titleSlug": "the-skyline-problem",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>A city&#39;s <strong>skyline</strong> is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Given the locations and heights of all the buildings, return <em>the <strong>skyline</strong> formed by these buildings collectively</em>.</p>\n\n<p>The geometric information of each building is given in the array <code>buildings</code> where <code>buildings[i] = [left<sub>i</sub>, right<sub>i</sub>, height<sub>i</sub>]</code>:</p>\n\n<ul>\n\t<li><code>left<sub>i</sub></code> is the x coordinate of the left edge of the <code>i<sup>th</sup></code> building.</li>\n\t<li><code>right<sub>i</sub></code> is the x coordinate of the right edge of the <code>i<sup>th</sup></code> building.</li>\n\t<li><code>height<sub>i</sub></code> is the height of the <code>i<sup>th</sup></code> building.</li>\n</ul>\n\n<p>You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height <code>0</code>.</p>\n\n<p>The <strong>skyline</strong> should be represented as a list of &quot;key points&quot; <strong>sorted by their x-coordinate</strong> in the form <code>[[x<sub>1</sub>,y<sub>1</sub>],[x<sub>2</sub>,y<sub>2</sub>],...]</code>. Each key point is the left endpoint of some horizontal segment in the skyline except the last point in the list, which always has a y-coordinate <code>0</code> and is used to mark the skyline&#39;s termination where the rightmost building ends. Any ground between the leftmost and rightmost buildings should be part of the skyline&#39;s contour.</p>\n\n<p><b>Note:</b> There must be no consecutive horizontal lines of equal height in the output skyline. For instance, <code>[...,[2 3],[4 5],[7 5],[11 5],[12 7],...]</code> is not acceptable; the three lines of height 5 should be merged into one in the final output as such: <code>[...,[2 3],[4 5],[12 7],...]</code></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/merged.jpg\" style=\"width: 800px; height: 331px;\" />\n<pre>\n<strong>Input:</strong> buildings = [[2,9,10],[3,7,15],[5,12,12],[15,20,10],[19,24,8]]\n<strong>Output:</strong> [[2,10],[3,15],[7,12],[12,0],[15,10],[20,8],[24,0]]\n<strong>Explanation:</strong>\nFigure A shows the buildings of the input.\nFigure B shows the skyline formed by those buildings. The red points in figure B represent the key points in the output list.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> buildings = [[0,2,3],[2,5,3]]\n<strong>Output:</strong> [[0,3],[5,0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= buildings.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= left<sub>i</sub> &lt; right<sub>i</sub> &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>1 &lt;= height<sub>i</sub> &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>buildings</code> is sorted by <code>left<sub>i</sub></code> in&nbsp;non-decreasing order.</li>\n</ul>\n",
      "exampleTestcases": "[[2,9,10],[3,7,15],[5,12,12],[15,20,10],[19,24,8]]\n[[0,2,3],[2,5,3]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree",
          "translatedName": null
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree",
          "translatedName": null
        },
        {
          "name": "Line Sweep",
          "slug": "line-sweep",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1475",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5915,
      "dislikes": 267,
      "similarQuestions": "[{\"title\": \"Falling Squares\", \"titleSlug\": \"falling-squares\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Shifting Letters II\", \"titleSlug\": \"shifting-letters-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485955,
      "commentCount": 38,
      "topLevelCommentCount": 28
    },
    "classAndMethodDefinition": "from sortedcontainers import SortedList\nclass Solution:"
  },
  {
    "stat": {
      "question_id": 316,
      "question__article__live": true,
      "question__article__slug": "remove-duplicate-letters",
      "question__article__has_video_solution": false,
      "question__title": "Remove Duplicate Letters",
      "question__title_slug": "remove-duplicate-letters",
      "question__hide": false,
      "total_acs": 345039,
      "total_submitted": 689145,
      "frontend_question_id": 316,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-duplicate-letters",
      "questionId": "316",
      "questionFrontendId": "316",
      "questionTitle": "Remove Duplicate Letters",
      "titleSlug": "remove-duplicate-letters",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, remove duplicate letters so that every letter appears once and only once. You must make sure your result is <span data-keyword=\"lexicographically-smaller-string\"><strong>the smallest in lexicographical order</strong></span> among all possible results.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bcabc&quot;\n<strong>Output:</strong> &quot;abc&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cbacdcbc&quot;\n<strong>Output:</strong> &quot;acdb&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as 1081: <a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" target=\"_blank\">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a></p>\n",
      "exampleTestcases": "\"bcabc\"\n\"cbacdcbc\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [
        "Greedily try to add one missing character. How to check if adding some character will not cause problems ? Use bit-masks to check whether you will be able to complete the sub-sequence if you add the character at some index i."
      ],
      "solution": {
        "id": "761",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8690,
      "dislikes": 634,
      "similarQuestions": "[{\"title\": \"Smallest K-Length Subsequence With Occurrences of a Letter\", \"titleSlug\": \"smallest-k-length-subsequence-with-occurrences-of-a-letter\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486053,
      "commentCount": 156,
      "topLevelCommentCount": 89
    },
    "classAndMethodDefinition": "def removeDuplicateLetters(self, s: str) -> str:\n        "
  },
  {
    "stat": {
      "question_id": 304,
      "question__article__live": true,
      "question__article__slug": "range-sum-query-2d-immutable",
      "question__article__has_video_solution": true,
      "question__title": "Range Sum Query 2D - Immutable",
      "question__title_slug": "range-sum-query-2d-immutable",
      "question__hide": false,
      "total_acs": 379739,
      "total_submitted": 688381,
      "frontend_question_id": 304,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/range-sum-query-2d-immutable",
      "questionId": "304",
      "questionFrontendId": "304",
      "questionTitle": "Range Sum Query 2D - Immutable",
      "titleSlug": "range-sum-query-2d-immutable",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a 2D matrix <code>matrix</code>, handle multiple queries of the following type:</p>\n\n<ul>\n\t<li>Calculate the <strong>sum</strong> of the elements of <code>matrix</code> inside the rectangle defined by its <strong>upper left corner</strong> <code>(row1, col1)</code> and <strong>lower right corner</strong> <code>(row2, col2)</code>.</li>\n</ul>\n\n<p>Implement the <code>NumMatrix</code> class:</p>\n\n<ul>\n\t<li><code>NumMatrix(int[][] matrix)</code> Initializes the object with the integer matrix <code>matrix</code>.</li>\n\t<li><code>int sumRegion(int row1, int col1, int row2, int col2)</code> Returns the <strong>sum</strong> of the elements of <code>matrix</code> inside the rectangle defined by its <strong>upper left corner</strong> <code>(row1, col1)</code> and <strong>lower right corner</strong> <code>(row2, col2)</code>.</li>\n</ul>\n\n<p>You must design an algorithm where <code>sumRegion</code> works on <code>O(1)</code> time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/14/sum-grid.jpg\" style=\"width: 415px; height: 415px;\" />\n<pre>\n<strong>Input</strong>\n[&quot;NumMatrix&quot;, &quot;sumRegion&quot;, &quot;sumRegion&quot;, &quot;sumRegion&quot;]\n[[[[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]], [2, 1, 4, 3], [1, 1, 2, 2], [1, 2, 2, 4]]\n<strong>Output</strong>\n[null, 8, 11, 12]\n\n<strong>Explanation</strong>\nNumMatrix numMatrix = new NumMatrix([[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]);\nnumMatrix.sumRegion(2, 1, 4, 3); // return 8 (i.e sum of the red rectangle)\nnumMatrix.sumRegion(1, 1, 2, 2); // return 11 (i.e sum of the green rectangle)\nnumMatrix.sumRegion(1, 2, 2, 4); // return 12 (i.e sum of the blue rectangle)\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= matrix[i][j] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= row1 &lt;= row2 &lt; m</code></li>\n\t<li><code>0 &lt;= col1 &lt;= col2 &lt; n</code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>sumRegion</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"NumMatrix\",\"sumRegion\",\"sumRegion\",\"sumRegion\"]\n[[[[3,0,1,4,2],[5,6,3,2,1],[1,2,0,1,5],[4,1,0,1,7],[1,0,3,0,5]]],[2,1,4,3],[1,1,2,2],[1,2,2,4]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "10",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4984,
      "dislikes": 345,
      "similarQuestions": "[{\"title\": \"Range Sum Query - Immutable\", \"titleSlug\": \"range-sum-query-immutable\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query 2D - Mutable\", \"titleSlug\": \"range-sum-query-2d-mutable\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Grid of Region Average\", \"titleSlug\": \"find-the-grid-of-region-average\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486041,
      "commentCount": 27,
      "topLevelCommentCount": 15
    },
    "classAndMethodDefinition": "def __init__(self, matrix: List[List[int]]):\n        self.dp=[[0] * (len(matrix[0])+1) for _ in range(len(matrix)+1)]"
  },
  {
    "stat": {
      "question_id": 503,
      "question__article__live": true,
      "question__article__slug": "next-greater-element-ii",
      "question__article__has_video_solution": false,
      "question__title": "Next Greater Element II",
      "question__title_slug": "next-greater-element-ii",
      "question__hide": false,
      "total_acs": 444519,
      "total_submitted": 688126,
      "frontend_question_id": 503,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/next-greater-element-ii",
      "questionId": "503",
      "questionFrontendId": "503",
      "questionTitle": "Next Greater Element II",
      "titleSlug": "next-greater-element-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a circular integer array <code>nums</code> (i.e., the next element of <code>nums[nums.length - 1]</code> is <code>nums[0]</code>), return <em>the <strong>next greater number</strong> for every element in</em> <code>nums</code>.</p>\n\n<p>The <strong>next greater number</strong> of a number <code>x</code> is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn&#39;t exist, return <code>-1</code> for this number.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1]\n<strong>Output:</strong> [2,-1,2]\nExplanation: The first 1&#39;s next greater number is 2; \nThe number 2 can&#39;t find next greater number. \nThe second 1&#39;s next greater number needs to search circularly, which is also 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,3]\n<strong>Output:</strong> [2,3,4,-1,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,1]\n[1,2,3,4,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "88",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 8035,
      "dislikes": 196,
      "similarQuestions": "[{\"title\": \"Next Greater Element I\", \"titleSlug\": \"next-greater-element-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element III\", \"titleSlug\": \"next-greater-element-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486232,
      "commentCount": 73,
      "topLevelCommentCount": 34
    },
    "classAndMethodDefinition": "def nextGreaterElements(self, nums):\n        n = len(nums)"
  },
  {
    "stat": {
      "question_id": 368,
      "question__article__live": true,
      "question__article__slug": "largest-divisible-subset",
      "question__article__has_video_solution": false,
      "question__title": "Largest Divisible Subset",
      "question__title_slug": "largest-divisible-subset",
      "question__hide": false,
      "total_acs": 312226,
      "total_submitted": 684341,
      "frontend_question_id": 368,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/largest-divisible-subset",
      "questionId": "368",
      "questionFrontendId": "368",
      "questionTitle": "Largest Divisible Subset",
      "titleSlug": "largest-divisible-subset",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a set of <strong>distinct</strong> positive integers <code>nums</code>, return the largest subset <code>answer</code> such that every pair <code>(answer[i], answer[j])</code> of elements in this subset satisfies:</p>\n\n<ul>\n\t<li><code>answer[i] % answer[j] == 0</code>, or</li>\n\t<li><code>answer[j] % answer[i] == 0</code></li>\n</ul>\n\n<p>If there are multiple solutions, return any of them.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [1,2]\n<strong>Explanation:</strong> [1,3] is also accepted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,4,8]\n<strong>Output:</strong> [1,2,4,8]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 2 * 10<sup>9</sup></code></li>\n\t<li>All the integers in <code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[1,2,4,8]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "766",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5978,
      "dislikes": 283,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486105,
      "commentCount": 180,
      "topLevelCommentCount": 97
    },
    "classAndMethodDefinition": "def largestDivisibleSubset(self, nums):\n        S = {-1: set()}"
  },
  {
    "stat": {
      "question_id": 1482,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "How Many Numbers Are Smaller Than the Current Number",
      "question__title_slug": "how-many-numbers-are-smaller-than-the-current-number",
      "question__hide": false,
      "total_acs": 593666,
      "total_submitted": 682860,
      "frontend_question_id": 1365,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number",
      "questionId": "1482",
      "questionFrontendId": "1365",
      "questionTitle": "How Many Numbers Are Smaller Than the Current Number",
      "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the array <code>nums</code>, for each <code>nums[i]</code> find out how many numbers in the array are smaller than it. That is, for each <code>nums[i]</code> you have to count the number of valid <code>j&#39;s</code>&nbsp;such that&nbsp;<code>j != i</code> <strong>and</strong> <code>nums[j] &lt; nums[i]</code>.</p>\n\n<p>Return the answer in an array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [8,1,2,2,3]\n<strong>Output:</strong> [4,0,1,1,3]\n<strong>Explanation:</strong> \nFor nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3). \nFor nums[1]=1 does not exist any smaller number than it.\nFor nums[2]=2 there exist one smaller number than it (1). \nFor nums[3]=2 there exist one smaller number than it (1). \nFor nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [6,5,4,8]\n<strong>Output:</strong> [2,1,0,3]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [7,7,7,7]\n<strong>Output:</strong> [0,0,0,0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 500</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[8,1,2,2,3]\n[6,5,4,8]\n[7,7,7,7]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [
        "Brute force for each array element.",
        "In order to improve the time complexity, we can sort the array and get the answer for each array element."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 5489,
      "dislikes": 136,
      "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Subsequence With Limited Sum\", \"titleSlug\": \"longest-subsequence-with-limited-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487175,
      "commentCount": 54,
      "topLevelCommentCount": 33
    },
    "classAndMethodDefinition": "def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:\n\\ttemp = sorted(nums)"
  },
  {
    "stat": {
      "question_id": 1777,
      "question__article__live": true,
      "question__article__slug": "determine-if-two-strings-are-close",
      "question__article__has_video_solution": false,
      "question__title": "Determine if Two Strings Are Close",
      "question__title_slug": "determine-if-two-strings-are-close",
      "question__hide": false,
      "total_acs": 371322,
      "total_submitted": 681789,
      "frontend_question_id": 1657,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/determine-if-two-strings-are-close",
      "questionId": "1777",
      "questionFrontendId": "1657",
      "questionTitle": "Determine if Two Strings Are Close",
      "titleSlug": "determine-if-two-strings-are-close",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Two strings are considered <strong>close</strong> if you can attain one from the other using the following operations:</p>\n\n<ul>\n\t<li>Operation 1: Swap any two <strong>existing</strong> characters.\n\n\t<ul>\n\t\t<li>For example, <code>a<u>b</u>cd<u>e</u> -&gt; a<u>e</u>cd<u>b</u></code></li>\n\t</ul>\n\t</li>\n\t<li>Operation 2: Transform <strong>every</strong> occurrence of one <strong>existing</strong> character into another <strong>existing</strong> character, and do the same with the other character.\n\t<ul>\n\t\t<li>For example, <code><u>aa</u>c<u>abb</u> -&gt; <u>bb</u>c<u>baa</u></code> (all <code>a</code>&#39;s turn into <code>b</code>&#39;s, and all <code>b</code>&#39;s turn into <code>a</code>&#39;s)</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>You can use the operations on either string as many times as necessary.</p>\n\n<p>Given two strings, <code>word1</code> and <code>word2</code>, return <code>true</code><em> if </em><code>word1</code><em> and </em><code>word2</code><em> are <strong>close</strong>, and </em><code>false</code><em> otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;abc&quot;, word2 = &quot;bca&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can attain word2 from word1 in 2 operations.\nApply Operation 1: &quot;a<u>bc</u>&quot; -&gt; &quot;a<u>cb</u>&quot;\nApply Operation 1: &quot;<u>a</u>c<u>b</u>&quot; -&gt; &quot;<u>b</u>c<u>a</u>&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;a&quot;, word2 = &quot;aa&quot;\n<strong>Output:</strong> false\n<strong>Explanation: </strong>It is impossible to attain word2 from word1, or vice versa, in any number of operations.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;cabbba&quot;, word2 = &quot;abbccc&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can attain word2 from word1 in 3 operations.\nApply Operation 1: &quot;ca<u>b</u>bb<u>a</u>&quot; -&gt; &quot;ca<u>a</u>bb<u>b</u>&quot;\nApply Operation 2: &quot;<u>c</u>aa<u>bbb</u>&quot; -&gt; &quot;<u>b</u>aa<u>ccc</u>&quot;\nApply Operation 2: &quot;<u>baa</u>ccc&quot; -&gt; &quot;<u>abb</u>ccc&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word1.length, word2.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>word1</code> and <code>word2</code> contain only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abc\"\n\"bca\"\n\"a\"\n\"aa\"\n\"cabbba\"\n\"abbccc\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [
        "Operation 1 allows you to freely reorder the string.",
        "Operation 2 allows you to freely reassign the letters' frequencies."
      ],
      "solution": {
        "id": "1051",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3710,
      "dislikes": 297,
      "similarQuestions": "[{\"title\": \"Buddy Strings\", \"titleSlug\": \"buddy-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Swaps to Make Strings Equal\", \"titleSlug\": \"minimum-swaps-to-make-strings-equal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Steps to Make Two Strings Anagram\", \"titleSlug\": \"minimum-number-of-steps-to-make-two-strings-anagram\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487449,
      "commentCount": 328,
      "topLevelCommentCount": 179
    },
    "classAndMethodDefinition": "class Solution:\n    def closeStrings(self, word1: str, word2: str) -> bool:"
  },
  {
    "stat": {
      "question_id": 410,
      "question__article__live": true,
      "question__article__slug": "split-array-largest-sum",
      "question__article__has_video_solution": false,
      "question__title": "Split Array Largest Sum",
      "question__title_slug": "split-array-largest-sum",
      "question__hide": false,
      "total_acs": 381484,
      "total_submitted": 678134,
      "frontend_question_id": 410,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/split-array-largest-sum",
      "questionId": "410",
      "questionFrontendId": "410",
      "questionTitle": "Split Array Largest Sum",
      "titleSlug": "split-array-largest-sum",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, split <code>nums</code> into <code>k</code> non-empty subarrays such that the largest sum of any subarray is <strong>minimized</strong>.</p>\n\n<p>Return <em>the minimized largest sum of the split</em>.</p>\n\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [7,2,5,10,8], k = 2\n<strong>Output:</strong> 18\n<strong>Explanation:</strong> There are four ways to split nums into two subarrays.\nThe best way is to split it into [7,2,5] and [10,8], where the largest sum among the two subarrays is only 18.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5], k = 2\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> There are four ways to split nums into two subarrays.\nThe best way is to split it into [1,2,3] and [4,5], where the largest sum among the two subarrays is only 9.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= min(50, nums.length)</code></li>\n</ul>\n",
      "exampleTestcases": "[7,2,5,10,8]\n2\n[1,2,3,4,5]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1294",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9907,
      "dislikes": 226,
      "similarQuestions": "[{\"title\": \"Capacity To Ship Packages Within D Days\", \"titleSlug\": \"capacity-to-ship-packages-within-d-days\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Divide Chocolate\", \"titleSlug\": \"divide-chocolate\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Fair Distribution of Cookies\", \"titleSlug\": \"fair-distribution-of-cookies\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subsequence of Size K With the Largest Even Sum\", \"titleSlug\": \"subsequence-of-size-k-with-the-largest-even-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Total Beauty of the Gardens\", \"titleSlug\": \"maximum-total-beauty-of-the-gardens\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Ways to Split Array\", \"titleSlug\": \"number-of-ways-to-split-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost to Split an Array\", \"titleSlug\": \"minimum-cost-to-split-an-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Distribute Elements Into Two Arrays I\", \"titleSlug\": \"distribute-elements-into-two-arrays-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Distribute Elements Into Two Arrays II\", \"titleSlug\": \"distribute-elements-into-two-arrays-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486147,
      "commentCount": 126,
      "topLevelCommentCount": 72
    },
    "classAndMethodDefinition": "def splitArray(self, nums: List[int], m: int) -> int:\n        def cannot_split(max_sum, m):"
  },
  {
    "stat": {
      "question_id": 307,
      "question__article__live": true,
      "question__article__slug": "range-sum-query-mutable",
      "question__article__has_video_solution": false,
      "question__title": "Range Sum Query - Mutable",
      "question__title_slug": "range-sum-query-mutable",
      "question__hide": false,
      "total_acs": 279620,
      "total_submitted": 678041,
      "frontend_question_id": 307,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/range-sum-query-mutable",
      "questionId": "307",
      "questionFrontendId": "307",
      "questionTitle": "Range Sum Query - Mutable",
      "titleSlug": "range-sum-query-mutable",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, handle multiple queries of the following types:</p>\n\n<ol>\n\t<li><strong>Update</strong> the value of an element in <code>nums</code>.</li>\n\t<li>Calculate the <strong>sum</strong> of the elements of <code>nums</code> between indices <code>left</code> and <code>right</code> <strong>inclusive</strong> where <code>left &lt;= right</code>.</li>\n</ol>\n\n<p>Implement the <code>NumArray</code> class:</p>\n\n<ul>\n\t<li><code>NumArray(int[] nums)</code> Initializes the object with the integer array <code>nums</code>.</li>\n\t<li><code>void update(int index, int val)</code> <strong>Updates</strong> the value of <code>nums[index]</code> to be <code>val</code>.</li>\n\t<li><code>int sumRange(int left, int right)</code> Returns the <strong>sum</strong> of the elements of <code>nums</code> between indices <code>left</code> and <code>right</code> <strong>inclusive</strong> (i.e. <code>nums[left] + nums[left + 1] + ... + nums[right]</code>).</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;NumArray&quot;, &quot;sumRange&quot;, &quot;update&quot;, &quot;sumRange&quot;]\n[[[1, 3, 5]], [0, 2], [1, 2], [0, 2]]\n<strong>Output</strong>\n[null, 9, null, 8]\n\n<strong>Explanation</strong>\nNumArray numArray = new NumArray([1, 3, 5]);\nnumArray.sumRange(0, 2); // return 1 + 3 + 5 = 9\nnumArray.update(1, 2);   // nums = [1, 2, 5]\nnumArray.sumRange(0, 2); // return 1 + 2 + 5 = 8\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-100 &lt;= nums[i] &lt;= 100</code></li>\n\t<li><code>0 &lt;= index &lt; nums.length</code></li>\n\t<li><code>-100 &lt;= val &lt;= 100</code></li>\n\t<li><code>0 &lt;= left &lt;= right &lt; nums.length</code></li>\n\t<li>At most <code>3 * 10<sup>4</sup></code> calls will be made to <code>update</code> and <code>sumRange</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"NumArray\",\"sumRange\",\"update\",\"sumRange\"]\n[[[1,3,5]],[0,2],[1,2],[0,2]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree",
          "translatedName": null
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "29",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4773,
      "dislikes": 256,
      "similarQuestions": "[{\"title\": \"Range Sum Query - Immutable\", \"titleSlug\": \"range-sum-query-immutable\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query 2D - Mutable\", \"titleSlug\": \"range-sum-query-2d-mutable\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Shifting Letters II\", \"titleSlug\": \"shifting-letters-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486044,
      "commentCount": 53,
      "topLevelCommentCount": 32
    },
    "classAndMethodDefinition": "def __init__(self, start, end):\n            self.start = start"
  },
  {
    "stat": {
      "question_id": 260,
      "question__article__live": true,
      "question__article__slug": "single-number-iii",
      "question__article__has_video_solution": false,
      "question__title": "Single Number III",
      "question__title_slug": "single-number-iii",
      "question__hide": false,
      "total_acs": 475724,
      "total_submitted": 672184,
      "frontend_question_id": 260,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/single-number-iii",
      "questionId": "260",
      "questionFrontendId": "260",
      "questionTitle": "Single Number III",
      "titleSlug": "single-number-iii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in <strong>any order</strong>.</p>\n\n<p>You must write an&nbsp;algorithm that runs in linear runtime complexity and uses&nbsp;only constant extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1,3,2,5]\n<strong>Output:</strong> [3,5]\n<strong>Explanation: </strong> [5, 3] is also a valid answer.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,0]\n<strong>Output:</strong> [-1,0]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1]\n<strong>Output:</strong> [1,0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>Each integer in <code>nums</code> will appear twice, only two integers will appear once.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,1,3,2,5]\n[-1,0]\n[0,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "764",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6379,
      "dislikes": 267,
      "similarQuestions": "[{\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Single Number II\", \"titleSlug\": \"single-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find The Original Array of Prefix Xor\", \"titleSlug\": \"find-the-original-array-of-prefix-xor\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the XOR of Numbers Which Appear Twice\", \"titleSlug\": \"find-the-xor-of-numbers-which-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485997,
      "commentCount": 262,
      "topLevelCommentCount": 134
    },
    "classAndMethodDefinition": "def singleNumber(self, nums: List[int]) -> List[int]:\n        n = len(nums)"
  },
  {
    "stat": {
      "question_id": 476,
      "question__article__live": true,
      "question__article__slug": "number-complement",
      "question__article__has_video_solution": false,
      "question__title": "Number Complement",
      "question__title_slug": "number-complement",
      "question__hide": false,
      "total_acs": 471832,
      "total_submitted": 671134,
      "frontend_question_id": 476,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-complement",
      "questionId": "476",
      "questionFrontendId": "476",
      "questionTitle": "Number Complement",
      "titleSlug": "number-complement",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>The <strong>complement</strong> of an integer is the integer you get when you flip all the <code>0</code>&#39;s to <code>1</code>&#39;s and all the <code>1</code>&#39;s to <code>0</code>&#39;s in its binary representation.</p>\n\n<ul>\n\t<li>For example, The integer <code>5</code> is <code>&quot;101&quot;</code> in binary and its <strong>complement</strong> is <code>&quot;010&quot;</code> which is the integer <code>2</code>.</li>\n</ul>\n\n<p>Given an integer <code>num</code>, return <em>its complement</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt; 2<sup>31</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as 1009: <a href=\"https://leetcode.com/problems/complement-of-base-10-integer/\" target=\"_blank\">https://leetcode.com/problems/complement-of-base-10-integer/</a></p>\n",
      "exampleTestcases": "5\n1",
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "914",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3071,
      "dislikes": 135,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486206,
      "commentCount": 123,
      "topLevelCommentCount": 84
    },
    "classAndMethodDefinition": "class Solution:\n    def findComplement(self, num: int) -> int:"
  },
  {
    "stat": {
      "question_id": 1349,
      "question__article__live": true,
      "question__article__slug": "check-if-it-is-a-straight-line",
      "question__article__has_video_solution": false,
      "question__title": "Check If It Is a Straight Line",
      "question__title_slug": "check-if-it-is-a-straight-line",
      "question__hide": false,
      "total_acs": 263561,
      "total_submitted": 667112,
      "frontend_question_id": 1232,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/check-if-it-is-a-straight-line",
      "questionId": "1349",
      "questionFrontendId": "1232",
      "questionTitle": "Check If It Is a Straight Line",
      "titleSlug": "check-if-it-is-a-straight-line",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an array&nbsp;<code>coordinates</code>, <code>coordinates[i] = [x, y]</code>, where <code>[x, y]</code> represents the coordinate of a point. Check if these points&nbsp;make a straight line in the XY plane.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/15/untitled-diagram-2.jpg\" style=\"width: 336px; height: 336px;\" /></p>\n\n<pre>\n<strong>Input:</strong> coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/09/untitled-diagram-1.jpg\" style=\"width: 348px; height: 336px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;=&nbsp;coordinates.length &lt;= 1000</code></li>\n\t<li><code>coordinates[i].length == 2</code></li>\n\t<li><code>-10^4 &lt;=&nbsp;coordinates[i][0],&nbsp;coordinates[i][1] &lt;= 10^4</code></li>\n\t<li><code>coordinates</code>&nbsp;contains no duplicate point.</li>\n</ul>\n",
      "exampleTestcases": "[[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]\n[[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Geometry",
          "slug": "geometry",
          "translatedName": null
        }
      ],
      "hints": [
        "If there're only 2 points, return true.",
        "Check if all other points lie on the line defined by the first 2 points.",
        "Use cross product to check collinearity."
      ],
      "solution": {
        "id": "1854",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2604,
      "dislikes": 279,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487043,
      "commentCount": 88,
      "topLevelCommentCount": 55
    },
    "classAndMethodDefinition": "def checkStraightLine(self, coordinates: List[List[int]]) -> bool:\n        (x0, y0), (x1, y1) = coordinates[: 2]"
  },
  {
    "stat": {
      "question_id": 482,
      "question__article__live": true,
      "question__article__slug": "license-key-formatting",
      "question__article__has_video_solution": false,
      "question__title": "License Key Formatting",
      "question__title_slug": "license-key-formatting",
      "question__hide": false,
      "total_acs": 291193,
      "total_submitted": 661283,
      "frontend_question_id": 482,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/license-key-formatting",
      "questionId": "482",
      "questionFrontendId": "482",
      "questionTitle": "License Key Formatting",
      "titleSlug": "license-key-formatting",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given a license key represented as a string <code>s</code> that consists of only alphanumeric characters and dashes. The string is separated into <code>n + 1</code> groups by <code>n</code> dashes. You are also given an integer <code>k</code>.</p>\n\n<p>We want to reformat the string <code>s</code> such that each group contains exactly <code>k</code> characters, except for the first group, which could be shorter than <code>k</code> but still must contain at least one character. Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase.</p>\n\n<p>Return <em>the reformatted license key</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;5F3Z-2e-9-w&quot;, k = 4\n<strong>Output:</strong> &quot;5F3Z-2E9W&quot;\n<strong>Explanation:</strong> The string s has been split into two parts, each part has 4 characters.\nNote that the two extra dashes are not needed and can be removed.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;2-5g-3-J&quot;, k = 2\n<strong>Output:</strong> &quot;2-5G-3J&quot;\n<strong>Explanation:</strong> The string s has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of English letters, digits, and dashes <code>&#39;-&#39;</code>.</li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "\"5F3Z-2e-9-w\"\n4\n\"2-5g-3-J\"\n2",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1596",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1114,
      "dislikes": 1418,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486212,
      "commentCount": 44,
      "topLevelCommentCount": 31
    },
    "classAndMethodDefinition": "def licenseKeyFormatting(self, S: str, K: int) -> str:\n        "
  },
  {
    "stat": {
      "question_id": 813,
      "question__article__live": true,
      "question__article__slug": "all-paths-from-source-to-target",
      "question__article__has_video_solution": false,
      "question__title": "All Paths From Source to Target",
      "question__title_slug": "all-paths-from-source-to-target",
      "question__hide": false,
      "total_acs": 544651,
      "total_submitted": 659125,
      "frontend_question_id": 797,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/all-paths-from-source-to-target",
      "questionId": "813",
      "questionFrontendId": "797",
      "questionTitle": "All Paths From Source to Target",
      "titleSlug": "all-paths-from-source-to-target",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a directed acyclic graph (<strong>DAG</strong>) of <code>n</code> nodes labeled from <code>0</code> to <code>n - 1</code>, find all possible paths from node <code>0</code> to node <code>n - 1</code> and return them in <strong>any order</strong>.</p>\n\n<p>The graph is given as follows: <code>graph[i]</code> is a list of all nodes you can visit from node <code>i</code> (i.e., there is a directed edge from node <code>i</code> to node <code>graph[i][j]</code>).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/28/all_1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> graph = [[1,2],[3],[3],[]]\n<strong>Output:</strong> [[0,1,3],[0,2,3]]\n<strong>Explanation:</strong> There are two paths: 0 -&gt; 1 -&gt; 3 and 0 -&gt; 2 -&gt; 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/28/all_2.jpg\" style=\"width: 423px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> graph = [[4,3,1],[3,2,4],[3],[4],[]]\n<strong>Output:</strong> [[0,4],[0,3,4],[0,1,3,4],[0,1,2,3,4],[0,1,4]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == graph.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 15</code></li>\n\t<li><code>0 &lt;= graph[i][j] &lt; n</code></li>\n\t<li><code>graph[i][j] != i</code> (i.e., there will be no self-loops).</li>\n\t<li>All the elements of <code>graph[i]</code> are <strong>unique</strong>.</li>\n\t<li>The input graph is <strong>guaranteed</strong> to be a <strong>DAG</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[[1,2],[3],[3],[]]\n[[4,3,1],[3,2,4],[3],[4],[]]",
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "971",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7264,
      "dislikes": 147,
      "similarQuestions": "[{\"title\": \"Number of Ways to Arrive at Destination\", \"titleSlug\": \"number-of-ways-to-arrive-at-destination\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Increasing Paths in a Grid\", \"titleSlug\": \"number-of-increasing-paths-in-a-grid\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486525,
      "commentCount": 107,
      "topLevelCommentCount": 54
    },
    "classAndMethodDefinition": "def allPathsSourceTarget(graph):\n        "
  },
  {
    "stat": {
      "question_id": 493,
      "question__article__live": false,
      "question__article__slug": "reverse-pairs",
      "question__article__has_video_solution": false,
      "question__title": "Reverse Pairs",
      "question__title_slug": "reverse-pairs",
      "question__hide": false,
      "total_acs": 203472,
      "total_submitted": 657448,
      "frontend_question_id": 493,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-pairs",
      "questionId": "493",
      "questionFrontendId": "493",
      "questionTitle": "Reverse Pairs",
      "titleSlug": "reverse-pairs",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <em>the number of <strong>reverse pairs</strong> in the array</em>.</p>\n\n<p>A <strong>reverse pair</strong> is a pair <code>(i, j)</code> where:</p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt; j &lt; nums.length</code> and</li>\n\t<li><code>nums[i] &gt; 2 * nums[j]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,2,3,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The reverse pairs are:\n(1, 4) --&gt; nums[1] = 3, nums[4] = 1, 3 &gt; 2 * 1\n(3, 4) --&gt; nums[3] = 3, nums[4] = 1, 3 &gt; 2 * 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4,3,5,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The reverse pairs are:\n(1, 4) --&gt; nums[1] = 4, nums[4] = 1, 4 &gt; 2 * 1\n(2, 4) --&gt; nums[2] = 3, nums[4] = 1, 3 &gt; 2 * 1\n(3, 4) --&gt; nums[3] = 5, nums[4] = 1, 5 &gt; 2 * 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,2,3,1]\n[2,4,3,5,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree",
          "translatedName": null
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree",
          "translatedName": null
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort",
          "translatedName": null
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set",
          "translatedName": null
        }
      ],
      "hints": [
        "Use the merge-sort technique.",
        "Divide the array into two parts and sort them.",
        "For each integer in the first part, count the number of integers that satisfy the condition from the second part. Use the pointer to help you in the counting process."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 6217,
      "dislikes": 272,
      "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count of Range Sum\", \"titleSlug\": \"count-of-range-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486223,
      "commentCount": 109,
      "topLevelCommentCount": 48
    },
    "classAndMethodDefinition": "def reversePairs(self, nums):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 974,
      "question__article__live": true,
      "question__article__slug": "reorder-data-in-log-files",
      "question__article__has_video_solution": false,
      "question__title": "Reorder Data in Log Files",
      "question__title_slug": "reorder-data-in-log-files",
      "question__hide": false,
      "total_acs": 371358,
      "total_submitted": 657205,
      "frontend_question_id": 937,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reorder-data-in-log-files",
      "questionId": "974",
      "questionFrontendId": "937",
      "questionTitle": "Reorder Data in Log Files",
      "titleSlug": "reorder-data-in-log-files",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of <code>logs</code>. Each log is a space-delimited string of words, where the first word is the <strong>identifier</strong>.</p>\n\n<p>There are two types of logs:</p>\n\n<ul>\n\t<li><b>Letter-logs</b>: All words (except the identifier) consist of lowercase English letters.</li>\n\t<li><strong>Digit-logs</strong>: All words (except the identifier) consist of digits.</li>\n</ul>\n\n<p>Reorder these logs so that:</p>\n\n<ol>\n\t<li>The <strong>letter-logs</strong> come before all <strong>digit-logs</strong>.</li>\n\t<li>The <strong>letter-logs</strong> are sorted lexicographically by their contents. If their contents are the same, then sort them lexicographically by their identifiers.</li>\n\t<li>The <strong>digit-logs</strong> maintain their relative ordering.</li>\n</ol>\n\n<p>Return <em>the final order of the logs</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> logs = [&quot;dig1 8 1 5 1&quot;,&quot;let1 art can&quot;,&quot;dig2 3 6&quot;,&quot;let2 own kit dig&quot;,&quot;let3 art zero&quot;]\n<strong>Output:</strong> [&quot;let1 art can&quot;,&quot;let3 art zero&quot;,&quot;let2 own kit dig&quot;,&quot;dig1 8 1 5 1&quot;,&quot;dig2 3 6&quot;]\n<strong>Explanation:</strong>\nThe letter-log contents are all different, so their ordering is &quot;art can&quot;, &quot;art zero&quot;, &quot;own kit dig&quot;.\nThe digit-logs have a relative order of &quot;dig1 8 1 5 1&quot;, &quot;dig2 3 6&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> logs = [&quot;a1 9 2 3 1&quot;,&quot;g1 act car&quot;,&quot;zo4 4 7&quot;,&quot;ab1 off key dog&quot;,&quot;a8 act zoo&quot;]\n<strong>Output:</strong> [&quot;g1 act car&quot;,&quot;a8 act zoo&quot;,&quot;ab1 off key dog&quot;,&quot;a1 9 2 3 1&quot;,&quot;zo4 4 7&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= logs.length &lt;= 100</code></li>\n\t<li><code>3 &lt;= logs[i].length &lt;= 100</code></li>\n\t<li>All the tokens of <code>logs[i]</code> are separated by a <strong>single</strong> space.</li>\n\t<li><code>logs[i]</code> is guaranteed to have an identifier and at least one word after the identifier.</li>\n</ul>\n",
      "exampleTestcases": "[\"dig1 8 1 5 1\",\"let1 art can\",\"dig2 3 6\",\"let2 own kit dig\",\"let3 art zero\"]\n[\"a1 9 2 3 1\",\"g1 act car\",\"zo4 4 7\",\"ab1 off key dog\",\"a8 act zoo\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "998",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2107,
      "dislikes": 4385,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486680,
      "commentCount": 35,
      "topLevelCommentCount": 25
    },
    "classAndMethodDefinition": "def reorderLogFiles(self, logs: List[str]) -> List[str]:\n        return sorted(logs,key = self.sort)"
  },
  {
    "stat": {
      "question_id": 742,
      "question__article__live": true,
      "question__article__slug": "to-lower-case",
      "question__article__has_video_solution": false,
      "question__title": "To Lower Case",
      "question__title_slug": "to-lower-case",
      "question__hide": false,
      "total_acs": 548997,
      "total_submitted": 656537,
      "frontend_question_id": 709,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/to-lower-case",
      "questionId": "742",
      "questionFrontendId": "709",
      "questionTitle": "To Lower Case",
      "titleSlug": "to-lower-case",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, return <em>the string after replacing every uppercase letter with the same lowercase letter</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Hello&quot;\n<strong>Output:</strong> &quot;hello&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;here&quot;\n<strong>Output:</strong> &quot;here&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;LOVELY&quot;\n<strong>Output:</strong> &quot;lovely&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists of printable ASCII characters.</li>\n</ul>\n",
      "exampleTestcases": "\"Hello\"\n\"here\"\n\"LOVELY\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "Most languages support lowercase conversion for a string data type. However, that is certainly not the purpose of the problem. Think about how the implementation of the lowercase function call can be done easily.",
        "<b>Think ASCII!</b>",
        "Think about the different capital letters and their ASCII codes and how that relates to their lowercase counterparts. Does there seem to be any pattern there? Any mathematical relationship that we can use?"
      ],
      "solution": {
        "id": "920",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1857,
      "dislikes": 2775,
      "similarQuestions": "[{\"title\": \"Capitalize the Title\", \"titleSlug\": \"capitalize-the-title\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486454,
      "commentCount": 55,
      "topLevelCommentCount": 44
    },
    "classAndMethodDefinition": "def toLowerCase(self, s: str) -> str:\n        ans = \"\""
  },
  {
    "stat": {
      "question_id": 816,
      "question__article__live": true,
      "question__article__slug": "design-hashset",
      "question__article__has_video_solution": false,
      "question__title": "Design HashSet",
      "question__title_slug": "design-hashset",
      "question__hide": false,
      "total_acs": 438184,
      "total_submitted": 652702,
      "frontend_question_id": 705,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/design-hashset",
      "questionId": "816",
      "questionFrontendId": "705",
      "questionTitle": "Design HashSet",
      "titleSlug": "design-hashset",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Design a HashSet without using any built-in hash table libraries.</p>\n\n<p>Implement <code>MyHashSet</code> class:</p>\n\n<ul>\n\t<li><code>void add(key)</code> Inserts the value <code>key</code> into the HashSet.</li>\n\t<li><code>bool contains(key)</code> Returns whether the value <code>key</code> exists in the HashSet or not.</li>\n\t<li><code>void remove(key)</code> Removes the value <code>key</code> in the HashSet. If <code>key</code> does not exist in the HashSet, do nothing.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyHashSet&quot;, &quot;add&quot;, &quot;add&quot;, &quot;contains&quot;, &quot;contains&quot;, &quot;add&quot;, &quot;contains&quot;, &quot;remove&quot;, &quot;contains&quot;]\n[[], [1], [2], [1], [3], [2], [2], [2], [2]]\n<strong>Output</strong>\n[null, null, null, true, false, null, true, null, false]\n\n<strong>Explanation</strong>\nMyHashSet myHashSet = new MyHashSet();\nmyHashSet.add(1);      // set = [1]\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(1); // return True\nmyHashSet.contains(3); // return False, (not found)\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(2); // return True\nmyHashSet.remove(2);   // set = [1]\nmyHashSet.contains(2); // return False, (already removed)</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= key &lt;= 10<sup>6</sup></code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>add</code>, <code>remove</code>, and <code>contains</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"MyHashSet\",\"add\",\"add\",\"contains\",\"contains\",\"add\",\"contains\",\"remove\",\"contains\"]\n[[],[1],[2],[1],[3],[2],[2],[2],[2]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Hash Function",
          "slug": "hash-function",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "852",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3789,
      "dislikes": 309,
      "similarQuestions": "[{\"title\": \"Design HashMap\", \"titleSlug\": \"design-hashmap\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Design Skiplist\", \"titleSlug\": \"design-skiplist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486528,
      "commentCount": 95,
      "topLevelCommentCount": 60
    },
    "classAndMethodDefinition": "def __init__(self):\n        self.mp=defaultdict(int)"
  },
  {
    "stat": {
      "question_id": 1016,
      "question__article__live": true,
      "question__article__slug": "subarray-sums-divisible-by-k",
      "question__article__has_video_solution": false,
      "question__title": "Subarray Sums Divisible by K",
      "question__title_slug": "subarray-sums-divisible-by-k",
      "question__hide": false,
      "total_acs": 360751,
      "total_submitted": 650603,
      "frontend_question_id": 974,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/subarray-sums-divisible-by-k",
      "questionId": "1016",
      "questionFrontendId": "974",
      "questionTitle": "Subarray Sums Divisible by K",
      "titleSlug": "subarray-sums-divisible-by-k",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the number of non-empty <strong>subarrays</strong> that have a sum divisible by </em><code>k</code>.</p>\n\n<p>A <strong>subarray</strong> is a <strong>contiguous</strong> part of an array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,5,0,-2,-3,1], k = 5\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> There are 7 subarrays with a sum divisible by k = 5:\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5], k = 9\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>2 &lt;= k &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[4,5,0,-2,-3,1]\n5\n[5]\n9",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1643",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7232,
      "dislikes": 319,
      "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Make Sum Divisible by P\", \"titleSlug\": \"make-sum-divisible-by-p\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Bad Pairs\", \"titleSlug\": \"count-number-of-bad-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Divisibility Array of a String\", \"titleSlug\": \"find-the-divisibility-array-of-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count of Interesting Subarrays\", \"titleSlug\": \"count-of-interesting-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486718,
      "commentCount": 348,
      "topLevelCommentCount": 173
    },
    "classAndMethodDefinition": "class Solution:\n    def subarraysDivByK(self, nums: List[int], k: int) -> int:"
  },
  {
    "stat": {
      "question_id": 871,
      "question__article__live": true,
      "question__article__slug": "keys-and-rooms",
      "question__article__has_video_solution": false,
      "question__title": "Keys and Rooms",
      "question__title_slug": "keys-and-rooms",
      "question__hide": false,
      "total_acs": 478218,
      "total_submitted": 650307,
      "frontend_question_id": 841,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/keys-and-rooms",
      "questionId": "871",
      "questionFrontendId": "841",
      "questionTitle": "Keys and Rooms",
      "titleSlug": "keys-and-rooms",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> rooms labeled from <code>0</code> to <code>n - 1</code>&nbsp;and all the rooms are locked except for room <code>0</code>. Your goal is to visit all the rooms. However, you cannot enter a locked room without having its key.</p>\n\n<p>When you visit a room, you may find a set of <strong>distinct keys</strong> in it. Each key has a number on it, denoting which room it unlocks, and you can take all of them with you to unlock the other rooms.</p>\n\n<p>Given an array <code>rooms</code> where <code>rooms[i]</code> is the set of keys that you can obtain if you visited room <code>i</code>, return <code>true</code> <em>if you can visit <strong>all</strong> the rooms, or</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> rooms = [[1],[2],[3],[]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \nWe visit room 0 and pick up key 1.\nWe then visit room 1 and pick up key 2.\nWe then visit room 2 and pick up key 3.\nWe then visit room 3.\nSince we were able to visit every room, we return true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> rooms = [[1,3],[3,0,1],[2],[0]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> We can not enter room number 2 since the only key that unlocks it is in that room.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == rooms.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 1000</code></li>\n\t<li><code>0 &lt;= rooms[i].length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= sum(rooms[i].length) &lt;= 3000</code></li>\n\t<li><code>0 &lt;= rooms[i][j] &lt; n</code></li>\n\t<li>All the values of <code>rooms[i]</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[[1],[2],[3],[]]\n[[1,3],[3,0,1],[2],[0]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "472",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6165,
      "dislikes": 279,
      "similarQuestions": "[{\"title\": \"Graph Valid Tree\", \"titleSlug\": \"graph-valid-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486577,
      "commentCount": 175,
      "topLevelCommentCount": 100
    },
    "classAndMethodDefinition": "def canVisitAllRooms(self, rooms: List[List[int]]) -> bool:\n        visited = set()"
  },
  {
    "stat": {
      "question_id": 860,
      "question__article__live": true,
      "question__article__slug": "design-circular-queue",
      "question__article__has_video_solution": false,
      "question__title": "Design Circular Queue",
      "question__title_slug": "design-circular-queue",
      "question__hide": false,
      "total_acs": 331538,
      "total_submitted": 640817,
      "frontend_question_id": 622,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/design-circular-queue",
      "questionId": "860",
      "questionFrontendId": "622",
      "questionTitle": "Design Circular Queue",
      "titleSlug": "design-circular-queue",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle, and the last position is connected back to the first position to make a circle. It is also called &quot;Ring Buffer&quot;.</p>\n\n<p>One of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.</p>\n\n<p>Implement the <code>MyCircularQueue</code> class:</p>\n\n<ul>\n\t<li><code>MyCircularQueue(k)</code> Initializes the object with the size of the queue to be <code>k</code>.</li>\n\t<li><code>int Front()</code> Gets the front item from the queue. If the queue is empty, return <code>-1</code>.</li>\n\t<li><code>int Rear()</code> Gets the last item from the queue. If the queue is empty, return <code>-1</code>.</li>\n\t<li><code>boolean enQueue(int value)</code> Inserts an element into the circular queue. Return <code>true</code> if the operation is successful.</li>\n\t<li><code>boolean deQueue()</code> Deletes an element from the circular queue. Return <code>true</code> if the operation is successful.</li>\n\t<li><code>boolean isEmpty()</code> Checks whether the circular queue is empty or not.</li>\n\t<li><code>boolean isFull()</code> Checks whether the circular queue is full or not.</li>\n</ul>\n\n<p>You must solve the problem without using the built-in queue data structure in your programming language.&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyCircularQueue&quot;, &quot;enQueue&quot;, &quot;enQueue&quot;, &quot;enQueue&quot;, &quot;enQueue&quot;, &quot;Rear&quot;, &quot;isFull&quot;, &quot;deQueue&quot;, &quot;enQueue&quot;, &quot;Rear&quot;]\n[[3], [1], [2], [3], [4], [], [], [], [4], []]\n<strong>Output</strong>\n[null, true, true, true, false, 3, true, true, true, 4]\n\n<strong>Explanation</strong>\nMyCircularQueue myCircularQueue = new MyCircularQueue(3);\nmyCircularQueue.enQueue(1); // return True\nmyCircularQueue.enQueue(2); // return True\nmyCircularQueue.enQueue(3); // return True\nmyCircularQueue.enQueue(4); // return False\nmyCircularQueue.Rear();     // return 3\nmyCircularQueue.isFull();   // return True\nmyCircularQueue.deQueue();  // return True\nmyCircularQueue.enQueue(4); // return True\nmyCircularQueue.Rear();     // return 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= 1000</code></li>\n\t<li><code>0 &lt;= value &lt;= 1000</code></li>\n\t<li>At most <code>3000</code> calls will be made to&nbsp;<code>enQueue</code>, <code>deQueue</code>,&nbsp;<code>Front</code>,&nbsp;<code>Rear</code>,&nbsp;<code>isEmpty</code>, and&nbsp;<code>isFull</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"MyCircularQueue\",\"enQueue\",\"enQueue\",\"enQueue\",\"enQueue\",\"Rear\",\"isFull\",\"deQueue\",\"enQueue\",\"Rear\"]\n[[3],[1],[2],[3],[4],[],[],[],[4],[]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "811",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3541,
      "dislikes": 293,
      "similarQuestions": "[{\"title\": \"Design Circular Deque\", \"titleSlug\": \"design-circular-deque\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Front Middle Back Queue\", \"titleSlug\": \"design-front-middle-back-queue\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486566,
      "commentCount": 45,
      "topLevelCommentCount": 26
    },
    "classAndMethodDefinition": "def __init__(self, k: int):\n        self.data = [0] * k"
  },
  {
    "stat": {
      "question_id": 1137,
      "question__article__live": true,
      "question__article__slug": "height-checker",
      "question__article__has_video_solution": false,
      "question__title": "Height Checker",
      "question__title_slug": "height-checker",
      "question__hide": false,
      "total_acs": 514165,
      "total_submitted": 636040,
      "frontend_question_id": 1051,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/height-checker",
      "questionId": "1137",
      "questionFrontendId": "1051",
      "questionTitle": "Height Checker",
      "titleSlug": "height-checker",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>A school is trying to take an annual photo of all the students. The students are asked to stand in a single file line in <strong>non-decreasing order</strong> by height. Let this ordering be represented by the integer array <code>expected</code> where <code>expected[i]</code> is the expected height of the <code>i<sup>th</sup></code> student in line.</p>\n\n<p>You are given an integer array <code>heights</code> representing the <strong>current order</strong> that the students are standing in. Each <code>heights[i]</code> is the height of the <code>i<sup>th</sup></code> student in line (<strong>0-indexed</strong>).</p>\n\n<p>Return <em>the <strong>number of indices</strong> where </em><code>heights[i] != expected[i]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [1,1,4,2,1,3]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nheights:  [1,1,<u>4</u>,2,<u>1</u>,<u>3</u>]\nexpected: [1,1,<u>1</u>,2,<u>3</u>,<u>4</u>]\nIndices 2, 4, and 5 do not match.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [5,1,2,3,4]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nheights:  [<u>5</u>,<u>1</u>,<u>2</u>,<u>3</u>,<u>4</u>]\nexpected: [<u>1</u>,<u>2</u>,<u>3</u>,<u>4</u>,<u>5</u>]\nAll indices do not match.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [1,2,3,4,5]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nheights:  [1,2,3,4,5]\nexpected: [1,2,3,4,5]\nAll indices match.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= heights.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= heights[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,4,2,1,3]\n[5,1,2,3,4]\n[1,2,3,4,5]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort",
          "translatedName": null
        }
      ],
      "hints": [
        "Build the correct order of heights by sorting another array, then compare the two arrays."
      ],
      "solution": {
        "id": "2338",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1609,
      "dislikes": 113,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486837,
      "commentCount": 224,
      "topLevelCommentCount": 158
    },
    "classAndMethodDefinition": "class Solution:\n    def heightChecker(self, heights: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 807,
      "question__article__live": true,
      "question__article__slug": "custom-sort-string",
      "question__article__has_video_solution": false,
      "question__title": "Custom Sort String",
      "question__title_slug": "custom-sort-string",
      "question__hide": false,
      "total_acs": 450711,
      "total_submitted": 635288,
      "frontend_question_id": 791,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/custom-sort-string",
      "questionId": "807",
      "questionFrontendId": "791",
      "questionTitle": "Custom Sort String",
      "titleSlug": "custom-sort-string",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given two strings <code>order</code> and <code>s</code>. All the characters of <code>order</code> are <strong>unique</strong> and were sorted in some custom order previously.</p>\n\n<p>Permute the characters of <code>s</code> so that they match the order that <code>order</code> was sorted. More specifically, if a character <code>x</code> occurs before a character <code>y</code> in <code>order</code>, then <code>x</code> should occur before <code>y</code> in the permuted string.</p>\n\n<p>Return <em>any permutation of </em><code>s</code><em> that satisfies this property</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input: </strong> <span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\"> order = &quot;cba&quot;, s = &quot;abcd&quot; </span></p>\n\n<p><strong>Output: </strong> <span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\"> &quot;cbad&quot; </span></p>\n\n<p><strong>Explanation: </strong> <code>&quot;a&quot;</code>, <code>&quot;b&quot;</code>, <code>&quot;c&quot;</code> appear in order, so the order of <code>&quot;a&quot;</code>, <code>&quot;b&quot;</code>, <code>&quot;c&quot;</code> should be <code>&quot;c&quot;</code>, <code>&quot;b&quot;</code>, and <code>&quot;a&quot;</code>.</p>\n\n<p>Since <code>&quot;d&quot;</code> does not appear in <code>order</code>, it can be at any position in the returned string. <code>&quot;dcba&quot;</code>, <code>&quot;cdba&quot;</code>, <code>&quot;cbda&quot;</code> are also valid outputs.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input: </strong> <span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\"> order = &quot;bcafg&quot;, s = &quot;abcd&quot; </span></p>\n\n<p><strong>Output: </strong> <span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\"> &quot;bcad&quot; </span></p>\n\n<p><strong>Explanation: </strong> The characters <code>&quot;b&quot;</code>, <code>&quot;c&quot;</code>, and <code>&quot;a&quot;</code> from <code>order</code> dictate the order for the characters in <code>s</code>. The character <code>&quot;d&quot;</code> in <code>s</code> does not appear in <code>order</code>, so its position is flexible.</p>\n\n<p>Following the order of appearance in <code>order</code>, <code>&quot;b&quot;</code>, <code>&quot;c&quot;</code>, and <code>&quot;a&quot;</code> from <code>s</code> should be arranged as <code>&quot;b&quot;</code>, <code>&quot;c&quot;</code>, <code>&quot;a&quot;</code>. <code>&quot;d&quot;</code> can be placed at any position since it&#39;s not in order. The output <code>&quot;bcad&quot;</code> correctly follows this rule. Other arrangements like <code>&quot;dbca&quot;</code> or <code>&quot;bcda&quot;</code> would also be valid, as long as <code>&quot;b&quot;</code>, <code>&quot;c&quot;</code>, <code>&quot;a&quot;</code> maintain their order.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= order.length &lt;= 26</code></li>\n\t<li><code>1 &lt;= s.length &lt;= 200</code></li>\n\t<li><code>order</code> and <code>s</code> consist of lowercase English letters.</li>\n\t<li>All the characters of <code>order</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "\"cba\"\n\"abcd\"\n\"bcafg\"\n\"abcd\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2264",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3623,
      "dislikes": 415,
      "similarQuestions": "[{\"title\": \"Sort the Students by Their Kth Score\", \"titleSlug\": \"sort-the-students-by-their-kth-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486519,
      "commentCount": 235,
      "topLevelCommentCount": 135
    },
    "classAndMethodDefinition": "class Solution(object):\n    def customSortString(self, order, s):"
  },
  {
    "stat": {
      "question_id": 561,
      "question__article__live": true,
      "question__article__slug": "array-partition-i",
      "question__article__has_video_solution": false,
      "question__title": "Array Partition",
      "question__title_slug": "array-partition",
      "question__hide": false,
      "total_acs": 501546,
      "total_submitted": 632777,
      "frontend_question_id": 561,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/array-partition",
      "questionId": "561",
      "questionFrontendId": "561",
      "questionTitle": "Array Partition",
      "titleSlug": "array-partition",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> of <code>2n</code> integers, group these integers into <code>n</code> pairs <code>(a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>)</code> such that the sum of <code>min(a<sub>i</sub>, b<sub>i</sub>)</code> for all <code>i</code> is <strong>maximized</strong>. Return<em> the maximized sum</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,4,3,2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> All possible pairings (ignoring the ordering of elements) are:\n1. (1, 4), (2, 3) -&gt; min(1, 4) + min(2, 3) = 1 + 2 = 3\n2. (1, 3), (2, 4) -&gt; min(1, 3) + min(2, 4) = 1 + 2 = 3\n3. (1, 2), (3, 4) -&gt; min(1, 2) + min(3, 4) = 1 + 3 = 4\nSo the maximum possible sum is 4.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [6,2,6,5,1,2]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> The optimal pairing is (2, 1), (2, 5), (6, 6). min(2, 1) + min(2, 5) + min(6, 6) = 1 + 2 + 6 = 9.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>nums.length == 2 * n</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,4,3,2]\n[6,2,6,5,1,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort",
          "translatedName": null
        }
      ],
      "hints": [
        "Obviously, brute force won't help here. Think of something else, take some example like 1,2,3,4.",
        "How will you make pairs to get the result? There must be some pattern.",
        "Did you observe that- Minimum element gets add into the result in sacrifice of maximum element.",
        "Still won't able to find pairs? Sort the array and try to find the pattern."
      ],
      "solution": {
        "id": "1449",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2074,
      "dislikes": 264,
      "similarQuestions": "[{\"title\": \"Minimum Difference Between Highest and Lowest of K Scores\", \"titleSlug\": \"minimum-difference-between-highest-and-lowest-of-k-scores\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost of Buying Candies With Discount\", \"titleSlug\": \"minimum-cost-of-buying-candies-with-discount\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"All Divisions With the Highest Score of a Binary Array\", \"titleSlug\": \"all-divisions-with-the-highest-score-of-a-binary-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486288,
      "commentCount": 68,
      "topLevelCommentCount": 49
    },
    "classAndMethodDefinition": "def arrayPairSum(self, nums: List[int]) -> int:\n        nums.sort()"
  },
  {
    "stat": {
      "question_id": 740,
      "question__article__live": true,
      "question__article__slug": "delete-and-earn",
      "question__article__has_video_solution": false,
      "question__title": "Delete and Earn",
      "question__title_slug": "delete-and-earn",
      "question__hide": false,
      "total_acs": 356921,
      "total_submitted": 631389,
      "frontend_question_id": 740,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/delete-and-earn",
      "questionId": "740",
      "questionFrontendId": "740",
      "questionTitle": "Delete and Earn",
      "titleSlug": "delete-and-earn",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code>. You want to maximize the number of points you get by performing the following operation any number of times:</p>\n\n<ul>\n\t<li>Pick any <code>nums[i]</code> and delete it to earn <code>nums[i]</code> points. Afterwards, you must delete <b>every</b> element equal to <code>nums[i] - 1</code> and <strong>every</strong> element equal to <code>nums[i] + 1</code>.</li>\n</ul>\n\n<p>Return <em>the <strong>maximum number of points</strong> you can earn by applying the above operation some number of times</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,4,2]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> You can perform the following operations:\n- Delete 4 to earn 4 points. Consequently, 3 is also deleted. nums = [2].\n- Delete 2 to earn 2 points. nums = [].\nYou earn a total of 6 points.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,3,3,3,4]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> You can perform the following operations:\n- Delete a 3 to earn 3 points. All 2&#39;s and 4&#39;s are also deleted. nums = [3,3].\n- Delete a 3 again to earn 3 points. nums = [3].\n- Delete a 3 once more to earn 3 points. nums = [].\nYou earn a total of 9 points.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,4,2]\n[2,2,3,3,3,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "If you take a number, you might as well take them all.  Keep track of what the value is of the subset of the input with maximum M when you either take or don't take M."
      ],
      "solution": {
        "id": "1311",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7564,
      "dislikes": 383,
      "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486452,
      "commentCount": 106,
      "topLevelCommentCount": 66
    },
    "classAndMethodDefinition": "def deleteAndEarn(self, nums: List[int]) -> int:\n        if  not nums:"
  },
  {
    "stat": {
      "question_id": 1567,
      "question__article__live": true,
      "question__article__slug": "maximum-number-of-vowels-in-a-substring-of-given-length",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Number of Vowels in a Substring of Given Length",
      "question__title_slug": "maximum-number-of-vowels-in-a-substring-of-given-length",
      "question__hide": false,
      "total_acs": 370147,
      "total_submitted": 627973,
      "frontend_question_id": 1456,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length",
      "questionId": "1567",
      "questionFrontendId": "1456",
      "questionTitle": "Maximum Number of Vowels in a Substring of Given Length",
      "titleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> and an integer <code>k</code>, return <em>the maximum number of vowel letters in any substring of </em><code>s</code><em> with length </em><code>k</code>.</p>\n\n<p><strong>Vowel letters</strong> in English are <code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, and <code>&#39;u&#39;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abciiidef&quot;, k = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The substring &quot;iii&quot; contains 3 vowel letters.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aeiou&quot;, k = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Any substring of length 2 contains 2 vowels.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leetcode&quot;, k = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> &quot;lee&quot;, &quot;eet&quot; and &quot;ode&quot; contain 2 vowels.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n\t<li><code>1 &lt;= k &lt;= s.length</code></li>\n</ul>\n",
      "exampleTestcases": "\"abciiidef\"\n3\n\"aeiou\"\n2\n\"leetcode\"\n3",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [
        "Keep a window of size k and maintain the number of vowels in it.",
        "Keep moving the window and update the number of vowels while moving. Answer is max number of vowels of any window."
      ],
      "solution": {
        "id": "1837",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3516,
      "dislikes": 133,
      "similarQuestions": "[{\"title\": \"Maximum White Tiles Covered by a Carpet\", \"titleSlug\": \"maximum-white-tiles-covered-by-a-carpet\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Recolors to Get K Consecutive Black Blocks\", \"titleSlug\": \"minimum-recolors-to-get-k-consecutive-black-blocks\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Length of the Longest Alphabetical Continuous Substring\", \"titleSlug\": \"length-of-the-longest-alphabetical-continuous-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487258,
      "commentCount": 171,
      "topLevelCommentCount": 100
    },
    "classAndMethodDefinition": "def maxVowels(self, s: str, k: int) -> int:\n        # Maximum vowels i.e. ans"
  },
  {
    "stat": {
      "question_id": 2048,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Build Array from Permutation",
      "question__title_slug": "build-array-from-permutation",
      "question__hide": false,
      "total_acs": 564685,
      "total_submitted": 627377,
      "frontend_question_id": 1920,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/build-array-from-permutation",
      "questionId": "2048",
      "questionFrontendId": "1920",
      "questionTitle": "Build Array from Permutation",
      "titleSlug": "build-array-from-permutation",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a <strong>zero-based permutation</strong> <code>nums</code> (<strong>0-indexed</strong>), build an array <code>ans</code> of the <strong>same length</strong> where <code>ans[i] = nums[nums[i]]</code> for each <code>0 &lt;= i &lt; nums.length</code> and return it.</p>\n\n<p>A <strong>zero-based permutation</strong> <code>nums</code> is an array of <strong>distinct</strong> integers from <code>0</code> to <code>nums.length - 1</code> (<strong>inclusive</strong>).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,2,1,5,3,4]\n<strong>Output:</strong> [0,1,2,4,5,3]<strong>\nExplanation:</strong> The array ans is built as follows: \nans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]\n    = [nums[0], nums[2], nums[1], nums[5], nums[3], nums[4]]\n    = [0,1,2,4,5,3]</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,0,1,2,3,4]\n<strong>Output:</strong> [4,5,0,1,2,3]\n<strong>Explanation:</strong> The array ans is built as follows:\nans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]\n    = [nums[5], nums[0], nums[1], nums[2], nums[3], nums[4]]\n    = [4,5,0,1,2,3]</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt; nums.length</code></li>\n\t<li>The elements in <code>nums</code> are <strong>distinct</strong>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow-up:</strong> Can you solve it without using an extra space (i.e., <code>O(1)</code> memory)?</p>\n",
      "exampleTestcases": "[0,2,1,5,3,4]\n[5,0,1,2,3,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "Just apply what's said in the statement.",
        "Notice that you can't apply it on the same array directly since some elements will change after application"
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 3383,
      "dislikes": 405,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487704,
      "commentCount": 169,
      "topLevelCommentCount": 130
    },
    "classAndMethodDefinition": "def buildArray(nums: List[int]) -> List[int]:\n  q = len(nums)"
  },
  {
    "stat": {
      "question_id": 2383,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Add Two Integers",
      "question__title_slug": "add-two-integers",
      "question__hide": false,
      "total_acs": 551495,
      "total_submitted": 626941,
      "frontend_question_id": 2235,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/add-two-integers",
      "questionId": "2383",
      "questionFrontendId": "2235",
      "questionTitle": "Add Two Integers",
      "titleSlug": "add-two-integers",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "Given two integers <code>num1</code> and <code>num2</code>, return <em>the <strong>sum</strong> of the two integers</em>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = 12, num2 = 5\n<strong>Output:</strong> 17\n<strong>Explanation:</strong> num1 is 12, num2 is 5, and their sum is 12 + 5 = 17, so 17 is returned.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = -10, num2 = 4\n<strong>Output:</strong> -6\n<strong>Explanation:</strong> num1 + num2 = -6, so -6 is returned.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-100 &lt;= num1, num2 &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "12\n5\n-10\n4",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": null,
      "companyTagStats": null,
      "likes": 1648,
      "dislikes": 3120,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2488039,
      "commentCount": 233,
      "topLevelCommentCount": 180
    },
    "classAndMethodDefinition": "def sum(self, num1: int, num2: int) -> int:\n        return num1 + num2"
  },
  {
    "stat": {
      "question_id": 890,
      "question__article__live": true,
      "question__article__slug": "lemonade-change",
      "question__article__has_video_solution": false,
      "question__title": "Lemonade Change",
      "question__title_slug": "lemonade-change",
      "question__hide": false,
      "total_acs": 362819,
      "total_submitted": 622305,
      "frontend_question_id": 860,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/lemonade-change",
      "questionId": "890",
      "questionFrontendId": "860",
      "questionTitle": "Lemonade Change",
      "titleSlug": "lemonade-change",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>At a lemonade stand, each lemonade costs <code>$5</code>. Customers are standing in a queue to buy from you and order one at a time (in the order specified by bills). Each customer will only buy one lemonade and pay with either a <code>$5</code>, <code>$10</code>, or <code>$20</code> bill. You must provide the correct change to each customer so that the net transaction is that the customer pays <code>$5</code>.</p>\n\n<p>Note that you do not have any change in hand at first.</p>\n\n<p>Given an integer array <code>bills</code> where <code>bills[i]</code> is the bill the <code>i<sup>th</sup></code> customer pays, return <code>true</code> <em>if you can provide every customer with the correct change, or</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> bills = [5,5,5,10,20]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \nFrom the first 3 customers, we collect three $5 bills in order.\nFrom the fourth customer, we collect a $10 bill and give back a $5.\nFrom the fifth customer, we give a $10 bill and a $5 bill.\nSince all customers got correct change, we output true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> bills = [5,5,10,10,20]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \nFrom the first two customers in order, we collect two $5 bills.\nFor the next two customers in order, we collect a $10 bill and give back a $5 bill.\nFor the last customer, we can not give the change of $15 back because we only have two $10 bills.\nSince not every customer received the correct change, the answer is false.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= bills.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>bills[i]</code> is either <code>5</code>, <code>10</code>, or <code>20</code>.</li>\n</ul>\n",
      "exampleTestcases": "[5,5,5,10,20]\n[5,5,10,10,20]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2403",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2873,
      "dislikes": 189,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486596,
      "commentCount": 279,
      "topLevelCommentCount": 176
    },
    "classAndMethodDefinition": "def lemonadeChange(self, bills):\n        if bills[0] != 5:"
  },
  {
    "stat": {
      "question_id": 468,
      "question__article__live": true,
      "question__article__slug": "validate-ip-address",
      "question__article__has_video_solution": false,
      "question__title": "Validate IP Address",
      "question__title_slug": "validate-ip-address",
      "question__hide": false,
      "total_acs": 169323,
      "total_submitted": 619494,
      "frontend_question_id": 468,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/validate-ip-address",
      "questionId": "468",
      "questionFrontendId": "468",
      "questionTitle": "Validate IP Address",
      "titleSlug": "validate-ip-address",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>queryIP</code>, return <code>&quot;IPv4&quot;</code> if IP is a valid IPv4 address, <code>&quot;IPv6&quot;</code> if IP is a valid IPv6 address or <code>&quot;Neither&quot;</code> if IP is not a correct IP of any type.</p>\n\n<p><strong>A valid IPv4</strong> address is an IP in the form <code>&quot;x<sub>1</sub>.x<sub>2</sub>.x<sub>3</sub>.x<sub>4</sub>&quot;</code> where <code>0 &lt;= x<sub>i</sub> &lt;= 255</code> and <code>x<sub>i</sub></code> <strong>cannot contain</strong> leading zeros. For example, <code>&quot;192.168.1.1&quot;</code> and <code>&quot;192.168.1.0&quot;</code> are valid IPv4 addresses while <code>&quot;192.168.01.1&quot;</code>, <code>&quot;192.168.1.00&quot;</code>, and <code>&quot;192.168@1.1&quot;</code> are invalid IPv4 addresses.</p>\n\n<p><strong>A valid IPv6</strong> address is an IP in the form <code>&quot;x<sub>1</sub>:x<sub>2</sub>:x<sub>3</sub>:x<sub>4</sub>:x<sub>5</sub>:x<sub>6</sub>:x<sub>7</sub>:x<sub>8</sub>&quot;</code> where:</p>\n\n<ul>\n\t<li><code>1 &lt;= x<sub>i</sub>.length &lt;= 4</code></li>\n\t<li><code>x<sub>i</sub></code> is a <strong>hexadecimal string</strong> which may contain digits, lowercase English letter (<code>&#39;a&#39;</code> to <code>&#39;f&#39;</code>) and upper-case English letters (<code>&#39;A&#39;</code> to <code>&#39;F&#39;</code>).</li>\n\t<li>Leading zeros are allowed in <code>x<sub>i</sub></code>.</li>\n</ul>\n\n<p>For example, &quot;<code>2001:0db8:85a3:0000:0000:8a2e:0370:7334&quot;</code> and &quot;<code>2001:db8:85a3:0:0:8A2E:0370:7334&quot;</code> are valid IPv6 addresses, while &quot;<code>2001:0db8:85a3::8A2E:037j:7334&quot;</code> and &quot;<code>02001:0db8:85a3:0000:0000:8a2e:0370:7334&quot;</code> are invalid IPv6 addresses.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> queryIP = &quot;172.16.254.1&quot;\n<strong>Output:</strong> &quot;IPv4&quot;\n<strong>Explanation:</strong> This is a valid IPv4 address, return &quot;IPv4&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> queryIP = &quot;2001:0db8:85a3:0:0:8A2E:0370:7334&quot;\n<strong>Output:</strong> &quot;IPv6&quot;\n<strong>Explanation:</strong> This is a valid IPv6 address, return &quot;IPv6&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> queryIP = &quot;256.256.256.256&quot;\n<strong>Output:</strong> &quot;Neither&quot;\n<strong>Explanation:</strong> This is neither a IPv4 address nor a IPv6 address.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>queryIP</code> consists only of English letters, digits and the characters <code>&#39;.&#39;</code> and <code>&#39;:&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"172.16.254.1\"\n\"2001:0db8:85a3:0:0:8A2E:0370:7334\"\n\"256.256.256.256\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "853",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1026,
      "dislikes": 2714,
      "similarQuestions": "[{\"title\": \"IP to CIDR\", \"titleSlug\": \"ip-to-cidr\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Strong Password Checker II\", \"titleSlug\": \"strong-password-checker-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486199,
      "commentCount": 49,
      "topLevelCommentCount": 31
    },
    "classAndMethodDefinition": "def validIPAddress(self, IP: str) -> str:\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 954,
      "question__article__live": true,
      "question__article__slug": "maximum-sum-circular-subarray",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Sum Circular Subarray",
      "question__title_slug": "maximum-sum-circular-subarray",
      "question__hide": false,
      "total_acs": 280743,
      "total_submitted": 615979,
      "frontend_question_id": 918,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-sum-circular-subarray",
      "questionId": "954",
      "questionFrontendId": "918",
      "questionTitle": "Maximum Sum Circular Subarray",
      "titleSlug": "maximum-sum-circular-subarray",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a <strong>circular integer array</strong> <code>nums</code> of length <code>n</code>, return <em>the maximum possible sum of a non-empty <strong>subarray</strong> of </em><code>nums</code>.</p>\n\n<p>A <strong>circular array</strong> means the end of the array connects to the beginning of the array. Formally, the next element of <code>nums[i]</code> is <code>nums[(i + 1) % n]</code> and the previous element of <code>nums[i]</code> is <code>nums[(i - 1 + n) % n]</code>.</p>\n\n<p>A <strong>subarray</strong> may only include each element of the fixed buffer <code>nums</code> at most once. Formally, for a subarray <code>nums[i], nums[i + 1], ..., nums[j]</code>, there does not exist <code>i &lt;= k1</code>, <code>k2 &lt;= j</code> with <code>k1 % n == k2 % n</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,-2,3,-2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Subarray [3] has maximum sum 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,-3,5]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> Subarray [5,5] has maximum sum 5 + 5 = 10.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-3,-2,-3]\n<strong>Output:</strong> -2\n<strong>Explanation:</strong> Subarray [-2] has maximum sum -2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-3 * 10<sup>4</sup> &lt;= nums[i] &lt;= 3 * 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,-2,3,-2]\n[5,-3,5]\n[-3,-2,-3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue",
          "translatedName": null
        }
      ],
      "hints": [
        "For those of you who are familiar with the <b>Kadane's algorithm</b>, think in terms of that. For the newbies, Kadane's algorithm is used to finding the maximum sum subarray from a given array. This problem is a twist on that idea and it is advisable to read up on that algorithm first before starting this problem. Unless you already have a great algorithm brewing up in your mind in which case, go right ahead!",
        "What is an alternate way of representing a circular array so that it appears to be a straight array?\r\nEssentially, there are two cases of this problem that we need to take care of. Let's look at the figure below to understand those two cases:\r\n\r\n<br>\r\n<img src=\"https://assets.leetcode.com/uploads/2019/10/20/circular_subarray_hint_1.png\" width=\"700\"/>",
        "The first case can be handled by the good old Kadane's algorithm. However, is there a smarter way of going about handling the second case as well?"
      ],
      "solution": {
        "id": "1628",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6661,
      "dislikes": 305,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486661,
      "commentCount": 120,
      "topLevelCommentCount": 69
    },
    "classAndMethodDefinition": "def maxSubarraySumCircular(self, A: List[int]) -> int:\n    "
  },
  {
    "stat": {
      "question_id": 566,
      "question__article__live": true,
      "question__article__slug": "reshape-the-matrix",
      "question__article__has_video_solution": false,
      "question__title": "Reshape the Matrix",
      "question__title_slug": "reshape-the-matrix",
      "question__hide": false,
      "total_acs": 387326,
      "total_submitted": 612335,
      "frontend_question_id": 566,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reshape-the-matrix",
      "questionId": "566",
      "questionFrontendId": "566",
      "questionTitle": "Reshape the Matrix",
      "titleSlug": "reshape-the-matrix",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>In MATLAB, there is a handy function called <code>reshape</code> which can reshape an <code>m x n</code> matrix into a new one with a different size <code>r x c</code> keeping its original data.</p>\n\n<p>You are given an <code>m x n</code> matrix <code>mat</code> and two integers <code>r</code> and <code>c</code> representing the number of rows and the number of columns of the wanted reshaped matrix.</p>\n\n<p>The reshaped matrix should be filled with all the elements of the original matrix in the same row-traversing order as they were.</p>\n\n<p>If the <code>reshape</code> operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/24/reshape1-grid.jpg\" style=\"width: 613px; height: 173px;\" />\n<pre>\n<strong>Input:</strong> mat = [[1,2],[3,4]], r = 1, c = 4\n<strong>Output:</strong> [[1,2,3,4]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/24/reshape2-grid.jpg\" style=\"width: 453px; height: 173px;\" />\n<pre>\n<strong>Input:</strong> mat = [[1,2],[3,4]], r = 2, c = 4\n<strong>Output:</strong> [[1,2],[3,4]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == mat.length</code></li>\n\t<li><code>n == mat[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n\t<li><code>-1000 &lt;= mat[i][j] &lt;= 1000</code></li>\n\t<li><code>1 &lt;= r, c &lt;= 300</code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2],[3,4]]\n1\n4\n[[1,2],[3,4]]\n2\n4",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "Do you know how 2d matrix is stored in 1d memory? Try to map 2-dimensions into one.",
        "M[i][j]=M[n*i+j] , where n is the number of cols. \r\nThis is the one way of converting 2-d indices into one 1-d index.  \r\nNow, how will you convert 1-d index into 2-d indices?",
        "Try to use division and modulus to convert 1-d index into 2-d indices.",
        "M[i] =>  M[i/n][i%n] Will it result in right mapping? Take some example and check this formula."
      ],
      "solution": {
        "id": "120",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3502,
      "dislikes": 412,
      "similarQuestions": "[{\"title\": \"Convert 1D Array Into 2D Array\", \"titleSlug\": \"convert-1d-array-into-2d-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486293,
      "commentCount": 57,
      "topLevelCommentCount": 38
    },
    "classAndMethodDefinition": "def matrixReshape(self, mat: List[List[int]], r: int, c: int) -> List[List[int]]:\n        flatten = []"
  },
  {
    "stat": {
      "question_id": 1411,
      "question__article__live": true,
      "question__article__slug": "convert-binary-number-in-a-linked-list-to-integer",
      "question__article__has_video_solution": false,
      "question__title": "Convert Binary Number in a Linked List to Integer",
      "question__title_slug": "convert-binary-number-in-a-linked-list-to-integer",
      "question__hide": false,
      "total_acs": 496488,
      "total_submitted": 611946,
      "frontend_question_id": 1290,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer",
      "questionId": "1411",
      "questionFrontendId": "1290",
      "questionTitle": "Convert Binary Number in a Linked List to Integer",
      "titleSlug": "convert-binary-number-in-a-linked-list-to-integer",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given <code>head</code> which is a reference node to a singly-linked list. The value of each node in the linked list is either <code>0</code> or <code>1</code>. The linked list holds the binary representation of a number.</p>\n\n<p>Return the <em>decimal value</em> of the number in the linked list.</p>\n\n<p>The <strong>most significant bit</strong> is at the head of the linked list.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/05/graph-1.png\" style=\"width: 426px; height: 108px;\" />\n<pre>\n<strong>Input:</strong> head = [1,0,1]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> (101) in base 2 = (5) in base 10\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [0]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The Linked List is not empty.</li>\n\t<li>Number of nodes will not exceed <code>30</code>.</li>\n\t<li>Each node&#39;s value is either <code>0</code> or <code>1</code>.</li>\n</ul>\n",
      "exampleTestcases": "[1,0,1]\n[0]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [
        "Traverse the linked list and store all values in a string or array. convert the values obtained to decimal value.",
        "You can solve the problem in O(1) memory using bits operation. use shift left operation ( << ) and or operation ( | ) to get the decimal value in one operation."
      ],
      "solution": {
        "id": "1010",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4166,
      "dislikes": 160,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487105,
      "commentCount": 39,
      "topLevelCommentCount": 30
    },
    "classAndMethodDefinition": "def __init__(self, x):\n#         self.val = x"
  },
  {
    "stat": {
      "question_id": 1798,
      "question__article__live": true,
      "question__article__slug": "max-number-of-k-sum-pairs",
      "question__article__has_video_solution": false,
      "question__title": "Max Number of K-Sum Pairs",
      "question__title_slug": "max-number-of-k-sum-pairs",
      "question__hide": false,
      "total_acs": 337327,
      "total_submitted": 611022,
      "frontend_question_id": 1679,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/max-number-of-k-sum-pairs",
      "questionId": "1798",
      "questionFrontendId": "1679",
      "questionTitle": "Max Number of K-Sum Pairs",
      "titleSlug": "max-number-of-k-sum-pairs",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code> and an integer <code>k</code>.</p>\n\n<p>In one operation, you can pick two numbers from the array whose sum equals <code>k</code> and remove them from the array.</p>\n\n<p>Return <em>the maximum number of operations you can perform on the array</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], k = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Starting with nums = [1,2,3,4]:\n- Remove numbers 1 and 4, then nums = [2,3]\n- Remove numbers 2 and 3, then nums = []\nThere are no more pairs that sum up to 5, hence a total of 2 operations.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,3,4,3], k = 6\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Starting with nums = [3,1,3,4,3]:\n- Remove the first two 3&#39;s, then nums = [1,4,3]\nThere are no more pairs that sum up to 6, hence a total of 1 operation.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4]\n5\n[3,1,3,4,3]\n6",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "The abstract problem asks to count the number of disjoint pairs with a given sum k.",
        "For each possible value x, it can be paired up with k - x.",
        "The number of such pairs equals to  min(count(x), count(k-x)), unless that x = k / 2, where the number of such pairs will be floor(count(x) / 2)."
      ],
      "solution": {
        "id": "1070",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3162,
      "dislikes": 90,
      "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Divide Players Into Teams of Equal Skill\", \"titleSlug\": \"divide-players-into-teams-of-equal-skill\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487470,
      "commentCount": 86,
      "topLevelCommentCount": 51
    },
    "classAndMethodDefinition": "def maxOperations(self, nums: List[int], k: int) -> int:\n        nums.sort()"
  },
  {
    "stat": {
      "question_id": 354,
      "question__article__live": true,
      "question__article__slug": "russian-doll-envelopes",
      "question__article__has_video_solution": false,
      "question__title": "Russian Doll Envelopes",
      "question__title_slug": "russian-doll-envelopes",
      "question__hide": false,
      "total_acs": 226458,
      "total_submitted": 610878,
      "frontend_question_id": 354,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/russian-doll-envelopes",
      "questionId": "354",
      "questionFrontendId": "354",
      "questionTitle": "Russian Doll Envelopes",
      "titleSlug": "russian-doll-envelopes",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given a 2D array of integers <code>envelopes</code> where <code>envelopes[i] = [w<sub>i</sub>, h<sub>i</sub>]</code> represents the width and the height of an envelope.</p>\n\n<p>One envelope can fit into another if and only if both the width and height of one envelope are greater than the other envelope&#39;s width and height.</p>\n\n<p>Return <em>the maximum number of envelopes you can Russian doll (i.e., put one inside the other)</em>.</p>\n\n<p><strong>Note:</strong> You cannot rotate an envelope.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> envelopes = [[5,4],[6,4],[6,7],[2,3]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The maximum number of envelopes you can Russian doll is <code>3</code> ([2,3] =&gt; [5,4] =&gt; [6,7]).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> envelopes = [[1,1],[1,1],[1,1]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= envelopes.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>envelopes[i].length == 2</code></li>\n\t<li><code>1 &lt;= w<sub>i</sub>, h<sub>i</sub> &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[5,4],[6,4],[6,7],[2,3]]\n[[1,1],[1,1],[1,1]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "821",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6000,
      "dislikes": 148,
      "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"The Number of Weak Characters in the Game\", \"titleSlug\": \"the-number-of-weak-characters-in-the-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Non-decreasing Subarray From Two Arrays\", \"titleSlug\": \"longest-non-decreasing-subarray-from-two-arrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486091,
      "commentCount": 60,
      "topLevelCommentCount": 32
    },
    "classAndMethodDefinition": "def maxEnvelopes(self, E: List[List[int]]) -> int:\n        E.sort(key=lambda x: (x[0], -x[1]))"
  },
  {
    "stat": {
      "question_id": 718,
      "question__article__live": true,
      "question__article__slug": "maximum-length-of-repeated-subarray",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Length of Repeated Subarray",
      "question__title_slug": "maximum-length-of-repeated-subarray",
      "question__hide": false,
      "total_acs": 311006,
      "total_submitted": 610389,
      "frontend_question_id": 718,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-length-of-repeated-subarray",
      "questionId": "718",
      "questionFrontendId": "718",
      "questionTitle": "Maximum Length of Repeated Subarray",
      "titleSlug": "maximum-length-of-repeated-subarray",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two integer arrays <code>nums1</code> and <code>nums2</code>, return <em>the maximum length of a subarray that appears in <strong>both</strong> arrays</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The repeated subarray with maximum length is [3,2,1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [0,0,0,0,0], nums2 = [0,0,0,0,0]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The repeated subarray with maximum length is [0,0,0,0,0].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums1[i], nums2[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,2,1]\n[3,2,1,4,7]\n[0,0,0,0,0]\n[0,0,0,0,0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash",
          "translatedName": null
        },
        {
          "name": "Hash Function",
          "slug": "hash-function",
          "translatedName": null
        }
      ],
      "hints": [
        "Use dynamic programming.  dp[i][j] will be the longest common prefix of A[i:] and B[j:].",
        "The answer is max(dp[i][j]) over all i, j."
      ],
      "solution": {
        "id": "269",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6816,
      "dislikes": 170,
      "similarQuestions": "[{\"title\": \"Minimum Size Subarray Sum\", \"titleSlug\": \"minimum-size-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Common Subpath\", \"titleSlug\": \"longest-common-subpath\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Maximum Length of a Good Subsequence II\", \"titleSlug\": \"find-the-maximum-length-of-a-good-subsequence-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Maximum Length of a Good Subsequence I\", \"titleSlug\": \"find-the-maximum-length-of-a-good-subsequence-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486430,
      "commentCount": 46,
      "topLevelCommentCount": 25
    },
    "classAndMethodDefinition": "def findLength(self, nums1: List[int], nums2: List[int]) -> int:\n        n, m = len(nums1), len(nums2)"
  },
  {
    "stat": {
      "question_id": 684,
      "question__article__live": true,
      "question__article__slug": "redundant-connection",
      "question__article__has_video_solution": false,
      "question__title": "Redundant Connection",
      "question__title_slug": "redundant-connection",
      "question__hide": false,
      "total_acs": 386387,
      "total_submitted": 609706,
      "frontend_question_id": 684,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/redundant-connection",
      "questionId": "684",
      "questionFrontendId": "684",
      "questionTitle": "Redundant Connection",
      "titleSlug": "redundant-connection",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>In this problem, a tree is an <strong>undirected graph</strong> that is connected and has no cycles.</p>\n\n<p>You are given a graph that started as a tree with <code>n</code> nodes labeled from <code>1</code> to <code>n</code>, with one additional edge added. The added edge has two <strong>different</strong> vertices chosen from <code>1</code> to <code>n</code>, and was not an edge that already existed. The graph is represented as an array <code>edges</code> of length <code>n</code> where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that there is an edge between nodes <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code> in the graph.</p>\n\n<p>Return <em>an edge that can be removed so that the resulting graph is a tree of </em><code>n</code><em> nodes</em>. If there are multiple answers, return the answer that occurs last in the input.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/02/reduntant1-1-graph.jpg\" style=\"width: 222px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> edges = [[1,2],[1,3],[2,3]]\n<strong>Output:</strong> [2,3]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/02/reduntant1-2-graph.jpg\" style=\"width: 382px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> edges = [[1,2],[2,3],[3,4],[1,4],[1,5]]\n<strong>Output:</strong> [1,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == edges.length</code></li>\n\t<li><code>3 &lt;= n &lt;= 1000</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= a<sub>i</sub> &lt; b<sub>i</sub> &lt;= edges.length</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>There are no repeated edges.</li>\n\t<li>The given graph is connected.</li>\n</ul>\n",
      "exampleTestcases": "[[1,2],[1,3],[2,3]]\n[[1,2],[2,3],[3,4],[1,4],[1,5]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "250",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6232,
      "dislikes": 406,
      "similarQuestions": "[{\"title\": \"Redundant Connection II\", \"titleSlug\": \"redundant-connection-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Accounts Merge\", \"titleSlug\": \"accounts-merge\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Employees to Be Invited to a Meeting\", \"titleSlug\": \"maximum-employees-to-be-invited-to-a-meeting\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Shortest Cycle in a Graph\", \"titleSlug\": \"shortest-cycle-in-a-graph\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486407,
      "commentCount": 57,
      "topLevelCommentCount": 40
    },
    "classAndMethodDefinition": "def findRedundantConnection(self, edges: List[List[int]]) -> List[int]:\n        par = [i for i in range(len(edges) + 1)]"
  },
  {
    "stat": {
      "question_id": 1056,
      "question__article__live": true,
      "question__article__slug": "capacity-to-ship-packages-within-d-days",
      "question__article__has_video_solution": false,
      "question__title": "Capacity To Ship Packages Within D Days",
      "question__title_slug": "capacity-to-ship-packages-within-d-days",
      "question__hide": false,
      "total_acs": 428298,
      "total_submitted": 609506,
      "frontend_question_id": 1011,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days",
      "questionId": "1056",
      "questionFrontendId": "1011",
      "questionTitle": "Capacity To Ship Packages Within D Days",
      "titleSlug": "capacity-to-ship-packages-within-d-days",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A conveyor belt has packages that must be shipped from one port to another within <code>days</code> days.</p>\n\n<p>The <code>i<sup>th</sup></code> package on the conveyor belt has a weight of <code>weights[i]</code>. Each day, we load the ship with packages on the conveyor belt (in the order given by <code>weights</code>). We may not load more weight than the maximum weight capacity of the ship.</p>\n\n<p>Return the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within <code>days</code> days.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> weights = [1,2,3,4,5,6,7,8,9,10], days = 5\n<strong>Output:</strong> 15\n<strong>Explanation:</strong> A ship capacity of 15 is the minimum to ship all the packages in 5 days like this:\n1st day: 1, 2, 3, 4, 5\n2nd day: 6, 7\n3rd day: 8\n4th day: 9\n5th day: 10\n\nNote that the cargo must be shipped in the order given, so using a ship of capacity 14 and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> weights = [3,2,2,4,1,4], days = 3\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> A ship capacity of 6 is the minimum to ship all the packages in 3 days like this:\n1st day: 3, 2\n2nd day: 2, 4\n3rd day: 1, 4\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> weights = [1,2,3,1,1], days = 4\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\n1st day: 1\n2nd day: 2\n3rd day: 3\n4th day: 1, 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= days &lt;= weights.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= weights[i] &lt;= 500</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5,6,7,8,9,10]\n5\n[3,2,2,4,1,4]\n3\n[1,2,3,1,1]\n4",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [
        "Binary search on the answer.  We need a function possible(capacity) which returns true if and only if we can do the task in D days."
      ],
      "solution": {
        "id": "1647",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9576,
      "dislikes": 232,
      "similarQuestions": "[{\"title\": \"Split Array Largest Sum\", \"titleSlug\": \"split-array-largest-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Divide Chocolate\", \"titleSlug\": \"divide-chocolate\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Cutting Ribbons\", \"titleSlug\": \"cutting-ribbons\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimized Maximum of Products Distributed to Any Store\", \"titleSlug\": \"minimized-maximum-of-products-distributed-to-any-store\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Bags With Full Capacity of Rocks\", \"titleSlug\": \"maximum-bags-with-full-capacity-of-rocks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Total Distance Traveled\", \"titleSlug\": \"minimum-total-distance-traveled\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486758,
      "commentCount": 235,
      "topLevelCommentCount": 137
    },
    "classAndMethodDefinition": "def shipWithinDays(self, weights: List[int], D: int) -> int:\n        "
  },
  {
    "stat": {
      "question_id": 812,
      "question__article__live": true,
      "question__article__slug": "rotate-string",
      "question__article__has_video_solution": false,
      "question__title": "Rotate String",
      "question__title_slug": "rotate-string",
      "question__hide": false,
      "total_acs": 359645,
      "total_submitted": 608681,
      "frontend_question_id": 796,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/rotate-string",
      "questionId": "812",
      "questionFrontendId": "796",
      "questionTitle": "Rotate String",
      "titleSlug": "rotate-string",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>s</code> and <code>goal</code>, return <code>true</code> <em>if and only if</em> <code>s</code> <em>can become</em> <code>goal</code> <em>after some number of <strong>shifts</strong> on</em> <code>s</code>.</p>\n\n<p>A <strong>shift</strong> on <code>s</code> consists of moving the leftmost character of <code>s</code> to the rightmost position.</p>\n\n<ul>\n\t<li>For example, if <code>s = &quot;abcde&quot;</code>, then it will be <code>&quot;bcdea&quot;</code> after one shift.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"abcde\", goal = \"cdeab\"\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"abcde\", goal = \"abced\"\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, goal.length &lt;= 100</code></li>\n\t<li><code>s</code> and <code>goal</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abcde\"\n\"cdeab\"\n\"abcde\"\n\"abced\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "String Matching",
          "slug": "string-matching",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "429",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3658,
      "dislikes": 187,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486524,
      "commentCount": 56,
      "topLevelCommentCount": 39
    },
    "classAndMethodDefinition": "def rotateString(self, A: str, B: str) -> bool:\n        if len(A) != len(B): return False"
  },
  {
    "stat": {
      "question_id": 174,
      "question__article__live": true,
      "question__article__slug": "dungeon-game",
      "question__article__has_video_solution": false,
      "question__title": "Dungeon Game",
      "question__title_slug": "dungeon-game",
      "question__hide": false,
      "total_acs": 233843,
      "total_submitted": 608660,
      "frontend_question_id": 174,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/dungeon-game",
      "questionId": "174",
      "questionFrontendId": "174",
      "questionTitle": "Dungeon Game",
      "titleSlug": "dungeon-game",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>The demons had captured the princess and imprisoned her in <strong>the bottom-right corner</strong> of a <code>dungeon</code>. The <code>dungeon</code> consists of <code>m x n</code> rooms laid out in a 2D grid. Our valiant knight was initially positioned in <strong>the top-left room</strong> and must fight his way through <code>dungeon</code> to rescue the princess.</p>\n\n<p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to <code>0</code> or below, he dies immediately.</p>\n\n<p>Some of the rooms are guarded by demons (represented by negative integers), so the knight loses health upon entering these rooms; other rooms are either empty (represented as 0) or contain magic orbs that increase the knight&#39;s health (represented by positive integers).</p>\n\n<p>To reach the princess as quickly as possible, the knight decides to move only <strong>rightward</strong> or <strong>downward</strong> in each step.</p>\n\n<p>Return <em>the knight&#39;s minimum initial health so that he can rescue the princess</em>.</p>\n\n<p><strong>Note</strong> that any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/13/dungeon-grid-1.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> dungeon = [[-2,-3,3],[-5,-10,1],[10,30,-5]]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> The initial health of the knight must be at least 7 if he follows the optimal path: RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> dungeon = [[0]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == dungeon.length</code></li>\n\t<li><code>n == dungeon[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>-1000 &lt;= dungeon[i][j] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[[-2,-3,3],[-5,-10,1],[10,30,-5]]\n[[0]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "897",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5832,
      "dislikes": 109,
      "similarQuestions": "[{\"title\": \"Unique Paths\", \"titleSlug\": \"unique-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Sum\", \"titleSlug\": \"minimum-path-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cherry Pickup\", \"titleSlug\": \"cherry-pickup\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Cost in a Grid\", \"titleSlug\": \"minimum-path-cost-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Health to Beat Game\", \"titleSlug\": \"minimum-health-to-beat-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paths in Matrix Whose Sum Is Divisible by K\", \"titleSlug\": \"paths-in-matrix-whose-sum-is-divisible-by-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Check if There is a Path With Equal Number of 0's And 1's\", \"titleSlug\": \"check-if-there-is-a-path-with-equal-number-of-0s-and-1s\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485911,
      "commentCount": 77,
      "topLevelCommentCount": 43
    },
    "classAndMethodDefinition": "def calculateMinimumHP(self, dungeon):\n\\tm, n = len(dungeon), len(dungeon[0])"
  },
  {
    "stat": {
      "question_id": 343,
      "question__article__live": true,
      "question__article__slug": "integer-break",
      "question__article__has_video_solution": false,
      "question__title": "Integer Break",
      "question__title_slug": "integer-break",
      "question__hide": false,
      "total_acs": 368724,
      "total_submitted": 608555,
      "frontend_question_id": 343,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/integer-break",
      "questionId": "343",
      "questionFrontendId": "343",
      "questionTitle": "Integer Break",
      "titleSlug": "integer-break",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer <code>n</code>, break it into the sum of <code>k</code> <strong>positive integers</strong>, where <code>k &gt;= 2</code>, and maximize the product of those integers.</p>\n\n<p>Return <em>the maximum product you can get</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 2 = 1 + 1, 1 &times; 1 = 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10\n<strong>Output:</strong> 36\n<strong>Explanation:</strong> 10 = 3 + 3 + 4, 3 &times; 3 &times; 4 = 36.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 58</code></li>\n</ul>\n",
      "exampleTestcases": "2\n10",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "There is a simple O(n) solution to this problem.",
        "You may check the breaking results of <i>n</i> ranging from 7 to 10 to discover the regularities."
      ],
      "solution": {
        "id": "2067",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5119,
      "dislikes": 448,
      "similarQuestions": "[{\"title\": \"Maximize Number of Nice Divisors\", \"titleSlug\": \"maximize-number-of-nice-divisors\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486080,
      "commentCount": 126,
      "topLevelCommentCount": 69
    },
    "classAndMethodDefinition": "def integerBreak(self, n):\n        dp = [None, 1]"
  },
  {
    "stat": {
      "question_id": 1249,
      "question__article__live": true,
      "question__article__slug": "snapshot-array",
      "question__article__has_video_solution": false,
      "question__title": "Snapshot Array",
      "question__title_slug": "snapshot-array",
      "question__hide": false,
      "total_acs": 223331,
      "total_submitted": 605621,
      "frontend_question_id": 1146,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/snapshot-array",
      "questionId": "1249",
      "questionFrontendId": "1146",
      "questionTitle": "Snapshot Array",
      "titleSlug": "snapshot-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Implement a SnapshotArray that supports the following interface:</p>\n\n<ul>\n\t<li><code>SnapshotArray(int length)</code> initializes an array-like data structure with the given length. <strong>Initially, each element equals 0</strong>.</li>\n\t<li><code>void set(index, val)</code> sets the element at the given <code>index</code> to be equal to <code>val</code>.</li>\n\t<li><code>int snap()</code> takes a snapshot of the array and returns the <code>snap_id</code>: the total number of times we called <code>snap()</code> minus <code>1</code>.</li>\n\t<li><code>int get(index, snap_id)</code> returns the value at the given <code>index</code>, at the time we took the snapshot with the given <code>snap_id</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [&quot;SnapshotArray&quot;,&quot;set&quot;,&quot;snap&quot;,&quot;set&quot;,&quot;get&quot;]\n[[3],[0,5],[],[0,6],[0,0]]\n<strong>Output:</strong> [null,null,0,null,5]\n<strong>Explanation: </strong>\nSnapshotArray snapshotArr = new SnapshotArray(3); // set the length to be 3\nsnapshotArr.set(0,5);  // Set array[0] = 5\nsnapshotArr.snap();  // Take a snapshot, return snap_id = 0\nsnapshotArr.set(0,6);\nsnapshotArr.get(0,0);  // Get the value of array[0] with snap_id = 0, return 5</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= index &lt; length</code></li>\n\t<li><code>0 &lt;= val &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= snap_id &lt; </code>(the total number of times we call <code>snap()</code>)</li>\n\t<li>At most <code>5 * 10<sup>4</sup></code> calls will be made to <code>set</code>, <code>snap</code>, and <code>get</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"SnapshotArray\",\"set\",\"snap\",\"set\",\"get\"]\n[[3],[0,5],[],[0,6],[0,0]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        }
      ],
      "hints": [
        "Use a list of lists, adding both the element and the snap_id to each index."
      ],
      "solution": {
        "id": "1886",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3718,
      "dislikes": 504,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486947,
      "commentCount": 152,
      "topLevelCommentCount": 77
    },
    "classAndMethodDefinition": "def __init__(self, length: int):\n        self.cur_id = 0"
  },
  {
    "stat": {
      "question_id": 1031,
      "question__article__live": true,
      "question__article__slug": "add-to-array-form-of-integer",
      "question__article__has_video_solution": false,
      "question__title": "Add to Array-Form of Integer",
      "question__title_slug": "add-to-array-form-of-integer",
      "question__hide": false,
      "total_acs": 270302,
      "total_submitted": 599067,
      "frontend_question_id": 989,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/add-to-array-form-of-integer",
      "questionId": "1031",
      "questionFrontendId": "989",
      "questionTitle": "Add to Array-Form of Integer",
      "titleSlug": "add-to-array-form-of-integer",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>The <strong>array-form</strong> of an integer <code>num</code> is an array representing its digits in left to right order.</p>\n\n<ul>\n\t<li>For example, for <code>num = 1321</code>, the array form is <code>[1,3,2,1]</code>.</li>\n</ul>\n\n<p>Given <code>num</code>, the <strong>array-form</strong> of an integer, and an integer <code>k</code>, return <em>the <strong>array-form</strong> of the integer</em> <code>num + k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = [1,2,0,0], k = 34\n<strong>Output:</strong> [1,2,3,4]\n<strong>Explanation:</strong> 1200 + 34 = 1234\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = [2,7,4], k = 181\n<strong>Output:</strong> [4,5,5]\n<strong>Explanation:</strong> 274 + 181 = 455\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = [2,1,5], k = 806\n<strong>Output:</strong> [1,0,2,1]\n<strong>Explanation:</strong> 215 + 806 = 1021\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= num[i] &lt;= 9</code></li>\n\t<li><code>num</code> does not contain any leading zeros except for the zero itself.</li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,0,0]\n34\n[2,7,4]\n181\n[2,1,5]\n806",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "688",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3453,
      "dislikes": 294,
      "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486733,
      "commentCount": 224,
      "topLevelCommentCount": 139
    },
    "classAndMethodDefinition": "class Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:"
  },
  {
    "stat": {
      "question_id": 1028,
      "question__article__live": true,
      "question__article__slug": "interval-list-intersections",
      "question__article__has_video_solution": false,
      "question__title": "Interval List Intersections",
      "question__title_slug": "interval-list-intersections",
      "question__hide": false,
      "total_acs": 430436,
      "total_submitted": 599031,
      "frontend_question_id": 986,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/interval-list-intersections",
      "questionId": "1028",
      "questionFrontendId": "986",
      "questionTitle": "Interval List Intersections",
      "titleSlug": "interval-list-intersections",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given two lists of closed intervals, <code>firstList</code> and <code>secondList</code>, where <code>firstList[i] = [start<sub>i</sub>, end<sub>i</sub>]</code> and <code>secondList[j] = [start<sub>j</sub>, end<sub>j</sub>]</code>. Each list of intervals is pairwise <strong>disjoint</strong> and in <strong>sorted order</strong>.</p>\n\n<p>Return <em>the intersection of these two interval lists</em>.</p>\n\n<p>A <strong>closed interval</strong> <code>[a, b]</code> (with <code>a &lt;= b</code>) denotes the set of real numbers <code>x</code> with <code>a &lt;= x &lt;= b</code>.</p>\n\n<p>The <strong>intersection</strong> of two closed intervals is a set of real numbers that are either empty or represented as a closed interval. For example, the intersection of <code>[1, 3]</code> and <code>[2, 4]</code> is <code>[2, 3]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/01/30/interval1.png\" style=\"width: 700px; height: 194px;\" />\n<pre>\n<strong>Input:</strong> firstList = [[0,2],[5,10],[13,23],[24,25]], secondList = [[1,5],[8,12],[15,24],[25,26]]\n<strong>Output:</strong> [[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> firstList = [[1,3],[5,9]], secondList = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= firstList.length, secondList.length &lt;= 1000</code></li>\n\t<li><code>firstList.length + secondList.length &gt;= 1</code></li>\n\t<li><code>0 &lt;= start<sub>i</sub> &lt; end<sub>i</sub> &lt;= 10<sup>9</sup></code></li>\n\t<li><code>end<sub>i</sub> &lt; start<sub>i+1</sub></code></li>\n\t<li><code>0 &lt;= start<sub>j</sub> &lt; end<sub>j</sub> &lt;= 10<sup>9</sup> </code></li>\n\t<li><code>end<sub>j</sub> &lt; start<sub>j+1</sub></code></li>\n</ul>\n",
      "exampleTestcases": "[[0,2],[5,10],[13,23],[24,25]]\n[[1,5],[8,12],[15,24],[25,26]]\n[[1,3],[5,9]]\n[]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "685",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5573,
      "dislikes": 114,
      "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Merge Sorted Array\", \"titleSlug\": \"merge-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Employee Free Time\", \"titleSlug\": \"employee-free-time\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Matching of Players With Trainers\", \"titleSlug\": \"maximum-matching-of-players-with-trainers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486730,
      "commentCount": 33,
      "topLevelCommentCount": 21
    },
    "classAndMethodDefinition": "def intervalIntersection(self, A: List[List[int]], B: List[List[int]]) -> List[List[int]]:\n3.         i = 0"
  },
  {
    "stat": {
      "question_id": 1781,
      "question__article__live": true,
      "question__article__slug": "check-if-two-string-arrays-are-equivalent",
      "question__article__has_video_solution": false,
      "question__title": "Check If Two String Arrays are Equivalent",
      "question__title_slug": "check-if-two-string-arrays-are-equivalent",
      "question__hide": false,
      "total_acs": 511819,
      "total_submitted": 598055,
      "frontend_question_id": 1662,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent",
      "questionId": "1781",
      "questionFrontendId": "1662",
      "questionTitle": "Check If Two String Arrays are Equivalent",
      "titleSlug": "check-if-two-string-arrays-are-equivalent",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two string arrays <code>word1</code> and <code>word2</code>, return<em> </em><code>true</code><em> if the two arrays <strong>represent</strong> the same string, and </em><code>false</code><em> otherwise.</em></p>\n\n<p>A string is <strong>represented</strong> by an array if the array elements concatenated <strong>in order</strong> forms the string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = [&quot;ab&quot;, &quot;c&quot;], word2 = [&quot;a&quot;, &quot;bc&quot;]\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\nword1 represents string &quot;ab&quot; + &quot;c&quot; -&gt; &quot;abc&quot;\nword2 represents string &quot;a&quot; + &quot;bc&quot; -&gt; &quot;abc&quot;\nThe strings are the same, so return true.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = [&quot;a&quot;, &quot;cb&quot;], word2 = [&quot;ab&quot;, &quot;c&quot;]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1  = [&quot;abc&quot;, &quot;d&quot;, &quot;defg&quot;], word2 = [&quot;abcddefg&quot;]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word1.length, word2.length &lt;= 10<sup>3</sup></code></li>\n\t<li><code>1 &lt;= word1[i].length, word2[i].length &lt;= 10<sup>3</sup></code></li>\n\t<li><code>1 &lt;= sum(word1[i].length), sum(word2[i].length) &lt;= 10<sup>3</sup></code></li>\n\t<li><code>word1[i]</code> and <code>word2[i]</code> consist of lowercase letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"ab\", \"c\"]\n[\"a\", \"bc\"]\n[\"a\", \"cb\"]\n[\"ab\", \"c\"]\n[\"abc\", \"d\", \"defg\"]\n[\"abcddefg\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "Concatenate all strings in the first array into a single string in the given order, the same for the second array.",
        "Both arrays represent the same string if and only if the generated strings are the same."
      ],
      "solution": {
        "id": "1595",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3001,
      "dislikes": 200,
      "similarQuestions": "[{\"title\": \"Check if an Original String Exists Given Two Encoded Strings\", \"titleSlug\": \"check-if-an-original-string-exists-given-two-encoded-strings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487453,
      "commentCount": 111,
      "topLevelCommentCount": 68
    },
    "classAndMethodDefinition": "def arrayStringsAreEqual(self, word1: List[str], word2: List[str]) -> bool:\n        word1 = \"\".join(word1)"
  },
  {
    "stat": {
      "question_id": 1406,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Subtract the Product and Sum of Digits of an Integer",
      "question__title_slug": "subtract-the-product-and-sum-of-digits-of-an-integer",
      "question__hide": false,
      "total_acs": 515460,
      "total_submitted": 595363,
      "frontend_question_id": 1281,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer",
      "questionId": "1406",
      "questionFrontendId": "1281",
      "questionTitle": "Subtract the Product and Sum of Digits of an Integer",
      "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "Given an integer number <code>n</code>, return the difference between the product of its digits and the sum of its digits.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 234\n<strong>Output:</strong> 15 \n<b>Explanation:</b> \nProduct of digits = 2 * 3 * 4 = 24 \nSum of digits = 2 + 3 + 4 = 9 \nResult = 24 - 9 = 15\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4421\n<strong>Output:</strong> 21\n<b>Explanation: \n</b>Product of digits = 4 * 4 * 2 * 1 = 32 \nSum of digits = 4 + 4 + 2 + 1 = 11 \nResult = 32 - 11 = 21\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\n</ul>\n",
      "exampleTestcases": "234\n4421",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [
        "How to compute all digits of the number ?",
        "Use modulus operator (%) to compute the last digit.",
        "Generalise modulus operator idea to compute all digits."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 2579,
      "dislikes": 234,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487100,
      "commentCount": 73,
      "topLevelCommentCount": 54
    },
    "classAndMethodDefinition": "class Solution(object):\n    def subtractProductAndSum(self, n):"
  },
  {
    "stat": {
      "question_id": 403,
      "question__article__live": true,
      "question__article__slug": "frog-jump",
      "question__article__has_video_solution": false,
      "question__title": "Frog Jump",
      "question__title_slug": "frog-jump",
      "question__hide": false,
      "total_acs": 274885,
      "total_submitted": 595161,
      "frontend_question_id": 403,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/frog-jump",
      "questionId": "403",
      "questionFrontendId": "403",
      "questionTitle": "Frog Jump",
      "titleSlug": "frog-jump",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>A frog is crossing a river. The river is divided into some number of units, and at each unit, there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.</p>\n\n<p>Given a list of <code>stones</code>&nbsp;positions (in units) in sorted <strong>ascending order</strong>, determine if the frog can cross the river by landing on the last stone. Initially, the frog is on the first stone and assumes the first jump must be <code>1</code> unit.</p>\n\n<p>If the frog&#39;s last jump was <code>k</code> units, its next jump must be either <code>k - 1</code>, <code>k</code>, or <code>k + 1</code> units. The frog can only jump in the forward direction.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [0,1,3,5,6,8,12,17]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The frog can jump to the last stone by jumping 1 unit to the 2nd stone, then 2 units to the 3rd stone, then 2 units to the 4th stone, then 3 units to the 6th stone, 4 units to the 7th stone, and 5 units to the 8th stone.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [0,1,2,3,4,8,9,11]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no way to jump to the last stone as the gap between the 5th and 6th stone is too large.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= stones.length &lt;= 2000</code></li>\n\t<li><code>0 &lt;= stones[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>stones[0] == 0</code></li>\n\t<li><code>stones</code>&nbsp;is sorted in a strictly increasing order.</li>\n</ul>\n",
      "exampleTestcases": "[0,1,3,5,6,8,12,17]\n[0,1,2,3,4,8,9,11]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1963",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5598,
      "dislikes": 253,
      "similarQuestions": "[{\"title\": \"Minimum Sideway Jumps\", \"titleSlug\": \"minimum-sideway-jumps\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Solving Questions With Brainpower\", \"titleSlug\": \"solving-questions-with-brainpower\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Jumps to Reach the Last Index\", \"titleSlug\": \"maximum-number-of-jumps-to-reach-the-last-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486140,
      "commentCount": 136,
      "topLevelCommentCount": 86
    },
    "classAndMethodDefinition": "class Solution:\n    def canCross(self, stones: List[int]) -> bool:"
  },
  {
    "stat": {
      "question_id": 336,
      "question__article__live": true,
      "question__article__slug": "palindrome-pairs",
      "question__article__has_video_solution": false,
      "question__title": "Palindrome Pairs",
      "question__title_slug": "palindrome-pairs",
      "question__hide": false,
      "total_acs": 210888,
      "total_submitted": 592929,
      "frontend_question_id": 336,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/palindrome-pairs",
      "questionId": "336",
      "questionFrontendId": "336",
      "questionTitle": "Palindrome Pairs",
      "titleSlug": "palindrome-pairs",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given a <strong>0-indexed</strong> array of <strong>unique</strong> strings <code>words</code>.</p>\n\n<p>A <strong>palindrome pair</strong> is a pair of integers <code>(i, j)</code> such that:</p>\n\n<ul>\n\t<li><code>0 &lt;= i, j &lt; words.length</code>,</li>\n\t<li><code>i != j</code>, and</li>\n\t<li><code>words[i] + words[j]</code> (the concatenation of the two strings) is a <span data-keyword=\"palindrome-string\">palindrome</span>.</li>\n</ul>\n\n<p>Return <em>an array of all the <strong>palindrome pairs</strong> of </em><code>words</code>.</p>\n\n<p>You must write an algorithm with&nbsp;<code>O(sum of words[i].length)</code>&nbsp;runtime complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;abcd&quot;,&quot;dcba&quot;,&quot;lls&quot;,&quot;s&quot;,&quot;sssll&quot;]\n<strong>Output:</strong> [[0,1],[1,0],[3,2],[2,4]]\n<strong>Explanation:</strong> The palindromes are [&quot;abcddcba&quot;,&quot;dcbaabcd&quot;,&quot;slls&quot;,&quot;llssssll&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;bat&quot;,&quot;tab&quot;,&quot;cat&quot;]\n<strong>Output:</strong> [[0,1],[1,0]]\n<strong>Explanation:</strong> The palindromes are [&quot;battab&quot;,&quot;tabbat&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;a&quot;,&quot;&quot;]\n<strong>Output:</strong> [[0,1],[1,0]]\n<strong>Explanation:</strong> The palindromes are [&quot;a&quot;,&quot;a&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 5000</code></li>\n\t<li><code>0 &lt;= words[i].length &lt;= 300</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"abcd\",\"dcba\",\"lls\",\"s\",\"sssll\"]\n[\"bat\",\"tab\",\"cat\"]\n[\"a\",\"\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        }
      ],
      "hints": [
        "Checking every two pairs will exceed the time limit. It will be O(n^2 * k). We need a faster way.",
        "If we hash every string in the array, how can we check if two pairs form a palindrome after the concatenation?",
        "We can check every string in words and consider it as words[j] (i.e., the suffix of the target palindrome). We can check if there is a hash of string that can be the prefix to make it a palindrome."
      ],
      "solution": {
        "id": "851",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4472,
      "dislikes": 468,
      "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Palindrome\", \"titleSlug\": \"shortest-palindrome\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Palindrome by Concatenating Two Letter Words\", \"titleSlug\": \"longest-palindrome-by-concatenating-two-letter-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Maximum Number of String Pairs\", \"titleSlug\": \"find-maximum-number-of-string-pairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486073,
      "commentCount": 50,
      "topLevelCommentCount": 33
    },
    "classAndMethodDefinition": "def is_palindrome(check):\n            return check == check[::-1]"
  },
  {
    "stat": {
      "question_id": 460,
      "question__article__live": true,
      "question__article__slug": "lfu-cache",
      "question__article__has_video_solution": false,
      "question__title": "LFU Cache",
      "question__title_slug": "lfu-cache",
      "question__hide": false,
      "total_acs": 264029,
      "total_submitted": 589400,
      "frontend_question_id": 460,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/lfu-cache",
      "questionId": "460",
      "questionFrontendId": "460",
      "questionTitle": "LFU Cache",
      "titleSlug": "lfu-cache",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Design and implement a data structure for a <a href=\"https://en.wikipedia.org/wiki/Least_frequently_used\" target=\"_blank\">Least Frequently Used (LFU)</a> cache.</p>\n\n<p>Implement the <code>LFUCache</code> class:</p>\n\n<ul>\n\t<li><code>LFUCache(int capacity)</code> Initializes the object with the <code>capacity</code> of the data structure.</li>\n\t<li><code>int get(int key)</code> Gets the value of the <code>key</code> if the <code>key</code> exists in the cache. Otherwise, returns <code>-1</code>.</li>\n\t<li><code>void put(int key, int value)</code> Update the value of the <code>key</code> if present, or inserts the <code>key</code> if not already present. When the cache reaches its <code>capacity</code>, it should invalidate and remove the <strong>least frequently used</strong> key before inserting a new item. For this problem, when there is a <strong>tie</strong> (i.e., two or more keys with the same frequency), the <strong>least recently used</strong> <code>key</code> would be invalidated.</li>\n</ul>\n\n<p>To determine the least frequently used key, a <strong>use counter</strong> is maintained for each key in the cache. The key with the smallest <strong>use counter</strong> is the least frequently used key.</p>\n\n<p>When a key is first inserted into the cache, its <strong>use counter</strong> is set to <code>1</code> (due to the <code>put</code> operation). The <strong>use counter</strong> for a key in the cache is incremented either a <code>get</code> or <code>put</code> operation is called on it.</p>\n\n<p>The functions&nbsp;<code data-stringify-type=\"code\">get</code>&nbsp;and&nbsp;<code data-stringify-type=\"code\">put</code>&nbsp;must each run in <code>O(1)</code> average time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;LFUCache&quot;, &quot;put&quot;, &quot;put&quot;, &quot;get&quot;, &quot;put&quot;, &quot;get&quot;, &quot;get&quot;, &quot;put&quot;, &quot;get&quot;, &quot;get&quot;, &quot;get&quot;]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [3], [4, 4], [1], [3], [4]]\n<strong>Output</strong>\n[null, null, null, 1, null, -1, 3, null, -1, 3, 4]\n\n<strong>Explanation</strong>\n// cnt(x) = the use counter for key x\n// cache=[] will show the last used order for tiebreakers (leftmost element is  most recent)\nLFUCache lfu = new LFUCache(2);\nlfu.put(1, 1);   // cache=[1,_], cnt(1)=1\nlfu.put(2, 2);   // cache=[2,1], cnt(2)=1, cnt(1)=1\nlfu.get(1);      // return 1\n                 // cache=[1,2], cnt(2)=1, cnt(1)=2\nlfu.put(3, 3);   // 2 is the LFU key because cnt(2)=1 is the smallest, invalidate 2.\n&nbsp;                // cache=[3,1], cnt(3)=1, cnt(1)=2\nlfu.get(2);      // return -1 (not found)\nlfu.get(3);      // return 3\n                 // cache=[3,1], cnt(3)=2, cnt(1)=2\nlfu.put(4, 4);   // Both 1 and 3 have the same cnt, but 1 is LRU, invalidate 1.\n                 // cache=[4,3], cnt(4)=1, cnt(3)=2\nlfu.get(1);      // return -1 (not found)\nlfu.get(3);      // return 3\n                 // cache=[3,4], cnt(4)=1, cnt(3)=3\nlfu.get(4);      // return 4\n                 // cache=[4,3], cnt(4)=2, cnt(3)=3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= capacity&nbsp;&lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= key &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= value &lt;= 10<sup>9</sup></code></li>\n\t<li>At most <code>2 * 10<sup>5</sup></code>&nbsp;calls will be made to <code>get</code> and <code>put</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<span style=\"display: none;\">&nbsp;</span>",
      "exampleTestcases": "[\"LFUCache\",\"put\",\"put\",\"get\",\"put\",\"get\",\"get\",\"put\",\"get\",\"get\",\"get\"]\n[[2],[1,1],[2,2],[1],[3,3],[2],[3],[4,4],[1],[3],[4]]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1610",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5704,
      "dislikes": 331,
      "similarQuestions": "[{\"title\": \"LRU Cache\", \"titleSlug\": \"lru-cache\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design In-Memory File System\", \"titleSlug\": \"design-in-memory-file-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486191,
      "commentCount": 153,
      "topLevelCommentCount": 99
    },
    "classAndMethodDefinition": "from collections import deque, defaultdict, OrderedDict\n"
  },
  {
    "stat": {
      "question_id": 1352,
      "question__article__live": true,
      "question__article__slug": "maximum-profit-in-job-scheduling",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Profit in Job Scheduling",
      "question__title_slug": "maximum-profit-in-job-scheduling",
      "question__hide": false,
      "total_acs": 320106,
      "total_submitted": 589399,
      "frontend_question_id": 1235,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-profit-in-job-scheduling",
      "questionId": "1352",
      "questionFrontendId": "1235",
      "questionTitle": "Maximum Profit in Job Scheduling",
      "titleSlug": "maximum-profit-in-job-scheduling",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>We have <code>n</code> jobs, where every job is scheduled to be done from <code>startTime[i]</code> to <code>endTime[i]</code>, obtaining a profit of <code>profit[i]</code>.</p>\n\n<p>You&#39;re given the <code>startTime</code>, <code>endTime</code> and <code>profit</code> arrays, return the maximum profit you can take such that there are no two jobs in the subset with overlapping time range.</p>\n\n<p>If you choose a job that ends at time <code>X</code> you will be able to start another job that starts at time <code>X</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/10/sample1_1584.png\" style=\"width: 380px; height: 154px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> startTime = [1,2,3,3], endTime = [3,4,5,6], profit = [50,10,40,70]\n<strong>Output:</strong> 120\n<strong>Explanation:</strong> The subset chosen is the first and fourth job. \nTime range [1-3]+[3-6] , we get profit of 120 = 50 + 70.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/10/sample22_1584.png\" style=\"width: 600px; height: 112px;\" /> </strong></p>\n\n<pre>\n<strong>Input:</strong> startTime = [1,2,3,4,6], endTime = [3,5,10,6,9], profit = [20,20,100,70,60]\n<strong>Output:</strong> 150\n<strong>Explanation:</strong> The subset chosen is the first, fourth and fifth job. \nProfit obtained 150 = 20 + 70 + 60.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/10/sample3_1584.png\" style=\"width: 400px; height: 112px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> startTime = [1,1,1], endTime = [2,3,4], profit = [5,6,4]\n<strong>Output:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= startTime.length == endTime.length == profit.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= startTime[i] &lt; endTime[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= profit[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,3]\n[3,4,5,6]\n[50,10,40,70]\n[1,2,3,4,6]\n[3,5,10,6,9]\n[20,20,100,70,60]\n[1,1,1]\n[2,3,4]\n[5,6,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "Think on DP.",
        "Sort the elements by starting time, then define the dp[i] as the maximum profit taking elements from the suffix starting at i.",
        "Use binarySearch (lower_bound/upper_bound on C++) to get the next index for the DP transition."
      ],
      "solution": {
        "id": "1155",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6829,
      "dislikes": 109,
      "similarQuestions": "[{\"title\": \"Maximum Earnings From Taxi\", \"titleSlug\": \"maximum-earnings-from-taxi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Best Non-Overlapping Events\", \"titleSlug\": \"two-best-non-overlapping-events\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487046,
      "commentCount": 276,
      "topLevelCommentCount": 176
    },
    "classAndMethodDefinition": "class Solution:\n    def jobScheduling(self, startTime: List[int], endTime: List[int], profit: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 657,
      "question__article__live": true,
      "question__article__slug": "judge-route-circle",
      "question__article__has_video_solution": false,
      "question__title": "Robot Return to Origin",
      "question__title_slug": "robot-return-to-origin",
      "question__hide": false,
      "total_acs": 446236,
      "total_submitted": 587860,
      "frontend_question_id": 657,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/robot-return-to-origin",
      "questionId": "657",
      "questionFrontendId": "657",
      "questionTitle": "Robot Return to Origin",
      "titleSlug": "robot-return-to-origin",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>There is a robot starting at the position <code>(0, 0)</code>, the origin, on a 2D plane. Given a sequence of its moves, judge if this robot <strong>ends up at </strong><code>(0, 0)</code> after it completes its moves.</p>\n\n<p>You are given a string <code>moves</code> that represents the move sequence of the robot where <code>moves[i]</code> represents its <code>i<sup>th</sup></code> move. Valid moves are <code>&#39;R&#39;</code> (right), <code>&#39;L&#39;</code> (left), <code>&#39;U&#39;</code> (up), and <code>&#39;D&#39;</code> (down).</p>\n\n<p>Return <code>true</code><em> if the robot returns to the origin after it finishes all of its moves, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p><strong>Note</strong>: The way that the robot is &quot;facing&quot; is irrelevant. <code>&#39;R&#39;</code> will always make the robot move to the right once, <code>&#39;L&#39;</code> will always make it move left, etc. Also, assume that the magnitude of the robot&#39;s movement is the same for each move.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> moves = &quot;UD&quot;\n<strong>Output:</strong> true\n<strong>Explanation</strong>: The robot moves up once, and then down once. All moves have the same magnitude, so it ended up at the origin where it started. Therefore, we return true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> moves = &quot;LL&quot;\n<strong>Output:</strong> false\n<strong>Explanation</strong>: The robot moves left twice. It ends up two &quot;moves&quot; to the left of the origin. We return false because it is not at the origin at the end of its moves.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= moves.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>moves</code> only contains the characters <code>&#39;U&#39;</code>, <code>&#39;D&#39;</code>, <code>&#39;L&#39;</code> and <code>&#39;R&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"UD\"\n\"LL\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "331",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2437,
      "dislikes": 747,
      "similarQuestions": "[{\"title\": \"Number of Provinces\", \"titleSlug\": \"number-of-provinces\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Execution of All Suffix Instructions Staying in a Grid\", \"titleSlug\": \"execution-of-all-suffix-instructions-staying-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Furthest Point From Origin\", \"titleSlug\": \"furthest-point-from-origin\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486380,
      "commentCount": 47,
      "topLevelCommentCount": 30
    },
    "classAndMethodDefinition": "class Solution:\n    def judgeCircle(self, moves: str) -> bool:"
  },
  {
    "stat": {
      "question_id": 384,
      "question__article__live": true,
      "question__article__slug": "shuffle-an-array",
      "question__article__has_video_solution": false,
      "question__title": "Shuffle an Array",
      "question__title_slug": "shuffle-an-array",
      "question__hide": false,
      "total_acs": 343547,
      "total_submitted": 587271,
      "frontend_question_id": 384,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/shuffle-an-array",
      "questionId": "384",
      "questionFrontendId": "384",
      "questionTitle": "Shuffle an Array",
      "titleSlug": "shuffle-an-array",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, design an algorithm to randomly shuffle the array. All permutations of the array should be <strong>equally likely</strong> as a result of the shuffling.</p>\n\n<p>Implement the <code>Solution</code> class:</p>\n\n<ul>\n\t<li><code>Solution(int[] nums)</code> Initializes the object with the integer array <code>nums</code>.</li>\n\t<li><code>int[] reset()</code> Resets the array to its original configuration and returns it.</li>\n\t<li><code>int[] shuffle()</code> Returns a random shuffling of the array.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Solution&quot;, &quot;shuffle&quot;, &quot;reset&quot;, &quot;shuffle&quot;]\n[[[1, 2, 3]], [], [], []]\n<strong>Output</strong>\n[null, [3, 1, 2], [1, 2, 3], [1, 3, 2]]\n\n<strong>Explanation</strong>\nSolution solution = new Solution([1, 2, 3]);\nsolution.shuffle();    // Shuffle the array [1,2,3] and return its result.\n                       // Any permutation of [1,2,3] must be equally likely to be returned.\n                       // Example: return [3, 1, 2]\nsolution.reset();      // Resets the array back to its original configuration [1,2,3]. Return [1, 2, 3]\nsolution.shuffle();    // Returns the random shuffling of array [1,2,3]. Example: return [1, 3, 2]\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 50</code></li>\n\t<li><code>-10<sup>6</sup> &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n\t<li>All the elements of <code>nums</code> are <strong>unique</strong>.</li>\n\t<li>At most <code>10<sup>4</sup></code> calls <strong>in total</strong> will be made to <code>reset</code> and <code>shuffle</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"Solution\",\"shuffle\",\"reset\",\"shuffle\"]\n[[[1,2,3]],[],[],[]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Randomized",
          "slug": "randomized",
          "translatedName": null
        }
      ],
      "hints": [
        "The solution expects that we always use the original array to shuffle() else some of the test cases fail. (Credits; @snehasingh31)"
      ],
      "solution": {
        "id": "287",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1354,
      "dislikes": 930,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486121,
      "commentCount": 32,
      "topLevelCommentCount": 23
    },
    "classAndMethodDefinition": "def __init__(self, nums: List[int]):\n\\t\\t\\tself.arr = nums[:]  # Deep Copy, Can also use Shallow Copy concept!"
  },
  {
    "stat": {
      "question_id": 87,
      "question__article__live": true,
      "question__article__slug": "scramble-string",
      "question__article__has_video_solution": false,
      "question__title": "Scramble String",
      "question__title_slug": "scramble-string",
      "question__hide": false,
      "total_acs": 238455,
      "total_submitted": 586815,
      "frontend_question_id": 87,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/scramble-string",
      "questionId": "87",
      "questionFrontendId": "87",
      "questionTitle": "Scramble String",
      "titleSlug": "scramble-string",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>We can scramble a string s to get a string t using the following algorithm:</p>\n\n<ol>\n\t<li>If the length of the string is 1, stop.</li>\n\t<li>If the length of the string is &gt; 1, do the following:\n\t<ul>\n\t\t<li>Split the string into two non-empty substrings at a random index, i.e., if the string is <code>s</code>, divide it to <code>x</code> and <code>y</code> where <code>s = x + y</code>.</li>\n\t\t<li><strong>Randomly</strong>&nbsp;decide to swap the two substrings or to keep them in the same order. i.e., after this step, <code>s</code> may become <code>s = x + y</code> or <code>s = y + x</code>.</li>\n\t\t<li>Apply step 1 recursively on each of the two substrings <code>x</code> and <code>y</code>.</li>\n\t</ul>\n\t</li>\n</ol>\n\n<p>Given two strings <code>s1</code> and <code>s2</code> of <strong>the same length</strong>, return <code>true</code> if <code>s2</code> is a scrambled string of <code>s1</code>, otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;great&quot;, s2 = &quot;rgeat&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> One possible scenario applied on s1 is:\n&quot;great&quot; --&gt; &quot;gr/eat&quot; // divide at random index.\n&quot;gr/eat&quot; --&gt; &quot;gr/eat&quot; // random decision is not to swap the two substrings and keep them in order.\n&quot;gr/eat&quot; --&gt; &quot;g/r / e/at&quot; // apply the same algorithm recursively on both substrings. divide at random index each of them.\n&quot;g/r / e/at&quot; --&gt; &quot;r/g / e/at&quot; // random decision was to swap the first substring and to keep the second substring in the same order.\n&quot;r/g / e/at&quot; --&gt; &quot;r/g / e/ a/t&quot; // again apply the algorithm recursively, divide &quot;at&quot; to &quot;a/t&quot;.\n&quot;r/g / e/ a/t&quot; --&gt; &quot;r/g / e/ a/t&quot; // random decision is to keep both substrings in the same order.\nThe algorithm stops now, and the result string is &quot;rgeat&quot; which is s2.\nAs one possible scenario led s1 to be scrambled to s2, we return true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;abcde&quot;, s2 = &quot;caebd&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;a&quot;, s2 = &quot;a&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>s1.length == s2.length</code></li>\n\t<li><code>1 &lt;= s1.length &lt;= 30</code></li>\n\t<li><code>s1</code> and <code>s2</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"great\"\n\"rgeat\"\n\"abcde\"\n\"caebd\"\n\"a\"\n\"a\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1790",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3347,
      "dislikes": 1283,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2485824,
      "commentCount": 135,
      "topLevelCommentCount": 77
    },
    "classAndMethodDefinition": "def isScramble(self, s1, s2):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 282,
      "question__article__live": true,
      "question__article__slug": "expression-add-operators",
      "question__article__has_video_solution": false,
      "question__title": "Expression Add Operators",
      "question__title_slug": "expression-add-operators",
      "question__hide": false,
      "total_acs": 235594,
      "total_submitted": 585666,
      "frontend_question_id": 282,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/expression-add-operators",
      "questionId": "282",
      "questionFrontendId": "282",
      "questionTitle": "Expression Add Operators",
      "titleSlug": "expression-add-operators",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>num</code> that contains only digits and an integer <code>target</code>, return <em><strong>all possibilities</strong> to insert the binary operators </em><code>&#39;+&#39;</code><em>, </em><code>&#39;-&#39;</code><em>, and/or </em><code>&#39;*&#39;</code><em> between the digits of </em><code>num</code><em> so that the resultant expression evaluates to the </em><code>target</code><em> value</em>.</p>\n\n<p>Note that operands in the returned expressions <strong>should not</strong> contain leading zeros.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;123&quot;, target = 6\n<strong>Output:</strong> [&quot;1*2*3&quot;,&quot;1+2+3&quot;]\n<strong>Explanation:</strong> Both &quot;1*2*3&quot; and &quot;1+2+3&quot; evaluate to 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;232&quot;, target = 8\n<strong>Output:</strong> [&quot;2*3+2&quot;,&quot;2+3*2&quot;]\n<strong>Explanation:</strong> Both &quot;2*3+2&quot; and &quot;2+3*2&quot; evaluate to 8.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;3456237490&quot;, target = 9191\n<strong>Output:</strong> []\n<strong>Explanation:</strong> There are no expressions that can be created from &quot;3456237490&quot; to evaluate to 9191.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num.length &lt;= 10</code></li>\n\t<li><code>num</code> consists of only digits.</li>\n\t<li><code>-2<sup>31</sup> &lt;= target &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "\"123\"\n6\n\"232\"\n8\n\"3456237490\"\n9191",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [
        "Note that a number can contain multiple digits.",
        "Since the question asks us to find <b>all</b> of the valid expressions, we need a way to iterate over all of them. (<b>Hint:</b> Recursion!)",
        "We can keep track of the expression string and evaluate it at the very end. But that would take a lot of time. Can we keep track of the expression's value as well so as to avoid the evaluation at the very end of recursion?",
        "Think carefully about the multiply operator. It has a higher precedence than the addition and subtraction operators. \r\n\r\n<br> 1 + 2 = 3  <br>\r\n1 + 2 - 4 --> 3 - 4 --> -1 <br>\r\n1 + 2 - 4 * 12 --> -1 * 12 --> -12 (WRONG!) <br>\r\n1 + 2 - 4 * 12 --> -1 - (-4) + (-4 * 12) --> 3 + (-48) --> -45 (CORRECT!)",
        "We simply need to keep track of the last operand in our expression and reverse it's effect on the expression's value while considering the multiply operator."
      ],
      "solution": {
        "id": "548",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3414,
      "dislikes": 631,
      "similarQuestions": "[{\"title\": \"Evaluate Reverse Polish Notation\", \"titleSlug\": \"evaluate-reverse-polish-notation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator II\", \"titleSlug\": \"basic-calculator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Different Ways to Add Parentheses\", \"titleSlug\": \"different-ways-to-add-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Target Sum\", \"titleSlug\": \"target-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486019,
      "commentCount": 70,
      "topLevelCommentCount": 47
    },
    "classAndMethodDefinition": "def addOperators(self, num, target):\n        res, self.target = [], target"
  },
  {
    "stat": {
      "question_id": 898,
      "question__article__live": true,
      "question__article__slug": "transpose-matrix",
      "question__article__has_video_solution": false,
      "question__title": "Transpose Matrix",
      "question__title_slug": "transpose-matrix",
      "question__hide": false,
      "total_acs": 422637,
      "total_submitted": 584063,
      "frontend_question_id": 867,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/transpose-matrix",
      "questionId": "898",
      "questionFrontendId": "867",
      "questionTitle": "Transpose Matrix",
      "titleSlug": "transpose-matrix",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a 2D integer array <code>matrix</code>, return <em>the <strong>transpose</strong> of</em> <code>matrix</code>.</p>\n\n<p>The <strong>transpose</strong> of a matrix is the matrix flipped over its main diagonal, switching the matrix&#39;s row and column indices.</p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/10/hint_transpose.png\" style=\"width: 600px; height: 197px;\" /></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [[1,4,7],[2,5,8],[3,6,9]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3],[4,5,6]]\n<strong>Output:</strong> [[1,4],[2,5],[3,6]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 1000</code></li>\n\t<li><code>1 &lt;= m * n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= matrix[i][j] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2,3],[4,5,6],[7,8,9]]\n[[1,2,3],[4,5,6]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "We don't need any special algorithms to do this. You just need to know what the transpose of a matrix looks like. Rows become columns and vice versa!"
      ],
      "solution": {
        "id": "502",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3772,
      "dislikes": 443,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486605,
      "commentCount": 143,
      "topLevelCommentCount": 99
    },
    "classAndMethodDefinition": "class Solution(object):\n    def transpose(self, matrix):"
  },
  {
    "stat": {
      "question_id": 454,
      "question__article__live": true,
      "question__article__slug": "4sum-ii",
      "question__article__has_video_solution": false,
      "question__title": "4Sum II",
      "question__title_slug": "4sum-ii",
      "question__hide": false,
      "total_acs": 333993,
      "total_submitted": 582309,
      "frontend_question_id": 454,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/4sum-ii",
      "questionId": "454",
      "questionFrontendId": "454",
      "questionTitle": "4Sum II",
      "titleSlug": "4sum-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given four integer arrays <code>nums1</code>, <code>nums2</code>, <code>nums3</code>, and <code>nums4</code> all of length <code>n</code>, return the number of tuples <code>(i, j, k, l)</code> such that:</p>\n\n<ul>\n\t<li><code>0 &lt;= i, j, k, l &lt; n</code></li>\n\t<li><code>nums1[i] + nums2[j] + nums3[k] + nums4[l] == 0</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2], nums2 = [-2,-1], nums3 = [-1,2], nums4 = [0,2]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\nThe two tuples are:\n1. (0, 0, 0, 1) -&gt; nums1[0] + nums2[0] + nums3[0] + nums4[1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -&gt; nums1[1] + nums2[1] + nums3[0] + nums4[0] = 2 + (-1) + (-1) + 0 = 0\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [0], nums2 = [0], nums3 = [0], nums4 = [0]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums1.length</code></li>\n\t<li><code>n == nums2.length</code></li>\n\t<li><code>n == nums3.length</code></li>\n\t<li><code>n == nums4.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n\t<li><code>-2<sup>28</sup> &lt;= nums1[i], nums2[i], nums3[i], nums4[i] &lt;= 2<sup>28</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2]\n[-2,-1]\n[-1,2]\n[0,2]\n[0]\n[0]\n[0]\n[0]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "960",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4918,
      "dislikes": 143,
      "similarQuestions": "[{\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486185,
      "commentCount": 28,
      "topLevelCommentCount": 18
    },
    "classAndMethodDefinition": "def fourSumCount(self, nums1: List[int], nums2: List[int], nums3: List[int], nums4: List[int]) -> int:\n\\tn, hm, res = len(nums1), defaultdict(int), 0"
  },
  {
    "stat": {
      "question_id": 775,
      "question__article__live": true,
      "question__article__slug": "n-ary-tree-preorder-traversal",
      "question__article__has_video_solution": false,
      "question__title": "N-ary Tree Preorder Traversal",
      "question__title_slug": "n-ary-tree-preorder-traversal",
      "question__hide": false,
      "total_acs": 439464,
      "total_submitted": 579984,
      "frontend_question_id": 589,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/n-ary-tree-preorder-traversal",
      "questionId": "775",
      "questionFrontendId": "589",
      "questionTitle": "N-ary Tree Preorder Traversal",
      "titleSlug": "n-ary-tree-preorder-traversal",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of an n-ary tree, return <em>the preorder traversal of its nodes&#39; values</em>.</p>\n\n<p>Nary-Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"width: 100%; max-width: 300px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,3,2,4,null,5,6]\n<strong>Output:</strong> [1,3,5,6,2,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"width: 296px; height: 241px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>Output:</strong> [1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>The height of the n-ary tree is less than or equal to <code>1000</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>\n",
      "exampleTestcases": "[1,null,3,2,4,null,5,6]\n[1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "603",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3169,
      "dislikes": 202,
      "similarQuestions": "[{\"title\": \"Binary Tree Preorder Traversal\", \"titleSlug\": \"binary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Level Order Traversal\", \"titleSlug\": \"n-ary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Postorder Traversal\", \"titleSlug\": \"n-ary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486487,
      "commentCount": 67,
      "topLevelCommentCount": 41
    },
    "classAndMethodDefinition": "def __init__(self, val=None, children=None):\n        self.val = val"
  },
  {
    "stat": {
      "question_id": 1878,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Check if Array Is Sorted and Rotated",
      "question__title_slug": "check-if-array-is-sorted-and-rotated",
      "question__hide": false,
      "total_acs": 297716,
      "total_submitted": 578692,
      "frontend_question_id": 1752,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/check-if-array-is-sorted-and-rotated",
      "questionId": "1878",
      "questionFrontendId": "1752",
      "questionTitle": "Check if Array Is Sorted and Rotated",
      "titleSlug": "check-if-array-is-sorted-and-rotated",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>nums</code>, return <code>true</code><em> if the array was originally sorted in non-decreasing order, then rotated <strong>some</strong> number of positions (including zero)</em>. Otherwise, return <code>false</code>.</p>\n\n<p>There may be <strong>duplicates</strong> in the original array.</p>\n\n<p><strong>Note:</strong> An array <code>A</code> rotated by <code>x</code> positions results in an array <code>B</code> of the same length such that <code>A[i] == B[(i+x) % A.length]</code>, where <code>%</code> is the modulo operation.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,4,5,1,2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> [1,2,3,4,5] is the original sorted array.\nYou can rotate the array by x = 3 positions to begin on the the element of value 3: [3,4,5,1,2].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,3,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no sorted array once rotated that can make nums.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> [1,2,3] is the original sorted array.\nYou can rotate the array by x = 0 positions (i.e. no rotation) to make nums.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[3,4,5,1,2]\n[2,1,3,4]\n[1,2,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [
        "Brute force and check if it is possible for a sorted array to start from each position."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 3235,
      "dislikes": 187,
      "similarQuestions": "[{\"title\": \"Check if All A's Appears Before All B's\", \"titleSlug\": \"check-if-all-as-appears-before-all-bs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487537,
      "commentCount": 162,
      "topLevelCommentCount": 102
    },
    "classAndMethodDefinition": "def check_rotation(nums):\n    left, right = 0, len(nums) - 1"
  },
  {
    "stat": {
      "question_id": 714,
      "question__article__live": true,
      "question__article__slug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
      "question__article__has_video_solution": false,
      "question__title": "Best Time to Buy and Sell Stock with Transaction Fee",
      "question__title_slug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
      "question__hide": false,
      "total_acs": 399159,
      "total_submitted": 576726,
      "frontend_question_id": 714,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",
      "questionId": "714",
      "questionFrontendId": "714",
      "questionTitle": "Best Time to Buy and Sell Stock with Transaction Fee",
      "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day, and an integer <code>fee</code> representing a transaction fee.</p>\n\n<p>Find the maximum profit you can achieve. You may complete as many transactions as you like, but you need to pay the transaction fee for each transaction.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).</li>\n\t<li>The transaction fee is only charged once for each stock purchase and sale.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [1,3,2,8,4,9], fee = 2\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> The maximum profit can be achieved by:\n- Buying at prices[0] = 1\n- Selling at prices[3] = 8\n- Buying at prices[4] = 4\n- Selling at prices[5] = 9\nThe total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> prices = [1,3,7,5,10,3], fee = 3\n<strong>Output:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= prices.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= prices[i] &lt; 5 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= fee &lt; 5 * 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,2,8,4,9]\n2\n[1,3,7,5,10,3]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [
        "Consider the first K stock prices.  At the end, the only legal states are that you don't own a share of stock, or that you do.  Calculate the most profit you could have under each of these two cases."
      ],
      "solution": {
        "id": "1852",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7193,
      "dislikes": 215,
      "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486426,
      "commentCount": 137,
      "topLevelCommentCount": 67
    },
    "classAndMethodDefinition": "class Solution:\n    def maxProfit(self, prices: List[int], fee: int) -> int:"
  },
  {
    "stat": {
      "question_id": 1231,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Replace Elements with Greatest Element on Right Side",
      "question__title_slug": "replace-elements-with-greatest-element-on-right-side",
      "question__hide": false,
      "total_acs": 407361,
      "total_submitted": 571438,
      "frontend_question_id": 1299,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side",
      "questionId": "1231",
      "questionFrontendId": "1299",
      "questionTitle": "Replace Elements with Greatest Element on Right Side",
      "titleSlug": "replace-elements-with-greatest-element-on-right-side",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an array <code>arr</code>,&nbsp;replace every element in that array with the greatest element among the elements to its&nbsp;right, and replace the last element with <code>-1</code>.</p>\n\n<p>After doing so, return the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [17,18,5,4,6,1]\n<strong>Output:</strong> [18,6,6,6,1,-1]\n<strong>Explanation:</strong> \n- index 0 --&gt; the greatest element to the right of index 0 is index 1 (18).\n- index 1 --&gt; the greatest element to the right of index 1 is index 4 (6).\n- index 2 --&gt; the greatest element to the right of index 2 is index 4 (6).\n- index 3 --&gt; the greatest element to the right of index 3 is index 4 (6).\n- index 4 --&gt; the greatest element to the right of index 4 is index 5 (1).\n- index 5 --&gt; there are no elements to the right of index 5, so we put -1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [400]\n<strong>Output:</strong> [-1]\n<strong>Explanation:</strong> There are no elements to the right of index 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[17,18,5,4,6,1]\n[400]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [
        "Loop through the array starting from the end.",
        "Keep the maximum value seen so far."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 2602,
      "dislikes": 246,
      "similarQuestions": "[{\"title\": \"Two Furthest Houses With Different Colors\", \"titleSlug\": \"two-furthest-houses-with-different-colors\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element IV\", \"titleSlug\": \"next-greater-element-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486930,
      "commentCount": 61,
      "topLevelCommentCount": 36
    },
    "classAndMethodDefinition": "def replaceElements(self, arr):\n    "
  },
  {
    "stat": {
      "question_id": 1320,
      "question__article__live": true,
      "question__article__slug": "remove-all-adjacent-duplicates-in-string-ii",
      "question__article__has_video_solution": false,
      "question__title": "Remove All Adjacent Duplicates in String II",
      "question__title_slug": "remove-all-adjacent-duplicates-in-string-ii",
      "question__hide": false,
      "total_acs": 330463,
      "total_submitted": 567459,
      "frontend_question_id": 1209,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",
      "questionId": "1320",
      "questionFrontendId": "1209",
      "questionTitle": "Remove All Adjacent Duplicates in String II",
      "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code> and an integer <code>k</code>, a <code>k</code> <strong>duplicate removal</strong> consists of choosing <code>k</code> adjacent and equal letters from <code>s</code> and removing them, causing the left and the right side of the deleted substring to concatenate together.</p>\n\n<p>We repeatedly make <code>k</code> <strong>duplicate removals</strong> on <code>s</code> until we no longer can.</p>\n\n<p>Return <em>the final string after all such duplicate removals have been made</em>. It is guaranteed that the answer is <strong>unique</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcd&quot;, k = 2\n<strong>Output:</strong> &quot;abcd&quot;\n<strong>Explanation: </strong>There&#39;s nothing to delete.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;deeedbbcccbdaa&quot;, k = 3\n<strong>Output:</strong> &quot;aa&quot;\n<strong>Explanation: \n</strong>First delete &quot;eee&quot; and &quot;ccc&quot;, get &quot;ddbbbdaa&quot;\nThen delete &quot;bbb&quot;, get &quot;dddaa&quot;\nFinally delete &quot;ddd&quot;, get &quot;aa&quot;</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;pbbcggttciiippooaais&quot;, k = 2\n<strong>Output:</strong> &quot;ps&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>2 &lt;= k &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> only contains lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abcd\"\n2\n\"deeedbbcccbdaa\"\n3\n\"pbbcggttciiippooaais\"\n2",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [
        "Use a stack to store the characters, when there are k same characters, delete them.",
        "To make it more efficient, use a pair to store the value and the count of each character."
      ],
      "solution": {
        "id": "789",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5792,
      "dislikes": 115,
      "similarQuestions": "[{\"title\": \"Remove All Adjacent Duplicates In String\", \"titleSlug\": \"remove-all-adjacent-duplicates-in-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Replace Non-Coprime Numbers in Array\", \"titleSlug\": \"replace-non-coprime-numbers-in-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimize String Length\", \"titleSlug\": \"minimize-string-length\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487014,
      "commentCount": 40,
      "topLevelCommentCount": 29
    },
    "classAndMethodDefinition": "def removeDuplicates(self, S: str, K: int) -> str:\n        SC, st, i, j = list(S), [0], 1, 1"
  },
  {
    "stat": {
      "question_id": 1538,
      "question__article__live": true,
      "question__article__slug": "maximum-points-you-can-obtain-from-cards",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Points You Can Obtain from Cards",
      "question__title_slug": "maximum-points-you-can-obtain-from-cards",
      "question__hide": false,
      "total_acs": 305261,
      "total_submitted": 567448,
      "frontend_question_id": 1423,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards",
      "questionId": "1538",
      "questionFrontendId": "1423",
      "questionTitle": "Maximum Points You Can Obtain from Cards",
      "titleSlug": "maximum-points-you-can-obtain-from-cards",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are several cards <strong>arranged in a row</strong>, and each card has an associated number of points. The points are given in the integer array <code>cardPoints</code>.</p>\n\n<p>In one step, you can take one card from the beginning or from the end of the row. You have to take exactly <code>k</code> cards.</p>\n\n<p>Your score is the sum of the points of the cards you have taken.</p>\n\n<p>Given the integer array <code>cardPoints</code> and the integer <code>k</code>, return the <em>maximum score</em> you can obtain.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> cardPoints = [1,2,3,4,5,6,1], k = 3\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> After the first step, your score will always be 1. However, choosing the rightmost card first will maximize your total score. The optimal strategy is to take the three cards on the right, giving a final score of 1 + 6 + 5 = 12.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> cardPoints = [2,2,2], k = 2\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Regardless of which two cards you take, your score will always be 4.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> cardPoints = [9,7,7,9,7,7,9], k = 7\n<strong>Output:</strong> 55\n<strong>Explanation:</strong> You have to take all the cards. Your score is the sum of points of all cards.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= cardPoints.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= cardPoints[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= cardPoints.length</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5,6,1]\n3\n[2,2,2]\n2\n[9,7,7,9,7,7,9]\n7",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [
        "Let the sum of all points be total_pts. You need to remove a sub-array from cardPoints with length n - k.",
        "Keep a window of size n - k over the array. The answer is max(answer, total_pts - sumOfCurrentWindow)"
      ],
      "solution": {
        "id": "1135",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6218,
      "dislikes": 245,
      "similarQuestions": "[{\"title\": \"Maximum Score from Performing Multiplication Operations\", \"titleSlug\": \"maximum-score-from-performing-multiplication-operations\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Removing Minimum and Maximum From Array\", \"titleSlug\": \"removing-minimum-and-maximum-from-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Recolors to Get K Consecutive Black Blocks\", \"titleSlug\": \"minimum-recolors-to-get-k-consecutive-black-blocks\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Spending After Buying Items\", \"titleSlug\": \"maximum-spending-after-buying-items\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487230,
      "commentCount": 94,
      "topLevelCommentCount": 59
    },
    "classAndMethodDefinition": "def maxScore(self, C: List[int], K: int) -> int:\n        best = total = sum(C[:K])"
  },
  {
    "stat": {
      "question_id": 1476,
      "question__article__live": true,
      "question__article__slug": "count-negative-numbers-in-a-sorted-matrix",
      "question__article__has_video_solution": false,
      "question__title": "Count Negative Numbers in a Sorted Matrix",
      "question__title_slug": "count-negative-numbers-in-a-sorted-matrix",
      "question__hide": false,
      "total_acs": 436722,
      "total_submitted": 564080,
      "frontend_question_id": 1351,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix",
      "questionId": "1476",
      "questionFrontendId": "1351",
      "questionTitle": "Count Negative Numbers in a Sorted Matrix",
      "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a <code>m x n</code> matrix <code>grid</code> which is sorted in non-increasing order both row-wise and column-wise, return <em>the number of <strong>negative</strong> numbers in</em> <code>grid</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> There are 8 negatives number in the matrix.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[3,2],[1,0]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n\t<li><code>-100 &lt;= grid[i][j] &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you find an <code>O(n + m)</code> solution?",
      "exampleTestcases": "[[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]\n[[3,2],[1,0]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "Use binary search for optimization or simply brute force."
      ],
      "solution": {
        "id": "1842",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4980,
      "dislikes": 132,
      "similarQuestions": "[{\"title\": \"Maximum Count of Positive Integer and Negative Integer\", \"titleSlug\": \"maximum-count-of-positive-integer-and-negative-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487168,
      "commentCount": 109,
      "topLevelCommentCount": 53
    },
    "classAndMethodDefinition": "def countNegatives(self, grid):\n        count = 0"
  },
  {
    "stat": {
      "question_id": 501,
      "question__article__live": true,
      "question__article__slug": "find-mode-in-binary-search-tree",
      "question__article__has_video_solution": false,
      "question__title": "Find Mode in Binary Search Tree",
      "question__title_slug": "find-mode-in-binary-search-tree",
      "question__hide": false,
      "total_acs": 318223,
      "total_submitted": 562731,
      "frontend_question_id": 501,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-mode-in-binary-search-tree",
      "questionId": "501",
      "questionFrontendId": "501",
      "questionTitle": "Find Mode in Binary Search Tree",
      "titleSlug": "find-mode-in-binary-search-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary search tree (BST) with duplicates, return <em>all the <a href=\"https://en.wikipedia.org/wiki/Mode_(statistics)\" target=\"_blank\">mode(s)</a> (i.e., the most frequently occurred element) in it</em>.</p>\n\n<p>If the tree has more than one mode, return them in <strong>any order</strong>.</p>\n\n<p>Assume a BST is defined as follows:</p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys <strong>less than or equal to</strong> the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys <strong>greater than or equal to</strong> the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/11/mode-tree.jpg\" style=\"width: 142px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2,2]\n<strong>Output:</strong> [2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [0]\n<strong>Output:</strong> [0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you do that without using any extra space? (Assume that the implicit stack space incurred due to recursion does not count).",
      "exampleTestcases": "[1,null,2,2]\n[0]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2095",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3906,
      "dislikes": 784,
      "similarQuestions": "[{\"title\": \"Validate Binary Search Tree\", \"titleSlug\": \"validate-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486230,
      "commentCount": 124,
      "topLevelCommentCount": 77
    },
    "classAndMethodDefinition": "def findMode(self, root):\n        self.dfs(root)"
  },
  {
    "stat": {
      "question_id": 883,
      "question__article__live": false,
      "question__article__slug": "car-fleet",
      "question__article__has_video_solution": false,
      "question__title": "Car Fleet",
      "question__title_slug": "car-fleet",
      "question__hide": false,
      "total_acs": 290363,
      "total_submitted": 560776,
      "frontend_question_id": 853,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/car-fleet",
      "questionId": "883",
      "questionFrontendId": "853",
      "questionTitle": "Car Fleet",
      "titleSlug": "car-fleet",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> cars at given miles away from the starting mile 0, traveling to reach the mile <code>target</code>.</p>\n\n<p>You are given two integer array <code>position</code> and <code>speed</code>, both of length <code>n</code>, where <code>position[i]</code> is the starting mile of the <code>i<sup>th</sup></code> car and <code>speed[i]</code> is the speed of the <code>i<sup>th</sup></code> car in miles per hour.</p>\n\n<p>A car cannot pass another car, but it can catch up and then travel next to it at the speed of the slower car.</p>\n\n<p>A <strong>car fleet</strong> is a car or cars driving next to each other. The speed of the car fleet is the <strong>minimum</strong> speed of any car in the fleet.</p>\n\n<p>If a car catches up to a car fleet at the mile <code>target</code>, it will still be considered as part of the car fleet.</p>\n\n<p>Return the number of car fleets that will arrive at the destination.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">target = 12, position = [10,8,0,5,3], speed = [2,4,1,1,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">3</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<ul>\n\t<li>The cars starting at 10 (speed 2) and 8 (speed 4) become a fleet, meeting each other at 12. The fleet forms at <code>target</code>.</li>\n\t<li>The car starting at 0 (speed 1) does not catch up to any other car, so it is a fleet by itself.</li>\n\t<li>The cars starting at 5 (speed 1) and 3 (speed 3) become a fleet, meeting each other at 6. The fleet moves at speed 1 until it reaches <code>target</code>.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">target = 10, position = [3], speed = [3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n\n<p><strong>Explanation:</strong></p>\nThere is only one car, hence there is only one fleet.</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">target = 100, position = [0,2,4], speed = [4,2,1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<ul>\n\t<li>The cars starting at 0 (speed 4) and 2 (speed 2) become a fleet, meeting each other at 4. The car starting at 4 (speed 1) travels to 5.</li>\n\t<li>Then, the fleet at 4 (speed 2) and the car at position 5 (speed 1) become one fleet, meeting each other at 6. The fleet moves at speed 1 until it reaches <code>target</code>.</li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == position.length == speed.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt; target &lt;= 10<sup>6</sup></code></li>\n\t<li><code>0 &lt;= position[i] &lt; target</code></li>\n\t<li>All the values of <code>position</code> are <strong>unique</strong>.</li>\n\t<li><code>0 &lt; speed[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "12\n[10,8,0,5,3]\n[2,4,1,1,3]\n10\n[3]\n[3]\n100\n[0,2,4]\n[4,2,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": null,
      "companyTagStats": null,
      "likes": 3602,
      "dislikes": 1008,
      "similarQuestions": "[{\"title\": \"Car Fleet II\", \"titleSlug\": \"car-fleet-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Collisions on a Road\", \"titleSlug\": \"count-collisions-on-a-road\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486589,
      "commentCount": 160,
      "topLevelCommentCount": 99
    },
    "classAndMethodDefinition": "def carFleet(self, target: int, position: List[int], speed: List[int]) -> int:\n        ans = prev = 0"
  },
  {
    "stat": {
      "question_id": 876,
      "question__article__live": true,
      "question__article__slug": "hand-of-straights",
      "question__article__has_video_solution": false,
      "question__title": "Hand of Straights",
      "question__title_slug": "hand-of-straights",
      "question__hide": false,
      "total_acs": 317884,
      "total_submitted": 560155,
      "frontend_question_id": 846,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/hand-of-straights",
      "questionId": "876",
      "questionFrontendId": "846",
      "questionTitle": "Hand of Straights",
      "titleSlug": "hand-of-straights",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Alice has some number of cards and she wants to rearrange the cards into groups so that each group is of size <code>groupSize</code>, and consists of <code>groupSize</code> consecutive cards.</p>\n\n<p>Given an integer array <code>hand</code> where <code>hand[i]</code> is the value written on the <code>i<sup>th</sup></code> card and an integer <code>groupSize</code>, return <code>true</code> if she can rearrange the cards, or <code>false</code> otherwise.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> hand = [1,2,3,6,2,3,4,7,8], groupSize = 3\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Alice&#39;s hand can be rearranged as [1,2,3],[2,3,4],[6,7,8]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> hand = [1,2,3,4,5], groupSize = 4\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Alice&#39;s hand can not be rearranged into groups of 4.\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= hand.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= hand[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= groupSize &lt;= hand.length</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as 1296: <a href=\"https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/\" target=\"_blank\">https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/</a></p>\n",
      "exampleTestcases": "[1,2,3,6,2,3,4,7,8]\n3\n[1,2,3,4,5]\n4",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2334",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3280,
      "dislikes": 258,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486582,
      "commentCount": 310,
      "topLevelCommentCount": 173
    },
    "classAndMethodDefinition": "class Solution(object):\n    def find_successors(self, hand, groupSize, i, n):"
  },
  {
    "stat": {
      "question_id": 766,
      "question__article__live": true,
      "question__article__slug": "flatten-a-multilevel-doubly-linked-list",
      "question__article__has_video_solution": false,
      "question__title": "Flatten a Multilevel Doubly Linked List",
      "question__title_slug": "flatten-a-multilevel-doubly-linked-list",
      "question__hide": false,
      "total_acs": 337536,
      "total_submitted": 558877,
      "frontend_question_id": 430,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",
      "questionId": "766",
      "questionFrontendId": "430",
      "questionTitle": "Flatten a Multilevel Doubly Linked List",
      "titleSlug": "flatten-a-multilevel-doubly-linked-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a doubly linked list, which contains nodes that have a next pointer, a previous pointer, and an additional <strong>child pointer</strong>. This child pointer may or may not point to a separate doubly linked list, also containing these special nodes. These child lists may have one or more children of their own, and so on, to produce a <strong>multilevel data structure</strong> as shown in the example below.</p>\n\n<p>Given the <code>head</code> of the first level of the list, <strong>flatten</strong> the list so that all the nodes appear in a single-level, doubly linked list. Let <code>curr</code> be a node with a child list. The nodes in the child list should appear <strong>after</strong> <code>curr</code> and <strong>before</strong> <code>curr.next</code> in the flattened list.</p>\n\n<p>Return <em>the </em><code>head</code><em> of the flattened list. The nodes in the list must have <strong>all</strong> of their child pointers set to </em><code>null</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/11/09/flatten11.jpg\" style=\"width: 700px; height: 339px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\n<strong>Output:</strong> [1,2,3,7,8,11,12,9,10,4,5,6]\n<strong>Explanation:</strong> The multilevel linked list in the input is shown.\nAfter flattening the multilevel linked list it becomes:\n<img src=\"https://assets.leetcode.com/uploads/2021/11/09/flatten12.jpg\" style=\"width: 1000px; height: 69px;\" />\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/11/09/flatten2.1jpg\" style=\"width: 200px; height: 200px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,null,3]\n<strong>Output:</strong> [1,3,2]\n<strong>Explanation:</strong> The multilevel linked list in the input is shown.\nAfter flattening the multilevel linked list it becomes:\n<img src=\"https://assets.leetcode.com/uploads/2021/11/24/list.jpg\" style=\"width: 300px; height: 87px;\" />\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = []\n<strong>Output:</strong> []\n<strong>Explanation:</strong> There could be empty list in the input.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of Nodes will not exceed <code>1000</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>How the multilevel linked list is represented in test cases:</strong></p>\n\n<p>We use the multilevel linked list from <strong>Example 1</strong> above:</p>\n\n<pre>\n 1---2---3---4---5---6--NULL\n         |\n         7---8---9---10--NULL\n             |\n             11--12--NULL</pre>\n\n<p>The serialization of each level is as follows:</p>\n\n<pre>\n[1,2,3,4,5,6,null]\n[7,8,9,10,null]\n[11,12,null]\n</pre>\n\n<p>To serialize all levels together, we will add nulls in each level to signify no node connects to the upper node of the previous level. The serialization becomes:</p>\n\n<pre>\n[1,    2,    3, 4, 5, 6, null]\n             |\n[null, null, 7,    8, 9, 10, null]\n                   |\n[            null, 11, 12, null]\n</pre>\n\n<p>Merging the serialization of each level and removing trailing nulls we obtain:</p>\n\n<pre>\n[1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\n</pre>\n",
      "exampleTestcases": "[1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\n[1,2,null,3]\n[]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "827",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5049,
      "dislikes": 328,
      "similarQuestions": "[{\"title\": \"Flatten Binary Tree to Linked List\", \"titleSlug\": \"flatten-binary-tree-to-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Correct a Binary Tree\", \"titleSlug\": \"correct-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486478,
      "commentCount": 51,
      "topLevelCommentCount": 32
    },
    "classAndMethodDefinition": "def flatten(self, head: \\'Node\\') -> \\'Node\\':\n        if not head: return None"
  },
  {
    "stat": {
      "question_id": 275,
      "question__article__live": true,
      "question__article__slug": "h-index-ii",
      "question__article__has_video_solution": false,
      "question__title": "H-Index II",
      "question__title_slug": "h-index-ii",
      "question__hide": false,
      "total_acs": 214229,
      "total_submitted": 557995,
      "frontend_question_id": 275,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/h-index-ii",
      "questionId": "275",
      "questionFrontendId": "275",
      "questionTitle": "H-Index II",
      "titleSlug": "h-index-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>citations</code> where <code>citations[i]</code> is the number of citations a researcher received for their <code>i<sup>th</sup></code> paper and <code>citations</code> is sorted in <strong>ascending order</strong>, return <em>the researcher&#39;s h-index</em>.</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/H-index\" target=\"_blank\">definition of h-index on Wikipedia</a>: The h-index is defined as the maximum value of <code>h</code> such that the given researcher has published at least <code>h</code> papers that have each been cited at least <code>h</code> times.</p>\n\n<p>You must write an algorithm that runs in logarithmic time.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> citations = [0,1,3,5,6]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> [0,1,3,5,6] means the researcher has 5 papers in total and each of them had received 0, 1, 3, 5, 6 citations respectively.\nSince the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> citations = [1,2,100]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == citations.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= citations[i] &lt;= 1000</code></li>\n\t<li><code>citations</code> is sorted in <strong>ascending order</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[0,1,3,5,6]\n[1,2,100]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [
        "Expected runtime complexity is in <i>O</i>(log <i>n</i>) and the input is sorted."
      ],
      "solution": {
        "id": "751",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 358,
      "dislikes": 100,
      "similarQuestions": "[{\"title\": \"H-Index\", \"titleSlug\": \"h-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486012,
      "commentCount": 38,
      "topLevelCommentCount": 20
    },
    "classAndMethodDefinition": "def hIndex(self, citations):\n        n = len(citations)"
  },
  {
    "stat": {
      "question_id": 214,
      "question__article__live": true,
      "question__article__slug": "shortest-palindrome",
      "question__article__has_video_solution": false,
      "question__title": "Shortest Palindrome",
      "question__title_slug": "shortest-palindrome",
      "question__hide": false,
      "total_acs": 189149,
      "total_submitted": 557228,
      "frontend_question_id": 214,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/shortest-palindrome",
      "questionId": "214",
      "questionFrontendId": "214",
      "questionTitle": "Shortest Palindrome",
      "titleSlug": "shortest-palindrome",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code>. You can convert <code>s</code> to a <span data-keyword=\"palindrome-string\">palindrome</span> by adding characters in front of it.</p>\n\n<p>Return <em>the shortest palindrome you can find by performing this transformation</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aacecaaa\"\n<strong>Output:</strong> \"aaacecaaa\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"abcd\"\n<strong>Output:</strong> \"dcbabcd\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters only.</li>\n</ul>\n",
      "exampleTestcases": "\"aacecaaa\"\n\"abcd\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash",
          "translatedName": null
        },
        {
          "name": "String Matching",
          "slug": "string-matching",
          "translatedName": null
        },
        {
          "name": "Hash Function",
          "slug": "hash-function",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "174",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3636,
      "dislikes": 246,
      "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Index of the First Occurrence in a String\", \"titleSlug\": \"find-the-index-of-the-first-occurrence-in-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Palindrome Pairs\", \"titleSlug\": \"palindrome-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Deletions on a String\", \"titleSlug\": \"maximum-deletions-on-a-string\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485951,
      "commentCount": 82,
      "topLevelCommentCount": 45
    },
    "classAndMethodDefinition": "def shortestPalindrome(self, s):\n        r = s[::-1]"
  },
  {
    "stat": {
      "question_id": 52,
      "question__article__live": true,
      "question__article__slug": "n-queens-ii",
      "question__article__has_video_solution": false,
      "question__title": "N-Queens II",
      "question__title_slug": "n-queens-ii",
      "question__hide": false,
      "total_acs": 415753,
      "total_submitted": 555644,
      "frontend_question_id": 52,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/n-queens-ii",
      "questionId": "52",
      "questionFrontendId": "52",
      "questionTitle": "N-Queens II",
      "titleSlug": "n-queens-ii",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>The <strong>n-queens</strong> puzzle is the problem of placing <code>n</code> queens on an <code>n x n</code> chessboard such that no two queens attack each other.</p>\n\n<p>Given an integer <code>n</code>, return <em>the number of distinct solutions to the&nbsp;<strong>n-queens puzzle</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/queens.jpg\" style=\"width: 600px; height: 268px;\" />\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two distinct solutions to the 4-queens puzzle as shown.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 9</code></li>\n</ul>\n",
      "exampleTestcases": "4\n1",
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1129",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3893,
      "dislikes": 266,
      "similarQuestions": "[{\"title\": \"N-Queens\", \"titleSlug\": \"n-queens\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485789,
      "commentCount": 85,
      "topLevelCommentCount": 53
    },
    "classAndMethodDefinition": "def totalNQueens(self, n):\n        self.res = 0"
  },
  {
    "stat": {
      "question_id": 861,
      "question__article__live": true,
      "question__article__slug": "flipping-an-image",
      "question__article__has_video_solution": false,
      "question__title": "Flipping an Image",
      "question__title_slug": "flipping-an-image",
      "question__hide": false,
      "total_acs": 450933,
      "total_submitted": 547810,
      "frontend_question_id": 832,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/flipping-an-image",
      "questionId": "861",
      "questionFrontendId": "832",
      "questionTitle": "Flipping an Image",
      "titleSlug": "flipping-an-image",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an <code>n x n</code> binary matrix <code>image</code>, flip the image <strong>horizontally</strong>, then invert it, and return <em>the resulting image</em>.</p>\n\n<p>To flip an image horizontally means that each row of the image is reversed.</p>\n\n<ul>\n\t<li>For example, flipping <code>[1,1,0]</code> horizontally results in <code>[0,1,1]</code>.</li>\n</ul>\n\n<p>To invert an image means that each <code>0</code> is replaced by <code>1</code>, and each <code>1</code> is replaced by <code>0</code>.</p>\n\n<ul>\n\t<li>For example, inverting <code>[0,1,1]</code> results in <code>[1,0,0]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> image = [[1,1,0],[1,0,1],[0,0,0]]\n<strong>Output:</strong> [[1,0,0],[0,1,0],[1,1,1]]\n<strong>Explanation:</strong> First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].\nThen, invert the image: [[1,0,0],[0,1,0],[1,1,1]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> image = [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]\n<strong>Output:</strong> [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\n<strong>Explanation:</strong> First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].\nThen invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == image.length</code></li>\n\t<li><code>n == image[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>images[i][j]</code> is either <code>0</code> or <code>1</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[1,1,0],[1,0,1],[0,0,0]]\n[[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "467",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3460,
      "dislikes": 243,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486567,
      "commentCount": 47,
      "topLevelCommentCount": 30
    },
    "classAndMethodDefinition": "def flipAndInvertImage(self, image: List[List[int]]) -> List[List[int]]:\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 1584,
      "question__article__live": true,
      "question__article__slug": "average-salary-excluding-the-minimum-and-maximum-salary",
      "question__article__has_video_solution": false,
      "question__title": "Average Salary Excluding the Minimum and Maximum Salary",
      "question__title_slug": "average-salary-excluding-the-minimum-and-maximum-salary",
      "question__hide": false,
      "total_acs": 347378,
      "total_submitted": 547208,
      "frontend_question_id": 1491,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary",
      "questionId": "1584",
      "questionFrontendId": "1491",
      "questionTitle": "Average Salary Excluding the Minimum and Maximum Salary",
      "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an array of <strong>unique</strong> integers <code>salary</code> where <code>salary[i]</code> is the salary of the <code>i<sup>th</sup></code> employee.</p>\n\n<p>Return <em>the average salary of employees excluding the minimum and maximum salary</em>. Answers within <code>10<sup>-5</sup></code> of the actual answer will be accepted.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> salary = [4000,3000,1000,2000]\n<strong>Output:</strong> 2500.00000\n<strong>Explanation:</strong> Minimum salary and maximum salary are 1000 and 4000 respectively.\nAverage salary excluding minimum and maximum salary is (2000+3000) / 2 = 2500\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> salary = [1000,2000,3000]\n<strong>Output:</strong> 2000.00000\n<strong>Explanation:</strong> Minimum salary and maximum salary are 1000 and 3000 respectively.\nAverage salary excluding minimum and maximum salary is (2000) / 1 = 2000\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= salary.length &lt;= 100</code></li>\n\t<li><code>1000 &lt;= salary[i] &lt;= 10<sup>6</sup></code></li>\n\t<li>All the integers of <code>salary</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[4000,3000,1000,2000]\n[1000,2000,3000]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "Get the total sum and subtract the minimum and maximum value in the array.  Finally divide the result by n - 2."
      ],
      "solution": {
        "id": "1824",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2228,
      "dislikes": 187,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487275,
      "commentCount": 124,
      "topLevelCommentCount": 73
    },
    "classAndMethodDefinition": "def average(self, salary):\n        avg = 0"
  },
  {
    "stat": {
      "question_id": 674,
      "question__article__live": true,
      "question__article__slug": "longest-continuous-increasing-subsequence",
      "question__article__has_video_solution": false,
      "question__title": "Longest Continuous Increasing Subsequence",
      "question__title_slug": "longest-continuous-increasing-subsequence",
      "question__hide": false,
      "total_acs": 275388,
      "total_submitted": 545483,
      "frontend_question_id": 674,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-continuous-increasing-subsequence",
      "questionId": "674",
      "questionFrontendId": "674",
      "questionTitle": "Longest Continuous Increasing Subsequence",
      "titleSlug": "longest-continuous-increasing-subsequence",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an unsorted array of integers <code>nums</code>, return <em>the length of the longest <strong>continuous increasing subsequence</strong> (i.e. subarray)</em>. The subsequence must be <strong>strictly</strong> increasing.</p>\n\n<p>A <strong>continuous increasing subsequence</strong> is defined by two indices <code>l</code> and <code>r</code> (<code>l &lt; r</code>) such that it is <code>[nums[l], nums[l + 1], ..., nums[r - 1], nums[r]]</code> and for each <code>l &lt;= i &lt; r</code>, <code>nums[i] &lt; nums[i + 1]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,5,4,7]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The longest continuous increasing subsequence is [1,3,5] with length 3.\nEven though [1,3,5,7] is an increasing subsequence, it is not continuous as elements 5 and 7 are separated by element\n4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,2,2,2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The longest continuous increasing subsequence is [2] with length 1. Note that it must be strictly\nincreasing.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,5,4,7]\n[2,2,2,2,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "278",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2348,
      "dislikes": 181,
      "similarQuestions": "[{\"title\": \"Number of Longest Increasing Subsequence\", \"titleSlug\": \"number-of-longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Window Subsequence\", \"titleSlug\": \"minimum-window-subsequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Increasing Subsequence II\", \"titleSlug\": \"longest-increasing-subsequence-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486397,
      "commentCount": 23,
      "topLevelCommentCount": 14
    },
    "classAndMethodDefinition": "def findLengthOfLCIS(self, nums: List[int]) -> int:\n        if not nums:"
  },
  {
    "stat": {
      "question_id": 753,
      "question__article__live": true,
      "question__article__slug": "open-the-lock",
      "question__article__has_video_solution": false,
      "question__title": "Open the Lock",
      "question__title_slug": "open-the-lock",
      "question__hide": false,
      "total_acs": 327808,
      "total_submitted": 543059,
      "frontend_question_id": 752,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/open-the-lock",
      "questionId": "753",
      "questionFrontendId": "752",
      "questionTitle": "Open the Lock",
      "titleSlug": "open-the-lock",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You have a lock in front of you with 4 circular wheels. Each wheel has 10 slots: <code>&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;</code>. The wheels can rotate freely and wrap around: for example we can turn <code>&#39;9&#39;</code> to be <code>&#39;0&#39;</code>, or <code>&#39;0&#39;</code> to be <code>&#39;9&#39;</code>. Each move consists of turning one wheel one slot.</p>\n\n<p>The lock initially starts at <code>&#39;0000&#39;</code>, a string representing the state of the 4 wheels.</p>\n\n<p>You are given a list of <code>deadends</code> dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.</p>\n\n<p>Given a <code>target</code> representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;0201&quot;,&quot;0101&quot;,&quot;0102&quot;,&quot;1212&quot;,&quot;2002&quot;], target = &quot;0202&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> \nA sequence of valid moves would be &quot;0000&quot; -&gt; &quot;1000&quot; -&gt; &quot;1100&quot; -&gt; &quot;1200&quot; -&gt; &quot;1201&quot; -&gt; &quot;1202&quot; -&gt; &quot;0202&quot;.\nNote that a sequence like &quot;0000&quot; -&gt; &quot;0001&quot; -&gt; &quot;0002&quot; -&gt; &quot;0102&quot; -&gt; &quot;0202&quot; would be invalid,\nbecause the wheels of the lock become stuck after the display becomes the dead end &quot;0102&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;8888&quot;], target = &quot;0009&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> We can turn the last wheel in reverse to move from &quot;0000&quot; -&gt; &quot;0009&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;8887&quot;,&quot;8889&quot;,&quot;8878&quot;,&quot;8898&quot;,&quot;8788&quot;,&quot;8988&quot;,&quot;7888&quot;,&quot;9888&quot;], target = &quot;8888&quot;\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> We cannot reach the target without getting stuck.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= deadends.length &lt;= 500</code></li>\n\t<li><code>deadends[i].length == 4</code></li>\n\t<li><code>target.length == 4</code></li>\n\t<li>target <strong>will not be</strong> in the list <code>deadends</code>.</li>\n\t<li><code>target</code> and <code>deadends[i]</code> consist of digits only.</li>\n</ul>\n",
      "exampleTestcases": "[\"0201\",\"0101\",\"0102\",\"1212\",\"2002\"]\n\"0202\"\n[\"8888\"]\n\"0009\"\n[\"8887\",\"8889\",\"8878\",\"8898\",\"8788\",\"8988\",\"7888\",\"9888\"]\n\"8888\"",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        }
      ],
      "hints": [
        "We can think of this problem as a shortest path problem on a graph: there are `10000` nodes (strings `'0000'` to `'9999'`), and there is an edge between two nodes if they differ in one digit, that digit differs by 1 (wrapping around, so `'0'` and `'9'` differ by 1), and if *both* nodes are not in `deadends`."
      ],
      "solution": {
        "id": "2255",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4776,
      "dislikes": 221,
      "similarQuestions": "[{\"title\": \"Reachable Nodes With Restrictions\", \"titleSlug\": \"reachable-nodes-with-restrictions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486465,
      "commentCount": 199,
      "topLevelCommentCount": 115
    },
    "classAndMethodDefinition": "class Solution:\n    def openLock(self, deadends: List[str], target: str) -> int:"
  },
  {
    "stat": {
      "question_id": 1360,
      "question__article__live": true,
      "question__article__slug": "maximum-length-of-a-concatenated-string-with-unique-characters",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Length of a Concatenated String with Unique Characters",
      "question__title_slug": "maximum-length-of-a-concatenated-string-with-unique-characters",
      "question__hide": false,
      "total_acs": 292746,
      "total_submitted": 540905,
      "frontend_question_id": 1239,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters",
      "questionId": "1360",
      "questionFrontendId": "1239",
      "questionTitle": "Maximum Length of a Concatenated String with Unique Characters",
      "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of strings <code>arr</code>. A string <code>s</code> is formed by the <strong>concatenation</strong> of a <strong>subsequence</strong> of <code>arr</code> that has <strong>unique characters</strong>.</p>\n\n<p>Return <em>the <strong>maximum</strong> possible length</em> of <code>s</code>.</p>\n\n<p>A <strong>subsequence</strong> is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;un&quot;,&quot;iq&quot;,&quot;ue&quot;]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> All the valid concatenations are:\n- &quot;&quot;\n- &quot;un&quot;\n- &quot;iq&quot;\n- &quot;ue&quot;\n- &quot;uniq&quot; (&quot;un&quot; + &quot;iq&quot;)\n- &quot;ique&quot; (&quot;iq&quot; + &quot;ue&quot;)\nMaximum length is 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;cha&quot;,&quot;r&quot;,&quot;act&quot;,&quot;ers&quot;]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Possible longest valid concatenations are &quot;chaers&quot; (&quot;cha&quot; + &quot;ers&quot;) and &quot;acters&quot; (&quot;act&quot; + &quot;ers&quot;).\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;abcdefghijklmnopqrstuvwxyz&quot;]\n<strong>Output:</strong> 26\n<strong>Explanation:</strong> The only string in arr has all 26 characters.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 16</code></li>\n\t<li><code>1 &lt;= arr[i].length &lt;= 26</code></li>\n\t<li><code>arr[i]</code> contains only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"un\",\"iq\",\"ue\"]\n[\"cha\",\"r\",\"act\",\"ers\"]\n[\"abcdefghijklmnopqrstuvwxyz\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [
        "You can try all combinations and keep mask of characters you have.",
        "You can use DP."
      ],
      "solution": {
        "id": "1169",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4428,
      "dislikes": 331,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487054,
      "commentCount": 162,
      "topLevelCommentCount": 88
    },
    "classAndMethodDefinition": "class Solution:\n    def maxLength(self, arr: List[str]) -> int:"
  },
  {
    "stat": {
      "question_id": 515,
      "question__article__live": true,
      "question__article__slug": "find-largest-value-in-each-tree-row",
      "question__article__has_video_solution": false,
      "question__title": "Find Largest Value in Each Tree Row",
      "question__title_slug": "find-largest-value-in-each-tree-row",
      "question__hide": false,
      "total_acs": 355075,
      "total_submitted": 540453,
      "frontend_question_id": 515,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-largest-value-in-each-tree-row",
      "questionId": "515",
      "questionFrontendId": "515",
      "questionTitle": "Find Largest Value in Each Tree Row",
      "titleSlug": "find-largest-value-in-each-tree-row",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>an array of the largest value in each row</em> of the tree <strong>(0-indexed)</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/21/largest_e1.jpg\" style=\"width: 300px; height: 172px;\" />\n<pre>\n<strong>Input:</strong> root = [1,3,2,5,3,null,9]\n<strong>Output:</strong> [1,3,9]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,3]\n<strong>Output:</strong> [1,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree will be in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,2,5,3,null,9]\n[1,2,3]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2069",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3620,
      "dislikes": 113,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486244,
      "commentCount": 109,
      "topLevelCommentCount": 71
    },
    "classAndMethodDefinition": "def largestValues(self, root: Optional[TreeNode]) -> List[int]:\n        if not root:"
  },
  {
    "stat": {
      "question_id": 670,
      "question__article__live": true,
      "question__article__slug": "maximum-swap",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Swap",
      "question__title_slug": "maximum-swap",
      "question__hide": false,
      "total_acs": 262841,
      "total_submitted": 536870,
      "frontend_question_id": 670,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-swap",
      "questionId": "670",
      "questionFrontendId": "670",
      "questionTitle": "Maximum Swap",
      "titleSlug": "maximum-swap",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer <code>num</code>. You can swap two digits at most once to get the maximum valued number.</p>\n\n<p>Return <em>the maximum valued number you can get</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 2736\n<strong>Output:</strong> 7236\n<strong>Explanation:</strong> Swap the number 2 and the number 7.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 9973\n<strong>Output:</strong> 9973\n<strong>Explanation:</strong> No swap.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 10<sup>8</sup></code></li>\n</ul>\n",
      "exampleTestcases": "2736\n9973",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "243",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3392,
      "dislikes": 209,
      "similarQuestions": "[{\"title\": \"Create Maximum Number\", \"titleSlug\": \"create-maximum-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486393,
      "commentCount": 43,
      "topLevelCommentCount": 22
    },
    "classAndMethodDefinition": "def maximumSwap(self, num: int) -> int:\n        s = list(str(num))"
  },
  {
    "stat": {
      "question_id": 1950,
      "question__article__live": true,
      "question__article__slug": "sign-of-the-product-of-an-array",
      "question__article__has_video_solution": false,
      "question__title": "Sign of the Product of an Array",
      "question__title_slug": "sign-of-the-product-of-an-array",
      "question__hide": false,
      "total_acs": 350047,
      "total_submitted": 535845,
      "frontend_question_id": 1822,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sign-of-the-product-of-an-array",
      "questionId": "1950",
      "questionFrontendId": "1822",
      "questionTitle": "Sign of the Product of an Array",
      "titleSlug": "sign-of-the-product-of-an-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>There is a function <code>signFunc(x)</code> that returns:</p>\n\n<ul>\n\t<li><code>1</code> if <code>x</code> is positive.</li>\n\t<li><code>-1</code> if <code>x</code> is negative.</li>\n\t<li><code>0</code> if <code>x</code> is equal to <code>0</code>.</li>\n</ul>\n\n<p>You are given an integer array <code>nums</code>. Let <code>product</code> be the product of all values in the array <code>nums</code>.</p>\n\n<p>Return <code>signFunc(product)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,-2,-3,-4,3,2,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The product of all values in the array is 144, and signFunc(144) = 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5,0,2,-3]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The product of all values in the array is 0, and signFunc(0) = 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,1,-1,1,-1]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> The product of all values in the array is -1, and signFunc(-1) = -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>-100 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[-1,-2,-3,-4,3,2,1]\n[1,5,0,2,-3]\n[-1,1,-1,1,-1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [
        "If there is a 0 in the array the answer is 0",
        "To avoid overflow make all the negative numbers -1 and all positive numbers 1 and calculate the prod"
      ],
      "solution": {
        "id": "1821",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2166,
      "dislikes": 218,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487607,
      "commentCount": 106,
      "topLevelCommentCount": 77
    },
    "classAndMethodDefinition": "class Solution:\n    def arraySign(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 434,
      "question__article__live": true,
      "question__article__slug": "number-of-segments-in-a-string",
      "question__article__has_video_solution": false,
      "question__title": "Number of Segments in a String",
      "question__title_slug": "number-of-segments-in-a-string",
      "question__hide": false,
      "total_acs": 194318,
      "total_submitted": 534443,
      "frontend_question_id": 434,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-segments-in-a-string",
      "questionId": "434",
      "questionFrontendId": "434",
      "questionTitle": "Number of Segments in a String",
      "titleSlug": "number-of-segments-in-a-string",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, return <em>the number of segments in the string</em>.</p>\n\n<p>A <strong>segment</strong> is defined to be a contiguous sequence of <strong>non-space characters</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Hello, my name is John&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The five segments are [&quot;Hello,&quot;, &quot;my&quot;, &quot;name&quot;, &quot;is&quot;, &quot;John&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Hello&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 300</code></li>\n\t<li><code>s</code> consists of lowercase and uppercase English letters, digits, or one of the following characters <code>&quot;!@#$%^&amp;*()_+-=&#39;,.:&quot;</code>.</li>\n\t<li>The only space character in <code>s</code> is <code>&#39; &#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"Hello, my name is John\"\n\"Hello\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "282",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 793,
      "dislikes": 1267,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486165,
      "commentCount": 27,
      "topLevelCommentCount": 18
    },
    "classAndMethodDefinition": "def countSegments(self, s: str) -> int:\n        # Initialize the segment count to 0"
  },
  {
    "stat": {
      "question_id": 1055,
      "question__article__live": true,
      "question__article__slug": "pairs-of-songs-with-total-durations-divisible-by-60",
      "question__article__has_video_solution": true,
      "question__title": "Pairs of Songs With Total Durations Divisible by 60",
      "question__title_slug": "pairs-of-songs-with-total-durations-divisible-by-60",
      "question__hide": false,
      "total_acs": 282418,
      "total_submitted": 532822,
      "frontend_question_id": 1010,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60",
      "questionId": "1055",
      "questionFrontendId": "1010",
      "questionTitle": "Pairs of Songs With Total Durations Divisible by 60",
      "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a list of songs where the <code>i<sup>th</sup></code> song has a duration of <code>time[i]</code> seconds.</p>\n\n<p>Return <em>the number of pairs of songs for which their total duration in seconds is divisible by</em> <code>60</code>. Formally, we want the number of indices <code>i</code>, <code>j</code> such that <code>i &lt; j</code> with <code>(time[i] + time[j]) % 60 == 0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> time = [30,20,150,100,40]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Three pairs have a total duration divisible by 60:\n(time[0] = 30, time[2] = 150): total duration 180\n(time[1] = 20, time[3] = 100): total duration 120\n(time[1] = 20, time[4] = 40): total duration 60\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> time = [60,60,60]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> All three pairs have a total duration of 120, which is divisible by 60.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= time.length &lt;= 6 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= time[i] &lt;= 500</code></li>\n</ul>\n",
      "exampleTestcases": "[30,20,150,100,40]\n[60,60,60]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [
        "We only need to consider each song length modulo 60.",
        "We can count the number of songs with (length % 60) equal to r, and store that in an array of size 60."
      ],
      "solution": {
        "id": "1048",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4213,
      "dislikes": 173,
      "similarQuestions": "[{\"title\": \"Destroy Sequential Targets\", \"titleSlug\": \"destroy-sequential-targets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486757,
      "commentCount": 31,
      "topLevelCommentCount": 21
    },
    "classAndMethodDefinition": "def numPairsDivisibleBy60(self, time):\n        ans, cnt = 0, [0] * 60"
  },
  {
    "stat": {
      "question_id": 1833,
      "question__article__live": true,
      "question__article__slug": "find-the-highest-altitude",
      "question__article__has_video_solution": false,
      "question__title": "Find the Highest Altitude",
      "question__title_slug": "find-the-highest-altitude",
      "question__hide": false,
      "total_acs": 443621,
      "total_submitted": 531504,
      "frontend_question_id": 1732,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-the-highest-altitude",
      "questionId": "1833",
      "questionFrontendId": "1732",
      "questionTitle": "Find the Highest Altitude",
      "titleSlug": "find-the-highest-altitude",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>There is a biker going on a road trip. The road trip consists of <code>n + 1</code> points at different altitudes. The biker starts his trip on point <code>0</code> with altitude equal <code>0</code>.</p>\n\n<p>You are given an integer array <code>gain</code> of length <code>n</code> where <code>gain[i]</code> is the <strong>net gain in altitude</strong> between points <code>i</code>​​​​​​ and <code>i + 1</code> for all (<code>0 &lt;= i &lt; n)</code>. Return <em>the <strong>highest altitude</strong> of a point.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> gain = [-5,1,5,0,-7]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The altitudes are [0,-5,-4,1,1,-6]. The highest is 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> gain = [-4,-3,-2,-1,4,3,2]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The altitudes are [0,-4,-7,-9,-10,-6,-3,-1]. The highest is 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == gain.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>-100 &lt;= gain[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[-5,1,5,0,-7]\n[-4,-3,-2,-1,4,3,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [
        "Let's note that the altitude of an element is the sum of gains of all the elements behind it",
        "Getting the altitudes can be done by getting the prefix sum array of the given array"
      ],
      "solution": {
        "id": "1858",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2899,
      "dislikes": 349,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487505,
      "commentCount": 223,
      "topLevelCommentCount": 160
    },
    "classAndMethodDefinition": "class Solution:\n    def largestAltitude(self, gain: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 937,
      "question__article__live": true,
      "question__article__slug": "online-stock-span",
      "question__article__has_video_solution": false,
      "question__title": "Online Stock Span",
      "question__title_slug": "online-stock-span",
      "question__hide": false,
      "total_acs": 350001,
      "total_submitted": 526553,
      "frontend_question_id": 901,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/online-stock-span",
      "questionId": "937",
      "questionFrontendId": "901",
      "questionTitle": "Online Stock Span",
      "titleSlug": "online-stock-span",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Design an algorithm that collects daily price quotes for some stock and returns <strong>the span</strong> of that stock&#39;s price for the current day.</p>\n\n<p>The <strong>span</strong> of the stock&#39;s price in one day is the maximum number of consecutive days (starting from that day and going backward) for which the stock price was less than or equal to the price of that day.</p>\n\n<ul>\n\t<li>For example, if the prices of the stock in the last four days is <code>[7,2,1,2]</code> and the price of the stock today is <code>2</code>, then the span of today is <code>4</code> because starting from today, the price of the stock was less than or equal <code>2</code> for <code>4</code> consecutive days.</li>\n\t<li>Also, if the prices of the stock in the last four days is <code>[7,34,1,2]</code> and the price of the stock today is <code>8</code>, then the span of today is <code>3</code> because starting from today, the price of the stock was less than or equal <code>8</code> for <code>3</code> consecutive days.</li>\n</ul>\n\n<p>Implement the <code>StockSpanner</code> class:</p>\n\n<ul>\n\t<li><code>StockSpanner()</code> Initializes the object of the class.</li>\n\t<li><code>int next(int price)</code> Returns the <strong>span</strong> of the stock&#39;s price given that today&#39;s price is <code>price</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;StockSpanner&quot;, &quot;next&quot;, &quot;next&quot;, &quot;next&quot;, &quot;next&quot;, &quot;next&quot;, &quot;next&quot;, &quot;next&quot;]\n[[], [100], [80], [60], [70], [60], [75], [85]]\n<strong>Output</strong>\n[null, 1, 1, 1, 2, 1, 4, 6]\n\n<strong>Explanation</strong>\nStockSpanner stockSpanner = new StockSpanner();\nstockSpanner.next(100); // return 1\nstockSpanner.next(80);  // return 1\nstockSpanner.next(60);  // return 1\nstockSpanner.next(70);  // return 2\nstockSpanner.next(60);  // return 1\nstockSpanner.next(75);  // return 4, because the last 4 prices (including today&#39;s price of 75) were less than or equal to today&#39;s price.\nstockSpanner.next(85);  // return 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= price &lt;= 10<sup>5</sup></code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>next</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"StockSpanner\",\"next\",\"next\",\"next\",\"next\",\"next\",\"next\",\"next\"]\n[[],[100],[80],[60],[70],[60],[75],[85]]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        },
        {
          "name": "Data Stream",
          "slug": "data-stream",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1573",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6393,
      "dislikes": 419,
      "similarQuestions": "[{\"title\": \"Daily Temperatures\", \"titleSlug\": \"daily-temperatures\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486644,
      "commentCount": 123,
      "topLevelCommentCount": 78
    },
    "classAndMethodDefinition": "def __init__(self):\n        "
  },
  {
    "stat": {
      "question_id": 498,
      "question__article__live": true,
      "question__article__slug": "diagonal-traverse",
      "question__article__has_video_solution": false,
      "question__title": "Diagonal Traverse",
      "question__title_slug": "diagonal-traverse",
      "question__hide": false,
      "total_acs": 317884,
      "total_submitted": 522697,
      "frontend_question_id": 498,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/diagonal-traverse",
      "questionId": "498",
      "questionFrontendId": "498",
      "questionTitle": "Diagonal Traverse",
      "titleSlug": "diagonal-traverse",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> matrix <code>mat</code>, return <em>an array of all the elements of the array in a diagonal order</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/10/diag1-grid.jpg\" style=\"width: 334px; height: 334px;\" />\n<pre>\n<strong>Input:</strong> mat = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [1,2,4,7,5,3,6,8,9]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,2],[3,4]]\n<strong>Output:</strong> [1,2,3,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == mat.length</code></li>\n\t<li><code>n == mat[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= m * n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= mat[i][j] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2,3],[4,5,6],[7,8,9]]\n[[1,2],[3,4]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "845",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3463,
      "dislikes": 689,
      "similarQuestions": "[{\"title\": \"Decode the Slanted Ciphertext\", \"titleSlug\": \"decode-the-slanted-ciphertext\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486227,
      "commentCount": 44,
      "topLevelCommentCount": 34
    },
    "classAndMethodDefinition": "def findDiagonalOrder(self, matrix):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 748,
      "question__article__live": false,
      "question__article__slug": "largest-number-at-least-twice-of-others",
      "question__article__has_video_solution": false,
      "question__title": "Largest Number At Least Twice of Others",
      "question__title_slug": "largest-number-at-least-twice-of-others",
      "question__hide": false,
      "total_acs": 257334,
      "total_submitted": 521306,
      "frontend_question_id": 747,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/largest-number-at-least-twice-of-others",
      "questionId": "748",
      "questionFrontendId": "747",
      "questionTitle": "Largest Number At Least Twice of Others",
      "titleSlug": "largest-number-at-least-twice-of-others",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code> where the largest integer is <strong>unique</strong>.</p>\n\n<p>Determine whether the largest element in the array is <strong>at least twice</strong> as much as every other number in the array. If it is, return <em>the <strong>index</strong> of the largest element, or return </em><code>-1</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,6,1,0]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 6 is the largest integer.\nFor every other number in the array x, 6 is at least twice as big as x.\nThe index of value 6 is 1, so we return 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 4 is less than twice the value of 3, so we return -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 50</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n\t<li>The largest element in <code>nums</code> is unique.</li>\n</ul>\n",
      "exampleTestcases": "[3,6,1,0]\n[1,2,3,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "Scan through the array to find the unique largest element `m`, keeping track of it's index `maxIndex`.\r\n\r\nScan through the array again.  If we find some `x != m` with `m < 2*x`, we should return `-1`.\r\n\r\nOtherwise, we should return `maxIndex`."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 1211,
      "dislikes": 906,
      "similarQuestions": "[{\"title\": \"Keep Multiplying Found Values by Two\", \"titleSlug\": \"keep-multiplying-found-values-by-two\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Number After Digit Swaps by Parity\", \"titleSlug\": \"largest-number-after-digit-swaps-by-parity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486460,
      "commentCount": 40,
      "topLevelCommentCount": 25
    },
    "classAndMethodDefinition": "def dominantIndex(self, nums: List[int]) -> int:\n\\tfirst_max = second_max = -1"
  },
  {
    "stat": {
      "question_id": 513,
      "question__article__live": true,
      "question__article__slug": "find-bottom-left-tree-value",
      "question__article__has_video_solution": false,
      "question__title": "Find Bottom Left Tree Value",
      "question__title_slug": "find-bottom-left-tree-value",
      "question__hide": false,
      "total_acs": 371712,
      "total_submitted": 521012,
      "frontend_question_id": 513,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-bottom-left-tree-value",
      "questionId": "513",
      "questionFrontendId": "513",
      "questionTitle": "Find Bottom Left Tree Value",
      "titleSlug": "find-bottom-left-tree-value",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return the leftmost value in the last row of the tree.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/14/tree1.jpg\" style=\"width: 302px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/14/tree2.jpg\" style=\"width: 432px; height: 421px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,null,5,6,null,null,7]\n<strong>Output:</strong> 7\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[2,1,3]\n[1,2,3,4,null,5,6,null,null,7]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2236",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3807,
      "dislikes": 295,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486242,
      "commentCount": 171,
      "topLevelCommentCount": 123
    },
    "classAndMethodDefinition": "class Solution(object):\n    def findBottomLeftValue(self, root):"
  },
  {
    "stat": {
      "question_id": 376,
      "question__article__live": true,
      "question__article__slug": "wiggle-subsequence",
      "question__article__has_video_solution": false,
      "question__title": "Wiggle Subsequence",
      "question__title_slug": "wiggle-subsequence",
      "question__hide": false,
      "total_acs": 252216,
      "total_submitted": 519070,
      "frontend_question_id": 376,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/wiggle-subsequence",
      "questionId": "376",
      "questionFrontendId": "376",
      "questionTitle": "Wiggle Subsequence",
      "titleSlug": "wiggle-subsequence",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A <strong>wiggle sequence</strong> is a sequence where the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with one element and a sequence with two non-equal elements are trivially wiggle sequences.</p>\n\n<ul>\n\t<li>For example, <code>[1, 7, 4, 9, 2, 5]</code> is a <strong>wiggle sequence</strong> because the differences <code>(6, -3, 5, -7, 3)</code> alternate between positive and negative.</li>\n\t<li>In contrast, <code>[1, 4, 7, 2, 5]</code> and <code>[1, 7, 4, 5, 5]</code> are not wiggle sequences. The first is not because its first two differences are positive, and the second is not because its last difference is zero.</li>\n</ul>\n\n<p>A <strong>subsequence</strong> is obtained by deleting some elements (possibly zero) from the original sequence, leaving the remaining elements in their original order.</p>\n\n<p>Given an integer array <code>nums</code>, return <em>the length of the longest <strong>wiggle subsequence</strong> of </em><code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,7,4,9,2,5]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The entire sequence is a wiggle sequence with differences (6, -3, 5, -7, 3).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,17,5,10,13,15,10,5,16,8]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> There are several subsequences that achieve this length.\nOne is [1, 17, 10, 13, 10, 16, 8] with differences (16, -7, 3, -3, 6, -8).\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5,6,7,8,9]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you solve this in <code>O(n)</code> time?</p>\n",
      "exampleTestcases": "[1,7,4,9,2,5]\n[1,17,5,10,13,15,10,5,16,8]\n[1,2,3,4,5,6,7,8,9]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "60",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5122,
      "dislikes": 165,
      "similarQuestions": "[{\"title\": \"Rearrange Array Elements by Sign\", \"titleSlug\": \"rearrange-array-elements-by-sign\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486113,
      "commentCount": 22,
      "topLevelCommentCount": 14
    },
    "classAndMethodDefinition": "def wiggleMaxLength(self, nums: List[int]) -> int:\n        f = 1"
  },
  {
    "stat": {
      "question_id": 89,
      "question__article__live": true,
      "question__article__slug": "gray-code",
      "question__article__has_video_solution": false,
      "question__title": "Gray Code",
      "question__title_slug": "gray-code",
      "question__hide": false,
      "total_acs": 310752,
      "total_submitted": 518508,
      "frontend_question_id": 89,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/gray-code",
      "questionId": "89",
      "questionFrontendId": "89",
      "questionTitle": "Gray Code",
      "titleSlug": "gray-code",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>An <strong>n-bit gray code sequence</strong> is a sequence of <code>2<sup>n</sup></code> integers where:</p>\n\n<ul>\n\t<li>Every integer is in the <strong>inclusive</strong> range <code>[0, 2<sup>n</sup> - 1]</code>,</li>\n\t<li>The first integer is <code>0</code>,</li>\n\t<li>An integer appears <strong>no more than once</strong> in the sequence,</li>\n\t<li>The binary representation of every pair of <strong>adjacent</strong> integers differs by <strong>exactly one bit</strong>, and</li>\n\t<li>The binary representation of the <strong>first</strong> and <strong>last</strong> integers differs by <strong>exactly one bit</strong>.</li>\n</ul>\n\n<p>Given an integer <code>n</code>, return <em>any valid <strong>n-bit gray code sequence</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> [0,1,3,2]\n<strong>Explanation:</strong>\nThe binary representation of [0,1,3,2] is [00,01,11,10].\n- 0<u>0</u> and 0<u>1</u> differ by one bit\n- <u>0</u>1 and <u>1</u>1 differ by one bit\n- 1<u>1</u> and 1<u>0</u> differ by one bit\n- <u>1</u>0 and <u>0</u>0 differ by one bit\n[0,2,3,1] is also a valid gray code sequence, whose binary representation is [00,10,11,01].\n- <u>0</u>0 and <u>1</u>0 differ by one bit\n- 1<u>0</u> and 1<u>1</u> differ by one bit\n- <u>1</u>1 and <u>0</u>1 differ by one bit\n- 0<u>1</u> and 0<u>0</u> differ by one bit\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 16</code></li>\n</ul>\n",
      "exampleTestcases": "2\n1",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1146",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2264,
      "dislikes": 2728,
      "similarQuestions": "[{\"title\": \"1-bit and 2-bit Characters\", \"titleSlug\": \"1-bit-and-2-bit-characters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485826,
      "commentCount": 75,
      "topLevelCommentCount": 38
    },
    "classAndMethodDefinition": "def grayCode(self, n: int) -> \\'List[int]\\':\n\\tres = [0]"
  },
  {
    "stat": {
      "question_id": 528,
      "question__article__live": true,
      "question__article__slug": "swapping-nodes-in-a-linked-list",
      "question__article__has_video_solution": false,
      "question__title": "Swapping Nodes in a Linked List",
      "question__title_slug": "swapping-nodes-in-a-linked-list",
      "question__hide": false,
      "total_acs": 352457,
      "total_submitted": 518230,
      "frontend_question_id": 1721,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/swapping-nodes-in-a-linked-list",
      "questionId": "528",
      "questionFrontendId": "1721",
      "questionTitle": "Swapping Nodes in a Linked List",
      "titleSlug": "swapping-nodes-in-a-linked-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given the <code>head</code> of a linked list, and an integer <code>k</code>.</p>\n\n<p>Return <em>the head of the linked list after <strong>swapping</strong> the values of the </em><code>k<sup>th</sup></code> <em>node from the beginning and the </em><code>k<sup>th</sup></code> <em>node from the end (the list is <strong>1-indexed</strong>).</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/21/linked1.jpg\" style=\"width: 400px; height: 112px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5], k = 2\n<strong>Output:</strong> [1,4,3,2,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [7,9,6,6,7,8,3,0,9,5], k = 5\n<strong>Output:</strong> [7,9,6,6,8,7,3,0,9,5]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is <code>n</code>.</li>\n\t<li><code>1 &lt;= k &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5]\n2\n[7,9,6,6,7,8,3,0,9,5]\n5",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        }
      ],
      "hints": [
        "We can traverse the linked list and store the elements in an array.",
        "Upon conversion to an array, we can swap the required elements by indexing the array.",
        "We can rebuild the linked list using the order of the elements in the array."
      ],
      "solution": {
        "id": "1103",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5373,
      "dislikes": 182,
      "similarQuestions": "[{\"title\": \"Remove Nth Node From End of List\", \"titleSlug\": \"remove-nth-node-from-end-of-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Swap Nodes in Pairs\", \"titleSlug\": \"swap-nodes-in-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Nodes in k-Group\", \"titleSlug\": \"reverse-nodes-in-k-group\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486257,
      "commentCount": 103,
      "topLevelCommentCount": 71
    },
    "classAndMethodDefinition": "def swapNodes(self, head: ListNode, k: int) -> ListNode:\n\\tfirst = last = head"
  },
  {
    "stat": {
      "question_id": 395,
      "question__article__live": true,
      "question__article__slug": "longest-substring-with-at-least-k-repeating-characters",
      "question__article__has_video_solution": false,
      "question__title": "Longest Substring with At Least K Repeating Characters",
      "question__title_slug": "longest-substring-with-at-least-k-repeating-characters",
      "question__hide": false,
      "total_acs": 233340,
      "total_submitted": 517749,
      "frontend_question_id": 395,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters",
      "questionId": "395",
      "questionFrontendId": "395",
      "questionTitle": "Longest Substring with At Least K Repeating Characters",
      "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> and an integer <code>k</code>, return <em>the length of the longest substring of</em> <code>s</code> <em>such that the frequency of each character in this substring is greater than or equal to</em> <code>k</code>.</p>\n\n<p data-pm-slice=\"1 1 []\">if no such substring exists, return 0.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaabb&quot;, k = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The longest substring is &quot;aaa&quot;, as &#39;a&#39; is repeated 3 times.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ababbc&quot;, k = 2\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The longest substring is &quot;ababb&quot;, as &#39;a&#39; is repeated 2 times and &#39;b&#39; is repeated 3 times.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of only lowercase English letters.</li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "\"aaabb\"\n3\n\"ababbc\"\n2",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1022",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6254,
      "dislikes": 517,
      "similarQuestions": "[{\"title\": \"Longest Subsequence Repeated k Times\", \"titleSlug\": \"longest-subsequence-repeated-k-times\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Equal Count Substrings\", \"titleSlug\": \"number-of-equal-count-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Optimal Partition of String\", \"titleSlug\": \"optimal-partition-of-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Length of Longest Subarray With at Most K Frequency\", \"titleSlug\": \"length-of-longest-subarray-with-at-most-k-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Longest Special Substring That Occurs Thrice II\", \"titleSlug\": \"find-longest-special-substring-that-occurs-thrice-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Longest Special Substring That Occurs Thrice I\", \"titleSlug\": \"find-longest-special-substring-that-occurs-thrice-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486132,
      "commentCount": 89,
      "topLevelCommentCount": 52
    },
    "classAndMethodDefinition": "def longestSubstring(self, s: str, k: int) -> int:\n        if len(s) == 0 or k > len(s):"
  },
  {
    "stat": {
      "question_id": 729,
      "question__article__live": true,
      "question__article__slug": "my-calendar-i",
      "question__article__has_video_solution": false,
      "question__title": "My Calendar I",
      "question__title_slug": "my-calendar-i",
      "question__hide": false,
      "total_acs": 290812,
      "total_submitted": 513950,
      "frontend_question_id": 729,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/my-calendar-i",
      "questionId": "729",
      "questionFrontendId": "729",
      "questionTitle": "My Calendar I",
      "titleSlug": "my-calendar-i",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a <strong>double booking</strong>.</p>\n\n<p>A <strong>double booking</strong> happens when two events have some non-empty intersection (i.e., some moment is common to both events.).</p>\n\n<p>The event can be represented as a pair of integers <code>start</code> and <code>end</code> that represents a booking on the half-open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p>\n\n<p>Implement the <code>MyCalendar</code> class:</p>\n\n<ul>\n\t<li><code>MyCalendar()</code> Initializes the calendar object.</li>\n\t<li><code>boolean book(int start, int end)</code> Returns <code>true</code> if the event can be added to the calendar successfully without causing a <strong>double booking</strong>. Otherwise, return <code>false</code> and do not add the event to the calendar.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyCalendar&quot;, &quot;book&quot;, &quot;book&quot;, &quot;book&quot;]\n[[], [10, 20], [15, 25], [20, 30]]\n<strong>Output</strong>\n[null, true, false, true]\n\n<strong>Explanation</strong>\nMyCalendar myCalendar = new MyCalendar();\nmyCalendar.book(10, 20); // return True\nmyCalendar.book(15, 25); // return False, It can not be booked because time 15 is already booked by another event.\nmyCalendar.book(20, 30); // return True, The event can be booked, as the first event takes every time less than 20, but not including 20.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= start &lt; end &lt;= 10<sup>9</sup></code></li>\n\t<li>At most <code>1000</code> calls will be made to <code>book</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"MyCalendar\",\"book\",\"book\",\"book\"]\n[[],[10,20],[15,25],[20,30]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree",
          "translatedName": null
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set",
          "translatedName": null
        }
      ],
      "hints": [
        "Store the events as a sorted list of intervals.  If none of the events conflict, then the new event can be added."
      ],
      "solution": {
        "id": "297",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4224,
      "dislikes": 112,
      "similarQuestions": "[{\"title\": \"My Calendar II\", \"titleSlug\": \"my-calendar-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"My Calendar III\", \"titleSlug\": \"my-calendar-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Determine if Two Events Have Conflict\", \"titleSlug\": \"determine-if-two-events-have-conflict\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486441,
      "commentCount": 29,
      "topLevelCommentCount": 17
    },
    "classAndMethodDefinition": "def __init__(self):\n        self.calendar = []"
  },
  {
    "stat": {
      "question_id": 312,
      "question__article__live": true,
      "question__article__slug": "burst-balloons",
      "question__article__has_video_solution": false,
      "question__title": "Burst Balloons",
      "question__title_slug": "burst-balloons",
      "question__hide": false,
      "total_acs": 305841,
      "total_submitted": 512174,
      "frontend_question_id": 312,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/burst-balloons",
      "questionId": "312",
      "questionFrontendId": "312",
      "questionTitle": "Burst Balloons",
      "titleSlug": "burst-balloons",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given <code>n</code> balloons, indexed from <code>0</code> to <code>n - 1</code>. Each balloon is painted with a number on it represented by an array <code>nums</code>. You are asked to burst all the balloons.</p>\n\n<p>If you burst the <code>i<sup>th</sup></code> balloon, you will get <code>nums[i - 1] * nums[i] * nums[i + 1]</code> coins. If <code>i - 1</code> or <code>i + 1</code> goes out of bounds of the array, then treat it as if there is a balloon with a <code>1</code> painted on it.</p>\n\n<p>Return <em>the maximum coins you can collect by bursting the balloons wisely</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,5,8]\n<strong>Output:</strong> 167\n<strong>Explanation:</strong>\nnums = [3,1,5,8] --&gt; [3,5,8] --&gt; [3,8] --&gt; [8] --&gt; []\ncoins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5]\n<strong>Output:</strong> 10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 300</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[3,1,5,8]\n[1,5]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1158",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 9030,
      "dislikes": 254,
      "similarQuestions": "[{\"title\": \"Minimum Cost to Merge Stones\", \"titleSlug\": \"minimum-cost-to-merge-stones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486049,
      "commentCount": 80,
      "topLevelCommentCount": 42
    },
    "classAndMethodDefinition": "def maxCoins(self, nums):\n            \"\"\""
  },
  {
    "stat": {
      "question_id": 541,
      "question__article__live": true,
      "question__article__slug": "reverse-string-ii",
      "question__article__has_video_solution": false,
      "question__title": "Reverse String II",
      "question__title_slug": "reverse-string-ii",
      "question__hide": false,
      "total_acs": 261038,
      "total_submitted": 511296,
      "frontend_question_id": 541,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/reverse-string-ii",
      "questionId": "541",
      "questionFrontendId": "541",
      "questionTitle": "Reverse String II",
      "titleSlug": "reverse-string-ii",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> and an integer <code>k</code>, reverse the first <code>k</code> characters for every <code>2k</code> characters counting from the start of the string.</p>\n\n<p>If there are fewer than <code>k</code> characters left, reverse all of them. If there are less than <code>2k</code> but greater than or equal to <code>k</code> characters, then reverse the first <code>k</code> characters and leave the other as original.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"abcdefg\", k = 2\n<strong>Output:</strong> \"bacdfeg\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"abcd\", k = 2\n<strong>Output:</strong> \"bacd\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of only lowercase English letters.</li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "\"abcdefg\"\n2\n\"abcd\"\n2",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "321",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2008,
      "dislikes": 3868,
      "similarQuestions": "[{\"title\": \"Reverse String\", \"titleSlug\": \"reverse-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Reverse Words in a String III\", \"titleSlug\": \"reverse-words-in-a-string-iii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Faulty Keyboard\", \"titleSlug\": \"faulty-keyboard\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486270,
      "commentCount": 93,
      "topLevelCommentCount": 52
    },
    "classAndMethodDefinition": "def reverseStr(self, s: str, k: int) -> str:\n        if len(s)<(k):return s[::-1]"
  },
  {
    "stat": {
      "question_id": 1035,
      "question__article__live": true,
      "question__article__slug": "cousins-in-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Cousins in Binary Tree",
      "question__title_slug": "cousins-in-binary-tree",
      "question__hide": false,
      "total_acs": 286469,
      "total_submitted": 505980,
      "frontend_question_id": 993,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/cousins-in-binary-tree",
      "questionId": "1035",
      "questionFrontendId": "993",
      "questionTitle": "Cousins in Binary Tree",
      "titleSlug": "cousins-in-binary-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree with unique values and the values of two different nodes of the tree <code>x</code> and <code>y</code>, return <code>true</code> <em>if the nodes corresponding to the values </em><code>x</code><em> and </em><code>y</code><em> in the tree are <strong>cousins</strong>, or </em><code>false</code><em> otherwise.</em></p>\n\n<p>Two nodes of a binary tree are <strong>cousins</strong> if they have the same depth with different parents.</p>\n\n<p>Note that in a binary tree, the root node is at the depth <code>0</code>, and children of each depth <code>k</code> node are at the depth <code>k + 1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/12/q1248-01.png\" style=\"width: 304px; height: 270px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4], x = 4, y = 3\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/12/q1248-02.png\" style=\"width: 334px; height: 266px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,null,4,null,5], x = 5, y = 4\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/13/q1248-03.png\" style=\"width: 267px; height: 258px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,null,4], x = 2, y = 3\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 100]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 100</code></li>\n\t<li>Each node has a <strong>unique</strong> value.</li>\n\t<li><code>x != y</code></li>\n\t<li><code>x</code> and <code>y</code> are exist in the tree.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4]\n4\n3\n[1,2,3,null,4,null,5]\n5\n4\n[1,2,3,null,4]\n2\n3",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "944",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4043,
      "dislikes": 208,
      "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cousins in Binary Tree II\", \"titleSlug\": \"cousins-in-binary-tree-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486737,
      "commentCount": 52,
      "topLevelCommentCount": 41
    },
    "classAndMethodDefinition": "def isCousins(self, root: TreeNode, x: int, y: int) -> bool:\n\\t\\t# store (parent, depth) tuple"
  },
  {
    "stat": {
      "question_id": 1463,
      "question__article__live": true,
      "question__article__slug": "the-k-weakest-rows-in-a-matrix",
      "question__article__has_video_solution": false,
      "question__title": "The K Weakest Rows in a Matrix",
      "question__title_slug": "the-k-weakest-rows-in-a-matrix",
      "question__hide": false,
      "total_acs": 372150,
      "total_submitted": 505500,
      "frontend_question_id": 1337,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix",
      "questionId": "1463",
      "questionFrontendId": "1337",
      "questionTitle": "The K Weakest Rows in a Matrix",
      "titleSlug": "the-k-weakest-rows-in-a-matrix",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>m x n</code> binary matrix <code>mat</code> of <code>1</code>&#39;s (representing soldiers) and <code>0</code>&#39;s (representing civilians). The soldiers are positioned <strong>in front</strong> of the civilians. That is, all the <code>1</code>&#39;s will appear to the <strong>left</strong> of all the <code>0</code>&#39;s in each row.</p>\n\n<p>A row <code>i</code> is <strong>weaker</strong> than a row <code>j</code> if one of the following is true:</p>\n\n<ul>\n\t<li>The number of soldiers in row <code>i</code> is less than the number of soldiers in row <code>j</code>.</li>\n\t<li>Both rows have the same number of soldiers and <code>i &lt; j</code>.</li>\n</ul>\n\n<p>Return <em>the indices of the </em><code>k</code><em> <strong>weakest</strong> rows in the matrix ordered from weakest to strongest</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = \n[[1,1,0,0,0],\n [1,1,1,1,0],\n [1,0,0,0,0],\n [1,1,0,0,0],\n [1,1,1,1,1]], \nk = 3\n<strong>Output:</strong> [2,0,3]\n<strong>Explanation:</strong> \nThe number of soldiers in each row is: \n- Row 0: 2 \n- Row 1: 4 \n- Row 2: 1 \n- Row 3: 2 \n- Row 4: 5 \nThe rows ordered from weakest to strongest are [2,0,3,1,4].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = \n[[1,0,0,0],\n [1,1,1,1],\n [1,0,0,0],\n [1,0,0,0]], \nk = 2\n<strong>Output:</strong> [0,2]\n<strong>Explanation:</strong> \nThe number of soldiers in each row is: \n- Row 0: 1 \n- Row 1: 4 \n- Row 2: 1 \n- Row 3: 1 \nThe rows ordered from weakest to strongest are [0,2,3,1].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == mat.length</code></li>\n\t<li><code>n == mat[i].length</code></li>\n\t<li><code>2 &lt;= n, m &lt;= 100</code></li>\n\t<li><code>1 &lt;= k &lt;= m</code></li>\n\t<li><code>matrix[i][j]</code> is either 0 or 1.</li>\n</ul>\n",
      "exampleTestcases": "[[1,1,0,0,0],[1,1,1,1,0],[1,0,0,0,0],[1,1,0,0,0],[1,1,1,1,1]]\n3\n[[1,0,0,0],[1,1,1,1],[1,0,0,0],[1,0,0,0]]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "Sort the matrix row indexes by the number of soldiers and then row indexes."
      ],
      "solution": {
        "id": "865",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4177,
      "dislikes": 233,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487155,
      "commentCount": 93,
      "topLevelCommentCount": 58
    },
    "classAndMethodDefinition": "def kWeakestRows(self, mat: List[List[int]], k: int) -> List[int]:\n        return sorted(range(len(mat)), key=lambda x: sum(mat[x]))[:k]"
  },
  {
    "stat": {
      "question_id": 673,
      "question__article__live": true,
      "question__article__slug": "number-of-longest-increasing-subsequence",
      "question__article__has_video_solution": false,
      "question__title": "Number of Longest Increasing Subsequence",
      "question__title_slug": "number-of-longest-increasing-subsequence",
      "question__hide": false,
      "total_acs": 245419,
      "total_submitted": 504416,
      "frontend_question_id": 673,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-longest-increasing-subsequence",
      "questionId": "673",
      "questionFrontendId": "673",
      "questionTitle": "Number of Longest Increasing Subsequence",
      "titleSlug": "number-of-longest-increasing-subsequence",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array&nbsp;<code>nums</code>, return <em>the number of longest increasing subsequences.</em></p>\n\n<p><strong>Notice</strong> that the sequence has to be <strong>strictly</strong> increasing.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,5,4,7]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The two longest increasing subsequences are [1, 3, 4, 7] and [1, 3, 5, 7].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,2,2,2]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The length of the longest increasing subsequence is 1, and there are 5 increasing subsequences of length 1, so output 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2000</code></li>\n\t<li><code>-10<sup>6</sup> &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n\t<li>The answer is guaranteed to fit inside a 32-bit integer.</li>\n</ul>\n",
      "exampleTestcases": "[1,3,5,4,7]\n[2,2,2,2,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree",
          "translatedName": null
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1933",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6823,
      "dislikes": 271,
      "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Continuous Increasing Subsequence\", \"titleSlug\": \"longest-continuous-increasing-subsequence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longest Increasing Subsequence II\", \"titleSlug\": \"longest-increasing-subsequence-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486396,
      "commentCount": 90,
      "topLevelCommentCount": 50
    },
    "classAndMethodDefinition": "def findNumberOfLIS(self, nums: List[int]) -> int:\n        if not nums: return 0"
  },
  {
    "stat": {
      "question_id": 686,
      "question__article__live": true,
      "question__article__slug": "repeated-string-match",
      "question__article__has_video_solution": false,
      "question__title": "Repeated String Match",
      "question__title_slug": "repeated-string-match",
      "question__hide": false,
      "total_acs": 178717,
      "total_submitted": 503301,
      "frontend_question_id": 686,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/repeated-string-match",
      "questionId": "686",
      "questionFrontendId": "686",
      "questionTitle": "Repeated String Match",
      "titleSlug": "repeated-string-match",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>a</code> and <code>b</code>, return <em>the minimum number of times you should repeat string </em><code>a</code><em> so that string</em> <code>b</code> <em>is a substring of it</em>. If it is impossible for <code>b</code>​​​​​​ to be a substring of <code>a</code> after repeating it, return <code>-1</code>.</p>\n\n<p><strong>Notice:</strong> string <code>&quot;abc&quot;</code> repeated 0 times is <code>&quot;&quot;</code>, repeated 1 time is <code>&quot;abc&quot;</code> and repeated 2 times is <code>&quot;abcabc&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;abcd&quot;, b = &quot;cdabcdab&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We return 3 because by repeating a three times &quot;ab<strong>cdabcdab</strong>cd&quot;, b is a substring of it.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;a&quot;, b = &quot;aa&quot;\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= a.length, b.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>a</code> and <code>b</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abcd\"\n\"cdabcdab\"\n\"a\"\n\"aa\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "String Matching",
          "slug": "string-matching",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "256",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2570,
      "dislikes": 985,
      "similarQuestions": "[{\"title\": \"Repeated Substring Pattern\", \"titleSlug\": \"repeated-substring-pattern\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486409,
      "commentCount": 34,
      "topLevelCommentCount": 23
    },
    "classAndMethodDefinition": "def repeatedStringMatch(self, a, b):\n        repeat = (len(b)//len(a))"
  },
  {
    "stat": {
      "question_id": 957,
      "question__article__live": true,
      "question__article__slug": "minimum-add-to-make-parentheses-valid",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Add to Make Parentheses Valid",
      "question__title_slug": "minimum-add-to-make-parentheses-valid",
      "question__hide": false,
      "total_acs": 376199,
      "total_submitted": 502538,
      "frontend_question_id": 921,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid",
      "questionId": "957",
      "questionFrontendId": "921",
      "questionTitle": "Minimum Add to Make Parentheses Valid",
      "titleSlug": "minimum-add-to-make-parentheses-valid",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A parentheses string is valid if and only if:</p>\n\n<ul>\n\t<li>It is the empty string,</li>\n\t<li>It can be written as <code>AB</code> (<code>A</code> concatenated with <code>B</code>), where <code>A</code> and <code>B</code> are valid strings, or</li>\n\t<li>It can be written as <code>(A)</code>, where <code>A</code> is a valid string.</li>\n</ul>\n\n<p>You are given a parentheses string <code>s</code>. In one move, you can insert a parenthesis at any position of the string.</p>\n\n<ul>\n\t<li>For example, if <code>s = &quot;()))&quot;</code>, you can insert an opening parenthesis to be <code>&quot;(<strong>(</strong>)))&quot;</code> or a closing parenthesis to be <code>&quot;())<strong>)</strong>)&quot;</code>.</li>\n</ul>\n\n<p>Return <em>the minimum number of moves required to make </em><code>s</code><em> valid</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;())&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(((&quot;\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s[i]</code> is either <code>&#39;(&#39;</code> or <code>&#39;)&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"())\"\n\"(((\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "586",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4109,
      "dislikes": 208,
      "similarQuestions": "[{\"title\": \"Minimum Number of Swaps to Make the String Balanced\", \"titleSlug\": \"minimum-number-of-swaps-to-make-the-string-balanced\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486664,
      "commentCount": 57,
      "topLevelCommentCount": 44
    },
    "classAndMethodDefinition": "def without_stack(self, S):\n        opening = count = 0"
  },
  {
    "stat": {
      "question_id": 507,
      "question__article__live": true,
      "question__article__slug": "perfect-number",
      "question__article__has_video_solution": false,
      "question__title": "Perfect Number",
      "question__title_slug": "perfect-number",
      "question__hide": false,
      "total_acs": 210115,
      "total_submitted": 502017,
      "frontend_question_id": 507,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/perfect-number",
      "questionId": "507",
      "questionFrontendId": "507",
      "questionTitle": "Perfect Number",
      "titleSlug": "perfect-number",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>A <a href=\"https://en.wikipedia.org/wiki/Perfect_number\" target=\"_blank\"><strong>perfect number</strong></a> is a <strong>positive integer</strong> that is equal to the sum of its <strong>positive divisors</strong>, excluding the number itself. A <strong>divisor</strong> of an integer <code>x</code> is an integer that can divide <code>x</code> evenly.</p>\n\n<p>Given an integer <code>n</code>, return <code>true</code><em> if </em><code>n</code><em> is a perfect number, otherwise return </em><code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 28\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 28 = 1 + 2 + 4 + 7 + 14\n1, 2, 4, 7, and 14 are all divisors of 28.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 7\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 10<sup>8</sup></code></li>\n</ul>\n",
      "exampleTestcases": "28\n7",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "95",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1095,
      "dislikes": 1236,
      "similarQuestions": "[{\"title\": \"Self Dividing Numbers\", \"titleSlug\": \"self-dividing-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486236,
      "commentCount": 76,
      "topLevelCommentCount": 41
    },
    "classAndMethodDefinition": "def checkPerfectNumber(self, num: int) -> bool:\n        return num in [6,28,496,8128,33550336]"
  },
  {
    "stat": {
      "question_id": 682,
      "question__article__live": true,
      "question__article__slug": "baseball-game",
      "question__article__has_video_solution": false,
      "question__title": "Baseball Game",
      "question__title_slug": "baseball-game",
      "question__hide": false,
      "total_acs": 386621,
      "total_submitted": 501138,
      "frontend_question_id": 682,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/baseball-game",
      "questionId": "682",
      "questionFrontendId": "682",
      "questionTitle": "Baseball Game",
      "titleSlug": "baseball-game",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are keeping the scores for a baseball game with strange rules. At the beginning of the game, you start with an empty record.</p>\n\n<p>You are given a list of strings <code>operations</code>, where <code>operations[i]</code> is the <code>i<sup>th</sup></code> operation you must apply to the record and is one of the following:</p>\n\n<ul>\n\t<li>An integer <code>x</code>.\n\n\t<ul>\n\t\t<li>Record a new score of <code>x</code>.</li>\n\t</ul>\n\t</li>\n\t<li><code>&#39;+&#39;</code>.\n\t<ul>\n\t\t<li>Record a new score that is the sum of the previous two scores.</li>\n\t</ul>\n\t</li>\n\t<li><code>&#39;D&#39;</code>.\n\t<ul>\n\t\t<li>Record a new score that is the double of the previous score.</li>\n\t</ul>\n\t</li>\n\t<li><code>&#39;C&#39;</code>.\n\t<ul>\n\t\t<li>Invalidate the previous score, removing it from the record.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Return <em>the sum of all the scores on the record after applying all the operations</em>.</p>\n\n<p>The test cases are generated such that the answer and all intermediate calculations fit in a <strong>32-bit</strong> integer and that all operations are valid.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> ops = [&quot;5&quot;,&quot;2&quot;,&quot;C&quot;,&quot;D&quot;,&quot;+&quot;]\n<strong>Output:</strong> 30\n<strong>Explanation:</strong>\n&quot;5&quot; - Add 5 to the record, record is now [5].\n&quot;2&quot; - Add 2 to the record, record is now [5, 2].\n&quot;C&quot; - Invalidate and remove the previous score, record is now [5].\n&quot;D&quot; - Add 2 * 5 = 10 to the record, record is now [5, 10].\n&quot;+&quot; - Add 5 + 10 = 15 to the record, record is now [5, 10, 15].\nThe total sum is 5 + 10 + 15 = 30.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> ops = [&quot;5&quot;,&quot;-2&quot;,&quot;4&quot;,&quot;C&quot;,&quot;D&quot;,&quot;9&quot;,&quot;+&quot;,&quot;+&quot;]\n<strong>Output:</strong> 27\n<strong>Explanation:</strong>\n&quot;5&quot; - Add 5 to the record, record is now [5].\n&quot;-2&quot; - Add -2 to the record, record is now [5, -2].\n&quot;4&quot; - Add 4 to the record, record is now [5, -2, 4].\n&quot;C&quot; - Invalidate and remove the previous score, record is now [5, -2].\n&quot;D&quot; - Add 2 * -2 = -4 to the record, record is now [5, -2, -4].\n&quot;9&quot; - Add 9 to the record, record is now [5, -2, -4, 9].\n&quot;+&quot; - Add -4 + 9 = 5 to the record, record is now [5, -2, -4, 9, 5].\n&quot;+&quot; - Add 9 + 5 = 14 to the record, record is now [5, -2, -4, 9, 5, 14].\nThe total sum is 5 + -2 + -4 + 9 + 5 + 14 = 27.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> ops = [&quot;1&quot;,&quot;C&quot;]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\n&quot;1&quot; - Add 1 to the record, record is now [1].\n&quot;C&quot; - Invalidate and remove the previous score, record is now [].\nSince the record is empty, the total sum is 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= operations.length &lt;= 1000</code></li>\n\t<li><code>operations[i]</code> is <code>&quot;C&quot;</code>, <code>&quot;D&quot;</code>, <code>&quot;+&quot;</code>, or a string representing an integer in the range <code>[-3 * 10<sup>4</sup>, 3 * 10<sup>4</sup>]</code>.</li>\n\t<li>For operation <code>&quot;+&quot;</code>, there will always be at least two previous scores on the record.</li>\n\t<li>For operations <code>&quot;C&quot;</code> and <code>&quot;D&quot;</code>, there will always be at least one previous score on the record.</li>\n</ul>\n",
      "exampleTestcases": "[\"5\",\"2\",\"C\",\"D\",\"+\"]\n[\"5\",\"-2\",\"4\",\"C\",\"D\",\"9\",\"+\",\"+\"]\n[\"1\",\"C\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "252",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2878,
      "dislikes": 1918,
      "similarQuestions": "[{\"title\": \"Crawler Log Folder\", \"titleSlug\": \"crawler-log-folder\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486405,
      "commentCount": 67,
      "topLevelCommentCount": 45
    },
    "classAndMethodDefinition": "def calPoints(self, s: List[str]) -> int:\n    \\tp = []"
  },
  {
    "stat": {
      "question_id": 1397,
      "question__article__live": true,
      "question__article__slug": "search-suggestions-system",
      "question__article__has_video_solution": false,
      "question__title": "Search Suggestions System",
      "question__title_slug": "search-suggestions-system",
      "question__hide": false,
      "total_acs": 325969,
      "total_submitted": 500659,
      "frontend_question_id": 1268,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/search-suggestions-system",
      "questionId": "1397",
      "questionFrontendId": "1268",
      "questionTitle": "Search Suggestions System",
      "titleSlug": "search-suggestions-system",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of strings <code>products</code> and a string <code>searchWord</code>.</p>\n\n<p>Design a system that suggests at most three product names from <code>products</code> after each character of <code>searchWord</code> is typed. Suggested products should have common prefix with <code>searchWord</code>. If there are more than three products with a common prefix return the three lexicographically minimums products.</p>\n\n<p>Return <em>a list of lists of the suggested products after each character of </em><code>searchWord</code><em> is typed</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> products = [&quot;mobile&quot;,&quot;mouse&quot;,&quot;moneypot&quot;,&quot;monitor&quot;,&quot;mousepad&quot;], searchWord = &quot;mouse&quot;\n<strong>Output:</strong> [[&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;],[&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;],[&quot;mouse&quot;,&quot;mousepad&quot;],[&quot;mouse&quot;,&quot;mousepad&quot;],[&quot;mouse&quot;,&quot;mousepad&quot;]]\n<strong>Explanation:</strong> products sorted lexicographically = [&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;,&quot;mouse&quot;,&quot;mousepad&quot;].\nAfter typing m and mo all products match and we show user [&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;].\nAfter typing mou, mous and mouse the system suggests [&quot;mouse&quot;,&quot;mousepad&quot;].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> products = [&quot;havana&quot;], searchWord = &quot;havana&quot;\n<strong>Output:</strong> [[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;]]\n<strong>Explanation:</strong> The only word &quot;havana&quot; will be always suggested while typing the search word.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= products.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= products[i].length &lt;= 3000</code></li>\n\t<li><code>1 &lt;= sum(products[i].length) &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li>All the strings of <code>products</code> are <strong>unique</strong>.</li>\n\t<li><code>products[i]</code> consists of lowercase English letters.</li>\n\t<li><code>1 &lt;= searchWord.length &lt;= 1000</code></li>\n\t<li><code>searchWord</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"mobile\",\"mouse\",\"moneypot\",\"monitor\",\"mousepad\"]\n\"mouse\"\n[\"havana\"]\n\"havana\"",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [
        "Brute force is a good choice because length of the string is ≤ 1000.",
        "Binary search the answer.",
        "Use Trie data structure to store the best three matching. Traverse the Trie."
      ],
      "solution": {
        "id": "1067",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4745,
      "dislikes": 243,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487090,
      "commentCount": 55,
      "topLevelCommentCount": 35
    },
    "classAndMethodDefinition": "def suggestedProducts(self, P: List[str], S: str) -> List[List[str]]:\n        P.sort()"
  },
  {
    "stat": {
      "question_id": 777,
      "question__article__live": true,
      "question__article__slug": "toeplitz-matrix",
      "question__article__has_video_solution": false,
      "question__title": "Toeplitz Matrix",
      "question__title_slug": "toeplitz-matrix",
      "question__hide": false,
      "total_acs": 345700,
      "total_submitted": 500067,
      "frontend_question_id": 766,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/toeplitz-matrix",
      "questionId": "777",
      "questionFrontendId": "766",
      "questionTitle": "Toeplitz Matrix",
      "titleSlug": "toeplitz-matrix",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an <code>m x n</code> <code>matrix</code>, return&nbsp;<em><code>true</code>&nbsp;if the matrix is Toeplitz. Otherwise, return <code>false</code>.</em></p>\n\n<p>A matrix is <strong>Toeplitz</strong> if every diagonal from top-left to bottom-right has the same elements.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/ex1.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\nIn the above grid, the&nbsp;diagonals are:\n&quot;[9]&quot;, &quot;[5, 5]&quot;, &quot;[1, 1, 1]&quot;, &quot;[2, 2, 2]&quot;, &quot;[3, 3]&quot;, &quot;[4]&quot;.\nIn each diagonal all elements are the same, so the answer is True.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/ex2.jpg\" style=\"width: 162px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2],[2,2]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong>\nThe diagonal &quot;[1, 2]&quot; has different elements.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 20</code></li>\n\t<li><code>0 &lt;= matrix[i][j] &lt;= 99</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>What if the <code>matrix</code> is stored on disk, and the memory is limited such that you can only load at most one row of the matrix into the memory at once?</li>\n\t<li>What if the <code>matrix</code> is so large that you can only load up a partial row into the memory at once?</li>\n</ul>\n",
      "exampleTestcases": "[[1,2,3,4],[5,1,2,3],[9,5,1,2]]\n[[1,2],[2,2]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "Check whether each value is equal to the value of it's top-left neighbor."
      ],
      "solution": {
        "id": "384",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3547,
      "dislikes": 169,
      "similarQuestions": "[{\"title\": \"Valid Word Square\", \"titleSlug\": \"valid-word-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486489,
      "commentCount": 36,
      "topLevelCommentCount": 24
    },
    "classAndMethodDefinition": "def isToeplitzMatrix(self, matrix: List[List[int]]) -> bool:\n        # Validate Input"
  },
  {
    "stat": {
      "question_id": 1776,
      "question__article__live": true,
      "question__article__slug": "minimum-operations-to-reduce-x-to-zero",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Operations to Reduce X to Zero",
      "question__title_slug": "minimum-operations-to-reduce-x-to-zero",
      "question__hide": false,
      "total_acs": 196575,
      "total_submitted": 494074,
      "frontend_question_id": 1658,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero",
      "questionId": "1776",
      "questionFrontendId": "1658",
      "questionTitle": "Minimum Operations to Reduce X to Zero",
      "titleSlug": "minimum-operations-to-reduce-x-to-zero",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code> and an integer <code>x</code>. In one operation, you can either remove the leftmost or the rightmost element from the array <code>nums</code> and subtract its value from <code>x</code>. Note that this <strong>modifies</strong> the array for future operations.</p>\n\n<p>Return <em>the <strong>minimum number</strong> of operations to reduce </em><code>x</code> <em>to <strong>exactly</strong></em> <code>0</code> <em>if it is possible</em><em>, otherwise, return </em><code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,4,2,3], x = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The optimal solution is to remove the last two elements to reduce x to zero.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,6,7,8,9], x = 4\n<strong>Output:</strong> -1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,20,1,1,3], x = 10\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The optimal solution is to remove the last three elements and the first two elements (5 operations in total) to reduce x to zero.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= x &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,4,2,3]\n5\n[5,6,7,8,9]\n4\n[3,2,20,1,1,3]\n10",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [
        "Think in reverse; instead of finding the minimum prefix + suffix, find the maximum subarray.",
        "Finding the maximum subarray is standard and can be done greedily."
      ],
      "solution": {
        "id": "1052",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5472,
      "dislikes": 120,
      "similarQuestions": "[{\"title\": \"Minimum Size Subarray Sum\", \"titleSlug\": \"minimum-size-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Convert Number\", \"titleSlug\": \"minimum-operations-to-convert-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Removing Minimum Number of Magic Beans\", \"titleSlug\": \"removing-minimum-number-of-magic-beans\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Make the Integer Zero\", \"titleSlug\": \"minimum-operations-to-make-the-integer-zero\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487448,
      "commentCount": 109,
      "topLevelCommentCount": 66
    },
    "classAndMethodDefinition": "def minOperations(self, nums: List[int], x: int) -> int:\n        target, n = sum(nums) - x, len(nums)"
  },
  {
    "stat": {
      "question_id": 223,
      "question__article__live": true,
      "question__article__slug": "rectangle-area",
      "question__article__has_video_solution": false,
      "question__title": "Rectangle Area",
      "question__title_slug": "rectangle-area",
      "question__hide": false,
      "total_acs": 229765,
      "total_submitted": 493365,
      "frontend_question_id": 223,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/rectangle-area",
      "questionId": "223",
      "questionFrontendId": "223",
      "questionTitle": "Rectangle Area",
      "titleSlug": "rectangle-area",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the coordinates of two <strong>rectilinear</strong> rectangles in a 2D plane, return <em>the total area covered by the two rectangles</em>.</p>\n\n<p>The first rectangle is defined by its <strong>bottom-left</strong> corner <code>(ax1, ay1)</code> and its <strong>top-right</strong> corner <code>(ax2, ay2)</code>.</p>\n\n<p>The second rectangle is defined by its <strong>bottom-left</strong> corner <code>(bx1, by1)</code> and its <strong>top-right</strong> corner <code>(bx2, by2)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"Rectangle Area\" src=\"https://assets.leetcode.com/uploads/2021/05/08/rectangle-plane.png\" style=\"width: 700px; height: 365px;\" />\n<pre>\n<strong>Input:</strong> ax1 = -3, ay1 = 0, ax2 = 3, ay2 = 4, bx1 = 0, by1 = -1, bx2 = 9, by2 = 2\n<strong>Output:</strong> 45\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> ax1 = -2, ay1 = -2, ax2 = 2, ay2 = 2, bx1 = -2, by1 = -2, bx2 = 2, by2 = 2\n<strong>Output:</strong> 16\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-10<sup>4</sup> &lt;= ax1 &lt;= ax2 &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= ay1 &lt;= ay2 &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= bx1 &lt;= bx2 &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= by1 &lt;= by2 &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "-3\n0\n3\n4\n0\n-1\n9\n2\n-2\n-2\n2\n2\n-2\n-2\n2\n2",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Geometry",
          "slug": "geometry",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1588",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1999,
      "dislikes": 1648,
      "similarQuestions": "[{\"title\": \"Rectangle Overlap\", \"titleSlug\": \"rectangle-overlap\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Number of Ways to Place People II\", \"titleSlug\": \"find-the-number-of-ways-to-place-people-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Number of Ways to Place People I\", \"titleSlug\": \"find-the-number-of-ways-to-place-people-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Largest Area of Square Inside Two Rectangles\", \"titleSlug\": \"find-the-largest-area-of-square-inside-two-rectangles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485960,
      "commentCount": 52,
      "topLevelCommentCount": 34
    },
    "classAndMethodDefinition": "def computeArea(self, A, B, C, D, E, F, G, H):\n        overlap = max(min(C,G)-max(A,E), 0)*max(min(D,H)-max(B,F), 0)"
  },
  {
    "stat": {
      "question_id": 2271,
      "question__article__live": true,
      "question__article__slug": "rearrange-array-elements-by-sign",
      "question__article__has_video_solution": false,
      "question__title": "Rearrange Array Elements by Sign",
      "question__title_slug": "rearrange-array-elements-by-sign",
      "question__hide": false,
      "total_acs": 414647,
      "total_submitted": 493306,
      "frontend_question_id": 2149,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/rearrange-array-elements-by-sign",
      "questionId": "2271",
      "questionFrontendId": "2149",
      "questionTitle": "Rearrange Array Elements by Sign",
      "titleSlug": "rearrange-array-elements-by-sign",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> of <strong>even</strong> length consisting of an <strong>equal</strong> number of positive and negative integers.</p>\n\n<p>You should return the array of nums such that the the array follows the given conditions:</p>\n\n<ol>\n\t<li>Every <strong>consecutive pair</strong> of integers have <strong>opposite signs</strong>.</li>\n\t<li>For all integers with the same sign, the <strong>order</strong> in which they were present in <code>nums</code> is <strong>preserved</strong>.</li>\n\t<li>The rearranged array begins with a positive integer.</li>\n</ol>\n\n<p>Return <em>the modified array after rearranging the elements to satisfy the aforementioned conditions</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,-2,-5,2,-4]\n<strong>Output:</strong> [3,-2,1,-5,2,-4]\n<strong>Explanation:</strong>\nThe positive integers in nums are [3,1,2]. The negative integers are [-2,-5,-4].\nThe only possible way to rearrange them such that they satisfy all conditions is [3,-2,1,-5,2,-4].\nOther ways such as [1,-2,2,-5,3,-4], [3,1,2,-2,-5,-4], [-2,3,-5,1,-4,2] are incorrect because they do not satisfy one or more conditions.  \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,1]\n<strong>Output:</strong> [1,-1]\n<strong>Explanation:</strong>\n1 is the only positive integer and -1 the only negative integer in nums.\nSo nums is rearranged to [1,-1].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>nums.length</code> is <strong>even</strong></li>\n\t<li><code>1 &lt;= |nums[i]| &lt;= 10<sup>5</sup></code></li>\n\t<li><code>nums</code> consists of <strong>equal</strong> number of positive and negative integers.</li>\n</ul>\n\n<p>&nbsp;</p>\nIt is not required to do the modifications in-place.",
      "exampleTestcases": "[3,1,-2,-5,2,-4]\n[-1,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "Divide the array into two parts- one comprising of only positive integers and the other of negative integers.",
        "Merge the two parts to get the resultant array."
      ],
      "solution": {
        "id": "2237",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3307,
      "dislikes": 186,
      "similarQuestions": "[{\"title\": \"Wiggle Subsequence\", \"titleSlug\": \"wiggle-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sort Array By Parity II\", \"titleSlug\": \"sort-array-by-parity-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Partition Array According to Given Pivot\", \"titleSlug\": \"partition-array-according-to-given-pivot\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Largest Number After Digit Swaps by Parity\", \"titleSlug\": \"largest-number-after-digit-swaps-by-parity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487927,
      "commentCount": 273,
      "topLevelCommentCount": 152
    },
    "classAndMethodDefinition": "class Solution:\n    def rearrangeArray(self, nums: List[int]) -> List[int]:"
  },
  {
    "stat": {
      "question_id": 1605,
      "question__article__live": true,
      "question__article__slug": "minimum-number-of-days-to-make-m-bouquets",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Number of Days to Make m Bouquets",
      "question__title_slug": "minimum-number-of-days-to-make-m-bouquets",
      "question__hide": false,
      "total_acs": 272981,
      "total_submitted": 490211,
      "frontend_question_id": 1482,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets",
      "questionId": "1605",
      "questionFrontendId": "1482",
      "questionTitle": "Minimum Number of Days to Make m Bouquets",
      "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>bloomDay</code>, an integer <code>m</code> and an integer <code>k</code>.</p>\n\n<p>You want to make <code>m</code> bouquets. To make a bouquet, you need to use <code>k</code> <strong>adjacent flowers</strong> from the garden.</p>\n\n<p>The garden consists of <code>n</code> flowers, the <code>i<sup>th</sup></code> flower will bloom in the <code>bloomDay[i]</code> and then can be used in <strong>exactly one</strong> bouquet.</p>\n\n<p>Return <em>the minimum number of days you need to wait to be able to make </em><code>m</code><em> bouquets from the garden</em>. If it is impossible to make m bouquets return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> bloomDay = [1,10,3,10,2], m = 3, k = 1\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Let us see what happened in the first three days. x means flower bloomed and _ means flower did not bloom in the garden.\nWe need 3 bouquets each should contain 1 flower.\nAfter day 1: [x, _, _, _, _]   // we can only make one bouquet.\nAfter day 2: [x, _, _, _, x]   // we can only make two bouquets.\nAfter day 3: [x, _, x, _, x]   // we can make 3 bouquets. The answer is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> bloomDay = [1,10,3,10,2], m = 3, k = 2\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> We need 3 bouquets each has 2 flowers, that means we need 6 flowers. We only have 5 flowers so it is impossible to get the needed bouquets and we return -1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> bloomDay = [7,7,7,7,12,7,7], m = 2, k = 3\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> We need 2 bouquets each should have 3 flowers.\nHere is the garden after the 7 and 12 days:\nAfter day 7: [x, x, x, x, _, x, x]\nWe can make one bouquet of the first three flowers that bloomed. We cannot make another bouquet from the last three flowers that bloomed because they are not adjacent.\nAfter day 12: [x, x, x, x, x, x, x]\nIt is obvious that we can make two bouquets in different ways.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>bloomDay.length == n</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= bloomDay[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= m &lt;= 10<sup>6</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= n</code></li>\n</ul>\n",
      "exampleTestcases": "[1,10,3,10,2]\n3\n1\n[1,10,3,10,2]\n3\n2\n[7,7,7,7,12,7,7]\n2\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [
        "If we can make m or more bouquets at day x, then we can still make m or more bouquets at any day y > x.",
        "We can check easily if we can make enough bouquets at day x if we can get group adjacent flowers at day x."
      ],
      "solution": {
        "id": "2345",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4667,
      "dislikes": 228,
      "similarQuestions": "[{\"title\": \"Maximize the Confusion of an Exam\", \"titleSlug\": \"maximize-the-confusion-of-an-exam\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Earliest Possible Day of Full Bloom\", \"titleSlug\": \"earliest-possible-day-of-full-bloom\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487281,
      "commentCount": 305,
      "topLevelCommentCount": 188
    },
    "classAndMethodDefinition": "class Solution(object):\n    def minDays(self, bloomDay, m, k):"
  },
  {
    "stat": {
      "question_id": 1044,
      "question__article__live": true,
      "question__article__slug": "find-common-characters",
      "question__article__has_video_solution": false,
      "question__title": "Find Common Characters",
      "question__title_slug": "find-common-characters",
      "question__hide": false,
      "total_acs": 365089,
      "total_submitted": 489449,
      "frontend_question_id": 1002,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-common-characters",
      "questionId": "1044",
      "questionFrontendId": "1002",
      "questionTitle": "Find Common Characters",
      "titleSlug": "find-common-characters",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string array <code>words</code>, return <em>an array of all characters that show up in all strings within the </em><code>words</code><em> (including duplicates)</em>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> words = [\"bella\",\"label\",\"roller\"]\n<strong>Output:</strong> [\"e\",\"l\",\"l\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> words = [\"cool\",\"lock\",\"cook\"]\n<strong>Output:</strong> [\"c\",\"o\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 100</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"bella\",\"label\",\"roller\"]\n[\"cool\",\"lock\",\"cook\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2331",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4268,
      "dislikes": 412,
      "similarQuestions": "[{\"title\": \"Intersection of Two Arrays II\", \"titleSlug\": \"intersection-of-two-arrays-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486746,
      "commentCount": 396,
      "topLevelCommentCount": 287
    },
    "classAndMethodDefinition": "class Solution:\n    def commonChars(self, words: List[str]) -> List[str]:"
  },
  {
    "stat": {
      "question_id": 355,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Design Twitter",
      "question__title_slug": "design-twitter",
      "question__hide": false,
      "total_acs": 197975,
      "total_submitted": 489445,
      "frontend_question_id": 355,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/design-twitter",
      "questionId": "355",
      "questionFrontendId": "355",
      "questionTitle": "Design Twitter",
      "titleSlug": "design-twitter",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Design a simplified version of Twitter where users can post tweets, follow/unfollow another user, and is able to see the <code>10</code> most recent tweets in the user&#39;s news feed.</p>\n\n<p>Implement the <code>Twitter</code> class:</p>\n\n<ul>\n\t<li><code>Twitter()</code> Initializes your twitter object.</li>\n\t<li><code>void postTweet(int userId, int tweetId)</code> Composes a new tweet with ID <code>tweetId</code> by the user <code>userId</code>. Each call to this function will be made with a unique <code>tweetId</code>.</li>\n\t<li><code>List&lt;Integer&gt; getNewsFeed(int userId)</code> Retrieves the <code>10</code> most recent tweet IDs in the user&#39;s news feed. Each item in the news feed must be posted by users who the user followed or by the user themself. Tweets must be <strong>ordered from most recent to least recent</strong>.</li>\n\t<li><code>void follow(int followerId, int followeeId)</code> The user with ID <code>followerId</code> started following the user with ID <code>followeeId</code>.</li>\n\t<li><code>void unfollow(int followerId, int followeeId)</code> The user with ID <code>followerId</code> started unfollowing the user with ID <code>followeeId</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Twitter&quot;, &quot;postTweet&quot;, &quot;getNewsFeed&quot;, &quot;follow&quot;, &quot;postTweet&quot;, &quot;getNewsFeed&quot;, &quot;unfollow&quot;, &quot;getNewsFeed&quot;]\n[[], [1, 5], [1], [1, 2], [2, 6], [1], [1, 2], [1]]\n<strong>Output</strong>\n[null, null, [5], null, null, [6, 5], null, [5]]\n\n<strong>Explanation</strong>\nTwitter twitter = new Twitter();\ntwitter.postTweet(1, 5); // User 1 posts a new tweet (id = 5).\ntwitter.getNewsFeed(1);  // User 1&#39;s news feed should return a list with 1 tweet id -&gt; [5]. return [5]\ntwitter.follow(1, 2);    // User 1 follows user 2.\ntwitter.postTweet(2, 6); // User 2 posts a new tweet (id = 6).\ntwitter.getNewsFeed(1);  // User 1&#39;s news feed should return a list with 2 tweet ids -&gt; [6, 5]. Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\ntwitter.unfollow(1, 2);  // User 1 unfollows user 2.\ntwitter.getNewsFeed(1);  // User 1&#39;s news feed should return a list with 1 tweet id -&gt; [5], since user 1 is no longer following user 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= userId, followerId, followeeId &lt;= 500</code></li>\n\t<li><code>0 &lt;= tweetId &lt;= 10<sup>4</sup></code></li>\n\t<li>All the tweets have <strong>unique</strong> IDs.</li>\n\t<li>At most <code>3 * 10<sup>4</sup></code> calls will be made to <code>postTweet</code>, <code>getNewsFeed</code>, <code>follow</code>, and <code>unfollow</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"Twitter\",\"postTweet\",\"getNewsFeed\",\"follow\",\"postTweet\",\"getNewsFeed\",\"unfollow\",\"getNewsFeed\"]\n[[],[1,5],[1],[1,2],[2,6],[1],[1,2],[1]]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": null,
      "companyTagStats": null,
      "likes": 3962,
      "dislikes": 539,
      "similarQuestions": "[{\"title\": \"Design a File Sharing System\", \"titleSlug\": \"design-a-file-sharing-system\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486092,
      "commentCount": 104,
      "topLevelCommentCount": 74
    },
    "classAndMethodDefinition": "def __init__(self):\n            self.timer = itertools.count(step=-1)"
  },
  {
    "stat": {
      "question_id": 1263,
      "question__article__live": true,
      "question__article__slug": "number-of-dice-rolls-with-target-sum",
      "question__article__has_video_solution": false,
      "question__title": "Number of Dice Rolls With Target Sum",
      "question__title_slug": "number-of-dice-rolls-with-target-sum",
      "question__hide": false,
      "total_acs": 298678,
      "total_submitted": 488790,
      "frontend_question_id": 1155,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-dice-rolls-with-target-sum",
      "questionId": "1263",
      "questionFrontendId": "1155",
      "questionTitle": "Number of Dice Rolls With Target Sum",
      "titleSlug": "number-of-dice-rolls-with-target-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You have <code>n</code> dice, and each dice has <code>k</code> faces numbered from <code>1</code> to <code>k</code>.</p>\n\n<p>Given three integers <code>n</code>, <code>k</code>, and <code>target</code>, return <em>the number of possible ways (out of the </em><code>k<sup>n</sup></code><em> total ways) </em><em>to roll the dice, so the sum of the face-up numbers equals </em><code>target</code>. Since the answer may be too large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, k = 6, target = 3\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> You throw one die with 6 faces.\nThere is only one way to get a sum of 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, k = 6, target = 7\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> You throw two dice, each with 6 faces.\nThere are 6 ways to get a sum of 7: 1+6, 2+5, 3+4, 4+3, 5+2, 6+1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 30, k = 30, target = 500\n<strong>Output:</strong> 222616187\n<strong>Explanation:</strong> The answer must be returned modulo 10<sup>9</sup> + 7.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n, k &lt;= 30</code></li>\n\t<li><code>1 &lt;= target &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "1\n6\n3\n2\n6\n7\n30\n30\n500",
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "Use dynamic programming.  The states are how many dice are remaining, and what sum total you have rolled so far."
      ],
      "solution": {
        "id": "1462",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5070,
      "dislikes": 173,
      "similarQuestions": "[{\"title\": \"Equal Sum Arrays With Minimum Number of Operations\", \"titleSlug\": \"equal-sum-arrays-with-minimum-number-of-operations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Missing Observations\", \"titleSlug\": \"find-missing-observations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486961,
      "commentCount": 209,
      "topLevelCommentCount": 119
    },
    "classAndMethodDefinition": "class Solution:\n    mod = 10 ** 9 + 7"
  },
  {
    "stat": {
      "question_id": 984,
      "question__article__live": true,
      "question__article__slug": "most-stones-removed-with-same-row-or-column",
      "question__article__has_video_solution": false,
      "question__title": "Most Stones Removed with Same Row or Column",
      "question__title_slug": "most-stones-removed-with-same-row-or-column",
      "question__hide": false,
      "total_acs": 303153,
      "total_submitted": 487872,
      "frontend_question_id": 947,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",
      "questionId": "984",
      "questionFrontendId": "947",
      "questionTitle": "Most Stones Removed with Same Row or Column",
      "titleSlug": "most-stones-removed-with-same-row-or-column",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>On a 2D plane, we place <code>n</code> stones at some integer coordinate points. Each coordinate point may have at most one stone.</p>\n\n<p>A stone can be removed if it shares either <strong>the same row or the same column</strong> as another stone that has not been removed.</p>\n\n<p>Given an array <code>stones</code> of length <code>n</code> where <code>stones[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> represents the location of the <code>i<sup>th</sup></code> stone, return <em>the largest possible number of stones that can be removed</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> One way to remove 5 stones is as follows:\n1. Remove stone [2,2] because it shares the same row as [2,1].\n2. Remove stone [2,1] because it shares the same column as [0,1].\n3. Remove stone [1,2] because it shares the same row as [1,0].\n4. Remove stone [1,0] because it shares the same column as [0,0].\n5. Remove stone [0,1] because it shares the same row as [0,0].\nStone [0,0] cannot be removed since it does not share a row/column with another stone still on the plane.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [[0,0],[0,2],[1,1],[2,0],[2,2]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> One way to make 3 moves is as follows:\n1. Remove stone [2,2] because it shares the same row as [2,0].\n2. Remove stone [2,0] because it shares the same column as [0,0].\n3. Remove stone [0,2] because it shares the same row as [0,0].\nStones [0,0] and [1,1] cannot be removed since they do not share a row/column with another stone still on the plane.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [[0,0]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> [0,0] is the only stone on the plane, so you cannot remove it.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n\t<li>No two stones are at the same coordinate point.</li>\n</ul>\n",
      "exampleTestcases": "[[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]\n[[0,0],[0,2],[1,1],[2,0],[2,2]]\n[[0,0]]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2417",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5862,
      "dislikes": 685,
      "similarQuestions": "[{\"title\": \"Minimum Moves to Get a Peaceful Board\", \"titleSlug\": \"minimum-moves-to-get-a-peaceful-board\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486690,
      "commentCount": 224,
      "topLevelCommentCount": 141
    },
    "classAndMethodDefinition": "class Solution:\n    def __init__(self):"
  },
  {
    "stat": {
      "question_id": 1392,
      "question__article__live": true,
      "question__article__slug": "find-the-difference-of-two-arrays",
      "question__article__has_video_solution": false,
      "question__title": "Find the Difference of Two Arrays",
      "question__title_slug": "find-the-difference-of-two-arrays",
      "question__hide": false,
      "total_acs": 384668,
      "total_submitted": 484524,
      "frontend_question_id": 2215,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-the-difference-of-two-arrays",
      "questionId": "1392",
      "questionFrontendId": "2215",
      "questionTitle": "Find the Difference of Two Arrays",
      "titleSlug": "find-the-difference-of-two-arrays",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two <strong>0-indexed</strong> integer arrays <code>nums1</code> and <code>nums2</code>, return <em>a list</em> <code>answer</code> <em>of size</em> <code>2</code> <em>where:</em></p>\n\n<ul>\n\t<li><code>answer[0]</code> <em>is a list of all <strong>distinct</strong> integers in</em> <code>nums1</code> <em>which are <strong>not</strong> present in</em> <code>nums2</code><em>.</em></li>\n\t<li><code>answer[1]</code> <em>is a list of all <strong>distinct</strong> integers in</em> <code>nums2</code> <em>which are <strong>not</strong> present in</em> <code>nums1</code>.</li>\n</ul>\n\n<p><strong>Note</strong> that the integers in the lists may be returned in <strong>any</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3], nums2 = [2,4,6]\n<strong>Output:</strong> [[1,3],[4,6]]\n<strong>Explanation:\n</strong>For nums1, nums1[1] = 2 is present at index 0 of nums2, whereas nums1[0] = 1 and nums1[2] = 3 are not present in nums2. Therefore, answer[0] = [1,3].\nFor nums2, nums2[0] = 2 is present at index 1 of nums1, whereas nums2[1] = 4 and nums2[2] = 6 are not present in nums2. Therefore, answer[1] = [4,6].</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3,3], nums2 = [1,1,2,2]\n<strong>Output:</strong> [[3],[]]\n<strong>Explanation:\n</strong>For nums1, nums1[2] and nums1[3] are not present in nums2. Since nums1[2] == nums1[3], their value is only included once and answer[0] = [3].\nEvery integer in nums2 is present in nums1. Therefore, answer[1] = [].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= nums1[i], nums2[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[2,4,6]\n[1,2,3,3]\n[1,1,2,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        }
      ],
      "hints": [
        "For each integer in nums1, check if it exists in nums2.",
        "Do the same for each integer in nums2."
      ],
      "solution": {
        "id": "1823",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2354,
      "dislikes": 97,
      "similarQuestions": "[{\"title\": \"Intersection of Two Arrays\", \"titleSlug\": \"intersection-of-two-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Intersection of Two Arrays II\", \"titleSlug\": \"intersection-of-two-arrays-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Intersection of Multiple Arrays\", \"titleSlug\": \"intersection-of-multiple-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487085,
      "commentCount": 118,
      "topLevelCommentCount": 68
    },
    "classAndMethodDefinition": "class Solution:\n    def findDifference(self, nums1, nums2):"
  },
  {
    "stat": {
      "question_id": 164,
      "question__article__live": true,
      "question__article__slug": "maximum-gap",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Gap",
      "question__title_slug": "maximum-gap",
      "question__hide": false,
      "total_acs": 227824,
      "total_submitted": 484361,
      "frontend_question_id": 164,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-gap",
      "questionId": "164",
      "questionFrontendId": "164",
      "questionTitle": "Maximum Gap",
      "titleSlug": "maximum-gap",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <em>the maximum difference between two successive elements in its sorted form</em>. If the array contains less than two elements, return <code>0</code>.</p>\n\n<p>You must write an algorithm that runs in linear time and uses linear extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,6,9,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The sorted form of the array is [1,3,6,9], either (3,6) or (6,9) has the maximum difference 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The array contains less than 2 elements, therefore return 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[3,6,9,1]\n[10]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort",
          "translatedName": null
        },
        {
          "name": "Radix Sort",
          "slug": "radix-sort",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "81",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3294,
      "dislikes": 405,
      "similarQuestions": "[{\"title\": \"Maximum Consecutive Floors Without Special Floors\", \"titleSlug\": \"maximum-consecutive-floors-without-special-floors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2485901,
      "commentCount": 76,
      "topLevelCommentCount": 46
    },
    "classAndMethodDefinition": "def maximumGap(self, nums: List[int]) -> int:\n        if len(nums) < 2: return 0"
  },
  {
    "stat": {
      "question_id": 879,
      "question__article__live": true,
      "question__article__slug": "maximize-distance-to-closest-person",
      "question__article__has_video_solution": false,
      "question__title": "Maximize Distance to Closest Person",
      "question__title_slug": "maximize-distance-to-closest-person",
      "question__hide": false,
      "total_acs": 233065,
      "total_submitted": 482528,
      "frontend_question_id": 849,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximize-distance-to-closest-person",
      "questionId": "879",
      "questionFrontendId": "849",
      "questionTitle": "Maximize Distance to Closest Person",
      "titleSlug": "maximize-distance-to-closest-person",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array representing a row of <code>seats</code> where <code>seats[i] = 1</code> represents a person sitting in the <code>i<sup>th</sup></code> seat, and <code>seats[i] = 0</code> represents that the <code>i<sup>th</sup></code> seat is empty <strong>(0-indexed)</strong>.</p>\n\n<p>There is at least one empty seat, and at least one person sitting.</p>\n\n<p>Alex wants to sit in the seat such that the distance between him and the closest person to him is maximized.&nbsp;</p>\n\n<p>Return <em>that maximum distance to the closest person</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/10/distance.jpg\" style=\"width: 650px; height: 257px;\" />\n<pre>\n<strong>Input:</strong> seats = [1,0,0,0,1,0,1]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>\nIf Alex sits in the second open seat (i.e. seats[2]), then the closest person has distance 2.\nIf Alex sits in any other open seat, the closest person has distance 1.\nThus, the maximum distance to the closest person is 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> seats = [1,0,0,0]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>\nIf Alex sits in the last seat (i.e. seats[3]), the closest person is 3 seats away.\nThis is the maximum distance possible, so the answer is 3.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> seats = [0,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= seats.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>seats[i]</code>&nbsp;is <code>0</code> or&nbsp;<code>1</code>.</li>\n\t<li>At least one seat is <strong>empty</strong>.</li>\n\t<li>At least one seat is <strong>occupied</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[1,0,0,0,1,0,1]\n[1,0,0,0]\n[0,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "481",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3226,
      "dislikes": 196,
      "similarQuestions": "[{\"title\": \"Exam Room\", \"titleSlug\": \"exam-room\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Task Scheduler II\", \"titleSlug\": \"task-scheduler-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486585,
      "commentCount": 41,
      "topLevelCommentCount": 30
    },
    "classAndMethodDefinition": "def maxDistToClosest(self, seats):\n        pre_zeros, suf_zeros, max_zeros, zeros = -1, -1, -1, 0"
  },
  {
    "stat": {
      "question_id": 413,
      "question__article__live": true,
      "question__article__slug": "arithmetic-slices",
      "question__article__has_video_solution": false,
      "question__title": "Arithmetic Slices",
      "question__title_slug": "arithmetic-slices",
      "question__hide": false,
      "total_acs": 313094,
      "total_submitted": 481515,
      "frontend_question_id": 413,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/arithmetic-slices",
      "questionId": "413",
      "questionFrontendId": "413",
      "questionTitle": "Arithmetic Slices",
      "titleSlug": "arithmetic-slices",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>An integer array is called arithmetic if it consists of <strong>at least three elements</strong> and if the difference between any two consecutive elements is the same.</p>\n\n<ul>\n\t<li>For example, <code>[1,3,5,7,9]</code>, <code>[7,7,7,7]</code>, and <code>[3,-1,-5,-9]</code> are arithmetic sequences.</li>\n</ul>\n\n<p>Given an integer array <code>nums</code>, return <em>the number of arithmetic <strong>subarrays</strong> of</em> <code>nums</code>.</p>\n\n<p>A <strong>subarray</strong> is a contiguous subsequence of the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We have 3 arithmetic slices in nums: [1, 2, 3], [2, 3, 4] and [1,2,3,4] itself.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n\t<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4]\n[1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "219",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5358,
      "dislikes": 296,
      "similarQuestions": "[{\"title\": \"Arithmetic Slices II - Subsequence\", \"titleSlug\": \"arithmetic-slices-ii-subsequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Arithmetic Subarrays\", \"titleSlug\": \"arithmetic-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Zero-Filled Subarrays\", \"titleSlug\": \"number-of-zero-filled-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Length of the Longest Alphabetical Continuous Substring\", \"titleSlug\": \"length-of-the-longest-alphabetical-continuous-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486150,
      "commentCount": 43,
      "topLevelCommentCount": 26
    },
    "classAndMethodDefinition": "def numberOfArithmeticSlices(self, A: List[int]) -> int:\n        le=len(A)"
  },
  {
    "stat": {
      "question_id": 1414,
      "question__article__live": true,
      "question__article__slug": "shortest-path-in-a-grid-with-obstacles-elimination",
      "question__article__has_video_solution": false,
      "question__title": "Shortest Path in a Grid with Obstacles Elimination",
      "question__title_slug": "shortest-path-in-a-grid-with-obstacles-elimination",
      "question__hide": false,
      "total_acs": 217046,
      "total_submitted": 479054,
      "frontend_question_id": 1293,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination",
      "questionId": "1414",
      "questionFrontendId": "1293",
      "questionTitle": "Shortest Path in a Grid with Obstacles Elimination",
      "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>m x n</code> integer matrix <code>grid</code> where each cell is either <code>0</code> (empty) or <code>1</code> (obstacle). You can move up, down, left, or right from and to an empty cell in <strong>one step</strong>.</p>\n\n<p>Return <em>the minimum number of <strong>steps</strong> to walk from the upper left corner </em><code>(0, 0)</code><em> to the lower right corner </em><code>(m - 1, n - 1)</code><em> given that you can eliminate <strong>at most</strong> </em><code>k</code><em> obstacles</em>. If it is not possible to find such walk return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/30/short1-grid.jpg\" style=\"width: 244px; height: 405px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,0,0],[1,1,0],[0,0,0],[0,1,1],[0,0,0]], k = 1\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> \nThe shortest path without eliminating any obstacle is 10.\nThe shortest path with one obstacle elimination at position (3,2) is 6. Such path is (0,0) -&gt; (0,1) -&gt; (0,2) -&gt; (1,2) -&gt; (2,2) -&gt; <strong>(3,2)</strong> -&gt; (4,2).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/30/short2-grid.jpg\" style=\"width: 244px; height: 245px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,1,1],[1,1,1],[1,0,0]], k = 1\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> We need to eliminate at least two obstacles to find such a walk.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 40</code></li>\n\t<li><code>1 &lt;= k &lt;= m * n</code></li>\n\t<li><code>grid[i][j]</code> is either <code>0</code> <strong>or</strong> <code>1</code>.</li>\n\t<li><code>grid[0][0] == grid[m - 1][n - 1] == 0</code></li>\n</ul>\n",
      "exampleTestcases": "[[0,0,0],[1,1,0],[0,0,0],[0,1,1],[0,0,0]]\n1\n[[0,1,1],[1,1,1],[1,0,0]]\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "Use BFS.",
        "BFS on (x,y,r) x,y is coordinate, r is remain number of obstacles you can remove."
      ],
      "solution": {
        "id": "1165",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4532,
      "dislikes": 84,
      "similarQuestions": "[{\"title\": \"Shortest Path to Get Food\", \"titleSlug\": \"shortest-path-to-get-food\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Obstacle Removal to Reach Corner\", \"titleSlug\": \"minimum-obstacle-removal-to-reach-corner\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487107,
      "commentCount": 58,
      "topLevelCommentCount": 39
    },
    "classAndMethodDefinition": "def shortestPath(self, grid: List[List[int]], k: int) -> int:\n        m, n = len(grid), len(grid[0])"
  },
  {
    "stat": {
      "question_id": 1651,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Shuffle String",
      "question__title_slug": "shuffle-string",
      "question__hide": false,
      "total_acs": 404600,
      "total_submitted": 476796,
      "frontend_question_id": 1528,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/shuffle-string",
      "questionId": "1651",
      "questionFrontendId": "1528",
      "questionTitle": "Shuffle String",
      "titleSlug": "shuffle-string",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code> and an integer array <code>indices</code> of the <strong>same length</strong>. The string <code>s</code> will be shuffled such that the character at the <code>i<sup>th</sup></code> position moves to <code>indices[i]</code> in the shuffled string.</p>\n\n<p>Return <em>the shuffled string</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/09/q1.jpg\" style=\"width: 321px; height: 243px;\" />\n<pre>\n<strong>Input:</strong> s = &quot;codeleet&quot;, <code>indices</code> = [4,5,6,7,0,2,1,3]\n<strong>Output:</strong> &quot;leetcode&quot;\n<strong>Explanation:</strong> As shown, &quot;codeleet&quot; becomes &quot;leetcode&quot; after shuffling.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abc&quot;, <code>indices</code> = [0,1,2]\n<strong>Output:</strong> &quot;abc&quot;\n<strong>Explanation:</strong> After shuffling, each character remains in its position.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>s.length == indices.length == n</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>s</code> consists of only lowercase English letters.</li>\n\t<li><code>0 &lt;= indices[i] &lt; n</code></li>\n\t<li>All values of <code>indices</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "\"codeleet\"\n[4,5,6,7,0,2,1,3]\n\"abc\"\n[0,1,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "You can create an auxiliary string t of length n.",
        "Assign t[indexes[i]] to s[i] for each i from 0 to n-1."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 2759,
      "dislikes": 525,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487325,
      "commentCount": 137,
      "topLevelCommentCount": 94
    },
    "classAndMethodDefinition": "def restoreString(self, s: str, indices: List[int]) -> str:\n        res = [\\'\\'] * len(s)"
  },
  {
    "stat": {
      "question_id": 1666,
      "question__article__live": true,
      "question__article__slug": "make-the-string-great",
      "question__article__has_video_solution": false,
      "question__title": "Make The String Great",
      "question__title_slug": "make-the-string-great",
      "question__hide": false,
      "total_acs": 324908,
      "total_submitted": 475375,
      "frontend_question_id": 1544,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/make-the-string-great",
      "questionId": "1666",
      "questionFrontendId": "1544",
      "questionTitle": "Make The String Great",
      "titleSlug": "make-the-string-great",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> of lower and upper case English letters.</p>\n\n<p>A good string is a string which doesn&#39;t have <strong>two adjacent characters</strong> <code>s[i]</code> and <code>s[i + 1]</code> where:</p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt;= s.length - 2</code></li>\n\t<li><code>s[i]</code> is a lower-case letter and <code>s[i + 1]</code> is the same letter but in upper-case or <strong>vice-versa</strong>.</li>\n</ul>\n\n<p>To make the string good, you can choose <strong>two adjacent</strong> characters that make the string bad and remove them. You can keep doing this until the string becomes good.</p>\n\n<p>Return <em>the string</em> after making it good. The answer is guaranteed to be unique under the given constraints.</p>\n\n<p><strong>Notice</strong> that an empty string is also good.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leEeetcode&quot;\n<strong>Output:</strong> &quot;leetcode&quot;\n<strong>Explanation:</strong> In the first step, either you choose i = 1 or i = 2, both will result &quot;leEeetcode&quot; to be reduced to &quot;leetcode&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abBAcC&quot;\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> We have many possible scenarios, and all lead to the same answer. For example:\n&quot;abBAcC&quot; --&gt; &quot;aAcC&quot; --&gt; &quot;cC&quot; --&gt; &quot;&quot;\n&quot;abBAcC&quot; --&gt; &quot;abBA&quot; --&gt; &quot;aA&quot; --&gt; &quot;&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;s&quot;\n<strong>Output:</strong> &quot;s&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> contains only lower and upper case English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"leEeetcode\"\n\"abBAcC\"\n\"s\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [
        "The order you choose 2 characters to remove doesn't matter.",
        "Keep applying the mentioned step to s till the length of the string is not changed."
      ],
      "solution": {
        "id": "1566",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3033,
      "dislikes": 172,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487340,
      "commentCount": 263,
      "topLevelCommentCount": 150
    },
    "classAndMethodDefinition": "class Solution:\n    def makeGood(self, s: str) -> str:"
  },
  {
    "stat": {
      "question_id": 1050,
      "question__article__live": true,
      "question__article__slug": "construct-bst-from-preorder-traversal",
      "question__article__has_video_solution": false,
      "question__title": "Construct Binary Search Tree from Preorder Traversal",
      "question__title_slug": "construct-binary-search-tree-from-preorder-traversal",
      "question__hide": false,
      "total_acs": 391464,
      "total_submitted": 474642,
      "frontend_question_id": 1008,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",
      "questionId": "1050",
      "questionFrontendId": "1008",
      "questionTitle": "Construct Binary Search Tree from Preorder Traversal",
      "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers preorder, which represents the <strong>preorder traversal</strong> of a BST (i.e., <strong>binary search tree</strong>), construct the tree and return <em>its root</em>.</p>\n\n<p>It is <strong>guaranteed</strong> that there is always possible to find a binary search tree with the given requirements for the given test cases.</p>\n\n<p>A <strong>binary search tree</strong> is a binary tree where for every node, any descendant of <code>Node.left</code> has a value <strong>strictly less than</strong> <code>Node.val</code>, and any descendant of <code>Node.right</code> has a value <strong>strictly greater than</strong> <code>Node.val</code>.</p>\n\n<p>A <strong>preorder traversal</strong> of a binary tree displays the value of the node first, then traverses <code>Node.left</code>, then traverses <code>Node.right</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/03/06/1266.png\" style=\"height: 386px; width: 590px;\" />\n<pre>\n<strong>Input:</strong> preorder = [8,5,1,7,10,12]\n<strong>Output:</strong> [8,5,10,1,7,null,12]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> preorder = [1,3]\n<strong>Output:</strong> [1,null,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= preorder.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= preorder[i] &lt;= 1000</code></li>\n\t<li>All the values of <code>preorder</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[8,5,1,7,10,12]\n[1,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "724",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6198,
      "dislikes": 83,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486752,
      "commentCount": 43,
      "topLevelCommentCount": 31
    },
    "classAndMethodDefinition": "def bstFromPreorder(self, preorder: List[int]) -> TreeNode:\n        curr = dummy = TreeNode( float(\"Inf\") )"
  },
  {
    "stat": {
      "question_id": 1207,
      "question__article__live": true,
      "question__article__slug": "delete-nodes-and-return-forest",
      "question__article__has_video_solution": false,
      "question__title": "Delete Nodes And Return Forest",
      "question__title_slug": "delete-nodes-and-return-forest",
      "question__hide": false,
      "total_acs": 343589,
      "total_submitted": 474449,
      "frontend_question_id": 1110,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/delete-nodes-and-return-forest",
      "questionId": "1207",
      "questionFrontendId": "1110",
      "questionTitle": "Delete Nodes And Return Forest",
      "titleSlug": "delete-nodes-and-return-forest",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, each node in the tree has a distinct value.</p>\n\n<p>After deleting all nodes with a value in <code>to_delete</code>, we are left with a forest (a disjoint union of trees).</p>\n\n<p>Return the roots of the trees in the remaining forest. You may return the result in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/07/01/screen-shot-2019-07-01-at-53836-pm.png\" style=\"width: 237px; height: 150px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,6,7], to_delete = [3,5]\n<strong>Output:</strong> [[1,2,null,4],[6],[7]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,4,null,3], to_delete = [3]\n<strong>Output:</strong> [[1,2,4]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the given tree is at most <code>1000</code>.</li>\n\t<li>Each node has a distinct value between <code>1</code> and <code>1000</code>.</li>\n\t<li><code>to_delete.length &lt;= 1000</code></li>\n\t<li><code>to_delete</code> contains distinct values between <code>1</code> and <code>1000</code>.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5,6,7]\n[3,5]\n[1,2,4,null,3]\n[3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2374",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4568,
      "dislikes": 139,
      "similarQuestions": "[{\"title\": \"Count Nodes With the Highest Score\", \"titleSlug\": \"count-nodes-with-the-highest-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486906,
      "commentCount": 201,
      "topLevelCommentCount": 124
    },
    "classAndMethodDefinition": "class Solution:\n    def delNodes(self, root: Optional[TreeNode], to_delete: List[int]) -> List[TreeNode]:"
  },
  {
    "stat": {
      "question_id": 324,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Wiggle Sort II",
      "question__title_slug": "wiggle-sort-ii",
      "question__hide": false,
      "total_acs": 164669,
      "total_submitted": 474384,
      "frontend_question_id": 324,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/wiggle-sort-ii",
      "questionId": "324",
      "questionFrontendId": "324",
      "questionTitle": "Wiggle Sort II",
      "titleSlug": "wiggle-sort-ii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, reorder it such that <code>nums[0] &lt; nums[1] &gt; nums[2] &lt; nums[3]...</code>.</p>\n\n<p>You may assume the input array always has a valid answer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5,1,1,6,4]\n<strong>Output:</strong> [1,6,1,5,1,4]\n<strong>Explanation:</strong> [1,4,1,5,1,6] is also accepted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,2,2,3,1]\n<strong>Output:</strong> [2,3,1,3,1,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 5000</code></li>\n\t<li>It is guaranteed that there will be an answer for the given input <code>nums</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow Up:</strong> Can you do it in <code>O(n)</code> time and/or <strong>in-place</strong> with <code>O(1)</code> extra space?",
      "exampleTestcases": "[1,5,1,1,6,4]\n[1,3,2,2,3,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Quickselect",
          "slug": "quickselect",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": null,
      "companyTagStats": null,
      "likes": 3084,
      "dislikes": 961,
      "similarQuestions": "[{\"title\": \"Sort Colors\", \"titleSlug\": \"sort-colors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort\", \"titleSlug\": \"wiggle-sort\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Array With Elements Not Equal to Average of Neighbors\", \"titleSlug\": \"array-with-elements-not-equal-to-average-of-neighbors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486061,
      "commentCount": 39,
      "topLevelCommentCount": 25
    },
    "classAndMethodDefinition": "def wiggleSort(self, nums):\n        nums.sort()"
  },
  {
    "stat": {
      "question_id": 1574,
      "question__article__live": true,
      "question__article__slug": "maximum-product-of-two-elements-in-an-array",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Product of Two Elements in an Array",
      "question__title_slug": "maximum-product-of-two-elements-in-an-array",
      "question__hide": false,
      "total_acs": 391909,
      "total_submitted": 472887,
      "frontend_question_id": 1464,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array",
      "questionId": "1574",
      "questionFrontendId": "1464",
      "questionTitle": "Maximum Product of Two Elements in an Array",
      "titleSlug": "maximum-product-of-two-elements-in-an-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "Given the array of integers <code>nums</code>, you will choose two different indices <code>i</code> and <code>j</code> of that array. <em>Return the maximum value of</em> <code>(nums[i]-1)*(nums[j]-1)</code>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,4,5,2]\n<strong>Output:</strong> 12 \n<strong>Explanation:</strong> If you choose the indices i=1 and j=2 (indexed from 0), you will get the maximum value, that is, (nums[1]-1)*(nums[2]-1) = (4-1)*(5-1) = 3*4 = 12. \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5,4,5]\n<strong>Output:</strong> 16\n<strong>Explanation:</strong> Choosing the indices i=1 and j=3 (indexed from 0), you will get the maximum value of (5-1)*(5-1) = 16.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,7]\n<strong>Output:</strong> 12\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^3</code></li>\n</ul>\n",
      "exampleTestcases": "[3,4,5,2]\n[1,5,4,5]\n[3,7]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [
        "Use brute force: two loops to select i and j, then select the maximum value of (nums[i]-1)*(nums[j]-1)."
      ],
      "solution": {
        "id": "2182",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2480,
      "dislikes": 236,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487265,
      "commentCount": 190,
      "topLevelCommentCount": 134
    },
    "classAndMethodDefinition": "class Solution(object):\n    def maxProduct(self, nums):"
  },
  {
    "stat": {
      "question_id": 556,
      "question__article__live": true,
      "question__article__slug": "next-greater-element-iii",
      "question__article__has_video_solution": false,
      "question__title": "Next Greater Element III",
      "question__title_slug": "next-greater-element-iii",
      "question__hide": false,
      "total_acs": 161490,
      "total_submitted": 472501,
      "frontend_question_id": 556,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/next-greater-element-iii",
      "questionId": "556",
      "questionFrontendId": "556",
      "questionTitle": "Next Greater Element III",
      "titleSlug": "next-greater-element-iii",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a positive integer <code>n</code>, find <em>the smallest integer which has exactly the same digits existing in the integer</em> <code>n</code> <em>and is greater in value than</em> <code>n</code>. If no such positive integer exists, return <code>-1</code>.</p>\n\n<p><strong>Note</strong> that the returned integer should fit in <strong>32-bit integer</strong>, if there is a valid answer but it does not fit in <strong>32-bit integer</strong>, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 12\n<strong>Output:</strong> 21\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 21\n<strong>Output:</strong> -1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "12\n21",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "106",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3695,
      "dislikes": 470,
      "similarQuestions": "[{\"title\": \"Next Greater Element I\", \"titleSlug\": \"next-greater-element-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element II\", \"titleSlug\": \"next-greater-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Next Palindrome Using Same Digits\", \"titleSlug\": \"next-palindrome-using-same-digits\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486285,
      "commentCount": 35,
      "topLevelCommentCount": 22
    },
    "classAndMethodDefinition": "class Solution:\n    def nextGreaterElement(self, n: int) -> int:"
  },
  {
    "stat": {
      "question_id": 1025,
      "question__article__live": true,
      "question__article__slug": "minimum-cost-for-tickets",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Cost For Tickets",
      "question__title_slug": "minimum-cost-for-tickets",
      "question__hide": false,
      "total_acs": 307269,
      "total_submitted": 471021,
      "frontend_question_id": 983,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-cost-for-tickets",
      "questionId": "1025",
      "questionFrontendId": "983",
      "questionTitle": "Minimum Cost For Tickets",
      "titleSlug": "minimum-cost-for-tickets",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You have planned some train traveling one year in advance. The days of the year in which you will travel are given as an integer array <code>days</code>. Each day is an integer from <code>1</code> to <code>365</code>.</p>\n\n<p>Train tickets are sold in <strong>three different ways</strong>:</p>\n\n<ul>\n\t<li>a <strong>1-day</strong> pass is sold for <code>costs[0]</code> dollars,</li>\n\t<li>a <strong>7-day</strong> pass is sold for <code>costs[1]</code> dollars, and</li>\n\t<li>a <strong>30-day</strong> pass is sold for <code>costs[2]</code> dollars.</li>\n</ul>\n\n<p>The passes allow that many days of consecutive travel.</p>\n\n<ul>\n\t<li>For example, if we get a <strong>7-day</strong> pass on day <code>2</code>, then we can travel for <code>7</code> days: <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>7</code>, and <code>8</code>.</li>\n</ul>\n\n<p>Return <em>the minimum number of dollars you need to travel every day in the given list of days</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> days = [1,4,6,7,8,20], costs = [2,7,15]\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> For example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.\nOn day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.\nOn day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.\nIn total, you spent $11 and covered all the days of your travel.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]\n<strong>Output:</strong> 17\n<strong>Explanation:</strong> For example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.\nOn day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.\nIn total, you spent $17 and covered all the days of your travel.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= days.length &lt;= 365</code></li>\n\t<li><code>1 &lt;= days[i] &lt;= 365</code></li>\n\t<li><code>days</code> is in strictly increasing order.</li>\n\t<li><code>costs.length == 3</code></li>\n\t<li><code>1 &lt;= costs[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,4,6,7,8,20]\n[2,7,15]\n[1,2,3,4,5,6,7,8,9,10,30,31]\n[2,7,15]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1969",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7909,
      "dislikes": 149,
      "similarQuestions": "[{\"title\": \"Coin Change\", \"titleSlug\": \"coin-change\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Most Expensive Item That Can Not Be Bought\", \"titleSlug\": \"most-expensive-item-that-can-not-be-bought\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486727,
      "commentCount": 92,
      "topLevelCommentCount": 56
    },
    "classAndMethodDefinition": "def mincostTickets(self, days: List[int], costs: List[int]) -> int:\n\\tdp=[0 for i in range(days[-1]+1)]"
  },
  {
    "stat": {
      "question_id": 1325,
      "question__article__live": true,
      "question__article__slug": "path-with-maximum-probability",
      "question__article__has_video_solution": false,
      "question__title": "Path with Maximum Probability",
      "question__title_slug": "path-with-maximum-probability",
      "question__hide": false,
      "total_acs": 307037,
      "total_submitted": 468567,
      "frontend_question_id": 1514,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/path-with-maximum-probability",
      "questionId": "1325",
      "questionFrontendId": "1514",
      "questionTitle": "Path with Maximum Probability",
      "titleSlug": "path-with-maximum-probability",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an undirected weighted graph of&nbsp;<code>n</code>&nbsp;nodes (0-indexed), represented by an edge list where&nbsp;<code>edges[i] = [a, b]</code>&nbsp;is an undirected edge connecting the nodes&nbsp;<code>a</code>&nbsp;and&nbsp;<code>b</code>&nbsp;with a probability of success of traversing that edge&nbsp;<code>succProb[i]</code>.</p>\n\n<p>Given two nodes&nbsp;<code>start</code>&nbsp;and&nbsp;<code>end</code>, find the path with the maximum probability of success to go from&nbsp;<code>start</code>&nbsp;to&nbsp;<code>end</code>&nbsp;and return its success probability.</p>\n\n<p>If there is no path from&nbsp;<code>start</code>&nbsp;to&nbsp;<code>end</code>, <strong>return&nbsp;0</strong>. Your answer will be accepted if it differs from the correct answer by at most <strong>1e-5</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/20/1558_ex1.png\" style=\"width: 187px; height: 186px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.2], start = 0, end = 2\n<strong>Output:</strong> 0.25000\n<strong>Explanation:</strong>&nbsp;There are two paths from start to end, one having a probability of success = 0.2 and the other has 0.5 * 0.5 = 0.25.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/20/1558_ex2.png\" style=\"width: 189px; height: 186px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.3], start = 0, end = 2\n<strong>Output:</strong> 0.30000\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/20/1558_ex3.png\" style=\"width: 215px; height: 191px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, edges = [[0,1]], succProb = [0.5], start = 0, end = 2\n<strong>Output:</strong> 0.00000\n<strong>Explanation:</strong>&nbsp;There is no path between 0 and 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10^4</code></li>\n\t<li><code>0 &lt;= start, end &lt; n</code></li>\n\t<li><code>start != end</code></li>\n\t<li><code>0 &lt;= a, b &lt; n</code></li>\n\t<li><code>a != b</code></li>\n\t<li><code>0 &lt;= succProb.length == edges.length &lt;= 2*10^4</code></li>\n\t<li><code>0 &lt;= succProb[i] &lt;= 1</code></li>\n\t<li>There is at most one edge between every two nodes.</li>\n</ul>\n",
      "exampleTestcases": "3\n[[0,1],[1,2],[0,2]]\n[0.5,0.5,0.2]\n0\n2\n3\n[[0,1],[1,2],[0,2]]\n[0.5,0.5,0.3]\n0\n2\n3\n[[0,1]]\n[0.5]\n0\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path",
          "translatedName": null
        }
      ],
      "hints": [
        "Multiplying probabilities will result in precision errors.",
        "Take log probabilities to sum up numbers instead of multiplying them.",
        "Use Dijkstra's algorithm to find the minimum path between the two nodes after negating all costs."
      ],
      "solution": {
        "id": "1872",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3620,
      "dislikes": 102,
      "similarQuestions": "[{\"title\": \"Number of Ways to Arrive at Destination\", \"titleSlug\": \"number-of-ways-to-arrive-at-destination\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487018,
      "commentCount": 466,
      "topLevelCommentCount": 288
    },
    "classAndMethodDefinition": "def maxProbability(self, n: int, edges: List[List[int]], succProb: List[float], start: int, end: int) -> float:\n        g, dq = defaultdict(list), deque([start])"
  },
  {
    "stat": {
      "question_id": 1753,
      "question__article__live": true,
      "question__article__slug": "path-with-minimum-effort",
      "question__article__has_video_solution": false,
      "question__title": "Path With Minimum Effort",
      "question__title_slug": "path-with-minimum-effort",
      "question__hide": false,
      "total_acs": 281569,
      "total_submitted": 467877,
      "frontend_question_id": 1631,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/path-with-minimum-effort",
      "questionId": "1753",
      "questionFrontendId": "1631",
      "questionTitle": "Path With Minimum Effort",
      "titleSlug": "path-with-minimum-effort",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are a hiker preparing for an upcoming hike. You are given <code>heights</code>, a 2D array of size <code>rows x columns</code>, where <code>heights[row][col]</code> represents the height of cell <code>(row, col)</code>. You are situated in the top-left cell, <code>(0, 0)</code>, and you hope to travel to the bottom-right cell, <code>(rows-1, columns-1)</code> (i.e.,&nbsp;<strong>0-indexed</strong>). You can move <strong>up</strong>, <strong>down</strong>, <strong>left</strong>, or <strong>right</strong>, and you wish to find a route that requires the minimum <strong>effort</strong>.</p>\n\n<p>A route&#39;s <strong>effort</strong> is the <strong>maximum absolute difference</strong><strong> </strong>in heights between two consecutive cells of the route.</p>\n\n<p>Return <em>the minimum <strong>effort</strong> required to travel from the top-left cell to the bottom-right cell.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/04/ex1.png\" style=\"width: 300px; height: 300px;\" /></p>\n\n<pre>\n<strong>Input:</strong> heights = [[1,2,2],[3,8,2],[5,3,5]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The route of [1,3,5,3,5] has a maximum absolute difference of 2 in consecutive cells.\nThis is better than the route of [1,2,2,2,5], where the maximum absolute difference is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/04/ex2.png\" style=\"width: 300px; height: 300px;\" /></p>\n\n<pre>\n<strong>Input:</strong> heights = [[1,2,3],[3,8,4],[5,3,5]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The route of [1,2,3,4,5] has a maximum absolute difference of 1 in consecutive cells, which is better than route [1,3,5,3,5].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/04/ex3.png\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> heights = [[1,2,1,1,1],[1,2,1,2,1],[1,2,1,2,1],[1,2,1,2,1],[1,1,1,2,1]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> This route does not require any effort.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>rows == heights.length</code></li>\n\t<li><code>columns == heights[i].length</code></li>\n\t<li><code>1 &lt;= rows, columns &lt;= 100</code></li>\n\t<li><code>1 &lt;= heights[i][j] &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2,2],[3,8,2],[5,3,5]]\n[[1,2,3],[3,8,4],[5,3,5]]\n[[1,2,1,1,1],[1,2,1,2,1],[1,2,1,2,1],[1,2,1,2,1],[1,1,1,2,1]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "Consider the grid as a graph, where adjacent cells have an edge with cost of the difference between the cells.",
        "If you are given threshold k, check if it is possible to go from (0, 0) to (n-1, m-1) using only edges of ≤ k cost.",
        "Binary search the k value."
      ],
      "solution": {
        "id": "1036",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5949,
      "dislikes": 204,
      "similarQuestions": "[{\"title\": \"Swim in Rising Water\", \"titleSlug\": \"swim-in-rising-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Path With Maximum Minimum Value\", \"titleSlug\": \"path-with-maximum-minimum-value\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Safest Path in a Grid\", \"titleSlug\": \"find-the-safest-path-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487426,
      "commentCount": 139,
      "topLevelCommentCount": 82
    },
    "classAndMethodDefinition": "def minimumEffortPath(self, heights: List[List[int]]) -> int:\n        H = len(heights)"
  },
  {
    "stat": {
      "question_id": 472,
      "question__article__live": true,
      "question__article__slug": "concatenated-words",
      "question__article__has_video_solution": false,
      "question__title": "Concatenated Words",
      "question__title_slug": "concatenated-words",
      "question__hide": false,
      "total_acs": 230740,
      "total_submitted": 467521,
      "frontend_question_id": 472,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/concatenated-words",
      "questionId": "472",
      "questionFrontendId": "472",
      "questionTitle": "Concatenated Words",
      "titleSlug": "concatenated-words",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an array of strings <code>words</code> (<strong>without duplicates</strong>), return <em>all the <strong>concatenated words</strong> in the given list of</em> <code>words</code>.</p>\n\n<p>A <strong>concatenated word</strong> is defined as a string that is comprised entirely of at least two shorter words (not necessarily distinct)&nbsp;in the given array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;cat&quot;,&quot;cats&quot;,&quot;catsdogcats&quot;,&quot;dog&quot;,&quot;dogcatsdog&quot;,&quot;hippopotamuses&quot;,&quot;rat&quot;,&quot;ratcatdogcat&quot;]\n<strong>Output:</strong> [&quot;catsdogcats&quot;,&quot;dogcatsdog&quot;,&quot;ratcatdogcat&quot;]\n<strong>Explanation:</strong> &quot;catsdogcats&quot; can be concatenated by &quot;cats&quot;, &quot;dog&quot; and &quot;cats&quot;; \n&quot;dogcatsdog&quot; can be concatenated by &quot;dog&quot;, &quot;cats&quot; and &quot;dog&quot;; \n&quot;ratcatdogcat&quot; can be concatenated by &quot;rat&quot;, &quot;cat&quot;, &quot;dog&quot; and &quot;cat&quot;.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;cat&quot;,&quot;dog&quot;,&quot;catdog&quot;]\n<strong>Output:</strong> [&quot;catdog&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 30</code></li>\n\t<li><code>words[i]</code> consists of only lowercase English letters.</li>\n\t<li>All the strings of <code>words</code> are <strong>unique</strong>.</li>\n\t<li><code>1 &lt;= sum(words[i].length) &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[\"cat\",\"cats\",\"catsdogcats\",\"dog\",\"dogcatsdog\",\"hippopotamuses\",\"rat\",\"ratcatdogcat\"]\n[\"cat\",\"dog\",\"catdog\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1613",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3878,
      "dislikes": 283,
      "similarQuestions": "[{\"title\": \"Word Break II\", \"titleSlug\": \"word-break-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486202,
      "commentCount": 111,
      "topLevelCommentCount": 66
    },
    "classAndMethodDefinition": "class Solution:\n    def findAllConcatenatedWordsInADict(self, words: List[str]) -> List[str]:"
  },
  {
    "stat": {
      "question_id": 2137,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Final Value of Variable After Performing Operations",
      "question__title_slug": "final-value-of-variable-after-performing-operations",
      "question__hide": false,
      "total_acs": 417898,
      "total_submitted": 467468,
      "frontend_question_id": 2011,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/final-value-of-variable-after-performing-operations",
      "questionId": "2137",
      "questionFrontendId": "2011",
      "questionTitle": "Final Value of Variable After Performing Operations",
      "titleSlug": "final-value-of-variable-after-performing-operations",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>There is a programming language with only <strong>four</strong> operations and <strong>one</strong> variable <code>X</code>:</p>\n\n<ul>\n\t<li><code>++X</code> and <code>X++</code> <strong>increments</strong> the value of the variable <code>X</code> by <code>1</code>.</li>\n\t<li><code>--X</code> and <code>X--</code> <strong>decrements</strong> the value of the variable <code>X</code> by <code>1</code>.</li>\n</ul>\n\n<p>Initially, the value of <code>X</code> is <code>0</code>.</p>\n\n<p>Given an array of strings <code>operations</code> containing a list of operations, return <em>the <strong>final </strong>value of </em><code>X</code> <em>after performing all the operations</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> operations = [&quot;--X&quot;,&quot;X++&quot;,&quot;X++&quot;]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>&nbsp;The operations are performed as follows:\nInitially, X = 0.\n--X: X is decremented by 1, X =  0 - 1 = -1.\nX++: X is incremented by 1, X = -1 + 1 =  0.\nX++: X is incremented by 1, X =  0 + 1 =  1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> operations = [&quot;++X&quot;,&quot;++X&quot;,&quot;X++&quot;]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The operations are performed as follows:\nInitially, X = 0.\n++X: X is incremented by 1, X = 0 + 1 = 1.\n++X: X is incremented by 1, X = 1 + 1 = 2.\nX++: X is incremented by 1, X = 2 + 1 = 3.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> operations = [&quot;X++&quot;,&quot;++X&quot;,&quot;--X&quot;,&quot;X--&quot;]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>&nbsp;The operations are performed as follows:\nInitially, X = 0.\nX++: X is incremented by 1, X = 0 + 1 = 1.\n++X: X is incremented by 1, X = 1 + 1 = 2.\n--X: X is decremented by 1, X = 2 - 1 = 1.\nX--: X is decremented by 1, X = 1 - 1 = 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= operations.length &lt;= 100</code></li>\n\t<li><code>operations[i]</code> will be either <code>&quot;++X&quot;</code>, <code>&quot;X++&quot;</code>, <code>&quot;--X&quot;</code>, or <code>&quot;X--&quot;</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"--X\",\"X++\",\"X++\"]\n[\"++X\",\"++X\",\"X++\"]\n[\"X++\",\"++X\",\"--X\",\"X--\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "There are only two operations to keep track of.",
        "Use a variable to store the value after each operation."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 1614,
      "dislikes": 189,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487793,
      "commentCount": 81,
      "topLevelCommentCount": 40
    },
    "classAndMethodDefinition": "class Solution(object):\n    def finalValueAfterOperations(self, operations):"
  },
  {
    "stat": {
      "question_id": 606,
      "question__article__live": true,
      "question__article__slug": "construct-string-from-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Construct String from Binary Tree",
      "question__title_slug": "construct-string-from-binary-tree",
      "question__hide": false,
      "total_acs": 324357,
      "total_submitted": 466802,
      "frontend_question_id": 606,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/construct-string-from-binary-tree",
      "questionId": "606",
      "questionFrontendId": "606",
      "questionTitle": "Construct String from Binary Tree",
      "titleSlug": "construct-string-from-binary-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> node of a binary tree, your task is to create a string representation of the tree following a specific set of formatting rules. The representation should be based on a preorder traversal of the binary tree and must adhere to the following guidelines:</p>\n\n<ul>\n\t<li>\n\t<p><strong>Node Representation</strong>: Each node in the tree should be represented by its integer value.</p>\n\t</li>\n\t<li>\n\t<p><strong>Parentheses for Children</strong>: If a node has at least one child (either left or right), its children should be represented inside parentheses. Specifically:</p>\n\n\t<ul>\n\t\t<li>If a node has a left child, the value of the left child should be enclosed in parentheses immediately following the node&#39;s value.</li>\n\t\t<li>If a node has a right child, the value of the right child should also be enclosed in parentheses. The parentheses for the right child should follow those of the left child.</li>\n\t</ul>\n\t</li>\n\t<li>\n\t<p><strong>Omitting Empty Parentheses</strong>: Any empty parentheses pairs (i.e., <code>()</code>) should be omitted from the final string representation of the tree, with one specific exception: when a node has a right child but no left child. In such cases, you must include an empty pair of parentheses to indicate the absence of the left child. This ensures that the one-to-one mapping between the string representation and the original binary tree structure is maintained.</p>\n\n\t<p>In summary, empty parentheses pairs should be omitted when a node has only a left child or no children. However, when a node has a right child but no left child, an empty pair of parentheses must precede the representation of the right child to reflect the tree&#39;s structure accurately.</p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/03/cons1-tree.jpg\" style=\"padding: 10px; background: #fff; border-radius: .5rem;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4]\n<strong>Output:</strong> &quot;1(2(4))(3)&quot;\n<strong>Explanation:</strong> Originally, it needs to be &quot;1(2(4)())(3()())&quot;, but you need to omit all the empty parenthesis pairs. And it will be &quot;1(2(4))(3)&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/03/cons2-tree.jpg\" style=\"padding: 10px; background: #fff; border-radius: .5rem;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,null,4]\n<strong>Output:</strong> &quot;1(2()(4))(3)&quot;\n<strong>Explanation:</strong> Almost the same as the first example, except the <code>()</code> after <code>2</code> is necessary to indicate the absence of a left child for <code>2</code> and the presence of a right child.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4]\n[1,2,3,null,4]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "152",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 80,
      "dislikes": 40,
      "similarQuestions": "[{\"title\": \"Construct Binary Tree from String\", \"titleSlug\": \"construct-binary-tree-from-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Duplicate Subtrees\", \"titleSlug\": \"find-duplicate-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486331,
      "commentCount": 148,
      "topLevelCommentCount": 108
    },
    "classAndMethodDefinition": "class Solution(object):\n    def tree2str(self, t):"
  },
  {
    "stat": {
      "question_id": 2470,
      "question__article__live": true,
      "question__article__slug": "removing-stars-from-a-string",
      "question__article__has_video_solution": false,
      "question__title": "Removing Stars From a String",
      "question__title_slug": "removing-stars-from-a-string",
      "question__hide": false,
      "total_acs": 354841,
      "total_submitted": 466291,
      "frontend_question_id": 2390,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/removing-stars-from-a-string",
      "questionId": "2470",
      "questionFrontendId": "2390",
      "questionTitle": "Removing Stars From a String",
      "titleSlug": "removing-stars-from-a-string",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code>, which contains stars <code>*</code>.</p>\n\n<p>In one operation, you can:</p>\n\n<ul>\n\t<li>Choose a star in <code>s</code>.</li>\n\t<li>Remove the closest <strong>non-star</strong> character to its <strong>left</strong>, as well as remove the star itself.</li>\n</ul>\n\n<p>Return <em>the string after <strong>all</strong> stars have been removed</em>.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The input will be generated such that the operation is always possible.</li>\n\t<li>It can be shown that the resulting string will always be unique.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leet**cod*e&quot;\n<strong>Output:</strong> &quot;lecoe&quot;\n<strong>Explanation:</strong> Performing the removals from left to right:\n- The closest character to the 1<sup>st</sup> star is &#39;t&#39; in &quot;lee<strong><u>t</u></strong>**cod*e&quot;. s becomes &quot;lee*cod*e&quot;.\n- The closest character to the 2<sup>nd</sup> star is &#39;e&#39; in &quot;le<strong><u>e</u></strong>*cod*e&quot;. s becomes &quot;lecod*e&quot;.\n- The closest character to the 3<sup>rd</sup> star is &#39;d&#39; in &quot;leco<strong><u>d</u></strong>*e&quot;. s becomes &quot;lecoe&quot;.\nThere are no more stars, so we return &quot;lecoe&quot;.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;erase*****&quot;\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> The entire string is removed, so we return an empty string.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters and stars <code>*</code>.</li>\n\t<li>The operation above can be performed on <code>s</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"leet**cod*e\"\n\"erase*****\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "What data structure could we use to efficiently perform these removals?",
        "Use a stack to store the characters. Pop one character off the stack at each star. Otherwise, we push the character onto the stack."
      ],
      "solution": {
        "id": "1800",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2926,
      "dislikes": 210,
      "similarQuestions": "[{\"title\": \"Backspace String Compare\", \"titleSlug\": \"backspace-string-compare\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove All Adjacent Duplicates In String\", \"titleSlug\": \"remove-all-adjacent-duplicates-in-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2488122,
      "commentCount": 250,
      "topLevelCommentCount": 168
    },
    "classAndMethodDefinition": "class Solution(object):\n    def removeStars(self, s):"
  },
  {
    "stat": {
      "question_id": 1762,
      "question__article__live": true,
      "question__article__slug": "furthest-building-you-can-reach",
      "question__article__has_video_solution": false,
      "question__title": "Furthest Building You Can Reach",
      "question__title_slug": "furthest-building-you-can-reach",
      "question__hide": false,
      "total_acs": 232492,
      "total_submitted": 466112,
      "frontend_question_id": 1642,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/furthest-building-you-can-reach",
      "questionId": "1762",
      "questionFrontendId": "1642",
      "questionTitle": "Furthest Building You Can Reach",
      "titleSlug": "furthest-building-you-can-reach",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>heights</code> representing the heights of buildings, some <code>bricks</code>, and some <code>ladders</code>.</p>\n\n<p>You start your journey from building <code>0</code> and move to the next building by possibly using bricks or ladders.</p>\n\n<p>While moving from building <code>i</code> to building <code>i+1</code> (<strong>0-indexed</strong>),</p>\n\n<ul>\n\t<li>If the current building&#39;s height is <strong>greater than or equal</strong> to the next building&#39;s height, you do <strong>not</strong> need a ladder or bricks.</li>\n\t<li>If the current building&#39;s height is <b>less than</b> the next building&#39;s height, you can either use <strong>one ladder</strong> or <code>(h[i+1] - h[i])</code> <strong>bricks</strong>.</li>\n</ul>\n\n<p><em>Return the furthest building index (0-indexed) you can reach if you use the given ladders and bricks optimally.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/27/q4.gif\" style=\"width: 562px; height: 561px;\" />\n<pre>\n<strong>Input:</strong> heights = [4,2,7,6,9,14,12], bricks = 5, ladders = 1\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Starting at building 0, you can follow these steps:\n- Go to building 1 without using ladders nor bricks since 4 &gt;= 2.\n- Go to building 2 using 5 bricks. You must use either bricks or ladders because 2 &lt; 7.\n- Go to building 3 without using ladders nor bricks since 7 &gt;= 6.\n- Go to building 4 using your only ladder. You must use either bricks or ladders because 6 &lt; 9.\nIt is impossible to go beyond building 4 because you do not have any more bricks or ladders.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [4,12,2,7,3,18,20,3,19], bricks = 10, ladders = 2\n<strong>Output:</strong> 7\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [14,3,19,3], bricks = 17, ladders = 0\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= heights.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= heights[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>0 &lt;= bricks &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= ladders &lt;= heights.length</code></li>\n</ul>\n",
      "exampleTestcases": "[4,2,7,6,9,14,12]\n5\n1\n[4,12,2,7,3,18,20,3,19]\n10\n2\n[14,3,19,3]\n17\n0",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [
        "Assume the problem is to check whether you can reach the last building or not.",
        "You'll have to do a set of jumps, and choose for each one whether to do it using a ladder or bricks. It's always optimal to use ladders in the largest jumps.",
        "Iterate on the buildings, maintaining the largest r jumps and the sum of the remaining ones so far, and stop whenever this sum exceeds b."
      ],
      "solution": {
        "id": "1061",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5908,
      "dislikes": 141,
      "similarQuestions": "[{\"title\": \"Make the Prefix Sum Non-negative\", \"titleSlug\": \"make-the-prefix-sum-non-negative\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Building Where Alice and Bob Can Meet\", \"titleSlug\": \"find-building-where-alice-and-bob-can-meet\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487434,
      "commentCount": 309,
      "topLevelCommentCount": 148
    },
    "classAndMethodDefinition": "class Solution:\n    def furthestBuilding(self, heights: List[int], bricks: int, ladders: int) -> int:"
  },
  {
    "stat": {
      "question_id": 776,
      "question__article__live": true,
      "question__article__slug": "n-ary-tree-postorder-traversal",
      "question__article__has_video_solution": false,
      "question__title": "N-ary Tree Postorder Traversal",
      "question__title_slug": "n-ary-tree-postorder-traversal",
      "question__hide": false,
      "total_acs": 373010,
      "total_submitted": 464225,
      "frontend_question_id": 590,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/n-ary-tree-postorder-traversal",
      "questionId": "776",
      "questionFrontendId": "590",
      "questionTitle": "N-ary Tree Postorder Traversal",
      "titleSlug": "n-ary-tree-postorder-traversal",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of an n-ary tree, return <em>the postorder traversal of its nodes&#39; values</em>.</p>\n\n<p>Nary-Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"width: 100%; max-width: 300px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,3,2,4,null,5,6]\n<strong>Output:</strong> [5,6,3,2,4,1]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"width: 296px; height: 241px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>Output:</strong> [2,6,14,11,7,3,12,8,4,13,9,10,5,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>The height of the n-ary tree is less than or equal to <code>1000</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>\n",
      "exampleTestcases": "[1,null,3,2,4,null,5,6]\n[1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2407",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2679,
      "dislikes": 119,
      "similarQuestions": "[{\"title\": \"Binary Tree Postorder Traversal\", \"titleSlug\": \"binary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Level Order Traversal\", \"titleSlug\": \"n-ary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Preorder Traversal\", \"titleSlug\": \"n-ary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486488,
      "commentCount": 137,
      "topLevelCommentCount": 78
    },
    "classAndMethodDefinition": "class Solution(object):\n    def postorder(self, root):"
  },
  {
    "stat": {
      "question_id": 551,
      "question__article__live": true,
      "question__article__slug": "student-attendance-record-i",
      "question__article__has_video_solution": false,
      "question__title": "Student Attendance Record I",
      "question__title_slug": "student-attendance-record-i",
      "question__hide": false,
      "total_acs": 228593,
      "total_submitted": 463966,
      "frontend_question_id": 551,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/student-attendance-record-i",
      "questionId": "551",
      "questionFrontendId": "551",
      "questionTitle": "Student Attendance Record I",
      "titleSlug": "student-attendance-record-i",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code> representing an attendance record for a student where each character signifies whether the student was absent, late, or present on that day. The record only contains the following three characters:</p>\n\n<ul>\n\t<li><code>&#39;A&#39;</code>: Absent.</li>\n\t<li><code>&#39;L&#39;</code>: Late.</li>\n\t<li><code>&#39;P&#39;</code>: Present.</li>\n</ul>\n\n<p>The student is eligible for an attendance award if they meet <strong>both</strong> of the following criteria:</p>\n\n<ul>\n\t<li>The student was absent (<code>&#39;A&#39;</code>) for <strong>strictly</strong> fewer than 2 days <strong>total</strong>.</li>\n\t<li>The student was <strong>never</strong> late (<code>&#39;L&#39;</code>) for 3 or more <strong>consecutive</strong> days.</li>\n</ul>\n\n<p>Return <code>true</code><em> if the student is eligible for an attendance award, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;PPALLP&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The student has fewer than 2 absences and was never late 3 or more consecutive days.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;PPALLL&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The student was late 3 consecutive days in the last 3 days, so is not eligible for the award.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s[i]</code> is either <code>&#39;A&#39;</code>, <code>&#39;L&#39;</code>, or <code>&#39;P&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"PPALLP\"\n\"PPALLL\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "109",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 774,
      "dislikes": 51,
      "similarQuestions": "[{\"title\": \"Student Attendance Record II\", \"titleSlug\": \"student-attendance-record-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486280,
      "commentCount": 28,
      "topLevelCommentCount": 22
    },
    "classAndMethodDefinition": "def checkRecord(self, s):\n        return not re.match(\\'.*(LLL|A.*A).*\\', s)"
  },
  {
    "stat": {
      "question_id": 1706,
      "question__article__live": true,
      "question__article__slug": "min-cost-to-connect-all-points",
      "question__article__has_video_solution": false,
      "question__title": "Min Cost to Connect All Points",
      "question__title_slug": "min-cost-to-connect-all-points",
      "question__hide": false,
      "total_acs": 311790,
      "total_submitted": 462361,
      "frontend_question_id": 1584,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/min-cost-to-connect-all-points",
      "questionId": "1706",
      "questionFrontendId": "1584",
      "questionTitle": "Min Cost to Connect All Points",
      "titleSlug": "min-cost-to-connect-all-points",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array <code>points</code> representing integer coordinates of some points on a 2D-plane, where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code>.</p>\n\n<p>The cost of connecting two points <code>[x<sub>i</sub>, y<sub>i</sub>]</code> and <code>[x<sub>j</sub>, y<sub>j</sub>]</code> is the <strong>manhattan distance</strong> between them: <code>|x<sub>i</sub> - x<sub>j</sub>| + |y<sub>i</sub> - y<sub>j</sub>|</code>, where <code>|val|</code> denotes the absolute value of <code>val</code>.</p>\n\n<p>Return <em>the minimum cost to make all points connected.</em> All points are connected if there is <strong>exactly one</strong> simple path between any two points.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/26/d.png\" style=\"width: 214px; height: 268px;\" />\n<pre>\n<strong>Input:</strong> points = [[0,0],[2,2],[3,10],[5,2],[7,0]]\n<strong>Output:</strong> 20\n<strong>Explanation:</strong> \n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/26/c.png\" style=\"width: 214px; height: 268px;\" />\nWe can connect the points as shown above to get the minimum cost of 20.\nNotice that there is a unique path between every pair of points.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[3,12],[-2,5],[-4,1]]\n<strong>Output:</strong> 18\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= points.length &lt;= 1000</code></li>\n\t<li><code>-10<sup>6</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>6</sup></code></li>\n\t<li>All pairs <code>(x<sub>i</sub>, y<sub>i</sub>)</code> are distinct.</li>\n</ul>\n",
      "exampleTestcases": "[[0,0],[2,2],[3,10],[5,2],[7,0]]\n[[3,12],[-2,5],[-4,1]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Minimum Spanning Tree",
          "slug": "minimum-spanning-tree",
          "translatedName": null
        }
      ],
      "hints": [
        "Connect each pair of points with a weighted edge, the weight being the manhattan distance between those points.",
        "The problem is now the cost of minimum spanning tree in graph with above edges."
      ],
      "solution": {
        "id": "1314",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5089,
      "dislikes": 130,
      "similarQuestions": "[{\"title\": \"Minimum Number of Lines to Cover Points\", \"titleSlug\": \"minimum-number-of-lines-to-cover-points\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487379,
      "commentCount": 122,
      "topLevelCommentCount": 63
    },
    "classAndMethodDefinition": "def manhattan_distance(p1: List[int], p2: List[int]) -> int:\n    return abs(p1[0] - p2[0]) + abs(p1[1] - p2[1])"
  },
  {
    "stat": {
      "question_id": 1823,
      "question__article__live": true,
      "question__article__slug": "determine-if-string-halves-are-alike",
      "question__article__has_video_solution": false,
      "question__title": "Determine if String Halves Are Alike",
      "question__title_slug": "determine-if-string-halves-are-alike",
      "question__hide": false,
      "total_acs": 363207,
      "total_submitted": 461737,
      "frontend_question_id": 1704,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/determine-if-string-halves-are-alike",
      "questionId": "1823",
      "questionFrontendId": "1704",
      "questionTitle": "Determine if String Halves Are Alike",
      "titleSlug": "determine-if-string-halves-are-alike",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>s</code> of even length. Split this string into two halves of equal lengths, and let <code>a</code> be the first half and <code>b</code> be the second half.</p>\n\n<p>Two strings are <strong>alike</strong> if they have the same number of vowels (<code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, <code>&#39;u&#39;</code>, <code>&#39;A&#39;</code>, <code>&#39;E&#39;</code>, <code>&#39;I&#39;</code>, <code>&#39;O&#39;</code>, <code>&#39;U&#39;</code>). Notice that <code>s</code> contains uppercase and lowercase letters.</p>\n\n<p>Return <code>true</code><em> if </em><code>a</code><em> and </em><code>b</code><em> are <strong>alike</strong></em>. Otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;book&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> a = &quot;b<u>o</u>&quot; and b = &quot;<u>o</u>k&quot;. a has 1 vowel and b has 1 vowel. Therefore, they are alike.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;textbook&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> a = &quot;t<u>e</u>xt&quot; and b = &quot;b<u>oo</u>k&quot;. a has 1 vowel whereas b has 2. Therefore, they are not alike.\nNotice that the vowel o is counted twice.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s.length</code> is even.</li>\n\t<li><code>s</code> consists of <strong>uppercase and lowercase</strong> letters.</li>\n</ul>\n",
      "exampleTestcases": "\"book\"\n\"textbook\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [
        "Create a function that checks if a character is a vowel, either uppercase or lowercase."
      ],
      "solution": {
        "id": "1095",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2252,
      "dislikes": 124,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487495,
      "commentCount": 154,
      "topLevelCommentCount": 99
    },
    "classAndMethodDefinition": "class Solution:\n    def halvesAreAlike(self, s: str) -> bool:"
  },
  {
    "stat": {
      "question_id": 945,
      "question__article__live": true,
      "question__article__slug": "snakes-and-ladders",
      "question__article__has_video_solution": false,
      "question__title": "Snakes and Ladders",
      "question__title_slug": "snakes-and-ladders",
      "question__hide": false,
      "total_acs": 202425,
      "total_submitted": 461196,
      "frontend_question_id": 909,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/snakes-and-ladders",
      "questionId": "945",
      "questionFrontendId": "909",
      "questionTitle": "Snakes and Ladders",
      "titleSlug": "snakes-and-ladders",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>n x n</code> integer matrix <code>board</code> where the cells are labeled from <code>1</code> to <code>n<sup>2</sup></code> in a <a href=\"https://en.wikipedia.org/wiki/Boustrophedon\" target=\"_blank\"><strong>Boustrophedon style</strong></a> starting from the bottom left of the board (i.e. <code>board[n - 1][0]</code>) and alternating direction each row.</p>\n\n<p>You start on square <code>1</code> of the board. In each move, starting from square <code>curr</code>, do the following:</p>\n\n<ul>\n\t<li>Choose a destination square <code>next</code> with a label in the range <code>[curr + 1, min(curr + 6, n<sup>2</sup>)]</code>.\n\n\t<ul>\n\t\t<li>This choice simulates the result of a standard <strong>6-sided die roll</strong>: i.e., there are always at most 6 destinations, regardless of the size of the board.</li>\n\t</ul>\n\t</li>\n\t<li>If <code>next</code> has a snake or ladder, you <strong>must</strong> move to the destination of that snake or ladder. Otherwise, you move to <code>next</code>.</li>\n\t<li>The game ends when you reach the square <code>n<sup>2</sup></code>.</li>\n</ul>\n\n<p>A board square on row <code>r</code> and column <code>c</code> has a snake or ladder if <code>board[r][c] != -1</code>. The destination of that snake or ladder is <code>board[r][c]</code>. Squares <code>1</code> and <code>n<sup>2</sup></code> are not the starting points of any snake or ladder.</p>\n\n<p>Note that you only take a snake or ladder at most once per move. If the destination to a snake or ladder is the start of another snake or ladder, you do <strong>not</strong> follow the subsequent&nbsp;snake or ladder.</p>\n\n<ul>\n\t<li>For example, suppose the board is <code>[[-1,4],[-1,3]]</code>, and on the first move, your destination square is <code>2</code>. You follow the ladder to square <code>3</code>, but do <strong>not</strong> follow the subsequent ladder to <code>4</code>.</li>\n</ul>\n\n<p>Return <em>the least number of moves required to reach the square </em><code>n<sup>2</sup></code><em>. If it is not possible to reach the square, return </em><code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/09/23/snakes.png\" style=\"width: 500px; height: 394px;\" />\n<pre>\n<strong>Input:</strong> board = [[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,35,-1,-1,13,-1],[-1,-1,-1,-1,-1,-1],[-1,15,-1,-1,-1,-1]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> \nIn the beginning, you start at square 1 (at row 5, column 0).\nYou decide to move to square 2 and must take the ladder to square 15.\nYou then decide to move to square 17 and must take the snake to square 13.\nYou then decide to move to square 14 and must take the ladder to square 35.\nYou then decide to move to square 36, ending the game.\nThis is the lowest possible number of moves to reach the last square, so return 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> board = [[-1,-1],[-1,3]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == board.length == board[i].length</code></li>\n\t<li><code>2 &lt;= n &lt;= 20</code></li>\n\t<li><code>board[i][j]</code> is either <code>-1</code> or in the range <code>[1, n<sup>2</sup>]</code>.</li>\n\t<li>The squares labeled <code>1</code> and <code>n<sup>2</sup></code> are not the starting points of any snake or ladder.</li>\n</ul>\n",
      "exampleTestcases": "[[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,35,-1,-1,13,-1],[-1,-1,-1,-1,-1,-1],[-1,15,-1,-1,-1,-1]]\n[[-1,-1],[-1,3]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1642",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2924,
      "dislikes": 1046,
      "similarQuestions": "[{\"title\": \"Most Profitable Path in a Tree\", \"titleSlug\": \"most-profitable-path-in-a-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486652,
      "commentCount": 306,
      "topLevelCommentCount": 179
    },
    "classAndMethodDefinition": "def snakesAndLadders(self, board: List[List[int]]) -> int:\n        n = len(board)"
  },
  {
    "stat": {
      "question_id": 808,
      "question__article__live": true,
      "question__article__slug": "number-of-matching-subsequences",
      "question__article__has_video_solution": false,
      "question__title": "Number of Matching Subsequences",
      "question__title_slug": "number-of-matching-subsequences",
      "question__hide": false,
      "total_acs": 234085,
      "total_submitted": 460368,
      "frontend_question_id": 792,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-matching-subsequences",
      "questionId": "808",
      "questionFrontendId": "792",
      "questionTitle": "Number of Matching Subsequences",
      "titleSlug": "number-of-matching-subsequences",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code> and an array of strings <code>words</code>, return <em>the number of</em> <code>words[i]</code> <em>that is a subsequence of</em> <code>s</code>.</p>\n\n<p>A <strong>subsequence</strong> of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.</p>\n\n<ul>\n\t<li>For example, <code>&quot;ace&quot;</code> is a subsequence of <code>&quot;abcde&quot;</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcde&quot;, words = [&quot;a&quot;,&quot;bb&quot;,&quot;acd&quot;,&quot;ace&quot;]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> There are three strings in words that are a subsequence of s: &quot;a&quot;, &quot;acd&quot;, &quot;ace&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;dsahjpjauf&quot;, words = [&quot;ahjpjau&quot;,&quot;ja&quot;,&quot;ahbwzgqnuk&quot;,&quot;tnmlanowax&quot;]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= words.length &lt;= 5000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 50</code></li>\n\t<li><code>s</code> and <code>words[i]</code> consist of only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abcde\"\n[\"a\",\"bb\",\"acd\",\"ace\"]\n\"dsahjpjauf\"\n[\"ahjpjau\",\"ja\",\"ahbwzgqnuk\",\"tnmlanowax\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "423",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5508,
      "dislikes": 234,
      "similarQuestions": "[{\"title\": \"Is Subsequence\", \"titleSlug\": \"is-subsequence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Shortest Way to Form String\", \"titleSlug\": \"shortest-way-to-form-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Vowel Substrings of a String\", \"titleSlug\": \"count-vowel-substrings-of-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486520,
      "commentCount": 36,
      "topLevelCommentCount": 20
    },
    "classAndMethodDefinition": "def numMatchingSubseq(self, s: str, words: List[str]) -> int:\n        def issubseq(s,t):"
  },
  {
    "stat": {
      "question_id": 961,
      "question__article__live": false,
      "question__article__slug": "long-pressed-name",
      "question__article__has_video_solution": false,
      "question__title": "Long Pressed Name",
      "question__title_slug": "long-pressed-name",
      "question__hide": false,
      "total_acs": 148455,
      "total_submitted": 459585,
      "frontend_question_id": 925,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/long-pressed-name",
      "questionId": "961",
      "questionFrontendId": "925",
      "questionTitle": "Long Pressed Name",
      "titleSlug": "long-pressed-name",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Your friend is typing his <code>name</code> into a keyboard. Sometimes, when typing a character <code>c</code>, the key might get <em>long pressed</em>, and the character will be typed 1 or more times.</p>\n\n<p>You examine the <code>typed</code> characters of the keyboard. Return <code>True</code> if it is possible that it was your friends name, with some characters (possibly none) being long pressed.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> name = &quot;alex&quot;, typed = &quot;aaleex&quot;\n<strong>Output:</strong> true\n<strong>Explanation: </strong>&#39;a&#39; and &#39;e&#39; in &#39;alex&#39; were long pressed.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> name = &quot;saeed&quot;, typed = &quot;ssaaedd&quot;\n<strong>Output:</strong> false\n<strong>Explanation: </strong>&#39;e&#39; must have been pressed twice, but it was not in the typed output.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= name.length, typed.length &lt;= 1000</code></li>\n\t<li><code>name</code> and <code>typed</code> consist of only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"alex\"\n\"aaleex\"\n\"saeed\"\n\"ssaaedd\"",
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": null,
      "companyTagStats": null,
      "likes": 2440,
      "dislikes": 382,
      "similarQuestions": "[{\"title\": \"Maximum Matching of Players With Trainers\", \"titleSlug\": \"maximum-matching-of-players-with-trainers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486668,
      "commentCount": 74,
      "topLevelCommentCount": 56
    },
    "classAndMethodDefinition": "def isLongPressedName(self, name, typed):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 2032,
      "question__article__live": true,
      "question__article__slug": "largest-odd-number-in-string",
      "question__article__has_video_solution": false,
      "question__title": "Largest Odd Number in String",
      "question__title_slug": "largest-odd-number-in-string",
      "question__hide": false,
      "total_acs": 291047,
      "total_submitted": 457176,
      "frontend_question_id": 1903,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/largest-odd-number-in-string",
      "questionId": "2032",
      "questionFrontendId": "1903",
      "questionTitle": "Largest Odd Number in String",
      "titleSlug": "largest-odd-number-in-string",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given a string <code>num</code>, representing a large integer. Return <em>the <strong>largest-valued odd</strong> integer (as a string) that is a <strong>non-empty substring</strong> of </em><code>num</code><em>, or an empty string </em><code>&quot;&quot;</code><em> if no odd integer exists</em>.</p>\n\n<p>A <strong>substring</strong> is a contiguous sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;52&quot;\n<strong>Output:</strong> &quot;5&quot;\n<strong>Explanation:</strong> The only non-empty substrings are &quot;5&quot;, &quot;2&quot;, and &quot;52&quot;. &quot;5&quot; is the only odd number.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;4206&quot;\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> There are no odd numbers in &quot;4206&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;35427&quot;\n<strong>Output:</strong> &quot;35427&quot;\n<strong>Explanation:</strong> &quot;35427&quot; is already an odd number.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>num</code> only consists of digits and does not contain any leading zeros.</li>\n</ul>\n",
      "exampleTestcases": "\"52\"\n\"4206\"\n\"35427\"",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [
        "In what order should you iterate through the digits?",
        "If an odd number exists, where must the number start from?"
      ],
      "solution": {
        "id": "2193",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2075,
      "dislikes": 126,
      "similarQuestions": "[{\"title\": \"Largest 3-Same-Digit Number in String\", \"titleSlug\": \"largest-3-same-digit-number-in-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487688,
      "commentCount": 166,
      "topLevelCommentCount": 118
    },
    "classAndMethodDefinition": "class Solution(object):\n    def largestOddNumber(self, num):"
  },
  {
    "stat": {
      "question_id": 1677,
      "question__article__live": true,
      "question__article__slug": "matrix-diagonal-sum",
      "question__article__has_video_solution": false,
      "question__title": "Matrix Diagonal Sum",
      "question__title_slug": "matrix-diagonal-sum",
      "question__hide": false,
      "total_acs": 379214,
      "total_submitted": 455814,
      "frontend_question_id": 1572,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/matrix-diagonal-sum",
      "questionId": "1677",
      "questionFrontendId": "1572",
      "questionTitle": "Matrix Diagonal Sum",
      "titleSlug": "matrix-diagonal-sum",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a&nbsp;square&nbsp;matrix&nbsp;<code>mat</code>, return the sum of the matrix diagonals.</p>\n\n<p>Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/14/sample_1911.png\" style=\"width: 336px; height: 174px;\" />\n<pre>\n<strong>Input:</strong> mat = [[<strong>1</strong>,2,<strong>3</strong>],\n&nbsp;             [4,<strong>5</strong>,6],\n&nbsp;             [<strong>7</strong>,8,<strong>9</strong>]]\n<strong>Output:</strong> 25\n<strong>Explanation: </strong>Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25\nNotice that element mat[1][1] = 5 is counted only once.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[<strong>1</strong>,1,1,<strong>1</strong>],\n&nbsp;             [1,<strong>1</strong>,<strong>1</strong>,1],\n&nbsp;             [1,<strong>1</strong>,<strong>1</strong>,1],\n&nbsp;             [<strong>1</strong>,1,1,<strong>1</strong>]]\n<strong>Output:</strong> 8\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[<strong>5</strong>]]\n<strong>Output:</strong> 5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == mat.length == mat[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= mat[i][j] &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2,3],[4,5,6],[7,8,9]]\n[[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1]]\n[[5]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [
        "There will be overlap of elements in the primary and secondary diagonals if and only if the length of the matrix is odd, which is at the center."
      ],
      "solution": {
        "id": "1829",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3496,
      "dislikes": 55,
      "similarQuestions": "[{\"title\": \"Check if Every Row and Column Contains All Numbers\", \"titleSlug\": \"check-if-every-row-and-column-contains-all-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Check if Matrix Is X-Matrix\", \"titleSlug\": \"check-if-matrix-is-x-matrix\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487350,
      "commentCount": 59,
      "topLevelCommentCount": 44
    },
    "classAndMethodDefinition": "def diagonalSum(self, mat: List[List[int]]) -> int:\n        "
  },
  {
    "stat": {
      "question_id": 1586,
      "question__article__live": true,
      "question__article__slug": "longest-subarray-of-1s-after-deleting-one-element",
      "question__article__has_video_solution": false,
      "question__title": "Longest Subarray of 1's After Deleting One Element",
      "question__title_slug": "longest-subarray-of-1s-after-deleting-one-element",
      "question__hide": false,
      "total_acs": 309145,
      "total_submitted": 455748,
      "frontend_question_id": 1493,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element",
      "questionId": "1586",
      "questionFrontendId": "1493",
      "questionTitle": "Longest Subarray of 1's After Deleting One Element",
      "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a binary array <code>nums</code>, you should delete one element from it.</p>\n\n<p>Return <em>the size of the longest non-empty subarray containing only </em><code>1</code><em>&#39;s in the resulting array</em>. Return <code>0</code> if there is no such subarray.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,0,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> After deleting the number in position 2, [1,1,1] contains 3 numbers with value of 1&#39;s.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,1,1,0,1,1,0,1]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> After deleting the number in position 4, [0,1,1,1,1,1,0,1] longest subarray with value of 1&#39;s is [1,1,1,1,1].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You must delete one element.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\n</ul>\n",
      "exampleTestcases": "[1,1,0,1]\n[0,1,1,1,0,1,1,0,1]\n[1,1,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [
        "Maintain a sliding window where there is at most one zero on it."
      ],
      "solution": {
        "id": "1910",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3986,
      "dislikes": 83,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487277,
      "commentCount": 142,
      "topLevelCommentCount": 67
    },
    "classAndMethodDefinition": "class Solution:\n    def longestSubarray(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 669,
      "question__article__live": true,
      "question__article__slug": "trim-a-binary-search-tree",
      "question__article__has_video_solution": true,
      "question__title": "Trim a Binary Search Tree",
      "question__title_slug": "trim-a-binary-search-tree",
      "question__hide": false,
      "total_acs": 301612,
      "total_submitted": 455017,
      "frontend_question_id": 669,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/trim-a-binary-search-tree",
      "questionId": "669",
      "questionFrontendId": "669",
      "questionTitle": "Trim a Binary Search Tree",
      "titleSlug": "trim-a-binary-search-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary search tree and the lowest and highest boundaries as <code>low</code> and <code>high</code>, trim the tree so that all its elements lies in <code>[low, high]</code>. Trimming the tree should <strong>not</strong> change the relative structure of the elements that will remain in the tree (i.e., any node&#39;s descendant should remain a descendant). It can be proven that there is a <strong>unique answer</strong>.</p>\n\n<p>Return <em>the root of the trimmed binary search tree</em>. Note that the root may change depending on the given bounds.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/09/trim1.jpg\" style=\"width: 450px; height: 126px;\" />\n<pre>\n<strong>Input:</strong> root = [1,0,2], low = 1, high = 2\n<strong>Output:</strong> [1,null,2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/09/trim2.jpg\" style=\"width: 450px; height: 277px;\" />\n<pre>\n<strong>Input:</strong> root = [3,0,4,null,2,null,null,1], low = 1, high = 3\n<strong>Output:</strong> [3,2,null,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>The value of each node in the tree is <strong>unique</strong>.</li>\n\t<li><code>root</code> is guaranteed to be a valid binary search tree.</li>\n\t<li><code>0 &lt;= low &lt;= high &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,0,2]\n1\n2\n[3,0,4,null,2,null,null,1]\n1\n3",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "242",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5863,
      "dislikes": 260,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486392,
      "commentCount": 36,
      "topLevelCommentCount": 25
    },
    "classAndMethodDefinition": "def trimBST(self, root: Optional[TreeNode], low: int, high: int) -> Optional[TreeNode]:\n\\t\\t\\t\\tif(root == None) : "
  },
  {
    "stat": {
      "question_id": 1217,
      "question__article__live": true,
      "question__article__slug": "relative-sort-array",
      "question__article__has_video_solution": false,
      "question__title": "Relative Sort Array",
      "question__title_slug": "relative-sort-array",
      "question__hide": false,
      "total_acs": 340340,
      "total_submitted": 454981,
      "frontend_question_id": 1122,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/relative-sort-array",
      "questionId": "1217",
      "questionFrontendId": "1122",
      "questionTitle": "Relative Sort Array",
      "titleSlug": "relative-sort-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two arrays <code>arr1</code> and <code>arr2</code>, the elements of <code>arr2</code> are distinct, and all elements in <code>arr2</code> are also in <code>arr1</code>.</p>\n\n<p>Sort the elements of <code>arr1</code> such that the relative ordering of items in <code>arr1</code> are the same as in <code>arr2</code>. Elements that do not appear in <code>arr2</code> should be placed at the end of <code>arr1</code> in <strong>ascending</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]\n<strong>Output:</strong> [2,2,2,1,4,3,3,9,6,7,19]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [28,6,22,8,44,17], arr2 = [22,28,8,6]\n<strong>Output:</strong> [22,28,8,6,17,44]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr1.length, arr2.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= arr1[i], arr2[i] &lt;= 1000</code></li>\n\t<li>All the elements of <code>arr2</code> are <strong>distinct</strong>.</li>\n\t<li>Each&nbsp;<code>arr2[i]</code> is in <code>arr1</code>.</li>\n</ul>\n",
      "exampleTestcases": "[2,3,1,3,2,4,6,7,9,2,19]\n[2,1,4,3,9,6]\n[28,6,22,8,44,17]\n[22,28,8,6]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort",
          "translatedName": null
        }
      ],
      "hints": [
        "Using a hashmap, we can map the values of arr2 to their position in arr2.",
        "After, we can use a custom sorting function."
      ],
      "solution": {
        "id": "2339",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3165,
      "dislikes": 185,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486916,
      "commentCount": 281,
      "topLevelCommentCount": 168
    },
    "classAndMethodDefinition": "def relativeSortArray(self, arr1: List[int], arr2: List[int]) -> List[int]:\n        ans, cnt = [], collections.Counter(arr1)         # Count each number in arr1"
  },
  {
    "stat": {
      "question_id": 652,
      "question__article__live": true,
      "question__article__slug": "find-duplicate-subtrees",
      "question__article__has_video_solution": false,
      "question__title": "Find Duplicate Subtrees",
      "question__title_slug": "find-duplicate-subtrees",
      "question__hide": false,
      "total_acs": 271012,
      "total_submitted": 454647,
      "frontend_question_id": 652,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-duplicate-subtrees",
      "questionId": "652",
      "questionFrontendId": "652",
      "questionTitle": "Find Duplicate Subtrees",
      "titleSlug": "find-duplicate-subtrees",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code>&nbsp;of a binary tree, return all <strong>duplicate subtrees</strong>.</p>\n\n<p>For each kind of duplicate subtrees, you only need to return the root node of any <b>one</b> of them.</p>\n\n<p>Two trees are <strong>duplicate</strong> if they have the <strong>same structure</strong> with the <strong>same node values</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/16/e1.jpg\" style=\"width: 450px; height: 354px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,null,2,4,null,null,4]\n<strong>Output:</strong> [[2,4],[4]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/16/e2.jpg\" style=\"width: 321px; height: 201px;\" />\n<pre>\n<strong>Input:</strong> root = [2,1,1]\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/16/e33.jpg\" style=\"width: 450px; height: 303px;\" />\n<pre>\n<strong>Input:</strong> root = [2,2,2,3,null,3,null]\n<strong>Output:</strong> [[2,3],[3]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the tree will be in the range <code>[1, 5000]</code></li>\n\t<li><code>-200 &lt;= Node.val &lt;= 200</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,null,2,4,null,null,4]\n[2,1,1]\n[2,2,2,3,null,3,null]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1677",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5851,
      "dislikes": 476,
      "similarQuestions": "[{\"title\": \"Serialize and Deserialize Binary Tree\", \"titleSlug\": \"serialize-and-deserialize-binary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize BST\", \"titleSlug\": \"serialize-and-deserialize-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Construct String from Binary Tree\", \"titleSlug\": \"construct-string-from-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Duplicate Folders in System\", \"titleSlug\": \"delete-duplicate-folders-in-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486375,
      "commentCount": 95,
      "topLevelCommentCount": 59
    },
    "classAndMethodDefinition": "def serialization(node, path):\n\\tif node is None: return \\'#\\'"
  },
  {
    "stat": {
      "question_id": 1770,
      "question__article__live": true,
      "question__article__slug": "minimum-deletions-to-make-character-frequencies-unique",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Deletions to Make Character Frequencies Unique",
      "question__title_slug": "minimum-deletions-to-make-character-frequencies-unique",
      "question__hide": false,
      "total_acs": 277895,
      "total_submitted": 453597,
      "frontend_question_id": 1647,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-deletions-to-make-character-frequencies-unique",
      "questionId": "1770",
      "questionFrontendId": "1647",
      "questionTitle": "Minimum Deletions to Make Character Frequencies Unique",
      "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>A string <code>s</code> is called <strong>good</strong> if there are no two different characters in <code>s</code> that have the same <strong>frequency</strong>.</p>\n\n<p>Given a string <code>s</code>, return<em> the <strong>minimum</strong> number of characters you need to delete to make </em><code>s</code><em> <strong>good</strong>.</em></p>\n\n<p>The <strong>frequency</strong> of a character in a string is the number of times it appears in the string. For example, in the string <code>&quot;aab&quot;</code>, the <strong>frequency</strong> of <code>&#39;a&#39;</code> is <code>2</code>, while the <strong>frequency</strong> of <code>&#39;b&#39;</code> is <code>1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aab&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> <code>s</code> is already good.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaabbbcc&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You can delete two &#39;b&#39;s resulting in the good string &quot;aaabcc&quot;.\nAnother way it to delete one &#39;b&#39; and one &#39;c&#39; resulting in the good string &quot;aaabbc&quot;.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ceabaacb&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You can delete both &#39;c&#39;s resulting in the good string &quot;eabaab&quot;.\nNote that we only care about characters that are still in the string at the end (i.e. frequency of 0 is ignored).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code>&nbsp;contains only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"aab\"\n\"aaabbbcc\"\n\"ceabaacb\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "As we can only delete characters, if we have multiple characters having the same frequency, we must decrease all the frequencies of them, except one.",
        "Sort the alphabet characters by their frequencies non-increasingly.",
        "Iterate on the alphabet characters, keep decreasing the frequency of the current character until it reaches a value that has not appeared before."
      ],
      "solution": {
        "id": "1315",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4937,
      "dislikes": 73,
      "similarQuestions": "[{\"title\": \"Minimum Deletions to Make Array Beautiful\", \"titleSlug\": \"minimum-deletions-to-make-array-beautiful\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Removing Minimum and Maximum From Array\", \"titleSlug\": \"removing-minimum-and-maximum-from-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Remove Letter To Equalize Frequency\", \"titleSlug\": \"remove-letter-to-equalize-frequency\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Deletions to Make String K-Special\", \"titleSlug\": \"minimum-deletions-to-make-string-k-special\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487442,
      "commentCount": 78,
      "topLevelCommentCount": 40
    },
    "classAndMethodDefinition": "class Solution:\n    def minDeletions(self, s: str) -> int:"
  },
  {
    "stat": {
      "question_id": 983,
      "question__article__live": true,
      "question__article__slug": "validate-stack-sequences",
      "question__article__has_video_solution": false,
      "question__title": "Validate Stack Sequences",
      "question__title_slug": "validate-stack-sequences",
      "question__hide": false,
      "total_acs": 315374,
      "total_submitted": 453391,
      "frontend_question_id": 946,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/validate-stack-sequences",
      "questionId": "983",
      "questionFrontendId": "946",
      "questionTitle": "Validate Stack Sequences",
      "titleSlug": "validate-stack-sequences",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two integer arrays <code>pushed</code> and <code>popped</code> each with distinct values, return <code>true</code><em> if this could have been the result of a sequence of push and pop operations on an initially empty stack, or </em><code>false</code><em> otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> pushed = [1,2,3,4,5], popped = [4,5,3,2,1]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We might do the following sequence:\npush(1), push(2), push(3), push(4),\npop() -&gt; 4,\npush(5),\npop() -&gt; 5, pop() -&gt; 3, pop() -&gt; 2, pop() -&gt; 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> pushed = [1,2,3,4,5], popped = [4,3,5,1,2]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> 1 cannot be popped before 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= pushed.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= pushed[i] &lt;= 1000</code></li>\n\t<li>All the elements of <code>pushed</code> are <strong>unique</strong>.</li>\n\t<li><code>popped.length == pushed.length</code></li>\n\t<li><code>popped</code> is a permutation of <code>pushed</code>.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5]\n[4,5,3,2,1]\n[1,2,3,4,5]\n[4,3,5,1,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "623",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5919,
      "dislikes": 122,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486689,
      "commentCount": 82,
      "topLevelCommentCount": 40
    },
    "classAndMethodDefinition": "class Solution:\n    def validateStackSequences(self, pushed, popped):"
  },
  {
    "stat": {
      "question_id": 687,
      "question__article__live": true,
      "question__article__slug": "longest-univalue-path",
      "question__article__has_video_solution": false,
      "question__title": "Longest Univalue Path",
      "question__title_slug": "longest-univalue-path",
      "question__hide": false,
      "total_acs": 188909,
      "total_submitted": 451766,
      "frontend_question_id": 687,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-univalue-path",
      "questionId": "687",
      "questionFrontendId": "687",
      "questionTitle": "Longest Univalue Path",
      "titleSlug": "longest-univalue-path",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, return <em>the length of the longest path, where each node in the path has the same value</em>. This path may or may not pass through the root.</p>\n\n<p><strong>The length of the path</strong> between two nodes is represented by the number of edges between them.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/ex1.jpg\" style=\"width: 450px; height: 238px;\" />\n<pre>\n<strong>Input:</strong> root = [5,4,5,1,1,null,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The shown image shows that the longest path of the same value (i.e. 5).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/ex2.jpg\" style=\"width: 450px; height: 238px;\" />\n<pre>\n<strong>Input:</strong> root = [1,4,5,4,4,null,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The shown image shows that the longest path of the same value (i.e. 4).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n\t<li>The depth of the tree will not exceed <code>1000</code>.</li>\n</ul>\n",
      "exampleTestcases": "[5,4,5,1,1,null,5]\n[1,4,5,4,4,null,5]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2196",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4253,
      "dislikes": 673,
      "similarQuestions": "[{\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Univalue Subtrees\", \"titleSlug\": \"count-univalue-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum III\", \"titleSlug\": \"path-sum-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Path With Different Adjacent Characters\", \"titleSlug\": \"longest-path-with-different-adjacent-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486410,
      "commentCount": 38,
      "topLevelCommentCount": 26
    },
    "classAndMethodDefinition": "def longestUnivaluePath(self, root: TreeNode) -> int:\n        if not root: return 0"
  },
  {
    "stat": {
      "question_id": 1116,
      "question__article__live": true,
      "question__article__slug": "maximum-level-sum-of-a-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Level Sum of a Binary Tree",
      "question__title_slug": "maximum-level-sum-of-a-binary-tree",
      "question__hide": false,
      "total_acs": 303044,
      "total_submitted": 451200,
      "frontend_question_id": 1161,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",
      "questionId": "1116",
      "questionFrontendId": "1161",
      "questionTitle": "Maximum Level Sum of a Binary Tree",
      "titleSlug": "maximum-level-sum-of-a-binary-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, the level of its root is <code>1</code>, the level of its children is <code>2</code>, and so on.</p>\n\n<p>Return the <strong>smallest</strong> level <code>x</code> such that the sum of all the values of nodes at level <code>x</code> is <strong>maximal</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/03/capture.JPG\" style=\"width: 200px; height: 175px;\" />\n<pre>\n<strong>Input:</strong> root = [1,7,0,7,-8,null,null]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>\nLevel 1 sum = 1.\nLevel 2 sum = 7 + 0 = 7.\nLevel 3 sum = 7 + -8 = -1.\nSo we return the level with the maximum sum which is level 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [989,null,10250,98693,-89388,null,null,null,-32127]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,7,0,7,-8,null,null]\n[989,null,10250,98693,-89388,null,null,null,-32127]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [
        "Calculate the sum for each level then find the level with the maximum sum.",
        "How can you traverse the tree ?",
        "How can you sum up the values for every level ?",
        "Use DFS or BFS to traverse the tree keeping the level of each node, and sum up those values with a map or a frequency array."
      ],
      "solution": {
        "id": "1853",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3545,
      "dislikes": 98,
      "similarQuestions": "[{\"title\": \"Kth Largest Sum in a Binary Tree\", \"titleSlug\": \"kth-largest-sum-in-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cousins in Binary Tree II\", \"titleSlug\": \"cousins-in-binary-tree-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486816,
      "commentCount": 115,
      "topLevelCommentCount": 67
    },
    "classAndMethodDefinition": "def maxLevelSum(self, root: TreeNode) -> int:\n        max, level, maxLevel = -float(\\'inf\\'), 0, 0"
  },
  {
    "stat": {
      "question_id": 795,
      "question__article__live": true,
      "question__article__slug": "k-th-symbol-in-grammar",
      "question__article__has_video_solution": false,
      "question__title": "K-th Symbol in Grammar",
      "question__title_slug": "k-th-symbol-in-grammar",
      "question__hide": false,
      "total_acs": 210261,
      "total_submitted": 449594,
      "frontend_question_id": 779,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/k-th-symbol-in-grammar",
      "questionId": "795",
      "questionFrontendId": "779",
      "questionTitle": "K-th Symbol in Grammar",
      "titleSlug": "k-th-symbol-in-grammar",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>We build a table of <code>n</code> rows (<strong>1-indexed</strong>). We start by writing <code>0</code> in the <code>1<sup>st</sup></code> row. Now in every subsequent row, we look at the previous row and replace each occurrence of <code>0</code> with <code>01</code>, and each occurrence of <code>1</code> with <code>10</code>.</p>\n\n<ul>\n\t<li>For example, for <code>n = 3</code>, the <code>1<sup>st</sup></code> row is <code>0</code>, the <code>2<sup>nd</sup></code> row is <code>01</code>, and the <code>3<sup>rd</sup></code> row is <code>0110</code>.</li>\n</ul>\n\n<p>Given two integer <code>n</code> and <code>k</code>, return the <code>k<sup>th</sup></code> (<strong>1-indexed</strong>) symbol in the <code>n<sup>th</sup></code> row of a table of <code>n</code> rows.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, k = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> row 1: <u>0</u>\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, k = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> \nrow 1: 0\nrow 2: <u>0</u>1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, k = 2\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> \nrow 1: 0\nrow 2: 0<u>1</u>\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 30</code></li>\n\t<li><code>1 &lt;= k &lt;= 2<sup>n - 1</sup></code></li>\n</ul>\n",
      "exampleTestcases": "1\n1\n2\n1\n2\n2",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        }
      ],
      "hints": [
        "Try to represent the current (N, K) in terms of some (N-1, prevK).  What is prevK ?"
      ],
      "solution": {
        "id": "2086",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3806,
      "dislikes": 397,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486507,
      "commentCount": 119,
      "topLevelCommentCount": 77
    },
    "classAndMethodDefinition": "class Solution:\n    def kthGrammar(self, n, k):"
  },
  {
    "stat": {
      "question_id": 764,
      "question__article__live": true,
      "question__article__slug": "n-ary-tree-level-order-traversal",
      "question__article__has_video_solution": false,
      "question__title": "N-ary Tree Level Order Traversal",
      "question__title_slug": "n-ary-tree-level-order-traversal",
      "question__hide": false,
      "total_acs": 316386,
      "total_submitted": 445804,
      "frontend_question_id": 429,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/n-ary-tree-level-order-traversal",
      "questionId": "764",
      "questionFrontendId": "429",
      "questionTitle": "N-ary Tree Level Order Traversal",
      "titleSlug": "n-ary-tree-level-order-traversal",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an n-ary tree, return the <em>level order</em> traversal of its nodes&#39; values.</p>\n\n<p><em>Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"width: 100%; max-width: 300px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,3,2,4,null,5,6]\n<strong>Output:</strong> [[1],[3,2,4],[5,6]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"width: 296px; height: 241px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>Output:</strong> [[1],[2,3,4,5],[6,7,8,9,10],[11,12,13],[14]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The height of the n-ary tree is less than or equal to <code>1000</code></li>\n\t<li>The total number of nodes is between <code>[0, 10<sup>4</sup>]</code></li>\n</ul>\n",
      "exampleTestcases": "[1,null,3,2,4,null,5,6]\n[1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "816",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3637,
      "dislikes": 137,
      "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Preorder Traversal\", \"titleSlug\": \"n-ary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Postorder Traversal\", \"titleSlug\": \"n-ary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"The Time When the Network Becomes Idle\", \"titleSlug\": \"the-time-when-the-network-becomes-idle\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486476,
      "commentCount": 22,
      "topLevelCommentCount": 14
    },
    "classAndMethodDefinition": "def levelOrder(self, root: \\'Node\\') -> List[List[int]]:\n        # the total number of nodes is between [0, 10 ^ 4]"
  },
  {
    "stat": {
      "question_id": 671,
      "question__article__live": false,
      "question__article__slug": "second-minimum-node-in-a-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Second Minimum Node In a Binary Tree",
      "question__title_slug": "second-minimum-node-in-a-binary-tree",
      "question__hide": false,
      "total_acs": 199290,
      "total_submitted": 445657,
      "frontend_question_id": 671,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",
      "questionId": "671",
      "questionFrontendId": "671",
      "questionTitle": "Second Minimum Node In a Binary Tree",
      "titleSlug": "second-minimum-node-in-a-binary-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly <code>two</code> or <code>zero</code> sub-node. If the node has two sub-nodes, then this node&#39;s value is the smaller value among its two sub-nodes. More formally, the property&nbsp;<code>root.val = min(root.left.val, root.right.val)</code>&nbsp;always holds.</p>\n\n<p>Given such a binary tree, you need to output the <b>second minimum</b> value in the set made of all the nodes&#39; value in the whole tree.</p>\n\n<p>If no such second minimum value exists, output -1 instead.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/15/smbt1.jpg\" style=\"width: 431px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [2,2,5,null,null,5,7]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The smallest value is 2, the second smallest value is 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/15/smbt2.jpg\" style=\"width: 321px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> root = [2,2,2]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> The smallest value is 2, but there isn&#39;t any second smallest value.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 25]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>root.val == min(root.left.val, root.right.val)</code>&nbsp;for each internal node of the tree.</li>\n</ul>\n",
      "exampleTestcases": "[2,2,5,null,null,5,7]\n[2,2,2]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": null,
      "companyTagStats": null,
      "likes": 1862,
      "dislikes": 1880,
      "similarQuestions": "[{\"title\": \"Kth Smallest Element in a BST\", \"titleSlug\": \"kth-smallest-element-in-a-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486394,
      "commentCount": 50,
      "topLevelCommentCount": 34
    },
    "classAndMethodDefinition": "def __init__(self, val=0, left=None, right=None):\n#         self.val = val"
  },
  {
    "stat": {
      "question_id": 474,
      "question__article__live": true,
      "question__article__slug": "ones-and-zeroes",
      "question__article__has_video_solution": false,
      "question__title": "Ones and Zeroes",
      "question__title_slug": "ones-and-zeroes",
      "question__hide": false,
      "total_acs": 213516,
      "total_submitted": 445460,
      "frontend_question_id": 474,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/ones-and-zeroes",
      "questionId": "474",
      "questionFrontendId": "474",
      "questionTitle": "Ones and Zeroes",
      "titleSlug": "ones-and-zeroes",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of binary strings <code>strs</code> and two integers <code>m</code> and <code>n</code>.</p>\n\n<p>Return <em>the size of the largest subset of <code>strs</code> such that there are <strong>at most</strong> </em><code>m</code><em> </em><code>0</code><em>&#39;s and </em><code>n</code><em> </em><code>1</code><em>&#39;s in the subset</em>.</p>\n\n<p>A set <code>x</code> is a <strong>subset</strong> of a set <code>y</code> if all elements of <code>x</code> are also elements of <code>y</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;10&quot;,&quot;0001&quot;,&quot;111001&quot;,&quot;1&quot;,&quot;0&quot;], m = 5, n = 3\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The largest subset with at most 5 0&#39;s and 3 1&#39;s is {&quot;10&quot;, &quot;0001&quot;, &quot;1&quot;, &quot;0&quot;}, so the answer is 4.\nOther valid but smaller subsets include {&quot;0001&quot;, &quot;1&quot;} and {&quot;10&quot;, &quot;1&quot;, &quot;0&quot;}.\n{&quot;111001&quot;} is an invalid subset because it contains 4 1&#39;s, greater than the maximum of 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;10&quot;,&quot;0&quot;,&quot;1&quot;], m = 1, n = 1\n<strong>Output:</strong> 2\n<b>Explanation:</b> The largest subset is {&quot;0&quot;, &quot;1&quot;}, so the answer is 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= strs.length &lt;= 600</code></li>\n\t<li><code>1 &lt;= strs[i].length &lt;= 100</code></li>\n\t<li><code>strs[i]</code> consists only of digits <code>&#39;0&#39;</code> and <code>&#39;1&#39;</code>.</li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[\"10\",\"0001\",\"111001\",\"1\",\"0\"]\n5\n3\n[\"10\",\"0\",\"1\"]\n1\n1",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "112",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5453,
      "dislikes": 462,
      "similarQuestions": "[{\"title\": \"Count Subarrays With More Ones Than Zeros\", \"titleSlug\": \"count-subarrays-with-more-ones-than-zeros\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-negative Integers without Consecutive Ones\", \"titleSlug\": \"non-negative-integers-without-consecutive-ones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"All Divisions With the Highest Score of a Binary Array\", \"titleSlug\": \"all-divisions-with-the-highest-score-of-a-binary-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486204,
      "commentCount": 48,
      "topLevelCommentCount": 30
    },
    "classAndMethodDefinition": "def findMaxForm(self, S: List[str], M: int, N: int) -> int:\n        dp = [[0 for _ in range(N+1)] for _ in range(M+1)]"
  },
  {
    "stat": {
      "question_id": 833,
      "question__article__live": true,
      "question__article__slug": "bus-routes",
      "question__article__has_video_solution": false,
      "question__title": "Bus Routes",
      "question__title_slug": "bus-routes",
      "question__hide": false,
      "total_acs": 211457,
      "total_submitted": 444972,
      "frontend_question_id": 815,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/bus-routes",
      "questionId": "833",
      "questionFrontendId": "815",
      "questionTitle": "Bus Routes",
      "titleSlug": "bus-routes",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given an array <code>routes</code> representing bus routes where <code>routes[i]</code> is a bus route that the <code>i<sup>th</sup></code> bus repeats forever.</p>\n\n<ul>\n\t<li>For example, if <code>routes[0] = [1, 5, 7]</code>, this means that the <code>0<sup>th</sup></code> bus travels in the sequence <code>1 -&gt; 5 -&gt; 7 -&gt; 1 -&gt; 5 -&gt; 7 -&gt; 1 -&gt; ...</code> forever.</li>\n</ul>\n\n<p>You will start at the bus stop <code>source</code> (You are not on any bus initially), and you want to go to the bus stop <code>target</code>. You can travel between bus stops by buses only.</p>\n\n<p>Return <em>the least number of buses you must take to travel from </em><code>source</code><em> to </em><code>target</code>. Return <code>-1</code> if it is not possible.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> routes = [[1,2,7],[3,6,7]], source = 1, target = 6\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The best strategy is take the first bus to the bus stop 7, then take the second bus to the bus stop 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> routes = [[7,12],[4,5,15],[6],[15,19],[9,12,13]], source = 15, target = 12\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= routes.length &lt;= 500</code>.</li>\n\t<li><code>1 &lt;= routes[i].length &lt;= 10<sup>5</sup></code></li>\n\t<li>All the values of <code>routes[i]</code> are <strong>unique</strong>.</li>\n\t<li><code>sum(routes[i].length) &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= routes[i][j] &lt; 10<sup>6</sup></code></li>\n\t<li><code>0 &lt;= source, target &lt; 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2,7],[3,6,7]]\n1\n6\n[[7,12],[4,5,15],[6],[15,19],[9,12,13]]\n15\n12",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2139",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4268,
      "dislikes": 123,
      "similarQuestions": "[{\"title\": \"Minimum Costs Using the Train Line\", \"titleSlug\": \"minimum-costs-using-the-train-line\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486546,
      "commentCount": 135,
      "topLevelCommentCount": 86
    },
    "classAndMethodDefinition": "def numBusesToDestination(self, routes, source, target):\n        if source == target:"
  },
  {
    "stat": {
      "question_id": 538,
      "question__article__live": true,
      "question__article__slug": "convert-bst-to-greater-tree",
      "question__article__has_video_solution": false,
      "question__title": "Convert BST to Greater Tree",
      "question__title_slug": "convert-bst-to-greater-tree",
      "question__hide": false,
      "total_acs": 309126,
      "total_submitted": 443485,
      "frontend_question_id": 538,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/convert-bst-to-greater-tree",
      "questionId": "538",
      "questionFrontendId": "538",
      "questionTitle": "Convert BST to Greater Tree",
      "titleSlug": "convert-bst-to-greater-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.</p>\n\n<p>As a reminder, a <em>binary search tree</em> is a tree that satisfies these constraints:</p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys <strong>less than</strong> the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys <strong>greater than</strong> the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/05/02/tree.png\" style=\"width: 500px; height: 341px;\" />\n<pre>\n<strong>Input:</strong> root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\n<strong>Output:</strong> [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [0,null,1]\n<strong>Output:</strong> [1,null,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>All the values in the tree are <strong>unique</strong>.</li>\n\t<li><code>root</code> is guaranteed to be a valid binary search tree.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as 1038: <a href=\"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/\" target=\"_blank\">https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/</a></p>\n",
      "exampleTestcases": "[4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\n[0,null,1]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "281",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5248,
      "dislikes": 175,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486267,
      "commentCount": 30,
      "topLevelCommentCount": 25
    },
    "classAndMethodDefinition": "def convertBST(self, root: TreeNode) -> TreeNode:\n        "
  },
  {
    "stat": {
      "question_id": 502,
      "question__article__live": true,
      "question__article__slug": "ipo",
      "question__article__has_video_solution": false,
      "question__title": "IPO",
      "question__title_slug": "ipo",
      "question__hide": false,
      "total_acs": 234502,
      "total_submitted": 441036,
      "frontend_question_id": 502,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/ipo",
      "questionId": "502",
      "questionFrontendId": "502",
      "questionTitle": "IPO",
      "titleSlug": "ipo",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Suppose LeetCode will start its <strong>IPO</strong> soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the <strong>IPO</strong>. Since it has limited resources, it can only finish at most <code>k</code> distinct projects before the <strong>IPO</strong>. Help LeetCode design the best way to maximize its total capital after finishing at most <code>k</code> distinct projects.</p>\n\n<p>You are given <code>n</code> projects where the <code>i<sup>th</sup></code> project has a pure profit <code>profits[i]</code> and a minimum capital of <code>capital[i]</code> is needed to start it.</p>\n\n<p>Initially, you have <code>w</code> capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.</p>\n\n<p>Pick a list of <strong>at most</strong> <code>k</code> distinct projects from given projects to <strong>maximize your final capital</strong>, and return <em>the final maximized capital</em>.</p>\n\n<p>The answer is guaranteed to fit in a 32-bit signed integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 2, w = 0, profits = [1,2,3], capital = [0,1,1]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Since your initial capital is 0, you can only start the project indexed 0.\nAfter finishing it you will obtain profit 1 and your capital becomes 1.\nWith capital 1, you can either start the project indexed 1 or the project indexed 2.\nSince you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.\nTherefore, output the final maximized capital, which is 0 + 1 + 3 = 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> k = 3, w = 0, profits = [1,2,3], capital = [0,1,2]\n<strong>Output:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= w &lt;= 10<sup>9</sup></code></li>\n\t<li><code>n == profits.length</code></li>\n\t<li><code>n == capital.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= profits[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= capital[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "2\n0\n[1,2,3]\n[0,1,1]\n3\n0\n[1,2,3]\n[0,1,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1661",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3804,
      "dislikes": 258,
      "similarQuestions": "[{\"title\": \"Maximum Subsequence Score\", \"titleSlug\": \"maximum-subsequence-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Elegance of a K-Length Subsequence\", \"titleSlug\": \"maximum-elegance-of-a-k-length-subsequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486231,
      "commentCount": 570,
      "topLevelCommentCount": 314
    },
    "classAndMethodDefinition": "class Solution:\n    def findMaximizedCapital(self, k: int, w: int, profits: List[int], capital: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 1018,
      "question__article__live": true,
      "question__article__slug": "largest-perimeter-triangle",
      "question__article__has_video_solution": false,
      "question__title": "Largest Perimeter Triangle",
      "question__title_slug": "largest-perimeter-triangle",
      "question__hide": false,
      "total_acs": 247888,
      "total_submitted": 440030,
      "frontend_question_id": 976,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/largest-perimeter-triangle",
      "questionId": "1018",
      "questionFrontendId": "976",
      "questionTitle": "Largest Perimeter Triangle",
      "titleSlug": "largest-perimeter-triangle",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <em>the largest perimeter of a triangle with a non-zero area, formed from three of these lengths</em>. If it is impossible to form any triangle of a non-zero area, return <code>0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,2]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> You can form a triangle with three side lengths: 1, 2, and 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1,10]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> \nYou cannot use the side lengths 1, 1, and 2 to form a triangle.\nYou cannot use the side lengths 1, 1, and 10 to form a triangle.\nYou cannot use the side lengths 1, 2, and 10 to form a triangle.\nAs we cannot use any three side lengths to form a triangle of non-zero area, we return 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[2,1,2]\n[1,2,1,10]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "665",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2978,
      "dislikes": 411,
      "similarQuestions": "[{\"title\": \"Largest Triangle Area\", \"titleSlug\": \"largest-triangle-area\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486720,
      "commentCount": 82,
      "topLevelCommentCount": 41
    },
    "classAndMethodDefinition": "def largestPerimeter(self, A: List[int]) -> int:\n        A.sort(reverse = True)"
  },
  {
    "stat": {
      "question_id": 576,
      "question__article__live": true,
      "question__article__slug": "out-of-boundary-paths",
      "question__article__has_video_solution": false,
      "question__title": "Out of Boundary Paths",
      "question__title_slug": "out-of-boundary-paths",
      "question__hide": false,
      "total_acs": 211049,
      "total_submitted": 438739,
      "frontend_question_id": 576,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/out-of-boundary-paths",
      "questionId": "576",
      "questionFrontendId": "576",
      "questionTitle": "Out of Boundary Paths",
      "titleSlug": "out-of-boundary-paths",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is an <code>m x n</code> grid with a ball. The ball is initially at the position <code>[startRow, startColumn]</code>. You are allowed to move the ball to one of the four adjacent cells in the grid (possibly out of the grid crossing the grid boundary). You can apply <strong>at most</strong> <code>maxMove</code> moves to the ball.</p>\n\n<p>Given the five integers <code>m</code>, <code>n</code>, <code>maxMove</code>, <code>startRow</code>, <code>startColumn</code>, return the number of paths to move the ball out of the grid boundary. Since the answer can be very large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/28/out_of_boundary_paths_1.png\" style=\"width: 500px; height: 296px;\" />\n<pre>\n<strong>Input:</strong> m = 2, n = 2, maxMove = 2, startRow = 0, startColumn = 0\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/28/out_of_boundary_paths_2.png\" style=\"width: 500px; height: 293px;\" />\n<pre>\n<strong>Input:</strong> m = 1, n = 3, maxMove = 3, startRow = 0, startColumn = 1\n<strong>Output:</strong> 12\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\n\t<li><code>0 &lt;= maxMove &lt;= 50</code></li>\n\t<li><code>0 &lt;= startRow &lt; m</code></li>\n\t<li><code>0 &lt;= startColumn &lt; n</code></li>\n</ul>\n",
      "exampleTestcases": "2\n2\n2\n0\n0\n1\n3\n3\n0\n1",
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "Is traversing every path feasible? There are many possible paths for a small matrix. Try to optimize it.",
        "Can we use some space to store the number of paths and update them after every move?",
        "One obvious thing: the ball will go out of the boundary only by crossing it. Also, there is only one possible way the ball can go out of the boundary from the boundary cell except for corner cells. From the corner cell, the ball can go out in two different ways.\r\n\r\nCan you use this thing to solve the problem?"
      ],
      "solution": {
        "id": "126",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3888,
      "dislikes": 294,
      "similarQuestions": "[{\"title\": \"Knight Probability in Chessboard\", \"titleSlug\": \"knight-probability-in-chessboard\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Execution of All Suffix Instructions Staying in a Grid\", \"titleSlug\": \"execution-of-all-suffix-instructions-staying-in-a-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486303,
      "commentCount": 180,
      "topLevelCommentCount": 99
    },
    "classAndMethodDefinition": "def findPaths(self, m: int, n: int, maxMove: int, startRow: int, startColumn: int) -> int:\n"
  },
  {
    "stat": {
      "question_id": 1737,
      "question__article__live": true,
      "question__article__slug": "maximum-nesting-depth-of-the-parentheses",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Nesting Depth of the Parentheses",
      "question__title_slug": "maximum-nesting-depth-of-the-parentheses",
      "question__hide": false,
      "total_acs": 367933,
      "total_submitted": 438335,
      "frontend_question_id": 1614,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses",
      "questionId": "1737",
      "questionFrontendId": "1614",
      "questionTitle": "Maximum Nesting Depth of the Parentheses",
      "titleSlug": "maximum-nesting-depth-of-the-parentheses",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a <strong>valid parentheses string</strong> <code>s</code>, return the <strong>nesting depth</strong> of<em> </em><code>s</code>. The nesting depth is the <strong>maximum</strong> number of nested parentheses.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;(1+(2*3)+((8)/4))+1&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">3</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Digit 8 is inside of 3 nested parentheses in the string.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;(1)+((2))+(((3)))&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">3</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Digit 3 is inside of 3 nested parentheses in the string.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;()(())((()()))&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">3</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists of digits <code>0-9</code> and characters <code>&#39;+&#39;</code>, <code>&#39;-&#39;</code>, <code>&#39;*&#39;</code>, <code>&#39;/&#39;</code>, <code>&#39;(&#39;</code>, and <code>&#39;)&#39;</code>.</li>\n\t<li>It is guaranteed that parentheses expression <code>s</code> is a VPS.</li>\n</ul>\n",
      "exampleTestcases": "\"(1+(2*3)+((8)/4))+1\"\n\"(1)+((2))+(((3)))\"\n\"()(())((()()))\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [
        "The depth of any character in the VPS is the ( number of left brackets before it ) - ( number of right brackets before it )"
      ],
      "solution": {
        "id": "2278",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2476,
      "dislikes": 506,
      "similarQuestions": "[{\"title\": \"Maximum Nesting Depth of Two Valid Parentheses Strings\", \"titleSlug\": \"maximum-nesting-depth-of-two-valid-parentheses-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487410,
      "commentCount": 265,
      "topLevelCommentCount": 184
    },
    "classAndMethodDefinition": "class Solution:\n    def maxDepth(self, s):"
  },
  {
    "stat": {
      "question_id": 1960,
      "question__article__live": true,
      "question__article__slug": "check-if-the-sentence-is-pangram",
      "question__article__has_video_solution": false,
      "question__title": "Check if the Sentence Is Pangram",
      "question__title_slug": "check-if-the-sentence-is-pangram",
      "question__hide": false,
      "total_acs": 364571,
      "total_submitted": 437165,
      "frontend_question_id": 1832,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/check-if-the-sentence-is-pangram",
      "questionId": "1960",
      "questionFrontendId": "1832",
      "questionTitle": "Check if the Sentence Is Pangram",
      "titleSlug": "check-if-the-sentence-is-pangram",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>A <strong>pangram</strong> is a sentence where every letter of the English alphabet appears at least once.</p>\n\n<p>Given a string <code>sentence</code> containing only lowercase English letters, return<em> </em><code>true</code><em> if </em><code>sentence</code><em> is a <strong>pangram</strong>, or </em><code>false</code><em> otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;thequickbrownfoxjumpsoverthelazydog&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> sentence contains at least one of every letter of the English alphabet.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;leetcode&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= sentence.length &lt;= 1000</code></li>\n\t<li><code>sentence</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"thequickbrownfoxjumpsoverthelazydog\"\n\"leetcode\"",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "Iterate over the string and mark each character as found (using a boolean array, bitmask, or any other similar way).",
        "Check if the number of found characters equals the alphabet length."
      ],
      "solution": {
        "id": "1565",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2777,
      "dislikes": 57,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487617,
      "commentCount": 39,
      "topLevelCommentCount": 29
    },
    "classAndMethodDefinition": "class Solution:\n    def checkIfPangram(self, sentence: str) -> bool:"
  },
  {
    "stat": {
      "question_id": 799,
      "question__article__live": true,
      "question__article__slug": "minimum-distance-between-bst-nodes",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Distance Between BST Nodes",
      "question__title_slug": "minimum-distance-between-bst-nodes",
      "question__hide": false,
      "total_acs": 261149,
      "total_submitted": 436971,
      "frontend_question_id": 783,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-distance-between-bst-nodes",
      "questionId": "799",
      "questionFrontendId": "783",
      "questionTitle": "Minimum Distance Between BST Nodes",
      "titleSlug": "minimum-distance-between-bst-nodes",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a Binary Search Tree (BST), return <em>the minimum difference between the values of any two different nodes in the tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/05/bst1.jpg\" style=\"width: 292px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> root = [4,2,6,1,3]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/05/bst2.jpg\" style=\"width: 282px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> root = [1,0,48,null,null,12,49]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 100]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as 530: <a href=\"https://leetcode.com/problems/minimum-absolute-difference-in-bst/\" target=\"_blank\">https://leetcode.com/problems/minimum-absolute-difference-in-bst/</a></p>\n",
      "exampleTestcases": "[4,2,6,1,3]\n[1,0,48,null,null,12,49]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1689",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3498,
      "dislikes": 420,
      "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486511,
      "commentCount": 105,
      "topLevelCommentCount": 74
    },
    "classAndMethodDefinition": "class Solution:\n    def minDiffInBST(self, root: TreeNode) -> int:"
  },
  {
    "stat": {
      "question_id": 575,
      "question__article__live": true,
      "question__article__slug": "distribute-candies",
      "question__article__has_video_solution": false,
      "question__title": "Distribute Candies",
      "question__title_slug": "distribute-candies",
      "question__hide": false,
      "total_acs": 297776,
      "total_submitted": 436569,
      "frontend_question_id": 575,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/distribute-candies",
      "questionId": "575",
      "questionFrontendId": "575",
      "questionTitle": "Distribute Candies",
      "titleSlug": "distribute-candies",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Alice has <code>n</code> candies, where the <code>i<sup>th</sup></code> candy is of type <code>candyType[i]</code>. Alice noticed that she started to gain weight, so she visited a doctor.</p>\n\n<p>The doctor advised Alice to only eat <code>n / 2</code> of the candies she has (<code>n</code> is always even). Alice likes her candies very much, and she wants to eat the maximum number of different types of candies while still following the doctor&#39;s advice.</p>\n\n<p>Given the integer array <code>candyType</code> of length <code>n</code>, return <em>the <strong>maximum</strong> number of different types of candies she can eat if she only eats </em><code>n / 2</code><em> of them</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> candyType = [1,1,2,2,3,3]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Alice can only eat 6 / 2 = 3 candies. Since there are only 3 types, she can eat one of each type.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> candyType = [1,1,2,3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Alice can only eat 4 / 2 = 2 candies. Whether she eats types [1,2], [1,3], or [2,3], she still can only eat 2 different types.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> candyType = [6,6,6,6]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Alice can only eat 4 / 2 = 2 candies. Even though she can eat 2 candies, she only has 1 type.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == candyType.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>n</code>&nbsp;is even.</li>\n\t<li><code>-10<sup>5</sup> &lt;= candyType[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,2,2,3,3]\n[1,1,2,3]\n[6,6,6,6]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        }
      ],
      "hints": [
        "To maximize the number of kinds of candies, we should try to distribute candies such that sister will gain all kinds.",
        "What is the upper limit of the number of kinds of candies sister will gain? Remember candies are to distributed equally.",
        "Which data structure is the most suitable for finding the number of kinds of candies?",
        "Will hashset solves the problem? Inserting all candies kind in the hashset and then checking its size with upper limit."
      ],
      "solution": {
        "id": "125",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1535,
      "dislikes": 1372,
      "similarQuestions": "[{\"title\": \"Minimum Number of Operations to Satisfy Conditions\", \"titleSlug\": \"minimum-number-of-operations-to-satisfy-conditions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check if Grid Satisfies Conditions\", \"titleSlug\": \"check-if-grid-satisfies-conditions\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486302,
      "commentCount": 57,
      "topLevelCommentCount": 51
    },
    "classAndMethodDefinition": "def distributeCandies(self, candyType):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 486,
      "question__article__live": true,
      "question__article__slug": "predict-the-winner",
      "question__article__has_video_solution": true,
      "question__title": "Predict the Winner",
      "question__title_slug": "predict-the-winner",
      "question__hide": false,
      "total_acs": 242032,
      "total_submitted": 436559,
      "frontend_question_id": 486,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/predict-the-winner",
      "questionId": "486",
      "questionFrontendId": "486",
      "questionTitle": "Predict the Winner",
      "titleSlug": "predict-the-winner",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code>. Two players are playing a game with this array: player 1 and player 2.</p>\n\n<p>Player 1 and player 2 take turns, with player 1 starting first. Both players start the game with a score of <code>0</code>. At each turn, the player takes one of the numbers from either end of the array (i.e., <code>nums[0]</code> or <code>nums[nums.length - 1]</code>) which reduces the size of the array by <code>1</code>. The player adds the chosen number to their score. The game ends when there are no more elements in the array.</p>\n\n<p>Return <code>true</code> if Player 1 can win the game. If the scores of both players are equal, then player 1 is still the winner, and you should also return <code>true</code>. You may assume that both players are playing optimally.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5,2]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Initially, player 1 can choose between 1 and 2. \nIf he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). \nSo, final score of player 1 is 1 + 2 = 3, and player 2 is 5. \nHence, player 1 will never be the winner and you need to return false.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5,233,7]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Player 1 first chooses 1. Then player 2 has to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.\nFinally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 20</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>7</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,5,2]\n[1,5,233,7]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Recursion",
          "slug": "recursion",
          "translatedName": null
        },
        {
          "name": "Game Theory",
          "slug": "game-theory",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1876",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": true,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5860,
      "dislikes": 285,
      "similarQuestions": "[{\"title\": \"Can I Win\", \"titleSlug\": \"can-i-win\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Winning Player in Coin Game\", \"titleSlug\": \"find-the-winning-player-in-coin-game\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Number of Winning Players\", \"titleSlug\": \"find-the-number-of-winning-players\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486216,
      "commentCount": 178,
      "topLevelCommentCount": 100
    },
    "classAndMethodDefinition": "def score(self, nums, l, r, dp):\n        if dp[l][r] != -1:"
  },
  {
    "stat": {
      "question_id": 822,
      "question__article__live": true,
      "question__article__slug": "unique-morse-code-words",
      "question__article__has_video_solution": false,
      "question__title": "Unique Morse Code Words",
      "question__title_slug": "unique-morse-code-words",
      "question__hide": false,
      "total_acs": 361770,
      "total_submitted": 436050,
      "frontend_question_id": 804,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/unique-morse-code-words",
      "questionId": "822",
      "questionFrontendId": "804",
      "questionTitle": "Unique Morse Code Words",
      "titleSlug": "unique-morse-code-words",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows:</p>\n\n<ul>\n\t<li><code>&#39;a&#39;</code> maps to <code>&quot;.-&quot;</code>,</li>\n\t<li><code>&#39;b&#39;</code> maps to <code>&quot;-...&quot;</code>,</li>\n\t<li><code>&#39;c&#39;</code> maps to <code>&quot;-.-.&quot;</code>, and so on.</li>\n</ul>\n\n<p>For convenience, the full table for the <code>26</code> letters of the English alphabet is given below:</p>\n\n<pre>\n[&quot;.-&quot;,&quot;-...&quot;,&quot;-.-.&quot;,&quot;-..&quot;,&quot;.&quot;,&quot;..-.&quot;,&quot;--.&quot;,&quot;....&quot;,&quot;..&quot;,&quot;.---&quot;,&quot;-.-&quot;,&quot;.-..&quot;,&quot;--&quot;,&quot;-.&quot;,&quot;---&quot;,&quot;.--.&quot;,&quot;--.-&quot;,&quot;.-.&quot;,&quot;...&quot;,&quot;-&quot;,&quot;..-&quot;,&quot;...-&quot;,&quot;.--&quot;,&quot;-..-&quot;,&quot;-.--&quot;,&quot;--..&quot;]</pre>\n\n<p>Given an array of strings <code>words</code> where each word can be written as a concatenation of the Morse code of each letter.</p>\n\n<ul>\n\t<li>For example, <code>&quot;cab&quot;</code> can be written as <code>&quot;-.-..--...&quot;</code>, which is the concatenation of <code>&quot;-.-.&quot;</code>, <code>&quot;.-&quot;</code>, and <code>&quot;-...&quot;</code>. We will call such a concatenation the <strong>transformation</strong> of a word.</li>\n</ul>\n\n<p>Return <em>the number of different <strong>transformations</strong> among all words we have</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;gin&quot;,&quot;zen&quot;,&quot;gig&quot;,&quot;msg&quot;]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The transformation of each word is:\n&quot;gin&quot; -&gt; &quot;--...-.&quot;\n&quot;zen&quot; -&gt; &quot;--...-.&quot;\n&quot;gig&quot; -&gt; &quot;--...--.&quot;\n&quot;msg&quot; -&gt; &quot;--...--.&quot;\nThere are 2 different transformations: &quot;--...-.&quot; and &quot;--...--.&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;a&quot;]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 12</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"gin\",\"zen\",\"gig\",\"msg\"]\n[\"a\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "439",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2522,
      "dislikes": 1536,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486534,
      "commentCount": 52,
      "topLevelCommentCount": 33
    },
    "classAndMethodDefinition": "def solution(words):\n    codes = [\".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\", \".---\", \"-.-\", \".-..\", \"--\", \"-.\", \"---\","
  },
  {
    "stat": {
      "question_id": 583,
      "question__article__live": true,
      "question__article__slug": "delete-operation-for-two-strings",
      "question__article__has_video_solution": false,
      "question__title": "Delete Operation for Two Strings",
      "question__title_slug": "delete-operation-for-two-strings",
      "question__hide": false,
      "total_acs": 271729,
      "total_submitted": 434699,
      "frontend_question_id": 583,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/delete-operation-for-two-strings",
      "questionId": "583",
      "questionFrontendId": "583",
      "questionTitle": "Delete Operation for Two Strings",
      "titleSlug": "delete-operation-for-two-strings",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given two strings <code>word1</code> and <code>word2</code>, return <em>the minimum number of <strong>steps</strong> required to make</em> <code>word1</code> <em>and</em> <code>word2</code> <em>the same</em>.</p>\n\n<p>In one <strong>step</strong>, you can delete exactly one character in either string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;sea&quot;, word2 = &quot;eat&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You need one step to make &quot;sea&quot; to &quot;ea&quot; and another step to make &quot;eat&quot; to &quot;ea&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;leetcode&quot;, word2 = &quot;etco&quot;\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word1.length, word2.length &lt;= 500</code></li>\n\t<li><code>word1</code> and <code>word2</code> consist of only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"sea\"\n\"eat\"\n\"leetcode\"\n\"etco\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "137",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5801,
      "dislikes": 87,
      "similarQuestions": "[{\"title\": \"Edit Distance\", \"titleSlug\": \"edit-distance\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum ASCII Delete Sum for Two Strings\", \"titleSlug\": \"minimum-ascii-delete-sum-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Common Subsequence\", \"titleSlug\": \"longest-common-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Make Three Strings Equal\", \"titleSlug\": \"make-three-strings-equal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486310,
      "commentCount": 31,
      "topLevelCommentCount": 25
    },
    "classAndMethodDefinition": "def minDistance(self, word1: str, word2: str) -> int:\n\\tdef solve(w1, w2, i, j):"
  },
  {
    "stat": {
      "question_id": 623,
      "question__article__live": true,
      "question__article__slug": "add-one-row-in-a-tree",
      "question__article__has_video_solution": false,
      "question__title": "Add One Row to Tree",
      "question__title_slug": "add-one-row-to-tree",
      "question__hide": false,
      "total_acs": 278360,
      "total_submitted": 434558,
      "frontend_question_id": 623,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/add-one-row-to-tree",
      "questionId": "623",
      "questionFrontendId": "623",
      "questionTitle": "Add One Row to Tree",
      "titleSlug": "add-one-row-to-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree and two integers <code>val</code> and <code>depth</code>, add a row of nodes with value <code>val</code> at the given depth <code>depth</code>.</p>\n\n<p>Note that the <code>root</code> node is at depth <code>1</code>.</p>\n\n<p>The adding rule is:</p>\n\n<ul>\n\t<li>Given the integer <code>depth</code>, for each not null tree node <code>cur</code> at the depth <code>depth - 1</code>, create two tree nodes with value <code>val</code> as <code>cur</code>&#39;s left subtree root and right subtree root.</li>\n\t<li><code>cur</code>&#39;s original left subtree should be the left subtree of the new left subtree root.</li>\n\t<li><code>cur</code>&#39;s original right subtree should be the right subtree of the new right subtree root.</li>\n\t<li>If <code>depth == 1</code> that means there is no depth <code>depth - 1</code> at all, then create a tree node with value <code>val</code> as the new root of the whole original tree, and the original tree is the new root&#39;s left subtree.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/15/addrow-tree.jpg\" style=\"width: 500px; height: 231px;\" />\n<pre>\n<strong>Input:</strong> root = [4,2,6,3,1,5], val = 1, depth = 2\n<strong>Output:</strong> [4,1,1,2,null,null,6,3,1,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/11/add2-tree.jpg\" style=\"width: 500px; height: 277px;\" />\n<pre>\n<strong>Input:</strong> root = [4,2,null,3,1], val = 1, depth = 3\n<strong>Output:</strong> [4,2,null,1,1,3,null,null,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li>The depth of the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n\t<li><code>-10<sup>5</sup> &lt;= val &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= depth &lt;= the depth of tree + 1</code></li>\n</ul>\n",
      "exampleTestcases": "[4,2,6,3,1,5]\n1\n2\n[4,2,null,3,1]\n1\n3",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "170",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3556,
      "dislikes": 266,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486347,
      "commentCount": 180,
      "topLevelCommentCount": 94
    },
    "classAndMethodDefinition": "class Solution:\n    def add(self, root, val, depth, curr):"
  },
  {
    "stat": {
      "question_id": 820,
      "question__article__live": true,
      "question__article__slug": "find-eventual-safe-states",
      "question__article__has_video_solution": false,
      "question__title": "Find Eventual Safe States",
      "question__title_slug": "find-eventual-safe-states",
      "question__hide": false,
      "total_acs": 277702,
      "total_submitted": 434272,
      "frontend_question_id": 802,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-eventual-safe-states",
      "questionId": "820",
      "questionFrontendId": "802",
      "questionTitle": "Find Eventual Safe States",
      "titleSlug": "find-eventual-safe-states",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is a directed graph of <code>n</code> nodes with each node labeled from <code>0</code> to <code>n - 1</code>. The graph is represented by a <strong>0-indexed</strong> 2D integer array <code>graph</code> where <code>graph[i]</code> is an integer array of nodes adjacent to node <code>i</code>, meaning there is an edge from node <code>i</code> to each node in <code>graph[i]</code>.</p>\n\n<p>A node is a <strong>terminal node</strong> if there are no outgoing edges. A node is a <strong>safe node</strong> if every possible path starting from that node leads to a <strong>terminal node</strong> (or another safe node).</p>\n\n<p>Return <em>an array containing all the <strong>safe nodes</strong> of the graph</em>. The answer should be sorted in <strong>ascending</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"Illustration of graph\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/17/picture1.png\" style=\"height: 171px; width: 600px;\" />\n<pre>\n<strong>Input:</strong> graph = [[1,2],[2,3],[5],[0],[5],[],[]]\n<strong>Output:</strong> [2,4,5,6]\n<strong>Explanation:</strong> The given graph is shown above.\nNodes 5 and 6 are terminal nodes as there are no outgoing edges from either of them.\nEvery path starting at nodes 2, 4, 5, and 6 all lead to either node 5 or 6.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> graph = [[1,2,3,4],[1,2],[3,4],[0,4],[]]\n<strong>Output:</strong> [4]\n<strong>Explanation:</strong>\nOnly node 4 is a terminal node, and every path starting at node 4 leads to node 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == graph.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= graph[i].length &lt;= n</code></li>\n\t<li><code>0 &lt;= graph[i][j] &lt;= n - 1</code></li>\n\t<li><code>graph[i]</code> is sorted in a strictly increasing order.</li>\n\t<li>The graph may contain self-loops.</li>\n\t<li>The number of edges in the graph will be in the range <code>[1, 4 * 10<sup>4</sup>]</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[1,2],[2,3],[5],[0],[5],[],[]]\n[[1,2,3,4],[1,2],[3,4],[0,4],[]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1923",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5807,
      "dislikes": 462,
      "similarQuestions": "[{\"title\": \"Build a Matrix With Conditions\", \"titleSlug\": \"build-a-matrix-with-conditions\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486532,
      "commentCount": 159,
      "topLevelCommentCount": 91
    },
    "classAndMethodDefinition": "class Solution:\n    def dfs(self, adj, src, vis, recst):"
  },
  {
    "stat": {
      "question_id": 1054,
      "question__article__live": true,
      "question__article__slug": "complement-of-base-10-integer",
      "question__article__has_video_solution": false,
      "question__title": "Complement of Base 10 Integer",
      "question__title_slug": "complement-of-base-10-integer",
      "question__hide": false,
      "total_acs": 263806,
      "total_submitted": 434228,
      "frontend_question_id": 1009,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/complement-of-base-10-integer",
      "questionId": "1054",
      "questionFrontendId": "1009",
      "questionTitle": "Complement of Base 10 Integer",
      "titleSlug": "complement-of-base-10-integer",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>The <strong>complement</strong> of an integer is the integer you get when you flip all the <code>0</code>&#39;s to <code>1</code>&#39;s and all the <code>1</code>&#39;s to <code>0</code>&#39;s in its binary representation.</p>\n\n<ul>\n\t<li>For example, The integer <code>5</code> is <code>&quot;101&quot;</code> in binary and its <strong>complement</strong> is <code>&quot;010&quot;</code> which is the integer <code>2</code>.</li>\n</ul>\n\n<p>Given an integer <code>n</code>, return <em>its complement</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 5 is &quot;101&quot; in binary, with complement &quot;010&quot; in binary, which is 2 in base-10.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> 7 is &quot;111&quot; in binary, with complement &quot;000&quot; in binary, which is 0 in base-10.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> 10 is &quot;1010&quot; in binary, with complement &quot;0101&quot; in binary, which is 5 in base-10.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt; 10<sup>9</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as 476: <a href=\"https://leetcode.com/problems/number-complement/\" target=\"_blank\">https://leetcode.com/problems/number-complement/</a></p>\n",
      "exampleTestcases": "5\n7\n10",
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [
        "A binary number plus its complement will equal 111....111 in binary.  Also, N = 0 is a corner case."
      ],
      "solution": {
        "id": "915",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2457,
      "dislikes": 115,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486756,
      "commentCount": 41,
      "topLevelCommentCount": 25
    },
    "classAndMethodDefinition": "class Solution:\n    def bitwiseComplement(self, n: int) -> int:"
  },
  {
    "stat": {
      "question_id": 1078,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Remove Outermost Parentheses",
      "question__title_slug": "remove-outermost-parentheses",
      "question__hide": false,
      "total_acs": 363534,
      "total_submitted": 434209,
      "frontend_question_id": 1021,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/remove-outermost-parentheses",
      "questionId": "1078",
      "questionFrontendId": "1021",
      "questionTitle": "Remove Outermost Parentheses",
      "titleSlug": "remove-outermost-parentheses",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>A valid parentheses string is either empty <code>&quot;&quot;</code>, <code>&quot;(&quot; + A + &quot;)&quot;</code>, or <code>A + B</code>, where <code>A</code> and <code>B</code> are valid parentheses strings, and <code>+</code> represents string concatenation.</p>\n\n<ul>\n\t<li>For example, <code>&quot;&quot;</code>, <code>&quot;()&quot;</code>, <code>&quot;(())()&quot;</code>, and <code>&quot;(()(()))&quot;</code> are all valid parentheses strings.</li>\n</ul>\n\n<p>A valid parentheses string <code>s</code> is primitive if it is nonempty, and there does not exist a way to split it into <code>s = A + B</code>, with <code>A</code> and <code>B</code> nonempty valid parentheses strings.</p>\n\n<p>Given a valid parentheses string <code>s</code>, consider its primitive decomposition: <code>s = P<sub>1</sub> + P<sub>2</sub> + ... + P<sub>k</sub></code>, where <code>P<sub>i</sub></code> are primitive valid parentheses strings.</p>\n\n<p>Return <code>s</code> <em>after removing the outermost parentheses of every primitive string in the primitive decomposition of </em><code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(()())(())&quot;\n<strong>Output:</strong> &quot;()()()&quot;\n<strong>Explanation:</strong> \nThe input string is &quot;(()())(())&quot;, with primitive decomposition &quot;(()())&quot; + &quot;(())&quot;.\nAfter removing outer parentheses of each part, this is &quot;()()&quot; + &quot;()&quot; = &quot;()()()&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(()())(())(()(()))&quot;\n<strong>Output:</strong> &quot;()()()()(())&quot;\n<strong>Explanation:</strong> \nThe input string is &quot;(()())(())(()(()))&quot;, with primitive decomposition &quot;(()())&quot; + &quot;(())&quot; + &quot;(()(()))&quot;.\nAfter removing outer parentheses of each part, this is &quot;()()&quot; + &quot;()&quot; + &quot;()(())&quot; = &quot;()()()()(())&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;()()&quot;\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> \nThe input string is &quot;()()&quot;, with primitive decomposition &quot;()&quot; + &quot;()&quot;.\nAfter removing outer parentheses of each part, this is &quot;&quot; + &quot;&quot; = &quot;&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is either <code>&#39;(&#39;</code> or <code>&#39;)&#39;</code>.</li>\n\t<li><code>s</code> is a valid parentheses string.</li>\n</ul>\n",
      "exampleTestcases": "\"(()())(())\"\n\"(()())(())(()(()))\"\n\"()()\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [
        "Can you find the primitive decomposition?  The number of ( and ) characters must be equal."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 2989,
      "dislikes": 1615,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486780,
      "commentCount": 85,
      "topLevelCommentCount": 56
    },
    "classAndMethodDefinition": "class Solution:\n    def removeOuterParentheses(self, S: str) -> str:"
  },
  {
    "stat": {
      "question_id": 1119,
      "question__article__live": true,
      "question__article__slug": "robot-bounded-in-circle",
      "question__article__has_video_solution": false,
      "question__title": "Robot Bounded In Circle",
      "question__title_slug": "robot-bounded-in-circle",
      "question__hide": false,
      "total_acs": 241703,
      "total_submitted": 432406,
      "frontend_question_id": 1041,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/robot-bounded-in-circle",
      "questionId": "1119",
      "questionFrontendId": "1041",
      "questionTitle": "Robot Bounded In Circle",
      "titleSlug": "robot-bounded-in-circle",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>On an infinite plane, a robot initially stands at <code>(0, 0)</code> and faces north. Note that:</p>\n\n<ul>\n\t<li>The <strong>north direction</strong> is the positive direction of the y-axis.</li>\n\t<li>The <strong>south direction</strong> is the negative direction of the y-axis.</li>\n\t<li>The <strong>east direction</strong> is the positive direction of the x-axis.</li>\n\t<li>The <strong>west direction</strong> is the negative direction of the x-axis.</li>\n</ul>\n\n<p>The robot can receive one of three instructions:</p>\n\n<ul>\n\t<li><code>&quot;G&quot;</code>: go straight 1 unit.</li>\n\t<li><code>&quot;L&quot;</code>: turn 90 degrees to the left (i.e., anti-clockwise direction).</li>\n\t<li><code>&quot;R&quot;</code>: turn 90 degrees to the right (i.e., clockwise direction).</li>\n</ul>\n\n<p>The robot performs the <code>instructions</code> given in order, and repeats them forever.</p>\n\n<p>Return <code>true</code> if and only if there exists a circle in the plane such that the robot never leaves the circle.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> instructions = &quot;GGLLGG&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The robot is initially at (0, 0) facing the north direction.\n&quot;G&quot;: move one step. Position: (0, 1). Direction: North.\n&quot;G&quot;: move one step. Position: (0, 2). Direction: North.\n&quot;L&quot;: turn 90 degrees anti-clockwise. Position: (0, 2). Direction: West.\n&quot;L&quot;: turn 90 degrees anti-clockwise. Position: (0, 2). Direction: South.\n&quot;G&quot;: move one step. Position: (0, 1). Direction: South.\n&quot;G&quot;: move one step. Position: (0, 0). Direction: South.\nRepeating the instructions, the robot goes into the cycle: (0, 0) --&gt; (0, 1) --&gt; (0, 2) --&gt; (0, 1) --&gt; (0, 0).\nBased on that, we return true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> instructions = &quot;GG&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The robot is initially at (0, 0) facing the north direction.\n&quot;G&quot;: move one step. Position: (0, 1). Direction: North.\n&quot;G&quot;: move one step. Position: (0, 2). Direction: North.\nRepeating the instructions, keeps advancing in the north direction and does not go into cycles.\nBased on that, we return false.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> instructions = &quot;GL&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The robot is initially at (0, 0) facing the north direction.\n&quot;G&quot;: move one step. Position: (0, 1). Direction: North.\n&quot;L&quot;: turn 90 degrees anti-clockwise. Position: (0, 1). Direction: West.\n&quot;G&quot;: move one step. Position: (-1, 1). Direction: West.\n&quot;L&quot;: turn 90 degrees anti-clockwise. Position: (-1, 1). Direction: South.\n&quot;G&quot;: move one step. Position: (-1, 0). Direction: South.\n&quot;L&quot;: turn 90 degrees anti-clockwise. Position: (-1, 0). Direction: East.\n&quot;G&quot;: move one step. Position: (0, 0). Direction: East.\n&quot;L&quot;: turn 90 degrees anti-clockwise. Position: (0, 0). Direction: North.\nRepeating the instructions, the robot goes into the cycle: (0, 0) --&gt; (0, 1) --&gt; (-1, 1) --&gt; (-1, 0) --&gt; (0, 0).\nBased on that, we return true.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= instructions.length &lt;= 100</code></li>\n\t<li><code>instructions[i]</code> is <code>&#39;G&#39;</code>, <code>&#39;L&#39;</code> or, <code>&#39;R&#39;</code>.</li>\n</ul>\n",
      "exampleTestcases": "\"GGLLGG\"\n\"GG\"\n\"GL\"",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        }
      ],
      "hints": [
        "Calculate the final vector of how the robot travels after executing all instructions once - it consists of a change in position plus a change in direction.",
        "The robot stays in the circle if and only if (looking at the final vector) it changes direction (ie. doesn't stay pointing north), or it moves 0."
      ],
      "solution": {
        "id": "984",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3741,
      "dislikes": 703,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486819,
      "commentCount": 28,
      "topLevelCommentCount": 22
    },
    "classAndMethodDefinition": "def isRobotBounded(self, instructions):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 650,
      "question__article__live": true,
      "question__article__slug": "2-keys-keyboard",
      "question__article__has_video_solution": false,
      "question__title": "2 Keys Keyboard",
      "question__title_slug": "2-keys-keyboard",
      "question__hide": false,
      "total_acs": 257428,
      "total_submitted": 432034,
      "frontend_question_id": 650,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/2-keys-keyboard",
      "questionId": "650",
      "questionFrontendId": "650",
      "questionTitle": "2 Keys Keyboard",
      "titleSlug": "2-keys-keyboard",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is only one character <code>&#39;A&#39;</code> on the screen of a notepad. You can perform one of two operations on this notepad for each step:</p>\n\n<ul>\n\t<li>Copy All: You can copy all the characters present on the screen (a partial copy is not allowed).</li>\n\t<li>Paste: You can paste the characters which are copied last time.</li>\n</ul>\n\n<p>Given an integer <code>n</code>, return <em>the minimum number of operations to get the character</em> <code>&#39;A&#39;</code> <em>exactly</em> <code>n</code> <em>times on the screen</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Initially, we have one character &#39;A&#39;.\nIn step 1, we use Copy All operation.\nIn step 2, we use Paste operation to get &#39;AA&#39;.\nIn step 3, we use Paste operation to get &#39;AAA&#39;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "3\n1",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        }
      ],
      "hints": [
        "How many characters may be there in the clipboard at the last step if n = 3? n = 7? n = 10? n = 24?"
      ],
      "solution": {
        "id": "2410",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4188,
      "dislikes": 243,
      "similarQuestions": "[{\"title\": \"4 Keys Keyboard\", \"titleSlug\": \"4-keys-keyboard\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Broken Calculator\", \"titleSlug\": \"broken-calculator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Value After Replacing With Sum of Prime Factors\", \"titleSlug\": \"smallest-value-after-replacing-with-sum-of-prime-factors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Distinct Prime Factors of Product of Array\", \"titleSlug\": \"distinct-prime-factors-of-product-of-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486373,
      "commentCount": 211,
      "topLevelCommentCount": 139
    },
    "classAndMethodDefinition": "class Solution:\n    def minSteps(self, n: int) -> int:"
  },
  {
    "stat": {
      "question_id": 1300,
      "question__article__live": true,
      "question__article__slug": "critical-connections-in-a-network",
      "question__article__has_video_solution": false,
      "question__title": "Critical Connections in a Network",
      "question__title_slug": "critical-connections-in-a-network",
      "question__hide": false,
      "total_acs": 243888,
      "total_submitted": 431988,
      "frontend_question_id": 1192,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/critical-connections-in-a-network",
      "questionId": "1300",
      "questionFrontendId": "1192",
      "questionTitle": "Critical Connections in a Network",
      "titleSlug": "critical-connections-in-a-network",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> servers numbered from <code>0</code> to <code>n - 1</code> connected by undirected server-to-server <code>connections</code> forming a network where <code>connections[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> represents a connection between servers <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code>. Any server can reach other servers directly or indirectly through the network.</p>\n\n<p>A <em>critical connection</em> is a connection that, if removed, will make some servers unable to reach some other server.</p>\n\n<p>Return all critical connections in the network in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/03/1537_ex1_2.png\" style=\"width: 198px; height: 248px;\" />\n<pre>\n<strong>Input:</strong> n = 4, connections = [[0,1],[1,2],[2,0],[1,3]]\n<strong>Output:</strong> [[1,3]]\n<strong>Explanation:</strong> [[3,1]] is also accepted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, connections = [[0,1]]\n<strong>Output:</strong> [[0,1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>n - 1 &lt;= connections.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt;= n - 1</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>There are no repeated connections.</li>\n</ul>\n",
      "exampleTestcases": "4\n[[0,1],[1,2],[2,0],[1,3]]\n2\n[[0,1]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        },
        {
          "name": "Biconnected Component",
          "slug": "biconnected-component",
          "translatedName": null
        }
      ],
      "hints": [
        "Use Tarjan's algorithm."
      ],
      "solution": {
        "id": "1112",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 6231,
      "dislikes": 184,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486996,
      "commentCount": 57,
      "topLevelCommentCount": 43
    },
    "classAndMethodDefinition": "def criticalConnections(self, n: int, connections: List[List[int]]) -> List[List[int]]:\n        edgeMap = defaultdict(list)"
  },
  {
    "stat": {
      "question_id": 319,
      "question__article__live": true,
      "question__article__slug": "bulb-switcher",
      "question__article__has_video_solution": false,
      "question__title": "Bulb Switcher",
      "question__title_slug": "bulb-switcher",
      "question__hide": false,
      "total_acs": 229141,
      "total_submitted": 431890,
      "frontend_question_id": 319,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/bulb-switcher",
      "questionId": "319",
      "questionFrontendId": "319",
      "questionTitle": "Bulb Switcher",
      "titleSlug": "bulb-switcher",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> bulbs that are initially off. You first turn on all the bulbs, then&nbsp;you turn off every second bulb.</p>\n\n<p>On the third round, you toggle every third bulb (turning on if it&#39;s off or turning off if it&#39;s on). For the <code>i<sup>th</sup></code> round, you toggle every <code>i</code> bulb. For the <code>n<sup>th</sup></code> round, you only toggle the last bulb.</p>\n\n<p>Return <em>the number of bulbs that are on after <code>n</code> rounds</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/bulb.jpg\" style=\"width: 421px; height: 321px;\" />\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> At first, the three bulbs are [off, off, off].\nAfter the first round, the three bulbs are [on, on, on].\nAfter the second round, the three bulbs are [on, off, on].\nAfter the third round, the three bulbs are [on, off, off]. \nSo you should return 1 because there is only one bulb is on.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "3\n0\n1",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1796",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2683,
      "dislikes": 3124,
      "similarQuestions": "[{\"title\": \"Bulb Switcher II\", \"titleSlug\": \"bulb-switcher-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of K Consecutive Bit Flips\", \"titleSlug\": \"minimum-number-of-k-consecutive-bit-flips\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Times Binary String Is Prefix-Aligned\", \"titleSlug\": \"number-of-times-binary-string-is-prefix-aligned\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Pivot Integer\", \"titleSlug\": \"find-the-pivot-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486056,
      "commentCount": 123,
      "topLevelCommentCount": 92
    },
    "classAndMethodDefinition": "import math\n"
  },
  {
    "stat": {
      "question_id": 966,
      "question__article__live": true,
      "question__article__slug": "binary-subarrays-with-sum",
      "question__article__has_video_solution": false,
      "question__title": "Binary Subarrays With Sum",
      "question__title_slug": "binary-subarrays-with-sum",
      "question__hide": false,
      "total_acs": 273584,
      "total_submitted": 429853,
      "frontend_question_id": 930,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/binary-subarrays-with-sum",
      "questionId": "966",
      "questionFrontendId": "930",
      "questionTitle": "Binary Subarrays With Sum",
      "titleSlug": "binary-subarrays-with-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a binary array <code>nums</code> and an integer <code>goal</code>, return <em>the number of non-empty <strong>subarrays</strong> with a sum</em> <code>goal</code>.</p>\n\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,0,1,0,1], goal = 2\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The 4 subarrays are bolded and underlined below:\n[<u><strong>1,0,1</strong></u>,0,1]\n[<u><strong>1,0,1,0</strong></u>,1]\n[1,<u><strong>0,1,0,1</strong></u>]\n[1,0,<u><strong>1,0,1</strong></u>]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,0,0,0], goal = 0\n<strong>Output:</strong> 15\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\n\t<li><code>0 &lt;= goal &lt;= nums.length</code></li>\n</ul>\n",
      "exampleTestcases": "[1,0,1,0,1]\n2\n[0,0,0,0,0]\n0",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2266",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3963,
      "dislikes": 133,
      "similarQuestions": "[{\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All Possible Stable Binary Arrays I\", \"titleSlug\": \"find-all-possible-stable-binary-arrays-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All Possible Stable Binary Arrays II\", \"titleSlug\": \"find-all-possible-stable-binary-arrays-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486673,
      "commentCount": 255,
      "topLevelCommentCount": 114
    },
    "classAndMethodDefinition": "class Solution(object):\n    def numSubarraysWithSum(self, nums, goal):"
  },
  {
    "stat": {
      "question_id": 599,
      "question__article__live": true,
      "question__article__slug": "minimum-index-sum-of-two-lists",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Index Sum of Two Lists",
      "question__title_slug": "minimum-index-sum-of-two-lists",
      "question__hide": false,
      "total_acs": 240838,
      "total_submitted": 428971,
      "frontend_question_id": 599,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-index-sum-of-two-lists",
      "questionId": "599",
      "questionFrontendId": "599",
      "questionTitle": "Minimum Index Sum of Two Lists",
      "titleSlug": "minimum-index-sum-of-two-lists",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two arrays of strings <code>list1</code> and <code>list2</code>, find the <strong>common strings with the least index sum</strong>.</p>\n\n<p>A <strong>common string</strong> is a string that appeared in both <code>list1</code> and <code>list2</code>.</p>\n\n<p>A <strong>common string with the least index sum</strong> is a common string such that if it appeared at <code>list1[i]</code> and <code>list2[j]</code> then <code>i + j</code> should be the minimum value among all the other <strong>common strings</strong>.</p>\n\n<p>Return <em>all the <strong>common strings with the least index sum</strong></em>. Return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> list1 = [&quot;Shogun&quot;,&quot;Tapioca Express&quot;,&quot;Burger King&quot;,&quot;KFC&quot;], list2 = [&quot;Piatti&quot;,&quot;The Grill at Torrey Pines&quot;,&quot;Hungry Hunter Steakhouse&quot;,&quot;Shogun&quot;]\n<strong>Output:</strong> [&quot;Shogun&quot;]\n<strong>Explanation:</strong> The only common string is &quot;Shogun&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> list1 = [&quot;Shogun&quot;,&quot;Tapioca Express&quot;,&quot;Burger King&quot;,&quot;KFC&quot;], list2 = [&quot;KFC&quot;,&quot;Shogun&quot;,&quot;Burger King&quot;]\n<strong>Output:</strong> [&quot;Shogun&quot;]\n<strong>Explanation:</strong> The common string with the least index sum is &quot;Shogun&quot; with index sum = (0 + 1) = 1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> list1 = [&quot;happy&quot;,&quot;sad&quot;,&quot;good&quot;], list2 = [&quot;sad&quot;,&quot;happy&quot;,&quot;good&quot;]\n<strong>Output:</strong> [&quot;sad&quot;,&quot;happy&quot;]\n<strong>Explanation:</strong> There are three common strings:\n&quot;happy&quot; with index sum = (0 + 1) = 1.\n&quot;sad&quot; with index sum = (1 + 0) = 1.\n&quot;good&quot; with index sum = (2 + 2) = 4.\nThe strings with the least index sum are &quot;sad&quot; and &quot;happy&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= list1.length, list2.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= list1[i].length, list2[i].length &lt;= 30</code></li>\n\t<li><code>list1[i]</code> and <code>list2[i]</code> consist of spaces <code>&#39; &#39;</code> and English letters.</li>\n\t<li>All the strings of <code>list1</code> are <strong>unique</strong>.</li>\n\t<li>All the strings of <code>list2</code> are <strong>unique</strong>.</li>\n\t<li>There is at least a common string between <code>list1</code> and <code>list2</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"]\n[\"Piatti\",\"The Grill at Torrey Pines\",\"Hungry Hunter Steakhouse\",\"Shogun\"]\n[\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"]\n[\"KFC\",\"Shogun\",\"Burger King\"]\n[\"happy\",\"sad\",\"good\"]\n[\"sad\",\"happy\",\"good\"]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "147",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1952,
      "dislikes": 399,
      "similarQuestions": "[{\"title\": \"Intersection of Two Linked Lists\", \"titleSlug\": \"intersection-of-two-linked-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486324,
      "commentCount": 34,
      "topLevelCommentCount": 24
    },
    "classAndMethodDefinition": "def findRestaurant(self, list1: List[str], list2: List[str]) -> List[str]:\n\\t\\t\\tdic1 = {restaurant:i for i, restaurant in enumerate(list1)}"
  },
  {
    "stat": {
      "question_id": 998,
      "question__article__live": true,
      "question__article__slug": "check-completeness-of-a-binary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Check Completeness of a Binary Tree",
      "question__title_slug": "check-completeness-of-a-binary-tree",
      "question__hide": false,
      "total_acs": 245034,
      "total_submitted": 428284,
      "frontend_question_id": 958,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/check-completeness-of-a-binary-tree",
      "questionId": "998",
      "questionFrontendId": "958",
      "questionTitle": "Check Completeness of a Binary Tree",
      "titleSlug": "check-completeness-of-a-binary-tree",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, determine if it is a <em>complete binary tree</em>.</p>\n\n<p>In a <strong><a href=\"http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees\" target=\"_blank\">complete binary tree</a></strong>, every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between <code>1</code> and <code>2<sup>h</sup></code> nodes inclusive at the last level <code>h</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/15/complete-binary-tree-1.png\" style=\"width: 180px; height: 145px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,6]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Every level before the last is full (ie. levels with node-values {1} and {2, 3}), and all nodes in the last level ({4, 5, 6}) are as far left as possible.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/15/complete-binary-tree-2.png\" style=\"width: 200px; height: 145px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,null,7]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The node with value 7 isn&#39;t as far left as possible.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 100]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5,6]\n[1,2,3,4,5,null,7]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1787",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4297,
      "dislikes": 60,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486701,
      "commentCount": 61,
      "topLevelCommentCount": 38
    },
    "classAndMethodDefinition": "from collections import deque\n"
  },
  {
    "stat": {
      "question_id": 1092,
      "question__article__live": true,
      "question__article__slug": "maximum-difference-between-node-and-ancestor",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Difference Between Node and Ancestor",
      "question__title_slug": "maximum-difference-between-node-and-ancestor",
      "question__hide": false,
      "total_acs": 333795,
      "total_submitted": 427452,
      "frontend_question_id": 1026,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",
      "questionId": "1092",
      "questionFrontendId": "1026",
      "questionTitle": "Maximum Difference Between Node and Ancestor",
      "titleSlug": "maximum-difference-between-node-and-ancestor",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary tree, find the maximum value <code>v</code> for which there exist <strong>different</strong> nodes <code>a</code> and <code>b</code> where <code>v = |a.val - b.val|</code> and <code>a</code> is an ancestor of <code>b</code>.</p>\n\n<p>A node <code>a</code> is an ancestor of <code>b</code> if either: any child of <code>a</code> is equal to <code>b</code>&nbsp;or any child of <code>a</code> is an ancestor of <code>b</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/09/tmp-tree.jpg\" style=\"width: 400px; height: 390px;\" />\n<pre>\n<strong>Input:</strong> root = [8,3,10,1,6,null,14,null,null,4,7,13]\n<strong>Output:</strong> 7\n<strong>Explanation: </strong>We have various ancestor-node differences, some of which are given below :\n|8 - 3| = 5\n|3 - 7| = 4\n|8 - 1| = 7\n|10 - 13| = 3\nAmong all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/09/tmp-tree-1.jpg\" style=\"width: 250px; height: 349px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2,null,0,3]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 5000]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[8,3,10,1,6,null,14,null,null,4,7,13]\n[1,null,2,null,0,3]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [
        "For each subtree, find the minimum value and maximum value of its descendants."
      ],
      "solution": {
        "id": "1027",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4940,
      "dislikes": 166,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486794,
      "commentCount": 188,
      "topLevelCommentCount": 98
    },
    "classAndMethodDefinition": "# Definition for a binary tree node.\n# class TreeNode(object):"
  },
  {
    "stat": {
      "question_id": 1829,
      "question__article__live": true,
      "question__article__slug": "maximum-units-on-a-truck",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Units on a Truck",
      "question__title_slug": "maximum-units-on-a-truck",
      "question__hide": false,
      "total_acs": 314199,
      "total_submitted": 425869,
      "frontend_question_id": 1710,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-units-on-a-truck",
      "questionId": "1829",
      "questionFrontendId": "1710",
      "questionTitle": "Maximum Units on a Truck",
      "titleSlug": "maximum-units-on-a-truck",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are assigned to put some amount of boxes onto <strong>one truck</strong>. You are given a 2D array <code>boxTypes</code>, where <code>boxTypes[i] = [numberOfBoxes<sub>i</sub>, numberOfUnitsPerBox<sub>i</sub>]</code>:</p>\n\n<ul>\n\t<li><code>numberOfBoxes<sub>i</sub></code> is the number of boxes of type <code>i</code>.</li>\n\t<li><code>numberOfUnitsPerBox<sub>i</sub></code><sub> </sub>is the number of units in each box of the type <code>i</code>.</li>\n</ul>\n\n<p>You are also given an integer <code>truckSize</code>, which is the <strong>maximum</strong> number of <strong>boxes</strong> that can be put on the truck. You can choose any boxes to put on the truck as long as the number&nbsp;of boxes does not exceed <code>truckSize</code>.</p>\n\n<p>Return <em>the <strong>maximum</strong> total number of <strong>units</strong> that can be put on the truck.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> boxTypes = [[1,3],[2,2],[3,1]], truckSize = 4\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> There are:\n- 1 box of the first type that contains 3 units.\n- 2 boxes of the second type that contain 2 units each.\n- 3 boxes of the third type that contain 1 unit each.\nYou can take all the boxes of the first and second types, and one box of the third type.\nThe total number of units will be = (1 * 3) + (2 * 2) + (1 * 1) = 8.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> boxTypes = [[5,10],[2,5],[4,7],[3,9]], truckSize = 10\n<strong>Output:</strong> 91\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= boxTypes.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= numberOfBoxes<sub>i</sub>, numberOfUnitsPerBox<sub>i</sub> &lt;= 1000</code></li>\n\t<li><code>1 &lt;= truckSize &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[1,3],[2,2],[3,1]]\n4\n[[5,10],[2,5],[4,7],[3,9]]\n10",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "If we have space for at least one box, it's always optimal to put the box with the most units.",
        "Sort the box types with the number of units per box non-increasingly.",
        "Iterate on the box types and take from each type as many as you can."
      ],
      "solution": {
        "id": "1101",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3833,
      "dislikes": 222,
      "similarQuestions": "[{\"title\": \"Maximum Bags With Full Capacity of Rocks\", \"titleSlug\": \"maximum-bags-with-full-capacity-of-rocks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487501,
      "commentCount": 30,
      "topLevelCommentCount": 16
    },
    "classAndMethodDefinition": "def maximumUnits(self, boxTypes: List[List[int]], truckSize: int) -> int:\n\\tboxTypes.sort(key=lambda a:-a[1])"
  },
  {
    "stat": {
      "question_id": 922,
      "question__article__live": true,
      "question__article__slug": "possible-bipartition",
      "question__article__has_video_solution": false,
      "question__title": "Possible Bipartition",
      "question__title_slug": "possible-bipartition",
      "question__hide": false,
      "total_acs": 215644,
      "total_submitted": 424926,
      "frontend_question_id": 886,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/possible-bipartition",
      "questionId": "922",
      "questionFrontendId": "886",
      "questionTitle": "Possible Bipartition",
      "titleSlug": "possible-bipartition",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>We want to split a group of <code>n</code> people (labeled from <code>1</code> to <code>n</code>) into two groups of <strong>any size</strong>. Each person may dislike some other people, and they should not go into the same group.</p>\n\n<p>Given the integer <code>n</code> and the array <code>dislikes</code> where <code>dislikes[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that the person labeled <code>a<sub>i</sub></code> does not like the person labeled <code>b<sub>i</sub></code>, return <code>true</code> <em>if it is possible to split everyone into two groups in this way</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, dislikes = [[1,2],[1,3],[2,4]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The first group has [1,4], and the second group has [2,3].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, dislikes = [[1,2],[1,3],[2,3]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> We need at least 3 groups to divide them. We cannot put them in two groups.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2000</code></li>\n\t<li><code>0 &lt;= dislikes.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>dislikes[i].length == 2</code></li>\n\t<li><code>1 &lt;= a<sub>i</sub> &lt; b<sub>i</sub> &lt;= n</code></li>\n\t<li>All the pairs of <code>dislikes</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "4\n[[1,2],[1,3],[2,4]]\n3\n[[1,2],[1,3],[2,3]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1618",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4680,
      "dislikes": 111,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486629,
      "commentCount": 116,
      "topLevelCommentCount": 57
    },
    "classAndMethodDefinition": "class Solution:\n    def possibleBipartition(self, N: int, dislikes: List[List[int]]) -> bool:"
  },
  {
    "stat": {
      "question_id": 950,
      "question__article__live": true,
      "question__article__slug": "x-of-a-kind-in-a-deck-of-cards",
      "question__article__has_video_solution": false,
      "question__title": "X of a Kind in a Deck of Cards",
      "question__title_slug": "x-of-a-kind-in-a-deck-of-cards",
      "question__hide": false,
      "total_acs": 126931,
      "total_submitted": 424318,
      "frontend_question_id": 914,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards",
      "questionId": "950",
      "questionFrontendId": "914",
      "questionTitle": "X of a Kind in a Deck of Cards",
      "titleSlug": "x-of-a-kind-in-a-deck-of-cards",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>deck</code> where <code>deck[i]</code> represents the number written on the <code>i<sup>th</sup></code> card.</p>\n\n<p>Partition the cards into <strong>one or more groups</strong> such that:</p>\n\n<ul>\n\t<li>Each group has <strong>exactly</strong> <code>x</code> cards where <code>x &gt; 1</code>, and</li>\n\t<li>All the cards in one group have the same integer written on them.</li>\n</ul>\n\n<p>Return <code>true</code><em> if such partition is possible, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> deck = [1,2,3,4,4,3,2,1]\n<strong>Output:</strong> true\n<strong>Explanation</strong>: Possible partition [1,1],[2,2],[3,3],[4,4].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> deck = [1,1,1,2,2,2,3,3]\n<strong>Output:</strong> false\n<strong>Explanation</strong>: No possible partition.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= deck.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= deck[i] &lt; 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,4,3,2,1]\n[1,1,1,2,2,2,3,3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        },
        {
          "name": "Number Theory",
          "slug": "number-theory",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "573",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1820,
      "dislikes": 518,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486657,
      "commentCount": 66,
      "topLevelCommentCount": 37
    },
    "classAndMethodDefinition": "def hasGroupsSizeX(self, deck: List[int]) -> bool:\n        "
  },
  {
    "stat": {
      "question_id": 506,
      "question__article__live": true,
      "question__article__slug": "relative-ranks",
      "question__article__has_video_solution": false,
      "question__title": "Relative Ranks",
      "question__title_slug": "relative-ranks",
      "question__hide": false,
      "total_acs": 304138,
      "total_submitted": 422062,
      "frontend_question_id": 506,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/relative-ranks",
      "questionId": "506",
      "questionFrontendId": "506",
      "questionTitle": "Relative Ranks",
      "titleSlug": "relative-ranks",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>score</code> of size <code>n</code>, where <code>score[i]</code> is the score of the <code>i<sup>th</sup></code> athlete in a competition. All the scores are guaranteed to be <strong>unique</strong>.</p>\n\n<p>The athletes are <strong>placed</strong> based on their scores, where the <code>1<sup>st</sup></code> place athlete has the highest score, the <code>2<sup>nd</sup></code> place athlete has the <code>2<sup>nd</sup></code> highest score, and so on. The placement of each athlete determines their rank:</p>\n\n<ul>\n\t<li>The <code>1<sup>st</sup></code> place athlete&#39;s rank is <code>&quot;Gold Medal&quot;</code>.</li>\n\t<li>The <code>2<sup>nd</sup></code> place athlete&#39;s rank is <code>&quot;Silver Medal&quot;</code>.</li>\n\t<li>The <code>3<sup>rd</sup></code> place athlete&#39;s rank is <code>&quot;Bronze Medal&quot;</code>.</li>\n\t<li>For the <code>4<sup>th</sup></code> place to the <code>n<sup>th</sup></code> place athlete, their rank is their placement number (i.e., the <code>x<sup>th</sup></code> place athlete&#39;s rank is <code>&quot;x&quot;</code>).</li>\n</ul>\n\n<p>Return an array <code>answer</code> of size <code>n</code> where <code>answer[i]</code> is the <strong>rank</strong> of the <code>i<sup>th</sup></code> athlete.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> score = [5,4,3,2,1]\n<strong>Output:</strong> [&quot;Gold Medal&quot;,&quot;Silver Medal&quot;,&quot;Bronze Medal&quot;,&quot;4&quot;,&quot;5&quot;]\n<strong>Explanation:</strong> The placements are [1<sup>st</sup>, 2<sup>nd</sup>, 3<sup>rd</sup>, 4<sup>th</sup>, 5<sup>th</sup>].</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> score = [10,3,8,9,4]\n<strong>Output:</strong> [&quot;Gold Medal&quot;,&quot;5&quot;,&quot;Bronze Medal&quot;,&quot;Silver Medal&quot;,&quot;4&quot;]\n<strong>Explanation:</strong> The placements are [1<sup>st</sup>, 5<sup>th</sup>, 3<sup>rd</sup>, 2<sup>nd</sup>, 4<sup>th</sup>].\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == score.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= score[i] &lt;= 10<sup>6</sup></code></li>\n\t<li>All the values in <code>score</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "exampleTestcases": "[5,4,3,2,1]\n[10,3,8,9,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2305",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1924,
      "dislikes": 126,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486235,
      "commentCount": 175,
      "topLevelCommentCount": 91
    },
    "classAndMethodDefinition": "class Solution:\n    def findRelativeRanks(self, score: List[int]) -> List[str]:"
  },
  {
    "stat": {
      "question_id": 473,
      "question__article__live": true,
      "question__article__slug": "matchsticks-to-square",
      "question__article__has_video_solution": false,
      "question__title": "Matchsticks to Square",
      "question__title_slug": "matchsticks-to-square",
      "question__hide": false,
      "total_acs": 169766,
      "total_submitted": 420179,
      "frontend_question_id": 473,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/matchsticks-to-square",
      "questionId": "473",
      "questionFrontendId": "473",
      "questionTitle": "Matchsticks to Square",
      "titleSlug": "matchsticks-to-square",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>matchsticks</code> where <code>matchsticks[i]</code> is the length of the <code>i<sup>th</sup></code> matchstick. You want to use <strong>all the matchsticks</strong> to make one square. You <strong>should not break</strong> any stick, but you can link them up, and each matchstick must be used <strong>exactly one time</strong>.</p>\n\n<p>Return <code>true</code> if you can make this square and <code>false</code> otherwise.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/09/matchsticks1-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> matchsticks = [1,1,2,2,2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can form a square with length 2, one side of the square came two sticks with length 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> matchsticks = [3,3,3,3,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You cannot find a way to form a square with all the matchsticks.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= matchsticks.length &lt;= 15</code></li>\n\t<li><code>1 &lt;= matchsticks[i] &lt;= 10<sup>8</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,2,2,2]\n[3,3,3,3,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        },
        {
          "name": "Bitmask",
          "slug": "bitmask",
          "translatedName": null
        }
      ],
      "hints": [
        "Treat the matchsticks as an array. Can we split the array into 4 equal parts?",
        "Every matchstick can belong to either of the 4 sides. We don't know which one. Maybe try out all options!",
        "For every matchstick, we have to try out each of the 4 options i.e. which side it can belong to. We can make use of recursion for this.",
        "We don't really need to keep track of which matchsticks belong to a particular side during recursion. We just need to keep track of the <b>length</b> of each of the 4 sides.",
        "When all matchsticks have been used we simply need to see the length of all 4 sides. If they're equal, we have a square on our hands!"
      ],
      "solution": {
        "id": "540",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3832,
      "dislikes": 297,
      "similarQuestions": "[{\"title\": \"Maximum Rows Covered by Columns\", \"titleSlug\": \"maximum-rows-covered-by-columns\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486203,
      "commentCount": 41,
      "topLevelCommentCount": 26
    },
    "classAndMethodDefinition": "def makesquare(self, matchsticks: List[int]) -> bool:\n        value = sum(matchsticks)"
  },
  {
    "stat": {
      "question_id": 406,
      "question__article__live": true,
      "question__article__slug": "queue-reconstruction-by-height",
      "question__article__has_video_solution": false,
      "question__title": "Queue Reconstruction by Height",
      "question__title_slug": "queue-reconstruction-by-height",
      "question__hide": false,
      "total_acs": 308095,
      "total_submitted": 418123,
      "frontend_question_id": 406,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/queue-reconstruction-by-height",
      "questionId": "406",
      "questionFrontendId": "406",
      "questionTitle": "Queue Reconstruction by Height",
      "titleSlug": "queue-reconstruction-by-height",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of people, <code>people</code>, which are the attributes of some people in a queue (not necessarily in order). Each <code>people[i] = [h<sub>i</sub>, k<sub>i</sub>]</code> represents the <code>i<sup>th</sup></code> person of height <code>h<sub>i</sub></code> with <strong>exactly</strong> <code>k<sub>i</sub></code> other people in front who have a height greater than or equal to <code>h<sub>i</sub></code>.</p>\n\n<p>Reconstruct and return <em>the queue that is represented by the input array </em><code>people</code>. The returned queue should be formatted as an array <code>queue</code>, where <code>queue[j] = [h<sub>j</sub>, k<sub>j</sub>]</code> is the attributes of the <code>j<sup>th</sup></code> person in the queue (<code>queue[0]</code> is the person at the front of the queue).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]\n<strong>Output:</strong> [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]\n<strong>Explanation:</strong>\nPerson 0 has height 5 with no other people taller or the same height in front.\nPerson 1 has height 7 with no other people taller or the same height in front.\nPerson 2 has height 5 with two persons taller or the same height in front, which is person 0 and 1.\nPerson 3 has height 6 with one person taller or the same height in front, which is person 1.\nPerson 4 has height 4 with four people taller or the same height in front, which are people 0, 1, 2, and 3.\nPerson 5 has height 7 with one person taller or the same height in front, which is person 1.\nHence [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] is the reconstructed queue.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]\n<strong>Output:</strong> [[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= people.length &lt;= 2000</code></li>\n\t<li><code>0 &lt;= h<sub>i</sub> &lt;= 10<sup>6</sup></code></li>\n\t<li><code>0 &lt;= k<sub>i</sub> &lt; people.length</code></li>\n\t<li>It is guaranteed that the queue can be reconstructed.</li>\n</ul>\n",
      "exampleTestcases": "[[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]\n[[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree",
          "translatedName": null
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "What can you say about the position of the shortest person? </br>\r\nIf the position of the shortest person is <i>i</i>, how many people would be in front of the shortest person?",
        "Once you fix the position of the shortest person, what can you say about the position of the second shortest person?"
      ],
      "solution": {
        "id": "754",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 7089,
      "dislikes": 720,
      "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Reward Top K Students\", \"titleSlug\": \"reward-top-k-students\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486143,
      "commentCount": 43,
      "topLevelCommentCount": 35
    },
    "classAndMethodDefinition": "def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:\n        result = []"
  },
  {
    "stat": {
      "question_id": 800,
      "question__article__live": true,
      "question__article__slug": "letter-case-permutation",
      "question__article__has_video_solution": false,
      "question__title": "Letter Case Permutation",
      "question__title_slug": "letter-case-permutation",
      "question__hide": false,
      "total_acs": 310795,
      "total_submitted": 417545,
      "frontend_question_id": 784,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/letter-case-permutation",
      "questionId": "800",
      "questionFrontendId": "784",
      "questionTitle": "Letter Case Permutation",
      "titleSlug": "letter-case-permutation",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a string <code>s</code>, you&nbsp;can transform every letter individually to be lowercase or uppercase to create another string.</p>\n\n<p>Return <em>a list of all possible strings we could create</em>. Return the output in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a1b2&quot;\n<strong>Output:</strong> [&quot;a1b2&quot;,&quot;a1B2&quot;,&quot;A1b2&quot;,&quot;A1B2&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;3z4&quot;\n<strong>Output:</strong> [&quot;3z4&quot;,&quot;3Z4&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 12</code></li>\n\t<li><code>s</code> consists of lowercase English letters, uppercase English letters, and digits.</li>\n</ul>\n",
      "exampleTestcases": "\"a1b2\"\n\"3z4\"",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Backtracking",
          "slug": "backtracking",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "416",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4664,
      "dislikes": 156,
      "similarQuestions": "[{\"title\": \"Subsets\", \"titleSlug\": \"subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Brace Expansion\", \"titleSlug\": \"brace-expansion\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486512,
      "commentCount": 26,
      "topLevelCommentCount": 20
    },
    "classAndMethodDefinition": "def letterCasePermutation(self, S):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 994,
      "question__article__live": true,
      "question__article__slug": "prison-cells-after-n-days",
      "question__article__has_video_solution": false,
      "question__title": "Prison Cells After N Days",
      "question__title_slug": "prison-cells-after-n-days",
      "question__hide": false,
      "total_acs": 162598,
      "total_submitted": 416837,
      "frontend_question_id": 957,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/prison-cells-after-n-days",
      "questionId": "994",
      "questionFrontendId": "957",
      "questionTitle": "Prison Cells After N Days",
      "titleSlug": "prison-cells-after-n-days",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are <code>8</code> prison cells in a row and each cell is either occupied or vacant.</p>\n\n<p>Each day, whether the cell is occupied or vacant changes according to the following rules:</p>\n\n<ul>\n\t<li>If a cell has two adjacent neighbors that are both occupied or both vacant, then the cell becomes occupied.</li>\n\t<li>Otherwise, it becomes vacant.</li>\n</ul>\n\n<p><strong>Note</strong> that because the prison is a row, the first and the last cells in the row can&#39;t have two adjacent neighbors.</p>\n\n<p>You are given an integer array <code>cells</code> where <code>cells[i] == 1</code> if the <code>i<sup>th</sup></code> cell is occupied and <code>cells[i] == 0</code> if the <code>i<sup>th</sup></code> cell is vacant, and you are given an integer <code>n</code>.</p>\n\n<p>Return the state of the prison after <code>n</code> days (i.e., <code>n</code> such changes described above).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> cells = [0,1,0,1,1,0,0,1], n = 7\n<strong>Output:</strong> [0,0,1,1,0,0,0,0]\n<strong>Explanation:</strong> The following table summarizes the state of the prison on each day:\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> cells = [1,0,0,1,0,0,1,0], n = 1000000000\n<strong>Output:</strong> [0,0,1,1,1,1,1,0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>cells.length == 8</code></li>\n\t<li><code>cells[i]</code>&nbsp;is either <code>0</code> or <code>1</code>.</li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[0,1,0,1,1,0,0,1]\n7\n[1,0,0,1,0,0,1,0]\n1000000000",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "963",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1494,
      "dislikes": 1756,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486700,
      "commentCount": 28,
      "topLevelCommentCount": 19
    },
    "classAndMethodDefinition": "def nextday(cells):\n            next_day_cells = [0] *len(cells)"
  },
  {
    "stat": {
      "question_id": 449,
      "question__article__live": true,
      "question__article__slug": "serialize-and-deserialize-bst",
      "question__article__has_video_solution": false,
      "question__title": "Serialize and Deserialize BST",
      "question__title_slug": "serialize-and-deserialize-bst",
      "question__hide": false,
      "total_acs": 240649,
      "total_submitted": 415486,
      "frontend_question_id": 449,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/serialize-and-deserialize-bst",
      "questionId": "449",
      "questionFrontendId": "449",
      "questionTitle": "Serialize and Deserialize BST",
      "titleSlug": "serialize-and-deserialize-bst",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Serialization is converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.</p>\n\n<p>Design an algorithm to serialize and deserialize a <b>binary search tree</b>. There is no restriction on how your serialization/deserialization algorithm should work. You need to ensure that a binary search tree can be serialized to a string, and this string can be deserialized to the original tree structure.</p>\n\n<p><b>The encoded string should be as compact as possible.</b></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> [2,1,3]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>The input tree is <strong>guaranteed</strong> to be a binary search tree.</li>\n</ul>\n",
      "exampleTestcases": "[2,1,3]\n[]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "733",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3495,
      "dislikes": 171,
      "similarQuestions": "[{\"title\": \"Serialize and Deserialize Binary Tree\", \"titleSlug\": \"serialize-and-deserialize-binary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Duplicate Subtrees\", \"titleSlug\": \"find-duplicate-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize N-ary Tree\", \"titleSlug\": \"serialize-and-deserialize-n-ary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486180,
      "commentCount": 30,
      "topLevelCommentCount": 16
    },
    "classAndMethodDefinition": "def serialize(self, root: TreeNode) -> str:\n        \"\"\"Encodes a tree to a single string."
  },
  {
    "stat": {
      "question_id": 381,
      "question__article__live": true,
      "question__article__slug": "insert-delete-getrandom-o1-duplicates-allowed",
      "question__article__has_video_solution": false,
      "question__title": "Insert Delete GetRandom O(1) - Duplicates allowed",
      "question__title_slug": "insert-delete-getrandom-o1-duplicates-allowed",
      "question__hide": false,
      "total_acs": 147723,
      "total_submitted": 415232,
      "frontend_question_id": 381,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed",
      "questionId": "381",
      "questionFrontendId": "381",
      "questionTitle": "Insert Delete GetRandom O(1) - Duplicates allowed",
      "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p><code>RandomizedCollection</code> is a data structure that contains a collection of numbers, possibly duplicates (i.e., a multiset). It should support inserting and removing specific elements and also reporting a random element.</p>\n\n<p>Implement the <code>RandomizedCollection</code> class:</p>\n\n<ul>\n\t<li><code>RandomizedCollection()</code> Initializes the empty <code>RandomizedCollection</code> object.</li>\n\t<li><code>bool insert(int val)</code> Inserts an item <code>val</code> into the multiset, even if the item is already present. Returns <code>true</code> if the item is not present, <code>false</code> otherwise.</li>\n\t<li><code>bool remove(int val)</code> Removes an item <code>val</code> from the multiset if present. Returns <code>true</code> if the item is present, <code>false</code> otherwise. Note that if <code>val</code> has multiple occurrences in the multiset, we only remove one of them.</li>\n\t<li><code>int getRandom()</code> Returns a random element from the current multiset of elements. The probability of each element being returned is <strong>linearly related</strong> to the number of the same values the multiset contains.</li>\n</ul>\n\n<p>You must implement the functions of the class such that each function works on <strong>average</strong> <code>O(1)</code> time complexity.</p>\n\n<p><strong>Note:</strong> The test cases are generated such that <code>getRandom</code> will only be called if there is <strong>at least one</strong> item in the <code>RandomizedCollection</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;RandomizedCollection&quot;, &quot;insert&quot;, &quot;insert&quot;, &quot;insert&quot;, &quot;getRandom&quot;, &quot;remove&quot;, &quot;getRandom&quot;]\n[[], [1], [1], [2], [], [1], []]\n<strong>Output</strong>\n[null, true, false, true, 2, true, 1]\n\n<strong>Explanation</strong>\nRandomizedCollection randomizedCollection = new RandomizedCollection();\nrandomizedCollection.insert(1);   // return true since the collection does not contain 1.\n                                  // Inserts 1 into the collection.\nrandomizedCollection.insert(1);   // return false since the collection contains 1.\n                                  // Inserts another 1 into the collection. Collection now contains [1,1].\nrandomizedCollection.insert(2);   // return true since the collection does not contain 2.\n                                  // Inserts 2 into the collection. Collection now contains [1,1,2].\nrandomizedCollection.getRandom(); // getRandom should:\n                                  // - return 1 with probability 2/3, or\n                                  // - return 2 with probability 1/3.\nrandomizedCollection.remove(1);   // return true since the collection contains 1.\n                                  // Removes 1 from the collection. Collection now contains [1,2].\nrandomizedCollection.getRandom(); // getRandom should return 1 or 2, both equally likely.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= val &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>At most <code>2 * 10<sup>5</sup></code> calls <strong>in total</strong> will be made to <code>insert</code>, <code>remove</code>, and <code>getRandom</code>.</li>\n\t<li>There will be <strong>at least one</strong> element in the data structure when <code>getRandom</code> is called.</li>\n</ul>\n",
      "exampleTestcases": "[\"RandomizedCollection\",\"insert\",\"insert\",\"insert\",\"getRandom\",\"remove\",\"getRandom\"]\n[[],[1],[1],[2],[],[1],[]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Randomized",
          "slug": "randomized",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "745",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2297,
      "dislikes": 151,
      "similarQuestions": "[{\"title\": \"Insert Delete GetRandom O(1)\", \"titleSlug\": \"insert-delete-getrandom-o1\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486118,
      "commentCount": 34,
      "topLevelCommentCount": 24
    },
    "classAndMethodDefinition": "def __init__(self):\n        self.nums = []"
  },
  {
    "stat": {
      "question_id": 2634,
      "question__article__live": true,
      "question__article__slug": "minimum-common-value",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Common Value",
      "question__title_slug": "minimum-common-value",
      "question__hide": false,
      "total_acs": 243438,
      "total_submitted": 414727,
      "frontend_question_id": 2540,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-common-value",
      "questionId": "2634",
      "questionFrontendId": "2540",
      "questionTitle": "Minimum Common Value",
      "titleSlug": "minimum-common-value",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given two integer arrays <code>nums1</code> and <code>nums2</code>, sorted in non-decreasing order, return <em>the <strong>minimum integer common</strong> to both arrays</em>. If there is no common integer amongst <code>nums1</code> and <code>nums2</code>, return <code>-1</code>.</p>\n\n<p>Note that an integer is said to be <strong>common</strong> to <code>nums1</code> and <code>nums2</code> if both arrays have <strong>at least one</strong> occurrence of that integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3], nums2 = [2,4]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The smallest element common to both arrays is 2, so we return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3,6], nums2 = [2,3,4,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two common elements in the array 2 and 3 out of which 2 is the smallest, so 2 is returned.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums1[i], nums2[j] &lt;= 10<sup>9</sup></code></li>\n\t<li>Both <code>nums1</code> and <code>nums2</code> are sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,3]\n[2,4]\n[1,2,3,6]\n[2,3,4,5]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        }
      ],
      "hints": [
        "Try to use a set.",
        "Otherwise, try to use a two-pointer approach."
      ],
      "solution": {
        "id": "2251",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1127,
      "dislikes": 37,
      "similarQuestions": "[{\"title\": \"Intersection of Two Arrays\", \"titleSlug\": \"intersection-of-two-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Intersection of Two Arrays II\", \"titleSlug\": \"intersection-of-two-arrays-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2874131,
      "commentCount": 128,
      "topLevelCommentCount": 88
    },
    "classAndMethodDefinition": "class Solution(object):\n    def getCommon(self, nums1, nums2):"
  },
  {
    "stat": {
      "question_id": 1700,
      "question__article__live": true,
      "question__article__slug": "minimum-time-to-make-rope-colorful",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Time to Make Rope Colorful",
      "question__title_slug": "minimum-time-to-make-rope-colorful",
      "question__hide": false,
      "total_acs": 262735,
      "total_submitted": 412392,
      "frontend_question_id": 1578,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-time-to-make-rope-colorful",
      "questionId": "1700",
      "questionFrontendId": "1578",
      "questionTitle": "Minimum Time to Make Rope Colorful",
      "titleSlug": "minimum-time-to-make-rope-colorful",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Alice has <code>n</code> balloons arranged on a rope. You are given a <strong>0-indexed</strong> string <code>colors</code> where <code>colors[i]</code> is the color of the <code>i<sup>th</sup></code> balloon.</p>\n\n<p>Alice wants the rope to be <strong>colorful</strong>. She does not want <strong>two consecutive balloons</strong> to be of the same color, so she asks Bob for help. Bob can remove some balloons from the rope to make it <strong>colorful</strong>. You are given a <strong>0-indexed</strong> integer array <code>neededTime</code> where <code>neededTime[i]</code> is the time (in seconds) that Bob needs to remove the <code>i<sup>th</sup></code> balloon from the rope.</p>\n\n<p>Return <em>the <strong>minimum time</strong> Bob needs to make the rope <strong>colorful</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/12/13/ballon1.jpg\" style=\"width: 404px; height: 243px;\" />\n<pre>\n<strong>Input:</strong> colors = &quot;abaac&quot;, neededTime = [1,2,3,4,5]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> In the above image, &#39;a&#39; is blue, &#39;b&#39; is red, and &#39;c&#39; is green.\nBob can remove the blue balloon at index 2. This takes 3 seconds.\nThere are no longer two consecutive balloons of the same color. Total time = 3.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/12/13/balloon2.jpg\" style=\"width: 244px; height: 243px;\" />\n<pre>\n<strong>Input:</strong> colors = &quot;abc&quot;, neededTime = [1,2,3]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The rope is already colorful. Bob does not need to remove any balloons from the rope.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/12/13/balloon3.jpg\" style=\"width: 404px; height: 243px;\" />\n<pre>\n<strong>Input:</strong> colors = &quot;aabaa&quot;, neededTime = [1,2,3,4,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Bob will remove the balloons at indices 0 and 4. Each balloons takes 1 second to remove.\nThere are no longer two consecutive balloons of the same color. Total time = 1 + 1 = 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == colors.length == neededTime.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= neededTime[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>colors</code> contains only lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "\"abaac\"\n[1,2,3,4,5]\n\"abc\"\n[1,2,3]\n\"aabaa\"\n[1,2,3,4,1]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [
        "Maintain the running sum and max value for repeated letters."
      ],
      "solution": {
        "id": "1555",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3824,
      "dislikes": 135,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487373,
      "commentCount": 158,
      "topLevelCommentCount": 103
    },
    "classAndMethodDefinition": "class Solution:\n    def minCost(self, colors: str, neededTime: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 646,
      "question__article__live": true,
      "question__article__slug": "maximum-length-of-pair-chain",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Length of Pair Chain",
      "question__title_slug": "maximum-length-of-pair-chain",
      "question__hide": false,
      "total_acs": 247591,
      "total_submitted": 411592,
      "frontend_question_id": 646,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-length-of-pair-chain",
      "questionId": "646",
      "questionFrontendId": "646",
      "questionTitle": "Maximum Length of Pair Chain",
      "titleSlug": "maximum-length-of-pair-chain",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an array of <code>n</code> pairs <code>pairs</code> where <code>pairs[i] = [left<sub>i</sub>, right<sub>i</sub>]</code> and <code>left<sub>i</sub> &lt; right<sub>i</sub></code>.</p>\n\n<p>A pair <code>p2 = [c, d]</code> <strong>follows</strong> a pair <code>p1 = [a, b]</code> if <code>b &lt; c</code>. A <strong>chain</strong> of pairs can be formed in this fashion.</p>\n\n<p>Return <em>the length longest chain which can be formed</em>.</p>\n\n<p>You do not need to use up all the given intervals. You can select pairs in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> pairs = [[1,2],[2,3],[3,4]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The longest chain is [1,2] -&gt; [3,4].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> pairs = [[1,2],[7,8],[4,5]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The longest chain is [1,2] -&gt; [4,5] -&gt; [7,8].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == pairs.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= left<sub>i</sub> &lt; right<sub>i</sub> &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[[1,2],[2,3],[3,4]]\n[[1,2],[7,8],[4,5]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1976",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4608,
      "dislikes": 132,
      "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-decreasing Subsequences\", \"titleSlug\": \"non-decreasing-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Non-decreasing Subarray From Two Arrays\", \"titleSlug\": \"longest-non-decreasing-subarray-from-two-arrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486369,
      "commentCount": 111,
      "topLevelCommentCount": 64
    },
    "classAndMethodDefinition": "def findLongestChain(self, pairs: List[List[int]]) -> int:\n        pairs.sort(key=lambda x: x[1])"
  },
  {
    "stat": {
      "question_id": 1549,
      "question__article__live": true,
      "question__article__slug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
      "question__article__has_video_solution": false,
      "question__title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
      "question__title_slug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
      "question__hide": false,
      "total_acs": 232683,
      "total_submitted": 411007,
      "frontend_question_id": 1438,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
      "questionId": "1549",
      "questionFrontendId": "1438",
      "questionTitle": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
      "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code> and an integer <code>limit</code>, return the size of the longest <strong>non-empty</strong> subarray such that the absolute difference between any two elements of this subarray is less than or equal to <code>limit</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [8,2,4,7], limit = 4\n<strong>Output:</strong> 2 \n<strong>Explanation:</strong> All subarrays are: \n[8] with maximum absolute diff |8-8| = 0 &lt;= 4.\n[8,2] with maximum absolute diff |8-2| = 6 &gt; 4. \n[8,2,4] with maximum absolute diff |8-2| = 6 &gt; 4.\n[8,2,4,7] with maximum absolute diff |8-2| = 6 &gt; 4.\n[2] with maximum absolute diff |2-2| = 0 &lt;= 4.\n[2,4] with maximum absolute diff |2-4| = 2 &lt;= 4.\n[2,4,7] with maximum absolute diff |2-7| = 5 &gt; 4.\n[4] with maximum absolute diff |4-4| = 0 &lt;= 4.\n[4,7] with maximum absolute diff |4-7| = 3 &lt;= 4.\n[7] with maximum absolute diff |7-7| = 0 &lt;= 4. \nTherefore, the size of the longest subarray is 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,1,2,4,7,2], limit = 5\n<strong>Output:</strong> 4 \n<strong>Explanation:</strong> The subarray [2,4,7,2] is the longest since the maximum absolute diff is |2-7| = 5 &lt;= 5.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,2,2,4,4,2,2], limit = 0\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= limit &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[8,2,4,7]\n4\n[10,1,2,4,7,2]\n5\n[4,2,2,2,4,4,2,2]\n0",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set",
          "translatedName": null
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue",
          "translatedName": null
        }
      ],
      "hints": [
        "Use a sliding window approach keeping the maximum and minimum value using a data structure like a multiset from STL in C++.",
        "More specifically, use the two pointer technique, moving the right pointer as far as possible to the right until the subarray is not valid (maxValue - minValue > limit), then moving the left pointer until the subarray is valid again (maxValue - minValue <= limit). Keep repeating this process."
      ],
      "solution": {
        "id": "2349",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4071,
      "dislikes": 192,
      "similarQuestions": "[{\"title\": \"Partition Array Such That Maximum Difference Is K\", \"titleSlug\": \"partition-array-such-that-maximum-difference-is-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Subarrays With Fixed Bounds\", \"titleSlug\": \"count-subarrays-with-fixed-bounds\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487240,
      "commentCount": 241,
      "topLevelCommentCount": 151
    },
    "classAndMethodDefinition": "class Solution:\n    def longestSubarray(self, nums: List[int], limit: int) -> int:"
  },
  {
    "stat": {
      "question_id": 1575,
      "question__article__live": true,
      "question__article__slug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
      "question__title_slug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
      "question__hide": false,
      "total_acs": 168606,
      "total_submitted": 410420,
      "frontend_question_id": 1465,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
      "questionId": "1575",
      "questionFrontendId": "1465",
      "questionTitle": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
      "titleSlug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given a rectangular cake of size <code>h x w</code> and two arrays of integers <code>horizontalCuts</code> and <code>verticalCuts</code> where:</p>\n\n<ul>\n\t<li><code>horizontalCuts[i]</code> is the distance from the top of the rectangular cake to the <code>i<sup>th</sup></code> horizontal cut and similarly, and</li>\n\t<li><code>verticalCuts[j]</code> is the distance from the left of the rectangular cake to the <code>j<sup>th</sup></code> vertical cut.</li>\n</ul>\n\n<p>Return <em>the maximum area of a piece of cake after you cut at each horizontal and vertical position provided in the arrays</em> <code>horizontalCuts</code> <em>and</em> <code>verticalCuts</code>. Since the answer can be a large number, return this <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/14/leetcode_max_area_2.png\" style=\"width: 225px; height: 240px;\" />\n<pre>\n<strong>Input:</strong> h = 5, w = 4, horizontalCuts = [1,2,4], verticalCuts = [1,3]\n<strong>Output:</strong> 4 \n<strong>Explanation:</strong> The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green piece of cake has the maximum area.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/05/14/leetcode_max_area_3.png\" style=\"width: 225px; height: 240px;\" />\n<pre>\n<strong>Input:</strong> h = 5, w = 4, horizontalCuts = [3,1], verticalCuts = [1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green and yellow pieces of cake have the maximum area.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> h = 5, w = 4, horizontalCuts = [3], verticalCuts = [3]\n<strong>Output:</strong> 9\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= h, w &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= horizontalCuts.length &lt;= min(h - 1, 10<sup>5</sup>)</code></li>\n\t<li><code>1 &lt;= verticalCuts.length &lt;= min(w - 1, 10<sup>5</sup>)</code></li>\n\t<li><code>1 &lt;= horizontalCuts[i] &lt; h</code></li>\n\t<li><code>1 &lt;= verticalCuts[i] &lt; w</code></li>\n\t<li>All the elements in <code>horizontalCuts</code> are distinct.</li>\n\t<li>All the elements in <code>verticalCuts</code> are distinct.</li>\n</ul>\n",
      "exampleTestcases": "5\n4\n[1,2,4]\n[1,3]\n5\n4\n[3,1]\n[1]\n5\n4\n[3]\n[3]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "Sort the arrays, then compute the maximum difference between two consecutive elements for horizontal cuts and vertical cuts.",
        "The answer is the product of these maximum values in horizontal cuts and vertical cuts."
      ],
      "solution": {
        "id": "1142",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2620,
      "dislikes": 350,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487266,
      "commentCount": 14,
      "topLevelCommentCount": 9
    },
    "classAndMethodDefinition": "def maxArea(self, h: int, w: int, hc: List[int], vc: List[int]) -> int:\n        hc.sort()"
  },
  {
    "stat": {
      "question_id": 1184,
      "question__article__live": true,
      "question__article__slug": "car-pooling",
      "question__article__has_video_solution": false,
      "question__title": "Car Pooling",
      "question__title_slug": "car-pooling",
      "question__hide": false,
      "total_acs": 229447,
      "total_submitted": 409934,
      "frontend_question_id": 1094,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/car-pooling",
      "questionId": "1184",
      "questionFrontendId": "1094",
      "questionTitle": "Car Pooling",
      "titleSlug": "car-pooling",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There is a car with <code>capacity</code> empty seats. The vehicle only drives east (i.e., it cannot turn around and drive west).</p>\n\n<p>You are given the integer <code>capacity</code> and an array <code>trips</code> where <code>trips[i] = [numPassengers<sub>i</sub>, from<sub>i</sub>, to<sub>i</sub>]</code> indicates that the <code>i<sup>th</sup></code> trip has <code>numPassengers<sub>i</sub></code> passengers and the locations to pick them up and drop them off are <code>from<sub>i</sub></code> and <code>to<sub>i</sub></code> respectively. The locations are given as the number of kilometers due east from the car&#39;s initial location.</p>\n\n<p>Return <code>true</code><em> if it is possible to pick up and drop off all passengers for all the given trips, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> trips = [[2,1,5],[3,3,7]], capacity = 4\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> trips = [[2,1,5],[3,3,7]], capacity = 5\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= trips.length &lt;= 1000</code></li>\n\t<li><code>trips[i].length == 3</code></li>\n\t<li><code>1 &lt;= numPassengers<sub>i</sub> &lt;= 100</code></li>\n\t<li><code>0 &lt;= from<sub>i</sub> &lt; to<sub>i</sub> &lt;= 1000</code></li>\n\t<li><code>1 &lt;= capacity &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[[2,1,5],[3,3,7]]\n4\n[[2,1,5],[3,3,7]]\n5",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Simulation",
          "slug": "simulation",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        }
      ],
      "hints": [
        "Sort the pickup and dropoff events by location, then process them in order."
      ],
      "solution": {
        "id": "1005",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4470,
      "dislikes": 101,
      "similarQuestions": "[{\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486883,
      "commentCount": 30,
      "topLevelCommentCount": 20
    },
    "classAndMethodDefinition": "def carPooling(self, trips: List[List[int]], capacity: int) -> bool:\n        # Because from and to is between 0 and 1000. Idea is to store counts in an array of size 1001.  "
  },
  {
    "stat": {
      "question_id": 1293,
      "question__article__live": true,
      "question__article__slug": "three-consecutive-odds",
      "question__article__has_video_solution": false,
      "question__title": "Three Consecutive Odds",
      "question__title_slug": "three-consecutive-odds",
      "question__hide": false,
      "total_acs": 278146,
      "total_submitted": 407131,
      "frontend_question_id": 1550,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/three-consecutive-odds",
      "questionId": "1293",
      "questionFrontendId": "1550",
      "questionTitle": "Three Consecutive Odds",
      "titleSlug": "three-consecutive-odds",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "Given an integer array <code>arr</code>, return <code>true</code>&nbsp;if there are three consecutive odd numbers in the array. Otherwise, return&nbsp;<code>false</code>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,6,4,1]\n<strong>Output:</strong> false\n<b>Explanation:</b> There are no three consecutive odds.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,34,3,4,5,7,23,12]\n<strong>Output:</strong> true\n<b>Explanation:</b> [5,7,23] are three consecutive odds.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[2,6,4,1]\n[1,2,34,3,4,5,7,23,12]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        }
      ],
      "hints": [
        "Check every three consecutive numbers in the array for parity."
      ],
      "solution": {
        "id": "2356",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1133,
      "dislikes": 94,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486989,
      "commentCount": 228,
      "topLevelCommentCount": 160
    },
    "classAndMethodDefinition": "class Solution(object):\n    def threeConsecutiveOdds(self, arr):"
  },
  {
    "stat": {
      "question_id": 774,
      "question__article__live": true,
      "question__article__slug": "maximum-depth-of-n-ary-tree",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Depth of N-ary Tree",
      "question__title_slug": "maximum-depth-of-n-ary-tree",
      "question__hide": false,
      "total_acs": 292788,
      "total_submitted": 404510,
      "frontend_question_id": 559,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree",
      "questionId": "774",
      "questionFrontendId": "559",
      "questionTitle": "Maximum Depth of N-ary Tree",
      "titleSlug": "maximum-depth-of-n-ary-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a n-ary tree, find its maximum depth.</p>\n\n<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n\n<p><em>Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"width: 100%; max-width: 300px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,3,2,4,null,5,6]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"width: 296px; height: 241px;\" /></p>\n\n<pre>\n<strong>Input:</strong> root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>Output:</strong> 5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The total number of nodes is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li>The depth of the n-ary tree is less than or equal to <code>1000</code>.</li>\n</ul>\n",
      "exampleTestcases": "[1,null,3,2,4,null,5,6]\n[1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "576",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2776,
      "dislikes": 88,
      "similarQuestions": "[{\"title\": \"Maximum Depth of Binary Tree\", \"titleSlug\": \"maximum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"The Time When the Network Becomes Idle\", \"titleSlug\": \"the-time-when-the-network-becomes-idle\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count the Number of Good Nodes\", \"titleSlug\": \"count-the-number-of-good-nodes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486486,
      "commentCount": 18,
      "topLevelCommentCount": 11
    },
    "classAndMethodDefinition": "def maxDepth(self, root):\n        if not root: return 0"
  },
  {
    "stat": {
      "question_id": 719,
      "question__article__live": true,
      "question__article__slug": "find-k-th-smallest-pair-distance",
      "question__article__has_video_solution": false,
      "question__title": "Find K-th Smallest Pair Distance",
      "question__title_slug": "find-k-th-smallest-pair-distance",
      "question__hide": false,
      "total_acs": 182819,
      "total_submitted": 403890,
      "frontend_question_id": 719,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-k-th-smallest-pair-distance",
      "questionId": "719",
      "questionFrontendId": "719",
      "questionTitle": "Find K-th Smallest Pair Distance",
      "titleSlug": "find-k-th-smallest-pair-distance",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>The <strong>distance of a pair</strong> of integers <code>a</code> and <code>b</code> is defined as the absolute difference between <code>a</code> and <code>b</code>.</p>\n\n<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the</em> <code>k<sup>th</sup></code> <em>smallest <strong>distance among all the pairs</strong></em> <code>nums[i]</code> <em>and</em> <code>nums[j]</code> <em>where</em> <code>0 &lt;= i &lt; j &lt; nums.length</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,1], k = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Here are all the pairs:\n(1,3) -&gt; 2\n(1,1) -&gt; 0\n(3,1) -&gt; 2\nThen the 1<sup>st</sup> smallest distance pair is (1,1), and its distance is 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1], k = 2\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,6,1], k = 3\n<strong>Output:</strong> 5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= n * (n - 1) / 2</code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,1]\n1\n[1,1,1]\n2\n[1,6,1]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "Binary search for the answer.  How can you check how many pairs have distance <= X?"
      ],
      "solution": {
        "id": "2404",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3718,
      "dislikes": 117,
      "similarQuestions": "[{\"title\": \"Find K Pairs with Smallest Sums\", \"titleSlug\": \"find-k-pairs-with-smallest-sums\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K Closest Elements\", \"titleSlug\": \"find-k-closest-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Number in Multiplication Table\", \"titleSlug\": \"kth-smallest-number-in-multiplication-table\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"K-th Smallest Prime Fraction\", \"titleSlug\": \"k-th-smallest-prime-fraction\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Median of the Uniqueness Array\", \"titleSlug\": \"find-the-median-of-the-uniqueness-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486431,
      "commentCount": 252,
      "topLevelCommentCount": 141
    },
    "classAndMethodDefinition": "def smallestDistancePair(nums, k):\n    # Return: Is there k or more pairs with distance <= guess? i.e. are"
  },
  {
    "stat": {
      "question_id": 854,
      "question__article__live": true,
      "question__article__slug": "making-a-large-island",
      "question__article__has_video_solution": false,
      "question__title": "Making A Large Island",
      "question__title_slug": "making-a-large-island",
      "question__hide": false,
      "total_acs": 194903,
      "total_submitted": 402748,
      "frontend_question_id": 827,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/making-a-large-island",
      "questionId": "854",
      "questionFrontendId": "827",
      "questionTitle": "Making A Large Island",
      "titleSlug": "making-a-large-island",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given an <code>n x n</code> binary matrix <code>grid</code>. You are allowed to change <strong>at most one</strong> <code>0</code> to be <code>1</code>.</p>\n\n<p>Return <em>the size of the largest <strong>island</strong> in</em> <code>grid</code> <em>after applying this operation</em>.</p>\n\n<p>An <strong>island</strong> is a 4-directionally connected group of <code>1</code>s.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0],[0,1]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Change one 0 to 1 and connect two 1s, then we get an island with area = 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1],[1,0]]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>Change the 0 to 1 and make the island bigger, only one island with area = 4.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1],[1,1]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Can&#39;t change any 0 to 1, only one island with area = 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\n\t<li><code>grid[i][j]</code> is either <code>0</code> or <code>1</code>.</li>\n</ul>\n",
      "exampleTestcases": "[[1,0],[0,1]]\n[[1,1],[1,0]]\n[[1,1],[1,1]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Matrix",
          "slug": "matrix",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "456",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3950,
      "dislikes": 78,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486560,
      "commentCount": 45,
      "topLevelCommentCount": 33
    },
    "classAndMethodDefinition": "def largestIsland(self, grid: List[List[int]]) -> int:\n        n = len(grid)"
  },
  {
    "stat": {
      "question_id": 648,
      "question__article__live": true,
      "question__article__slug": "replace-words",
      "question__article__has_video_solution": false,
      "question__title": "Replace Words",
      "question__title_slug": "replace-words",
      "question__hide": false,
      "total_acs": 273819,
      "total_submitted": 402272,
      "frontend_question_id": 648,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/replace-words",
      "questionId": "648",
      "questionFrontendId": "648",
      "questionTitle": "Replace Words",
      "titleSlug": "replace-words",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>In English, we have a concept called <strong>root</strong>, which can be followed by some other word to form another longer word - let&#39;s call this word <strong>derivative</strong>. For example, when the <strong>root</strong> <code>&quot;help&quot;</code> is followed by the word <code>&quot;ful&quot;</code>, we can form a derivative <code>&quot;helpful&quot;</code>.</p>\n\n<p>Given a <code>dictionary</code> consisting of many <strong>roots</strong> and a <code>sentence</code> consisting of words separated by spaces, replace all the derivatives in the sentence with the <strong>root</strong> forming it. If a derivative can be replaced by more than one <strong>root</strong>, replace it with the <strong>root</strong> that has <strong>the shortest length</strong>.</p>\n\n<p>Return <em>the <code>sentence</code></em> after the replacement.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> dictionary = [&quot;cat&quot;,&quot;bat&quot;,&quot;rat&quot;], sentence = &quot;the cattle was rattled by the battery&quot;\n<strong>Output:</strong> &quot;the cat was rat by the bat&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> dictionary = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;], sentence = &quot;aadsfasf absbs bbab cadsfafs&quot;\n<strong>Output:</strong> &quot;a a b c&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= dictionary.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= dictionary[i].length &lt;= 100</code></li>\n\t<li><code>dictionary[i]</code> consists of only lower-case letters.</li>\n\t<li><code>1 &lt;= sentence.length &lt;= 10<sup>6</sup></code></li>\n\t<li><code>sentence</code> consists of only lower-case letters and spaces.</li>\n\t<li>The number of words in <code>sentence</code> is in the range <code>[1, 1000]</code></li>\n\t<li>The length of each word in <code>sentence</code> is in the range <code>[1, 1000]</code></li>\n\t<li>Every two consecutive words in <code>sentence</code> will be separated by exactly one space.</li>\n\t<li><code>sentence</code> does not have leading or trailing spaces.</li>\n</ul>\n",
      "exampleTestcases": "[\"cat\",\"bat\",\"rat\"]\n\"the cattle was rattled by the battery\"\n[\"a\",\"b\",\"c\"]\n\"aadsfasf absbs bbab cadsfafs\"",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Trie",
          "slug": "trie",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2333",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2941,
      "dislikes": 215,
      "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486371,
      "commentCount": 242,
      "topLevelCommentCount": 146
    },
    "classAndMethodDefinition": "class TrieNode:\n    def __init__(self):"
  },
  {
    "stat": {
      "question_id": 982,
      "question__article__live": true,
      "question__article__slug": "minimum-increment-to-make-array-unique",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Increment to Make Array Unique",
      "question__title_slug": "minimum-increment-to-make-array-unique",
      "question__hide": false,
      "total_acs": 240392,
      "total_submitted": 400353,
      "frontend_question_id": 945,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-increment-to-make-array-unique",
      "questionId": "982",
      "questionFrontendId": "945",
      "questionTitle": "Minimum Increment to Make Array Unique",
      "titleSlug": "minimum-increment-to-make-array-unique",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code>. In one move, you can pick an index <code>i</code> where <code>0 &lt;= i &lt; nums.length</code> and increment <code>nums[i]</code> by <code>1</code>.</p>\n\n<p>Return <em>the minimum number of moves to make every value in </em><code>nums</code><em> <strong>unique</strong></em>.</p>\n\n<p>The test cases are generated so that the answer fits in a 32-bit integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> After 1 move, the array could be [1, 2, 3].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1,2,1,7]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> After 6 moves, the array could be [3, 4, 1, 2, 5, 7].\nIt can be shown that it is impossible for the array to have all unique values with 5 or less moves.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,2]\n[3,2,1,2,1,7]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2341",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2655,
      "dislikes": 82,
      "similarQuestions": "[{\"title\": \"Maximum Product After K Increments\", \"titleSlug\": \"maximum-product-after-k-increments\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486688,
      "commentCount": 308,
      "topLevelCommentCount": 143
    },
    "classAndMethodDefinition": "class Solution(object):\n    def minIncrementForUnique(self, nums):"
  },
  {
    "stat": {
      "question_id": 1916,
      "question__article__live": true,
      "question__article__slug": "find-the-center-of-star-graph",
      "question__article__has_video_solution": false,
      "question__title": "Find Center of Star Graph",
      "question__title_slug": "find-center-of-star-graph",
      "question__hide": false,
      "total_acs": 345818,
      "total_submitted": 399060,
      "frontend_question_id": 1791,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-center-of-star-graph",
      "questionId": "1916",
      "questionFrontendId": "1791",
      "questionTitle": "Find Center of Star Graph",
      "titleSlug": "find-center-of-star-graph",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>There is an undirected <strong>star</strong> graph consisting of <code>n</code> nodes labeled from <code>1</code> to <code>n</code>. A star graph is a graph where there is one <strong>center</strong> node and <strong>exactly</strong> <code>n - 1</code> edges that connect the center node with every other node.</p>\n\n<p>You are given a 2D integer array <code>edges</code> where each <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code> indicates that there is an edge between the nodes <code>u<sub>i</sub></code> and <code>v<sub>i</sub></code>. Return the center of the given star graph.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/24/star_graph.png\" style=\"width: 331px; height: 321px;\" />\n<pre>\n<strong>Input:</strong> edges = [[1,2],[2,3],[4,2]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> As shown in the figure above, node 2 is connected to every other node, so 2 is the center.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> edges = [[1,2],[5,1],[1,3],[1,4]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>edges.length == n - 1</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= u<sub>i,</sub> v<sub>i</sub> &lt;= n</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li>The given <code>edges</code> represent a valid star graph.</li>\n</ul>\n",
      "exampleTestcases": "[[1,2],[2,3],[4,2]]\n[[1,2],[5,1],[1,3],[1,4]]",
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [
        "The center is the only node that has more than one edge.",
        "The center is also connected to all other nodes.",
        "Any two edges must have a common node, which is the center."
      ],
      "solution": {
        "id": "2353",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1800,
      "dislikes": 175,
      "similarQuestions": "[{\"title\": \"Maximum Star Sum of a Graph\", \"titleSlug\": \"maximum-star-sum-of-a-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487575,
      "commentCount": 185,
      "topLevelCommentCount": 144
    },
    "classAndMethodDefinition": "class Solution:\n    def findCenter(self, edges: List[List[int]]) -> int:"
  },
  {
    "stat": {
      "question_id": 480,
      "question__article__live": true,
      "question__article__slug": "sliding-window-median",
      "question__article__has_video_solution": false,
      "question__title": "Sliding Window Median",
      "question__title_slug": "sliding-window-median",
      "question__hide": false,
      "total_acs": 155226,
      "total_submitted": 398926,
      "frontend_question_id": 480,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/sliding-window-median",
      "questionId": "480",
      "questionFrontendId": "480",
      "questionTitle": "Sliding Window Median",
      "titleSlug": "sliding-window-median",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>The <strong>median</strong> is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle values.</p>\n\n<ul>\n\t<li>For examples, if <code>arr = [2,<u>3</u>,4]</code>, the median is <code>3</code>.</li>\n\t<li>For examples, if <code>arr = [1,<u>2,3</u>,4]</code>, the median is <code>(2 + 3) / 2 = 2.5</code>.</li>\n</ul>\n\n<p>You are given an integer array <code>nums</code> and an integer <code>k</code>. There is a sliding window of size <code>k</code> which is moving from the very left of the array to the very right. You can only see the <code>k</code> numbers in the window. Each time the sliding window moves right by one position.</p>\n\n<p>Return <em>the median array for each window in the original array</em>. Answers within <code>10<sup>-5</sup></code> of the actual value will be accepted.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,-1,-3,5,3,6,7], k = 3\n<strong>Output:</strong> [1.00000,-1.00000,-1.00000,3.00000,5.00000,6.00000]\n<strong>Explanation:</strong> \nWindow position                Median\n---------------                -----\n[<strong>1  3  -1</strong>] -3  5  3  6  7        1\n 1 [<strong>3  -1  -3</strong>] 5  3  6  7       -1\n 1  3 [<strong>-1  -3  5</strong>] 3  6  7       -1\n 1  3  -1 [<strong>-3  5  3</strong>] 6  7        3\n 1  3  -1  -3 [<strong>5  3  6</strong>] 7        5\n 1  3  -1  -3  5 [<strong>3  6  7</strong>]       6\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,2,3,1,4,2], k = 3\n<strong>Output:</strong> [2.00000,3.00000,3.00000,3.00000,2.00000,3.00000,2.00000]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "exampleTestcases": "[1,3,-1,-3,5,3,6,7]\n3\n[1,2,3,4,2,3,1,4,2]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        }
      ],
      "hints": [
        "The simplest of solutions comes from the basic idea of finding the median given a set of numbers. We know that by definition, a median is the center element (or an average of the two center elements). Given an unsorted list of numbers, how do we find the median element? If you know the answer to this question, can we extend this idea to every sliding window that we come across in the array?",
        "Is there a better way to do what we are doing in the above hint? Don't you think there is duplication of calculation being done there? Is there some sort of optimization that we can do to achieve the same result? This approach is merely a modification of the basic approach except that it simply reduces duplication of calculations once done.",
        "The third line of thought is also based on this same idea but achieving the result in a different way. We obviously need the window to be sorted for us to be able to find the median. Is there a data-structure out there that we can use (in one or more quantities) to obtain the median element extremely fast, say O(1) time while having the ability to perform the other operations fairly efficiently as well?"
      ],
      "solution": {
        "id": "86",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3230,
      "dislikes": 200,
      "similarQuestions": "[{\"title\": \"Find Median from Data Stream\", \"titleSlug\": \"find-median-from-data-stream\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Make Median of Array Equal to K\", \"titleSlug\": \"minimum-operations-to-make-median-of-array-equal-to-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486210,
      "commentCount": 54,
      "topLevelCommentCount": 31
    },
    "classAndMethodDefinition": "class Solution:\n    def medianSlidingWindow(self, nums: List[int], k: int) -> List[float]:"
  },
  {
    "stat": {
      "question_id": 1604,
      "question__article__live": true,
      "question__article__slug": "least-number-of-unique-integers-after-k-removals",
      "question__article__has_video_solution": false,
      "question__title": "Least Number of Unique Integers after K Removals",
      "question__title_slug": "least-number-of-unique-integers-after-k-removals",
      "question__hide": false,
      "total_acs": 251057,
      "total_submitted": 397764,
      "frontend_question_id": 1481,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals",
      "questionId": "1604",
      "questionFrontendId": "1481",
      "questionTitle": "Least Number of Unique Integers after K Removals",
      "titleSlug": "least-number-of-unique-integers-after-k-removals",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers&nbsp;<code>arr</code>&nbsp;and an integer <code>k</code>.&nbsp;Find the <em>least number of unique integers</em>&nbsp;after removing <strong>exactly</strong> <code>k</code> elements<b>.</b></p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>arr = [5,5,4], k = 1\r\n<strong>Output: </strong>1\r\n<strong>Explanation</strong>: Remove the single 4, only 5 is left.\r\n</pre>\r\n<strong class=\"example\">Example 2:</strong>\r\n\r\n<pre>\r\n<strong>Input: </strong>arr = [4,3,1,1,3,3,2], k = 3\r\n<strong>Output: </strong>2\r\n<strong>Explanation</strong>: Remove 4, 2 and either one of the two 1s or three 3s. 1 and 3 will be left.</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length&nbsp;&lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 10^9</code></li>\r\n\t<li><code>0 &lt;= k&nbsp;&lt;= arr.length</code></li>\r\n</ul>",
      "exampleTestcases": "[5,5,4]\n1\n[4,3,1,1,3,3,2]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        },
        {
          "name": "Counting",
          "slug": "counting",
          "translatedName": null
        }
      ],
      "hints": [
        "Use a map to count the frequencies of the numbers in the array.",
        "An optimal strategy is to remove the numbers with the smallest count first."
      ],
      "solution": {
        "id": "2244",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2249,
      "dislikes": 226,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487280,
      "commentCount": 179,
      "topLevelCommentCount": 118
    },
    "classAndMethodDefinition": "def findLeastNumOfUniqueInts(self, arr: List[int], k: int) -> int:\n        hp = list(collections.Counter(arr).values())"
  },
  {
    "stat": {
      "question_id": 985,
      "question__article__live": true,
      "question__article__slug": "bag-of-tokens",
      "question__article__has_video_solution": false,
      "question__title": "Bag of Tokens",
      "question__title_slug": "bag-of-tokens",
      "question__hide": false,
      "total_acs": 234578,
      "total_submitted": 397586,
      "frontend_question_id": 948,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/bag-of-tokens",
      "questionId": "985",
      "questionFrontendId": "948",
      "questionTitle": "Bag of Tokens",
      "titleSlug": "bag-of-tokens",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You start with an initial <strong>power</strong> of <code>power</code>, an initial <strong>score</strong> of <code>0</code>, and a bag of tokens given as an integer array <code>tokens</code>, where each&nbsp;<code>tokens[i]</code> denotes the value of token<em><sub>i</sub></em>.</p>\n\n<p>Your goal is to <strong>maximize</strong> the total <strong>score</strong> by strategically playing these tokens. In one move, you can play an <strong>unplayed</strong> token in one of the two ways (but not both for the same token):</p>\n\n<ul>\n\t<li><strong>Face-up</strong>: If your current power is <strong>at least</strong> <code>tokens[i]</code>, you may play token<em><sub>i</sub></em>, losing <code>tokens[i]</code> power and gaining <code>1</code> score.</li>\n\t<li><strong>Face-down</strong>: If your current score is <strong>at least</strong> <code>1</code>, you may play token<em><sub>i</sub></em>, gaining <code>tokens[i]</code> power and losing <code>1</code> score.</li>\n</ul>\n\n<p>Return <em>the <strong>maximum</strong> possible score you can achieve after playing <strong>any</strong> number of tokens</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\" style=\"\n    border-color: var(--border-tertiary);\n    border-left-width: 2px;\n    color: var(--text-secondary);\n    font-size: .875rem;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    overflow: visible;\n    padding-left: 1rem;\n\">\n<p><strong>Input:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">tokens = [100], power = 50</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">0</span></p>\n\n<p><strong>Explanation</strong><strong>:</strong> Since your score is <code>0</code> initially, you cannot play the token face-down. You also cannot play it face-up since your power (<code>50</code>) is less than <code>tokens[0]</code>&nbsp;(<code>100</code>).</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\" style=\"\n    border-color: var(--border-tertiary);\n    border-left-width: 2px;\n    color: var(--text-secondary);\n    font-size: .875rem;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    overflow: visible;\n    padding-left: 1rem;\n\">\n<p><strong>Input:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">tokens = [200,100], power = 150</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">1</span></p>\n\n<p><strong>Explanation:</strong> Play token<em><sub>1</sub></em> (<code>100</code>) face-up, reducing your power to&nbsp;<code>50</code> and increasing your score to&nbsp;<code>1</code>.</p>\n\n<p>There is no need to play token<em><sub>0</sub></em>, since you cannot play it face-up to add to your score. The maximum score achievable is <code>1</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\" style=\"\n    border-color: var(--border-tertiary);\n    border-left-width: 2px;\n    color: var(--text-secondary);\n    font-size: .875rem;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    overflow: visible;\n    padding-left: 1rem;\n\">\n<p><strong>Input:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">tokens = [100,200,300,400], power = 200</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">2</span></p>\n\n<p><strong>Explanation:</strong> Play the tokens in this order to get a score of <code>2</code>:</p>\n\n<ol>\n\t<li>Play token<em><sub>0</sub></em> (<code>100</code>) face-up, reducing power to <code>100</code> and increasing score to <code>1</code>.</li>\n\t<li>Play token<em><sub>3</sub></em> (<code>400</code>) face-down, increasing power to <code>500</code> and reducing score to <code>0</code>.</li>\n\t<li>Play token<em><sub>1</sub></em> (<code>200</code>) face-up, reducing power to <code>300</code> and increasing score to <code>1</code>.</li>\n\t<li>Play token<em><sub>2</sub></em> (<code>300</code>) face-up, reducing power to <code>0</code> and increasing score to <code>2</code>.</li>\n</ol>\n\n<p><span style=\"color: var(--text-secondary); font-size: 0.875rem;\">The maximum score achievable is </span><code style=\"color: var(--text-secondary); font-size: 0.875rem;\">2</code><span style=\"color: var(--text-secondary); font-size: 0.875rem;\">.</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= tokens.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= tokens[i], power &lt; 10<sup>4</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[100]\n50\n[200,100]\n150\n[100,200,300,400]\n200",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "626",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3265,
      "dislikes": 534,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486691,
      "commentCount": 172,
      "topLevelCommentCount": 103
    },
    "classAndMethodDefinition": "class Solution(object):\n    def bagOfTokensScore(self, tokens, power):"
  },
  {
    "stat": {
      "question_id": 1254,
      "question__article__live": true,
      "question__article__slug": "deepest-leaves-sum",
      "question__article__has_video_solution": false,
      "question__title": "Deepest Leaves Sum",
      "question__title_slug": "deepest-leaves-sum",
      "question__hide": false,
      "total_acs": 342562,
      "total_submitted": 396833,
      "frontend_question_id": 1302,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/deepest-leaves-sum",
      "questionId": "1254",
      "questionFrontendId": "1302",
      "questionTitle": "Deepest Leaves Sum",
      "titleSlug": "deepest-leaves-sum",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "Given the <code>root</code> of a binary tree, return <em>the sum of values of its deepest leaves</em>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/07/31/1483_ex1.png\" style=\"width: 273px; height: 265px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\n<strong>Output:</strong> 15\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]\n<strong>Output:</strong> 19\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4,5,null,6,7,null,null,null,null,8]\n[6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [
        "Traverse the tree to find the max depth.",
        "Traverse the tree again to compute the sum required."
      ],
      "solution": {
        "id": "911",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4707,
      "dislikes": 123,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486952,
      "commentCount": 31,
      "topLevelCommentCount": 22
    },
    "classAndMethodDefinition": "def deepestLeavesSum(self, root: TreeNode) -> int:\n        q, ans, qlen, curr = [root], 0, 0, 0"
  },
  {
    "stat": {
      "question_id": 1086,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Divisor Game",
      "question__title_slug": "divisor-game",
      "question__hide": false,
      "total_acs": 273728,
      "total_submitted": 395610,
      "frontend_question_id": 1025,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/divisor-game",
      "questionId": "1086",
      "questionFrontendId": "1025",
      "questionTitle": "Divisor Game",
      "titleSlug": "divisor-game",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Alice and Bob take turns playing a game, with Alice starting first.</p>\n\n<p>Initially, there is a number <code>n</code> on the chalkboard. On each player&#39;s turn, that player makes a move consisting of:</p>\n\n<ul>\n\t<li>Choosing any <code>x</code> with <code>0 &lt; x &lt; n</code> and <code>n % x == 0</code>.</li>\n\t<li>Replacing the number <code>n</code> on the chalkboard with <code>n - x</code>.</li>\n</ul>\n\n<p>Also, if a player cannot make a move, they lose the game.</p>\n\n<p>Return <code>true</code> <em>if and only if Alice wins the game, assuming both players play optimally</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Alice chooses 1, and Bob has no more moves.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Alice chooses 1, Bob chooses 1, and Alice has no more moves.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "2\n3",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming",
          "translatedName": null
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser",
          "translatedName": null
        },
        {
          "name": "Game Theory",
          "slug": "game-theory",
          "translatedName": null
        }
      ],
      "hints": [
        "If the current number is even, we can always subtract a 1 to make it odd.  If the current number is odd, we must subtract an odd number to make it even."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 2204,
      "dislikes": 4141,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486788,
      "commentCount": 119,
      "topLevelCommentCount": 95
    },
    "classAndMethodDefinition": "def divisorGame(self, N: int) -> bool:\n        dp = [False for i in range(N+1)]"
  },
  {
    "stat": {
      "question_id": 1049,
      "question__article__live": true,
      "question__article__slug": "minimum-domino-rotations-for-equal-row",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Domino Rotations For Equal Row",
      "question__title_slug": "minimum-domino-rotations-for-equal-row",
      "question__hide": false,
      "total_acs": 206475,
      "total_submitted": 395031,
      "frontend_question_id": 1007,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-domino-rotations-for-equal-row",
      "questionId": "1049",
      "questionFrontendId": "1007",
      "questionTitle": "Minimum Domino Rotations For Equal Row",
      "titleSlug": "minimum-domino-rotations-for-equal-row",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>In a row of dominoes, <code>tops[i]</code> and <code>bottoms[i]</code> represent the top and bottom halves of the <code>i<sup>th</sup></code> domino. (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile.)</p>\n\n<p>We may rotate the <code>i<sup>th</sup></code> domino, so that <code>tops[i]</code> and <code>bottoms[i]</code> swap values.</p>\n\n<p>Return the minimum number of rotations so that all the values in <code>tops</code> are the same, or all the values in <code>bottoms</code> are the same.</p>\n\n<p>If it cannot be done, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/14/domino.png\" style=\"height: 300px; width: 421px;\" />\n<pre>\n<strong>Input:</strong> tops = [2,1,2,4,2,2], bottoms = [5,2,6,2,3,2]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThe first figure represents the dominoes as given by tops and bottoms: before we do any rotations.\nIf we rotate the second and fourth dominoes, we can make every value in the top row equal to 2, as indicated by the second figure.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> tops = [3,5,1,2,3], bottoms = [3,6,3,3,4]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> \nIn this case, it is not possible to rotate the dominoes to make one row of values equal.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= tops.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>bottoms.length == tops.length</code></li>\n\t<li><code>1 &lt;= tops[i], bottoms[i] &lt;= 6</code></li>\n</ul>\n",
      "exampleTestcases": "[2,1,2,4,2,2]\n[5,2,6,2,3,2]\n[3,5,1,2,3]\n[3,6,3,3,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "731",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2844,
      "dislikes": 253,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486751,
      "commentCount": 13,
      "topLevelCommentCount": 10
    },
    "classAndMethodDefinition": "def minDominoRotations(self, tops: List[int], bottoms: List[int]) -> int:\n        total = len(tops)"
  },
  {
    "stat": {
      "question_id": 892,
      "question__article__live": true,
      "question__article__slug": "shortest-subarray-with-sum-at-least-k",
      "question__article__has_video_solution": false,
      "question__title": "Shortest Subarray with Sum at Least K",
      "question__title_slug": "shortest-subarray-with-sum-at-least-k",
      "question__hide": false,
      "total_acs": 103157,
      "total_submitted": 394905,
      "frontend_question_id": 862,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k",
      "questionId": "892",
      "questionFrontendId": "862",
      "questionTitle": "Shortest Subarray with Sum at Least K",
      "titleSlug": "shortest-subarray-with-sum-at-least-k",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the length of the shortest non-empty <strong>subarray</strong> of </em><code>nums</code><em> with a sum of at least </em><code>k</code>. If there is no such <strong>subarray</strong>, return <code>-1</code>.</p>\n\n<p>A <strong>subarray</strong> is a <strong>contiguous</strong> part of an array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1], k = 1\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2], k = 4\n<strong>Output:</strong> -1\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [2,-1,2], k = 3\n<strong>Output:</strong> 3\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[1]\n1\n[1,2]\n4\n[2,-1,2]\n3",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue",
          "translatedName": null
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum",
          "translatedName": null
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "496",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4289,
      "dislikes": 118,
      "similarQuestions": "[{\"title\": \"Shortest Subarray With OR at Least K II\", \"titleSlug\": \"shortest-subarray-with-or-at-least-k-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Subarray With OR at Least K I\", \"titleSlug\": \"shortest-subarray-with-or-at-least-k-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486599,
      "commentCount": 40,
      "topLevelCommentCount": 24
    },
    "classAndMethodDefinition": "def shortestSubarray(self, A, K):\n        d = collections.deque([[0, 0]])"
  },
  {
    "stat": {
      "question_id": 1616,
      "question__article__live": true,
      "question__article__slug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
      "question__article__has_video_solution": false,
      "question__title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
      "question__title_slug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
      "question__hide": false,
      "total_acs": 233887,
      "total_submitted": 394848,
      "frontend_question_id": 1509,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves",
      "questionId": "1616",
      "questionFrontendId": "1509",
      "questionTitle": "Minimum Difference Between Largest and Smallest Value in Three Moves",
      "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given an integer array <code>nums</code>.</p>\n\n<p>In one move, you can choose one element of <code>nums</code> and change it to <strong>any value</strong>.</p>\n\n<p>Return <em>the minimum difference between the largest and smallest value of <code>nums</code> <strong>after performing at most three moves</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,3,2,4]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> We can make at most 3 moves.\nIn the first move, change 2 to 3. nums becomes [5,3,3,4].\nIn the second move, change 4 to 3. nums becomes [5,3,3,3].\nIn the third move, change 5 to 3. nums becomes [3,3,3,3].\nAfter performing 3 moves, the difference between the minimum and maximum is 3 - 3 = 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5,0,10,14]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> We can make at most 3 moves.\nIn the first move, change 5 to 0. nums becomes [1,0,0,10,14].\nIn the second move, change 10 to 0. nums becomes [1,0,0,0,14].\nIn the third move, change 14 to 1. nums becomes [1,0,0,0,1].\nAfter performing 3 moves, the difference between the minimum and maximum is 1 - 0 = 1.\nIt can be shown that there is no way to make the difference 0 in 3 moves.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,100,20]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> We can make at most 3 moves.\nIn the first move, change 100 to 7. nums becomes [3,7,20].\nIn the second move, change 20 to 7. nums becomes [3,7,7].\nIn the third move, change 3 to 7. nums becomes [7,7,7].\nAfter performing 3 moves, the difference between the minimum and maximum is 7 - 7 = 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[5,3,2,4]\n[1,5,0,10,14]\n[3,100,20]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "The minimum difference possible is obtained by removing three elements between the three smallest and three largest values in the array."
      ],
      "solution": {
        "id": "2359",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2475,
      "dislikes": 277,
      "similarQuestions": "[{\"title\": \"Minimize the Maximum Difference of Pairs\", \"titleSlug\": \"minimize-the-maximum-difference-of-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487290,
      "commentCount": 360,
      "topLevelCommentCount": 175
    },
    "classAndMethodDefinition": "class Solution:\n    def minDifference(self, nums: List[int]) -> int:"
  },
  {
    "stat": {
      "question_id": 611,
      "question__article__live": true,
      "question__article__slug": "valid-triangle-number",
      "question__article__has_video_solution": false,
      "question__title": "Valid Triangle Number",
      "question__title_slug": "valid-triangle-number",
      "question__hide": false,
      "total_acs": 202667,
      "total_submitted": 394185,
      "frontend_question_id": 611,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/valid-triangle-number",
      "questionId": "611",
      "questionFrontendId": "611",
      "questionTitle": "Valid Triangle Number",
      "titleSlug": "valid-triangle-number",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an integer array <code>nums</code>, return <em>the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,3,4]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Valid combinations are: \n2,3,4 (using the first 2)\n2,3,4 (using the second 2)\n2,2,3\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,3,4]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[2,2,3,4]\n[4,2,3,4]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "165",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3825,
      "dislikes": 215,
      "similarQuestions": "[{\"title\": \"3Sum Smaller\", \"titleSlug\": \"3sum-smaller\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Polygon With the Largest Perimeter\", \"titleSlug\": \"find-polygon-with-the-largest-perimeter\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486336,
      "commentCount": 51,
      "topLevelCommentCount": 21
    },
    "classAndMethodDefinition": "def triangleNumber(self, nums: List[int]) -> int:\n        "
  },
  {
    "stat": {
      "question_id": 1556,
      "question__article__live": true,
      "question__article__slug": "make-two-arrays-equal-by-reversing-subarrays",
      "question__article__has_video_solution": false,
      "question__title": "Make Two Arrays Equal by Reversing Subarrays",
      "question__title_slug": "make-two-arrays-equal-by-reversing-subarrays",
      "question__hide": false,
      "total_acs": 298659,
      "total_submitted": 393156,
      "frontend_question_id": 1460,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays",
      "questionId": "1556",
      "questionFrontendId": "1460",
      "questionTitle": "Make Two Arrays Equal by Reversing Subarrays",
      "titleSlug": "make-two-arrays-equal-by-reversing-subarrays",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given two integer arrays of equal length <code>target</code> and <code>arr</code>. In one step, you can select any <strong>non-empty subarray</strong> of <code>arr</code> and reverse it. You are allowed to make any number of steps.</p>\n\n<p>Return <code>true</code> <em>if you can make </em><code>arr</code><em> equal to </em><code>target</code><em>&nbsp;or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [1,2,3,4], arr = [2,4,1,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can follow the next steps to convert arr to target:\n1- Reverse subarray [2,4,1], arr becomes [1,4,2,3]\n2- Reverse subarray [4,2], arr becomes [1,2,4,3]\n3- Reverse subarray [4,3], arr becomes [1,2,3,4]\nThere are multiple ways to convert arr to target, this is not the only way to do so.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [7], arr = [7]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> arr is equal to target without any reverses.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> target = [3,7,9], arr = [3,7,11]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> arr does not have value 9 and it can never be converted to target.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>target.length == arr.length</code></li>\n\t<li><code>1 &lt;= target.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= target[i] &lt;= 1000</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[1,2,3,4]\n[2,4,1,3]\n[7]\n[7]\n[3,7,9]\n[3,7,11]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "Each element of target should have a corresponding element in arr, and if it doesn't have a corresponding element, return false.",
        "To solve it easiely you can sort the two arrays and check if they are equal."
      ],
      "solution": {
        "id": "2388",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1450,
      "dislikes": 162,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487247,
      "commentCount": 243,
      "topLevelCommentCount": 153
    },
    "classAndMethodDefinition": "class Solution:\n    def canBeEqual(self, targetArray: List[int], currentArray: List[int]) -> bool:"
  },
  {
    "stat": {
      "question_id": 382,
      "question__article__live": true,
      "question__article__slug": "linked-list-random-node",
      "question__article__has_video_solution": false,
      "question__title": "Linked List Random Node",
      "question__title_slug": "linked-list-random-node",
      "question__hide": false,
      "total_acs": 248203,
      "total_submitted": 391644,
      "frontend_question_id": 382,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/linked-list-random-node",
      "questionId": "382",
      "questionFrontendId": "382",
      "questionTitle": "Linked List Random Node",
      "titleSlug": "linked-list-random-node",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given a singly linked list, return a random node&#39;s value from the linked list. Each node must have the <strong>same probability</strong> of being chosen.</p>\n\n<p>Implement the <code>Solution</code> class:</p>\n\n<ul>\n\t<li><code>Solution(ListNode head)</code> Initializes the object with the head of the singly-linked list <code>head</code>.</li>\n\t<li><code>int getRandom()</code> Chooses a node randomly from the list and returns its value. All the nodes of the list should be equally likely to be chosen.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/16/getrand-linked-list.jpg\" style=\"width: 302px; height: 62px;\" />\n<pre>\n<strong>Input</strong>\n[&quot;Solution&quot;, &quot;getRandom&quot;, &quot;getRandom&quot;, &quot;getRandom&quot;, &quot;getRandom&quot;, &quot;getRandom&quot;]\n[[[1, 2, 3]], [], [], [], [], []]\n<strong>Output</strong>\n[null, 1, 3, 2, 2, 3]\n\n<strong>Explanation</strong>\nSolution solution = new Solution([1, 2, 3]);\nsolution.getRandom(); // return 1\nsolution.getRandom(); // return 3\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 3\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the linked list will be in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>getRandom</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>What if the linked list is extremely large and its length is unknown to you?</li>\n\t<li>Could you solve this efficiently without using extra space?</li>\n</ul>\n",
      "exampleTestcases": "[\"Solution\",\"getRandom\",\"getRandom\",\"getRandom\",\"getRandom\",\"getRandom\"]\n[[[1,2,3]],[],[],[],[],[]]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Reservoir Sampling",
          "slug": "reservoir-sampling",
          "translatedName": null
        },
        {
          "name": "Randomized",
          "slug": "randomized",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1053",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3083,
      "dislikes": 706,
      "similarQuestions": "[{\"title\": \"Random Pick Index\", \"titleSlug\": \"random-pick-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486119,
      "commentCount": 88,
      "topLevelCommentCount": 57
    },
    "classAndMethodDefinition": "def __init__(self, head):\n        self.head = head"
  },
  {
    "stat": {
      "question_id": 697,
      "question__article__live": true,
      "question__article__slug": "degree-of-an-array",
      "question__article__has_video_solution": false,
      "question__title": "Degree of an Array",
      "question__title_slug": "degree-of-an-array",
      "question__hide": false,
      "total_acs": 221494,
      "total_submitted": 390518,
      "frontend_question_id": 697,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/degree-of-an-array",
      "questionId": "697",
      "questionFrontendId": "697",
      "questionTitle": "Degree of an Array",
      "titleSlug": "degree-of-an-array",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given a non-empty array of non-negative integers <code>nums</code>, the <b>degree</b> of this array is defined as the maximum frequency of any one of its elements.</p>\n\n<p>Your task is to find the smallest possible length of a (contiguous) subarray of <code>nums</code>, that has the same degree as <code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,2,3,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThe input array has a degree of 2 because both elements 1 and 2 appear twice.\nOf the subarrays that have the same degree:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\nThe shortest length is 2. So return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,2,3,1,4,2]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> \nThe degree is 3 because the element 2 is repeated 3 times.\nSo [2,2,3,1,4,2] is the shortest subarray, therefore returning 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>nums.length</code> will be between 1 and 50,000.</li>\n\t<li><code>nums[i]</code> will be an integer between 0 and 49,999.</li>\n</ul>\n",
      "exampleTestcases": "[1,2,2,3,1]\n[1,2,2,3,1,4,2]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        }
      ],
      "hints": [
        "Say 5 is the only element that occurs the most number of times - for example, nums = [1, 5, 2, 3, 5, 4, 5, 6].  What is the answer?"
      ],
      "solution": {
        "id": "263",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3045,
      "dislikes": 1736,
      "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486420,
      "commentCount": 82,
      "topLevelCommentCount": 54
    },
    "classAndMethodDefinition": "def findShortestSubArray(self, nums: List[int]) -> int:\n    \\tC = {}"
  },
  {
    "stat": {
      "question_id": 2392,
      "question__article__live": true,
      "question__article__slug": "successful-pairs-of-spells-and-potions",
      "question__article__has_video_solution": false,
      "question__title": "Successful Pairs of Spells and Potions",
      "question__title_slug": "successful-pairs-of-spells-and-potions",
      "question__hide": false,
      "total_acs": 169922,
      "total_submitted": 389718,
      "frontend_question_id": 2300,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/successful-pairs-of-spells-and-potions",
      "questionId": "2392",
      "questionFrontendId": "2300",
      "questionTitle": "Successful Pairs of Spells and Potions",
      "titleSlug": "successful-pairs-of-spells-and-potions",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given two positive integer arrays <code>spells</code> and <code>potions</code>, of length <code>n</code> and <code>m</code> respectively, where <code>spells[i]</code> represents the strength of the <code>i<sup>th</sup></code> spell and <code>potions[j]</code> represents the strength of the <code>j<sup>th</sup></code> potion.</p>\n\n<p>You are also given an integer <code>success</code>. A spell and potion pair is considered <strong>successful</strong> if the <strong>product</strong> of their strengths is <strong>at least</strong> <code>success</code>.</p>\n\n<p>Return <em>an integer array </em><code>pairs</code><em> of length </em><code>n</code><em> where </em><code>pairs[i]</code><em> is the number of <strong>potions</strong> that will form a successful pair with the </em><code>i<sup>th</sup></code><em> spell.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> spells = [5,1,3], potions = [1,2,3,4,5], success = 7\n<strong>Output:</strong> [4,0,3]\n<strong>Explanation:</strong>\n- 0<sup>th</sup> spell: 5 * [1,2,3,4,5] = [5,<u><strong>10</strong></u>,<u><strong>15</strong></u>,<u><strong>20</strong></u>,<u><strong>25</strong></u>]. 4 pairs are successful.\n- 1<sup>st</sup> spell: 1 * [1,2,3,4,5] = [1,2,3,4,5]. 0 pairs are successful.\n- 2<sup>nd</sup> spell: 3 * [1,2,3,4,5] = [3,6,<u><strong>9</strong></u>,<u><strong>12</strong></u>,<u><strong>15</strong></u>]. 3 pairs are successful.\nThus, [4,0,3] is returned.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> spells = [3,1,2], potions = [8,5,8], success = 16\n<strong>Output:</strong> [2,0,2]\n<strong>Explanation:</strong>\n- 0<sup>th</sup> spell: 3 * [8,5,8] = [<u><strong>24</strong></u>,15,<u><strong>24</strong></u>]. 2 pairs are successful.\n- 1<sup>st</sup> spell: 1 * [8,5,8] = [8,5,8]. 0 pairs are successful. \n- 2<sup>nd</sup> spell: 2 * [8,5,8] = [<strong><u>16</u></strong>,10,<u><strong>16</strong></u>]. 2 pairs are successful. \nThus, [2,0,2] is returned.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == spells.length</code></li>\n\t<li><code>m == potions.length</code></li>\n\t<li><code>1 &lt;= n, m &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= spells[i], potions[i] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= success &lt;= 10<sup>10</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[5,1,3]\n[1,2,3,4,5]\n7\n[3,1,2]\n[8,5,8]\n16",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [
        "Notice that if a spell and potion pair is successful, then the spell and all stronger potions will be successful too.",
        "Thus, for each spell, we need to find the potion with the least strength that will form a successful pair.",
        "We can efficiently do this by sorting the potions based on strength and using binary search."
      ],
      "solution": {
        "id": "1815",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2587,
      "dislikes": 80,
      "similarQuestions": "[{\"title\": \"Most Profit Assigning Work\", \"titleSlug\": \"most-profit-assigning-work\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Subsequence With Limited Sum\", \"titleSlug\": \"longest-subsequence-with-limited-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Matching of Players With Trainers\", \"titleSlug\": \"maximum-matching-of-players-with-trainers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2488048,
      "commentCount": 138,
      "topLevelCommentCount": 77
    },
    "classAndMethodDefinition": "def successfulPairs(self, spells, potions, success):\n        n = len(spells)"
  },
  {
    "stat": {
      "question_id": 969,
      "question__article__live": true,
      "question__article__slug": "number-of-recent-calls",
      "question__article__has_video_solution": false,
      "question__title": "Number of Recent Calls",
      "question__title_slug": "number-of-recent-calls",
      "question__hide": false,
      "total_acs": 296575,
      "total_submitted": 389677,
      "frontend_question_id": 933,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-recent-calls",
      "questionId": "969",
      "questionFrontendId": "933",
      "questionTitle": "Number of Recent Calls",
      "titleSlug": "number-of-recent-calls",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You have a <code>RecentCounter</code> class which counts the number of recent requests within a certain time frame.</p>\n\n<p>Implement the <code>RecentCounter</code> class:</p>\n\n<ul>\n\t<li><code>RecentCounter()</code> Initializes the counter with zero recent requests.</li>\n\t<li><code>int ping(int t)</code> Adds a new request at time <code>t</code>, where <code>t</code> represents some time in milliseconds, and returns the number of requests that has happened in the past <code>3000</code> milliseconds (including the new request). Specifically, return the number of requests that have happened in the inclusive range <code>[t - 3000, t]</code>.</li>\n</ul>\n\n<p>It is <strong>guaranteed</strong> that every call to <code>ping</code> uses a strictly larger value of <code>t</code> than the previous call.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;RecentCounter&quot;, &quot;ping&quot;, &quot;ping&quot;, &quot;ping&quot;, &quot;ping&quot;]\n[[], [1], [100], [3001], [3002]]\n<strong>Output</strong>\n[null, 1, 2, 3, 3]\n\n<strong>Explanation</strong>\nRecentCounter recentCounter = new RecentCounter();\nrecentCounter.ping(1);     // requests = [<u>1</u>], range is [-2999,1], return 1\nrecentCounter.ping(100);   // requests = [<u>1</u>, <u>100</u>], range is [-2900,100], return 2\nrecentCounter.ping(3001);  // requests = [<u>1</u>, <u>100</u>, <u>3001</u>], range is [1,3001], return 3\nrecentCounter.ping(3002);  // requests = [1, <u>100</u>, <u>3001</u>, <u>3002</u>], range is [2,3002], return 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= t &lt;= 10<sup>9</sup></code></li>\n\t<li>Each test case will call <code>ping</code> with <strong>strictly increasing</strong> values of <code>t</code>.</li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>ping</code>.</li>\n</ul>\n",
      "exampleTestcases": "[\"RecentCounter\",\"ping\",\"ping\",\"ping\",\"ping\"]\n[[],[1],[100],[3001],[3002]]",
      "topicTags": [
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Queue",
          "slug": "queue",
          "translatedName": null
        },
        {
          "name": "Data Stream",
          "slug": "data-stream",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "1014",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 566,
      "dislikes": 874,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486676,
      "commentCount": 166,
      "topLevelCommentCount": 92
    },
    "classAndMethodDefinition": "class RecentCounter:\n    def __init__(self):"
  },
  {
    "stat": {
      "question_id": 2236,
      "question__article__live": true,
      "question__article__slug": "maximum-twin-sum-of-a-linked-list",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Twin Sum of a Linked List",
      "question__title_slug": "maximum-twin-sum-of-a-linked-list",
      "question__hide": false,
      "total_acs": 315413,
      "total_submitted": 389409,
      "frontend_question_id": 2130,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list",
      "questionId": "2236",
      "questionFrontendId": "2130",
      "questionTitle": "Maximum Twin Sum of a Linked List",
      "titleSlug": "maximum-twin-sum-of-a-linked-list",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>In a linked list of size <code>n</code>, where <code>n</code> is <strong>even</strong>, the <code>i<sup>th</sup></code> node (<strong>0-indexed</strong>) of the linked list is known as the <strong>twin</strong> of the <code>(n-1-i)<sup>th</sup></code> node, if <code>0 &lt;= i &lt;= (n / 2) - 1</code>.</p>\n\n<ul>\n\t<li>For example, if <code>n = 4</code>, then node <code>0</code> is the twin of node <code>3</code>, and node <code>1</code> is the twin of node <code>2</code>. These are the only nodes with twins for <code>n = 4</code>.</li>\n</ul>\n\n<p>The <strong>twin sum </strong>is defined as the sum of a node and its twin.</p>\n\n<p>Given the <code>head</code> of a linked list with even length, return <em>the <strong>maximum twin sum</strong> of the linked list</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/12/03/eg1drawio.png\" style=\"width: 250px; height: 70px;\" />\n<pre>\n<strong>Input:</strong> head = [5,4,2,1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong>\nNodes 0 and 1 are the twins of nodes 3 and 2, respectively. All have twin sum = 6.\nThere are no other nodes with twins in the linked list.\nThus, the maximum twin sum of the linked list is 6. \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/12/03/eg2drawio.png\" style=\"width: 250px; height: 70px;\" />\n<pre>\n<strong>Input:</strong> head = [4,2,2,3]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong>\nThe nodes with twins present in this linked list are:\n- Node 0 is the twin of node 3 having a twin sum of 4 + 3 = 7.\n- Node 1 is the twin of node 2 having a twin sum of 2 + 2 = 4.\nThus, the maximum twin sum of the linked list is max(7, 4) = 7. \n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/12/03/eg3drawio.png\" style=\"width: 200px; height: 88px;\" />\n<pre>\n<strong>Input:</strong> head = [1,100000]\n<strong>Output:</strong> 100001\n<strong>Explanation:</strong>\nThere is only one node with a twin in the linked list having twin sum of 1 + 100000 = 100001.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is an <strong>even</strong> integer in the range <code>[2, 10<sup>5</sup>]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[5,4,2,1]\n[4,2,2,3]\n[1,100000]",
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        }
      ],
      "hints": [
        "How can \"reversing\" a part of the linked list help find the answer?",
        "We know that the nodes of the first half are twins of nodes in the second half, so try dividing the linked list in half and reverse the second half.",
        "How can two pointers be used to find every twin sum optimally?",
        "Use two different pointers pointing to the first nodes of the two halves of the linked list. The second pointer will point to the first node of the reversed half, which is the (n-1-i)th node in the original linked list. By moving both pointers forward at the same time, we find all twin sums."
      ],
      "solution": {
        "id": "1820",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 3540,
      "dislikes": 103,
      "similarQuestions": "[{\"title\": \"Reverse Linked List\", \"titleSlug\": \"reverse-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Palindrome Linked List\", \"titleSlug\": \"palindrome-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Middle of the Linked List\", \"titleSlug\": \"middle-of-the-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487892,
      "commentCount": 123,
      "topLevelCommentCount": 82
    },
    "classAndMethodDefinition": "class Solution:\n    def pairSum(self, head):"
  },
  {
    "stat": {
      "question_id": 1370,
      "question__article__live": true,
      "question__article__slug": "count-number-of-nice-subarrays",
      "question__article__has_video_solution": false,
      "question__title": "Count Number of Nice Subarrays",
      "question__title_slug": "count-number-of-nice-subarrays",
      "question__hide": false,
      "total_acs": 272491,
      "total_submitted": 381481,
      "frontend_question_id": 1248,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/count-number-of-nice-subarrays",
      "questionId": "1370",
      "questionFrontendId": "1248",
      "questionTitle": "Count Number of Nice Subarrays",
      "titleSlug": "count-number-of-nice-subarrays",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Given an array of integers <code>nums</code> and an integer <code>k</code>. A continuous subarray is called <strong>nice</strong> if there are <code>k</code> odd numbers on it.</p>\n\n<p>Return <em>the number of <strong>nice</strong> sub-arrays</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2,1,1], k = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4,6], k = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There are no odd numbers in the array.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,2,1,2,2,1,2,2,2], k = 2\n<strong>Output:</strong> 16\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 50000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= k &lt;= nums.length</code></li>\n</ul>\n",
      "exampleTestcases": "[1,1,2,1,1]\n3\n[2,4,6]\n1\n[2,2,2,1,2,2,1,2,2,2]\n2",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window",
          "translatedName": null
        }
      ],
      "hints": [
        "After replacing each even by zero and every odd by one can we use prefix sum to find answer ?",
        "Can we use two pointers to count number of sub-arrays ?",
        "Can we store indices of odd numbers and for each k indices count number of sub-arrays contains them ?"
      ],
      "solution": {
        "id": "2348",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4591,
      "dislikes": 117,
      "similarQuestions": "[{\"title\": \"K Divisible Elements Subarrays\", \"titleSlug\": \"k-divisible-elements-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Subarrays With Fixed Bounds\", \"titleSlug\": \"count-subarrays-with-fixed-bounds\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count of Interesting Subarrays\", \"titleSlug\": \"count-of-interesting-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2487063,
      "commentCount": 231,
      "topLevelCommentCount": 129
    },
    "classAndMethodDefinition": "class Solution(object):\n    def numberOfSubarrays(self, nums, k):"
  },
  {
    "stat": {
      "question_id": 1112,
      "question__article__live": true,
      "question__article__slug": "find-words-that-can-be-formed-by-characters",
      "question__article__has_video_solution": false,
      "question__title": "Find Words That Can Be Formed by Characters",
      "question__title_slug": "find-words-that-can-be-formed-by-characters",
      "question__hide": false,
      "total_acs": 269107,
      "total_submitted": 380742,
      "frontend_question_id": 1160,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/find-words-that-can-be-formed-by-characters",
      "questionId": "1112",
      "questionFrontendId": "1160",
      "questionTitle": "Find Words That Can Be Formed by Characters",
      "titleSlug": "find-words-that-can-be-formed-by-characters",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>You are given an array of strings <code>words</code> and a string <code>chars</code>.</p>\n\n<p>A string is <strong>good</strong> if it can be formed by characters from <code>chars</code> (each character can only be used once).</p>\n\n<p>Return <em>the sum of lengths of all good strings in words</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;cat&quot;,&quot;bt&quot;,&quot;hat&quot;,&quot;tree&quot;], chars = &quot;atach&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The strings that can be formed are &quot;cat&quot; and &quot;hat&quot; so the answer is 3 + 3 = 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;hello&quot;,&quot;world&quot;,&quot;leetcode&quot;], chars = &quot;welldonehoneyr&quot;\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> The strings that can be formed are &quot;hello&quot; and &quot;world&quot; so the answer is 5 + 5 = 10.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length, chars.length &lt;= 100</code></li>\n\t<li><code>words[i]</code> and <code>chars</code> consist of lowercase English letters.</li>\n</ul>\n",
      "exampleTestcases": "[\"cat\",\"bt\",\"hat\",\"tree\"]\n\"atach\"\n[\"hello\",\"world\",\"leetcode\"]\n\"welldonehoneyr\"",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Hash Table",
          "slug": "hash-table",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        }
      ],
      "hints": [
        "Solve the problem for each string in <code>words</code> independently.",
        "Now try to think in frequency of letters.",
        "Count how many times each character occurs in string <code>chars</code>.",
        "To form a string using characters from <code>chars</code>, the frequency of each character in <code>chars</code> must be greater than or equal the frequency of that character in the string to be formed."
      ],
      "solution": {
        "id": "2175",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2119,
      "dislikes": 183,
      "similarQuestions": "[{\"title\": \"Rearrange Characters to Make Target String\", \"titleSlug\": \"rearrange-characters-to-make-target-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486812,
      "commentCount": 106,
      "topLevelCommentCount": 60
    },
    "classAndMethodDefinition": "class Solution(object):\n    def countCharacters(self, words, chars):"
  },
  {
    "stat": {
      "question_id": 873,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "Guess the Word",
      "question__title_slug": "guess-the-word",
      "question__hide": false,
      "total_acs": 147093,
      "total_submitted": 379506,
      "frontend_question_id": 843,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 3
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/guess-the-word",
      "questionId": "873",
      "questionFrontendId": "843",
      "questionTitle": "Guess the Word",
      "titleSlug": "guess-the-word",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "question": "<p>You are given an array of unique strings <code>words</code> where <code>words[i]</code> is six letters long. One word of <code>words</code> was chosen as a secret word.</p>\n\n<p>You are also given the helper object <code>Master</code>. You may call <code>Master.guess(word)</code> where <code>word</code> is a six-letter-long string, and it must be from <code>words</code>. <code>Master.guess(word)</code> returns:</p>\n\n<ul>\n\t<li><code>-1</code> if <code>word</code> is not from <code>words</code>, or</li>\n\t<li>an integer representing the number of exact matches (value and position) of your guess to the secret word.</li>\n</ul>\n\n<p>There is a parameter <code>allowedGuesses</code> for each test case where <code>allowedGuesses</code> is the maximum number of times you can call <code>Master.guess(word)</code>.</p>\n\n<p>For each test case, you should call <code>Master.guess</code> with the secret word without exceeding the maximum number of allowed guesses. You will get:</p>\n\n<ul>\n\t<li><strong><code>&quot;Either you took too many guesses, or you did not find the secret word.&quot;</code></strong> if you called <code>Master.guess</code> more than <code>allowedGuesses</code> times or if you did not call <code>Master.guess</code> with the secret word, or</li>\n\t<li><strong><code>&quot;You guessed the secret word correctly.&quot;</code></strong> if you called <code>Master.guess</code> with the secret word with the number of calls to <code>Master.guess</code> less than or equal to <code>allowedGuesses</code>.</li>\n</ul>\n\n<p>The test cases are generated such that you can guess the secret word with a reasonable strategy (other than using the bruteforce method).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;acckzz&quot;, words = [&quot;acckzz&quot;,&quot;ccbazz&quot;,&quot;eiowzz&quot;,&quot;abcczz&quot;], allowedGuesses = 10\n<strong>Output:</strong> You guessed the secret word correctly.\n<strong>Explanation:</strong>\nmaster.guess(&quot;aaaaaa&quot;) returns -1, because &quot;aaaaaa&quot; is not in wordlist.\nmaster.guess(&quot;acckzz&quot;) returns 6, because &quot;acckzz&quot; is secret and has all 6 matches.\nmaster.guess(&quot;ccbazz&quot;) returns 3, because &quot;ccbazz&quot; has 3 matches.\nmaster.guess(&quot;eiowzz&quot;) returns 2, because &quot;eiowzz&quot; has 2 matches.\nmaster.guess(&quot;abcczz&quot;) returns 4, because &quot;abcczz&quot; has 4 matches.\nWe made 5 calls to master.guess, and one of them was the secret, so we pass the test case.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;hamada&quot;, words = [&quot;hamada&quot;,&quot;khaled&quot;], allowedGuesses = 10\n<strong>Output:</strong> You guessed the secret word correctly.\n<strong>Explanation:</strong> Since there are two words, you can guess both.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>words[i].length == 6</code></li>\n\t<li><code>words[i]</code> consist of lowercase English letters.</li>\n\t<li>All the strings of <code>wordlist</code> are <strong>unique</strong>.</li>\n\t<li><code>secret</code> exists in <code>words</code>.</li>\n\t<li><code>10 &lt;= allowedGuesses &lt;= 30</code></li>\n</ul>\n",
      "exampleTestcases": "\"acckzz\"\n[\"acckzz\",\"ccbazz\",\"eiowzz\",\"abcczz\"]\n10\n\"hamada\"\n[\"hamada\",\"khaled\"]\n10",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "String",
          "slug": "string",
          "translatedName": null
        },
        {
          "name": "Interactive",
          "slug": "interactive",
          "translatedName": null
        },
        {
          "name": "Game Theory",
          "slug": "game-theory",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": null,
      "companyTagStats": null,
      "likes": 1546,
      "dislikes": 1789,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486579,
      "commentCount": 48,
      "topLevelCommentCount": 40
    },
    "classAndMethodDefinition": "def findSecretWord(self, wordlist: List[str], master: \\'Master\\') -> None:\n        place_counts = collections.defaultdict(int)"
  },
  {
    "stat": {
      "question_id": 624,
      "question__article__live": true,
      "question__article__slug": "maximum-distance-in-array",
      "question__article__has_video_solution": false,
      "question__title": "Maximum Distance in Arrays",
      "question__title_slug": "maximum-distance-in-arrays",
      "question__hide": false,
      "total_acs": 174051,
      "total_submitted": 379408,
      "frontend_question_id": 624,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/maximum-distance-in-arrays",
      "questionId": "624",
      "questionFrontendId": "624",
      "questionTitle": "Maximum Distance in Arrays",
      "titleSlug": "maximum-distance-in-arrays",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given <code>m</code> <code>arrays</code>, where each array is sorted in <strong>ascending order</strong>.</p>\n\n<p>You can pick up two integers from two different arrays (each array picks one) and calculate the distance. We define the distance between two integers <code>a</code> and <code>b</code> to be their absolute difference <code>|a - b|</code>.</p>\n\n<p>Return <em>the maximum distance</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arrays = [[1,2,3],[4,5],[1,2,3]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> One way to reach the maximum distance 4 is to pick 1 in the first or third array and pick 5 in the second array.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arrays = [[1],[1]]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == arrays.length</code></li>\n\t<li><code>2 &lt;= m &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= arrays[i].length &lt;= 500</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= arrays[i][j] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>arrays[i]</code> is sorted in <strong>ascending order</strong>.</li>\n\t<li>There will be at most <code>10<sup>5</sup></code> integers in all the arrays.</li>\n</ul>\n",
      "exampleTestcases": "[[1,2,3],[4,5],[1,2,3]]\n[[1],[1]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "171",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1395,
      "dislikes": 113,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486348,
      "commentCount": 257,
      "topLevelCommentCount": 148
    },
    "classAndMethodDefinition": "class Solution(object):\n    def maxDistance(self, arrays):"
  },
  {
    "stat": {
      "question_id": 853,
      "question__article__live": true,
      "question__article__slug": "most-profit-assigning-work",
      "question__article__has_video_solution": false,
      "question__title": "Most Profit Assigning Work",
      "question__title_slug": "most-profit-assigning-work",
      "question__hide": false,
      "total_acs": 209956,
      "total_submitted": 375659,
      "frontend_question_id": 826,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/most-profit-assigning-work",
      "questionId": "853",
      "questionFrontendId": "826",
      "questionTitle": "Most Profit Assigning Work",
      "titleSlug": "most-profit-assigning-work",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You have <code>n</code> jobs and <code>m</code> workers. You are given three arrays: <code>difficulty</code>, <code>profit</code>, and <code>worker</code> where:</p>\n\n<ul>\n\t<li><code>difficulty[i]</code> and <code>profit[i]</code> are the difficulty and the profit of the <code>i<sup>th</sup></code> job, and</li>\n\t<li><code>worker[j]</code> is the ability of <code>j<sup>th</sup></code> worker (i.e., the <code>j<sup>th</sup></code> worker can only complete a job with difficulty at most <code>worker[j]</code>).</li>\n</ul>\n\n<p>Every worker can be assigned <strong>at most one job</strong>, but one job can be <strong>completed multiple times</strong>.</p>\n\n<ul>\n\t<li>For example, if three workers attempt the same job that pays <code>$1</code>, then the total profit will be <code>$3</code>. If a worker cannot complete any job, their profit is <code>$0</code>.</li>\n</ul>\n\n<p>Return the maximum profit we can achieve after assigning the workers to the jobs.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7]\n<strong>Output:</strong> 100\n<strong>Explanation:</strong> Workers are assigned jobs of difficulty [4,4,6,6] and they get a profit of [20,20,30,30] separately.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> difficulty = [85,47,57], profit = [24,66,99], worker = [40,25,25]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == difficulty.length</code></li>\n\t<li><code>n == profit.length</code></li>\n\t<li><code>m == worker.length</code></li>\n\t<li><code>1 &lt;= n, m &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= difficulty[i], profit[i], worker[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "exampleTestcases": "[2,4,6,8,10]\n[10,20,30,40,50]\n[4,5,6,7]\n[85,47,57]\n[24,66,99]\n[40,25,25]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers",
          "translatedName": null
        },
        {
          "name": "Binary Search",
          "slug": "binary-search",
          "translatedName": null
        },
        {
          "name": "Greedy",
          "slug": "greedy",
          "translatedName": null
        },
        {
          "name": "Sorting",
          "slug": "sorting",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "2343",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 2371,
      "dislikes": 169,
      "similarQuestions": "[{\"title\": \"Maximum Number of Tasks You Can Assign\", \"titleSlug\": \"maximum-number-of-tasks-you-can-assign\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Successful Pairs of Spells and Potions\", \"titleSlug\": \"successful-pairs-of-spells-and-potions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Matching of Players With Trainers\", \"titleSlug\": \"maximum-matching-of-players-with-trainers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486559,
      "commentCount": 274,
      "topLevelCommentCount": 162
    },
    "classAndMethodDefinition": "class Solution(object):\n    def maxProfitAssignment(self, difficulty, profit, worker):"
  },
  {
    "stat": {
      "question_id": 284,
      "question__article__live": true,
      "question__article__slug": "peeking-iterator",
      "question__article__has_video_solution": false,
      "question__title": "Peeking Iterator",
      "question__title_slug": "peeking-iterator",
      "question__hide": false,
      "total_acs": 224683,
      "total_submitted": 375482,
      "frontend_question_id": 284,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/peeking-iterator",
      "questionId": "284",
      "questionFrontendId": "284",
      "questionTitle": "Peeking Iterator",
      "titleSlug": "peeking-iterator",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>Design an iterator that supports the <code>peek</code> operation on an existing iterator in addition to the <code>hasNext</code> and the <code>next</code> operations.</p>\n\n<p>Implement the <code>PeekingIterator</code> class:</p>\n\n<ul>\n\t<li><code>PeekingIterator(Iterator&lt;int&gt; nums)</code> Initializes the object with the given integer iterator <code>iterator</code>.</li>\n\t<li><code>int next()</code> Returns the next element in the array and moves the pointer to the next element.</li>\n\t<li><code>boolean hasNext()</code> Returns <code>true</code> if there are still elements in the array.</li>\n\t<li><code>int peek()</code> Returns the next element in the array <strong>without</strong> moving the pointer.</li>\n</ul>\n\n<p><strong>Note:</strong> Each language may have a different implementation of the constructor and <code>Iterator</code>, but they all support the <code>int next()</code> and <code>boolean hasNext()</code> functions.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;PeekingIterator&quot;, &quot;next&quot;, &quot;peek&quot;, &quot;next&quot;, &quot;next&quot;, &quot;hasNext&quot;]\n[[[1, 2, 3]], [], [], [], [], []]\n<strong>Output</strong>\n[null, 1, 2, 2, 3, false]\n\n<strong>Explanation</strong>\nPeekingIterator peekingIterator = new PeekingIterator([1, 2, 3]); // [<u><strong>1</strong></u>,2,3]\npeekingIterator.next();    // return 1, the pointer moves to the next element [1,<u><strong>2</strong></u>,3].\npeekingIterator.peek();    // return 2, the pointer does not move [1,<u><strong>2</strong></u>,3].\npeekingIterator.next();    // return 2, the pointer moves to the next element [1,2,<u><strong>3</strong></u>]\npeekingIterator.next();    // return 3, the pointer moves to the next element [1,2,3]\npeekingIterator.hasNext(); // return False\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li>All the calls to <code>next</code> and <code>peek</code> are valid.</li>\n\t<li>At most <code>1000</code> calls will be made to <code>next</code>, <code>hasNext</code>, and <code>peek</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> How would you extend your design to be generic and work with all types, not just integer?",
      "exampleTestcases": "[\"PeekingIterator\",\"next\",\"peek\",\"next\",\"next\",\"hasNext\"]\n[[[1,2,3]],[],[],[],[],[]]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array",
          "translatedName": null
        },
        {
          "name": "Design",
          "slug": "design",
          "translatedName": null
        },
        {
          "name": "Iterator",
          "slug": "iterator",
          "translatedName": null
        }
      ],
      "hints": [
        "Think of \"looking ahead\". You want to cache the next element.",
        "Is one variable sufficient? Why or why not?",
        "Test your design with call order of <code>peek()</code> before <code>next()</code> vs <code>next()</code> before <code>peek()</code>.",
        "For a clean implementation, check out <a href=\"https://github.com/google/guava/blob/703ef758b8621cfbab16814f01ddcc5324bdea33/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java#L1125\" target=\"_blank\">Google's guava library source code</a>."
      ],
      "solution": {
        "id": "879",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 1858,
      "dislikes": 1039,
      "similarQuestions": "[{\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"
    },
    "discussionData": {
      "id": 2486021,
      "commentCount": 24,
      "topLevelCommentCount": 24
    },
    "classAndMethodDefinition": "def __init__(self, iterator):\n            self.iter = iterator"
  },
  {
    "stat": {
      "question_id": 1442,
      "question__article__live": true,
      "question__article__slug": "number-of-operations-to-make-network-connected",
      "question__article__has_video_solution": false,
      "question__title": "Number of Operations to Make Network Connected",
      "question__title_slug": "number-of-operations-to-make-network-connected",
      "question__hide": false,
      "total_acs": 237106,
      "total_submitted": 374399,
      "frontend_question_id": 1319,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/number-of-operations-to-make-network-connected",
      "questionId": "1442",
      "questionFrontendId": "1319",
      "questionTitle": "Number of Operations to Make Network Connected",
      "titleSlug": "number-of-operations-to-make-network-connected",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>There are <code>n</code> computers numbered from <code>0</code> to <code>n - 1</code> connected by ethernet cables <code>connections</code> forming a network where <code>connections[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> represents a connection between computers <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code>. Any computer can reach any other computer directly or indirectly through the network.</p>\n\n<p>You are given an initial computer network <code>connections</code>. You can extract certain cables between two directly connected computers, and place them between any pair of disconnected computers to make them directly connected.</p>\n\n<p>Return <em>the minimum number of times you need to do this in order to make all the computers connected</em>. If it is not possible, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/02/sample_1_1677.png\" style=\"width: 500px; height: 148px;\" />\n<pre>\n<strong>Input:</strong> n = 4, connections = [[0,1],[0,2],[1,2]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Remove cable between computer 1 and 2 and place between computers 1 and 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/02/sample_2_1677.png\" style=\"width: 500px; height: 129px;\" />\n<pre>\n<strong>Input:</strong> n = 6, connections = [[0,1],[0,2],[0,3],[1,2],[1,3]]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 6, connections = [[0,1],[0,2],[0,3],[1,2]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> There are not enough cables.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= connections.length &lt;= min(n * (n - 1) / 2, 10<sup>5</sup>)</code></li>\n\t<li><code>connections[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; n</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>There are no repeated connections.</li>\n\t<li>No two computers are connected by more than one cable.</li>\n</ul>\n",
      "exampleTestcases": "4\n[[0,1],[0,2],[1,2]]\n6\n[[0,1],[0,2],[0,3],[1,2],[1,3]]\n6\n[[0,1],[0,2],[0,3],[1,2]]",
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search",
          "translatedName": null
        },
        {
          "name": "Union Find",
          "slug": "union-find",
          "translatedName": null
        },
        {
          "name": "Graph",
          "slug": "graph",
          "translatedName": null
        }
      ],
      "hints": [
        "As long as there are at least (n - 1) connections, there is definitely a way to connect all computers.",
        "Use DFS to determine the number of isolated computer clusters."
      ],
      "solution": {
        "id": "1697",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 5066,
      "dislikes": 73,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487134,
      "commentCount": 103,
      "topLevelCommentCount": 54
    },
    "classAndMethodDefinition": "class Solution:\n    def makeConnected(self, n: int, connections: List[List[int]]) -> int:"
  },
  {
    "stat": {
      "question_id": 1585,
      "question__article__live": null,
      "question__article__slug": null,
      "question__article__has_video_solution": null,
      "question__title": "The kth Factor of n",
      "question__title_slug": "the-kth-factor-of-n",
      "question__hide": false,
      "total_acs": 255742,
      "total_submitted": 374332,
      "frontend_question_id": 1492,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 2
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/the-kth-factor-of-n",
      "questionId": "1585",
      "questionFrontendId": "1492",
      "questionTitle": "The kth Factor of n",
      "titleSlug": "the-kth-factor-of-n",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "question": "<p>You are given two positive integers <code>n</code> and <code>k</code>. A factor of an integer <code>n</code> is defined as an integer <code>i</code> where <code>n % i == 0</code>.</p>\n\n<p>Consider a list of all factors of <code>n</code> sorted in <strong>ascending order</strong>, return <em>the </em><code>k<sup>th</sup></code><em> factor</em> in this list or return <code>-1</code> if <code>n</code> has less than <code>k</code> factors.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 12, k = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Factors list is [1, 2, 3, 4, 6, 12], the 3<sup>rd</sup> factor is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 7, k = 2\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Factors list is [1, 7], the 2<sup>nd</sup> factor is 7.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, k = 4\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> Factors list is [1, 2, 4], there is only 3 factors. We should return -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= n &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<p>Could you solve this problem in less than O(n) complexity?</p>\n",
      "exampleTestcases": "12\n3\n7\n2\n4\n4",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math",
          "translatedName": null
        },
        {
          "name": "Number Theory",
          "slug": "number-theory",
          "translatedName": null
        }
      ],
      "hints": [
        "The factors of n will be always in the range [1, n].",
        "Keep a list of all factors sorted.  Loop i from 1 to n and add i if n % i == 0. Return the kth factor if it exist in this list."
      ],
      "solution": null,
      "companyTagStats": null,
      "likes": 1789,
      "dislikes": 296,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2487276,
      "commentCount": 75,
      "topLevelCommentCount": 46
    },
    "classAndMethodDefinition": "def kthFactor(self, n, k):\n        \"\"\""
  },
  {
    "stat": {
      "question_id": 933,
      "question__article__live": true,
      "question__article__slug": "increasing-order-search-tree",
      "question__article__has_video_solution": false,
      "question__title": "Increasing Order Search Tree",
      "question__title_slug": "increasing-order-search-tree",
      "question__hide": false,
      "total_acs": 293228,
      "total_submitted": 373977,
      "frontend_question_id": 897,
      "is_new_question": false
    },
    "status": null,
    "difficulty": {
      "level": 1
    },
    "paid_only": false,
    "is_favor": false,
    "frequency": 0,
    "progress": 0,
    "additionalData": {
      "link": "https://leetcode.com/problems/increasing-order-search-tree",
      "questionId": "933",
      "questionFrontendId": "897",
      "questionTitle": "Increasing Order Search Tree",
      "titleSlug": "increasing-order-search-tree",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "question": "<p>Given the <code>root</code> of a binary search tree, rearrange the tree in <strong>in-order</strong> so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only one right child.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/17/ex1.jpg\" style=\"width: 600px; height: 350px;\" />\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,8,1,null,null,null,7,9]\n<strong>Output:</strong> [1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/17/ex2.jpg\" style=\"width: 300px; height: 114px;\" />\n<pre>\n<strong>Input:</strong> root = [5,1,7]\n<strong>Output:</strong> [1,null,5,null,7]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the given tree will be in the range <code>[1, 100]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
      "exampleTestcases": "[5,3,6,2,4,null,8,1,null,null,null,7,9]\n[5,1,7]",
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack",
          "translatedName": null
        },
        {
          "name": "Tree",
          "slug": "tree",
          "translatedName": null
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search",
          "translatedName": null
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree",
          "translatedName": null
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree",
          "translatedName": null
        }
      ],
      "hints": [],
      "solution": {
        "id": "547",
        "canSeeDetail": false,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true
      },
      "companyTagStats": null,
      "likes": 4332,
      "dislikes": 672,
      "similarQuestions": "[]"
    },
    "discussionData": {
      "id": 2486640,
      "commentCount": 30,
      "topLevelCommentCount": 19
    },
    "classAndMethodDefinition": "def increasingBST(self, root):\n        \"\"\""
  }
]